{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/slamdata/purescript-aff","repository":{"url":"git://github.com/slamdata/purescript-aff.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-js-timers":"^3.0.0","purescript-minibench":"^1.0.0","purescript-assert":"^3.0.0","purescript-partial":"^1.2.0"},"dependencies":{"purescript-free":"^4.0.1","purescript-exceptions":"^3.0.0","purescript-console":"^3.0.0","purescript-type-equality":"^2.1.0","purescript-avar":"^2.0.0","purescript-st":"^3.0.0","purescript-unsafe-coerce":"^3.0.0","purescript-transformers":"^3.0.0","purescript-parallel":"^3.0.0","purescript-datetime":"^3.0.0","purescript-functions":"^3.0.0"},"name":"purescript-aff","license":["Apache-2.0"],"description":"Asynchronous effect monad"},"tagTime":"2018-01-14T18:49:17+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-exceptions","item":["Control","Monad","Eff","Exception"]},"declarations":[{"children":[{"comments":null,"title":"showError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[30,33]}}],"comments":"The type of JavaScript errors\n","title":"Error","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[28,34]}},{"children":[],"comments":"Get the error message from a JavaScript error\n","title":"message","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[39,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[39,42]}},{"children":[],"comments":"Create a JavaScript error, specifying a message\n","title":"error","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}},"sourceSpan":{"start":[36,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[36,40]}}]},{"moduleName":{"package":"purescript-transformers","item":["Control","Monad","Error","Class"]},"declarations":[{"children":[],"comments":null,"title":"catchError","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[null,"MonadError"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[38,3],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs","end":[38,51]}},{"children":[],"comments":null,"title":"throwError","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[null,"MonadThrow"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[21,3],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs","end":[21,35]}},{"children":[],"comments":"Return `Right` if the given action succeeds, `Left` if it throws.\n","title":"try","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadError"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs","end":[63,20]}}]},{"moduleName":{"package":"purescript-parallel","item":["Control","Parallel"]},"declarations":[{"children":[],"comments":null,"title":"parallel","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[null,"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"f"}]}]},null]},null]}},"sourceSpan":{"start":[32,3],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-parallel/src/Control/Parallel/Class.purs","end":[32,23]}}]},{"moduleName":{"package":"purescript-parallel","item":["Control","Parallel","Class"]},"declarations":[{"children":[],"comments":null,"title":"sequential","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[null,"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]}]},null]},null]}},"sourceSpan":{"start":[33,3],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-parallel/src/Control/Parallel/Class.purs","end":[33,23]}}]},{"moduleName":{"package":"purescript-datetime","item":["Data","Time","Duration"]},"declarations":[{"children":[{"comments":null,"title":"Milliseconds","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"TypeWildcard","contents":{"start":[11,61],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[11,62]}}]}},"sourceSpan":{"start":[11,8],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[11,62]}},{"comments":null,"title":"genericMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},"sourceSpan":{"start":[12,8],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[12,60]}},{"comments":null,"title":"eqMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},"sourceSpan":{"start":[13,16],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[13,58]}},{"comments":null,"title":"ordMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},"sourceSpan":{"start":[14,16],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[14,60]}},{"comments":null,"title":"semiringMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},"sourceSpan":{"start":[15,16],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[15,70]}},{"comments":null,"title":"ringMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},"sourceSpan":{"start":[16,16],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[16,62]}},{"comments":null,"title":"showMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[18,47]}},{"comments":null,"title":"durationMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Duration"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},"sourceSpan":{"start":[82,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[82,55]}}],"comments":"A duration measured in milliseconds.\n","title":"Milliseconds","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[9,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-datetime/src/Data/Time/Duration.purs","end":[9,43]}}]}],"name":"Control.Monad.Aff","comments":null,"declarations":[{"children":[{"comments":null,"title":"functorAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[66,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[66,40]}},{"comments":null,"title":"applyAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[69,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[69,36]}},{"comments":null,"title":"applicativeAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[72,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[72,48]}},{"comments":null,"title":"bindAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[75,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[75,34]}},{"comments":null,"title":"monadAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[78,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[78,36]}},{"comments":null,"title":"semigroupAff","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[80,60]}},{"comments":null,"title":"monoidAff","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[83,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[83,51]}},{"comments":null,"title":"altAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[86,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[86,32]}},{"comments":null,"title":"plusAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[89,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[89,34]}},{"comments":"This instance is provided for compatibility. `Aff` is always stack-safe\nwithin a given fiber. This instance will just result in unnecessary\nbind overhead.\n","title":"monadRecAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[95,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[95,42]}},{"comments":null,"title":"monadThrowAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadThrow"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[104,52]}},{"comments":null,"title":"monadErrorAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[107,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[107,52]}},{"comments":null,"title":"monadEffAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[110,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[110,46]}},{"comments":null,"title":"parallelAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel","Class"],"Parallel"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[144,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[144,55]}}],"comments":"An `Aff eff a` is an asynchronous computation with effects `eff`. The\ncomputation may either error with an exception, or produce a result of\ntype `a`. `Aff` effects are assembled from primitive `Eff` effects using\n`makeAff` or `liftEff`.\n","title":"Aff","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]}},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]},"declType":"externData"},"sourceSpan":{"start":[64,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[64,49]}},{"children":[{"comments":null,"title":"functorFiber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[163,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[163,44]}},{"comments":null,"title":"applyFiber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[166,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[166,40]}},{"comments":null,"title":"applicativeFiber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[169,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[169,52]}}],"comments":"Represents a forked computation by way of `forkAff`. `Fiber`s are\nmemoized, so their results are only computed once.\n","title":"Fiber","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["eff",null],["a",null]]},"sourceSpan":{"start":[155,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[161,4]}},{"children":[{"comments":null,"title":"functorParAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[117,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[117,46]}},{"comments":"Runs effects in parallel, combining their results.\n","title":"applyParAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[121,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[121,42]}},{"comments":null,"title":"applicativeParAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[124,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[124,54]}},{"comments":null,"title":"semigroupParAff","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[127,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[127,66]}},{"comments":null,"title":"monoidParAff","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[130,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[130,57]}},{"comments":"Races effects in parallel. Returns the first successful result or the\nfirst error if all fail with an exception. Losing branches will be\ncancelled.\n","title":"altParAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[136,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[136,38]}},{"comments":null,"title":"plusParAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[139,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[139,38]}},{"comments":null,"title":"alternativeParAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[142,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[142,52]}},{"comments":null,"title":"parallelAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel","Class"],"Parallel"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"ParAff"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[144,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[144,55]}}],"comments":"Applicative for running parallel effects. Any `Aff` can be coerced to a\n`ParAff` and back using the `Parallel` class.\n","title":"ParAff","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]}},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]},"declType":"externData"},"sourceSpan":{"start":[115,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[115,52]}},{"children":[{"comments":null,"title":"Canceler","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeCanceler","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeWildcard","contents":{"start":[189,58],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[189,59]}}]}},"sourceSpan":{"start":[189,8],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[189,59]}},{"comments":null,"title":"semigroupCanceler","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[191,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[191,54]}},{"comments":"A no-op `Canceler` can be constructed with `mempty`.\n","title":"monoidCanceler","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[196,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[196,48]}}],"comments":"A cancellation effect for actions run via `makeAff`. If a `Fiber` is\nkilled, and an async action is pending, the canceler will be called to\nclean it up.\n","title":"Canceler","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["eff",null]]},"sourceSpan":{"start":[187,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[187,55]}},{"children":[],"comments":"Constructs an `Aff` from low-level `Eff` effects using a callback. A\n`Canceler` effect should be returned to cancel the pending action. The\nsupplied callback may be invoked only once. Subsequent invocation are\nignored.\n","title":"makeAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"eff"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[365,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[365,105]}},{"children":[],"comments":"Forks an `Aff` from an `Eff` context, returning the `Fiber`.\n","title":"launchAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[208,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[208,55]}},{"children":[],"comments":"Forks an `Aff` from an `Eff` context, discarding the `Fiber`.\n","title":"launchAff_","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[215,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[215,47]}},{"children":[],"comments":"Suspends an `Aff` from an `Eff` context, returning the `Fiber`.\n","title":"launchSuspendedAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[219,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[219,64]}},{"children":[],"comments":"Forks an `Aff` from an `Eff` context and also takes a callback to run when\nit completes. Returns the pending `Fiber`.\n","title":"runAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[224,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[224,89]}},{"children":[],"comments":"Forks an `Aff` from an `Eff` context and also takes a callback to run when\nit completes, discarding the `Fiber`.\n","title":"runAff_","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[229,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[229,78]}},{"children":[],"comments":"Suspends an `Aff` from an `Eff` context and also takes a callback to run\nwhen it completes. Returns the suspended `Fiber`.\n","title":"runSuspendedAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[234,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[234,98]}},{"children":[],"comments":"Forks am `Aff` from within a parent `Aff` context, returning the `Fiber`.\n","title":"forkAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[238,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[238,53]}},{"children":[],"comments":"Suspends an `Aff` from within a parent `Aff` context, returning the `Fiber`.\nA suspended `Aff` is not executed until a consumer observes the result\nwith `joinFiber`.\n","title":"suspendAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[244,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[244,56]}},{"children":[],"comments":"All `Eff` exceptions are implicitly caught within an `Aff` context, but\nstandard `liftEff` won't remove the effect label.\n","title":"liftEff'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[257,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[257,68]}},{"children":[],"comments":"Creates a new supervision context for some `Aff`, guaranteeing fiber\ncleanup when the parent completes. Any pending fibers forked within\nthe context will be killed and have their cancelers run.\n","title":"supervise","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[310,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[310,43]}},{"children":[],"comments":"A monomorphic version of `try`. Catches thrown errors and lifts them\ninto an `Either`.\n","title":"attempt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[262,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[262,56]}},{"children":[],"comments":"Ignores any errors.\n","title":"apathize","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[266,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[266,45]}},{"children":[],"comments":"Pauses the running fiber.\n","title":"delay","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[248,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[248,43]}},{"children":[],"comments":"An async computation which does not resolve.\n","title":"never","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[252,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[252,27]}},{"children":[],"comments":"Runs the first effect after the second, regardless of whether it completed\nsuccessfully or the fiber was cancelled.\n","title":"finally","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[271,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[271,56]}},{"children":[],"comments":"Runs an effect such that it cannot be killed.\n","title":"invincible","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[275,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[275,44]}},{"children":[],"comments":"Invokes pending cancelers in a fiber and runs cleanup effects. Blocks\nuntil the fiber has fully exited.\n","title":"killFiber","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[174,56]}},{"children":[],"comments":"Blocks until the fiber completes, yielding the result. If the fiber\nthrows an exception, it is rethrown in the current fiber.\n","title":"joinFiber","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[181,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[181,45]}},{"children":[],"comments":"Attaches a custom `Canceler` to an action. If the computation is canceled,\nthen the custom `Canceler` will be run afterwards.\n","title":"cancelWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[280,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[280,59]}},{"children":[],"comments":"Guarantees resource acquisition and cleanup. The first effect may acquire\nsome resource, while the second will dispose of it. The third effect makes\nuse of the resource. Disposal is always run last, regardless. Neither\nacquisition nor disposal may be cancelled and are guaranteed to run until\nthey complete.\n","title":"bracket","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[294,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[294,82]}},{"children":[],"comments":null,"title":"BracketConditions","info":{"arguments":[["eff",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["killed",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"RCons","contents":["failed",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"RCons","contents":["completed",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[350,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[354,4]}},{"children":[],"comments":"A general purpose bracket which lets you observe the status of the\nbracketed action. The bracketed action may have been killed with an\nexception, thrown an exception, or completed successfully.\n","title":"generalBracket","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"BracketConditions"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[359,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[359,111]}},{"children":[],"comments":"A canceler which does not cancel anything.\n","title":"nonCanceler","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"eff"}]},null]}},"sourceSpan":{"start":[200,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[200,34]}},{"children":[],"comments":"A canceler from an Eff action.\n","title":"effCanceler","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"eff"}]}]},null]}},"sourceSpan":{"start":[204,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff.purs","end":[204,49]}}]},{"reExports":[{"moduleName":{"package":"purescript-avar","item":["Control","Monad","Eff","AVar"]},"declarations":[{"children":[{"comments":null,"title":"Killed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Filled","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"AVarStatus","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[40,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[43,10]}},{"children":[],"comments":null,"title":"AVar","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[36,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[36,39]}},{"children":[],"comments":null,"title":"AVAR","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[38,34]}},{"children":[],"comments":null,"title":"isKilled","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[117,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[117,39]}},{"children":[],"comments":null,"title":"isFilled","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[112,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[112,39]}},{"children":[],"comments":null,"title":"isEmpty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[107,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[107,38]}}]}],"name":"Control.Monad.Aff.AVar","comments":null,"declarations":[{"children":[],"comments":"Creates a fresh AVar with an initial value.\n","title":"makeVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[27,56]}},{"children":[],"comments":"Creates a fresh AVar.\n","title":"makeEmptyVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[31,57]}},{"children":[],"comments":"Synchronously checks the status of an AVar.\n","title":"status","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[35,71]}},{"children":[],"comments":"Synchronously checks whether an AVar currently is empty.\n","title":"isEmptyVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[39,63]}},{"children":[],"comments":"Synchronously checks whether an AVar currently has a value.\n","title":"isFilledVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[43,64]}},{"children":[],"comments":"Synchronously checks whether an AVar has been killed.\n","title":"isKilledVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[47,64]}},{"children":[],"comments":"Takes the AVar value, leaving it empty. If the AVar is already empty,\nthe callback will be queued until the AVar is filled. Multiple takes will\nresolve in order as the AVar fills.\n","title":"takeVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[53,54]}},{"children":[],"comments":"Attempts to synchronously take an AVar value, leaving it empty. If the\nAVar is empty, this will return `Nothing`.\n","title":"tryTakeVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[60,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[60,65]}},{"children":[],"comments":"Sets the value of the AVar. If the AVar is already filled, it will be\nqueued until the value is emptied. Multiple puts will resolve in order as\nthe AVar becomes available.\n","title":"putVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[66,60]}},{"children":[],"comments":"Attempts to synchronously fill an AVar. If the AVar is already filled,\nthis will do nothing. Returns true or false depending on if it succeeded.\n","title":"tryPutVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[73,66]}},{"children":[],"comments":"Reads the AVar value. Unlike `takeVar`, this will not leave the AVar empty.\nIf the AVar is empty, this will queue until it is filled. Multiple reads\nwill resolve at the same time, as soon as possible.\n","title":"readVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[79,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[79,54]}},{"children":[],"comments":"Attempts to synchronously read an AVar. If the AVar is empty, this will\nreturn `Nothing`.\n","title":"tryReadVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[86,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[86,65]}},{"children":[],"comments":"Kills the AVar with an exception. All pending and future actions will\nresolve immediately with the provided exception.\n","title":"killVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[91,65]}}]},{"reExports":[],"name":"Control.Monad.Aff.Class","comments":null,"declarations":[{"children":[{"comments":null,"title":"liftAff","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[18,3],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[18,33]}},{"comments":null,"title":"monadAffAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[20,42]}},{"comments":null,"title":"monadAffContT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[23,67]}},{"comments":null,"title":"monadAffExceptT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[26,71]}},{"comments":null,"title":"monadAffListT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[29,65]}},{"comments":null,"title":"monadAffMaybe","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[32,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[32,66]}},{"comments":null,"title":"monadAffReader","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[35,70]}},{"comments":null,"title":"monadAffRWS","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[38,80]}},{"comments":null,"title":"monadAffState","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[41,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[41,68]}},{"comments":null,"title":"monadAffWriter","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[44,82]}}],"comments":null,"title":"MonadAff","info":{"fundeps":[[["m"],["eff"]]],"arguments":[["eff",null],["m",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Control","Monad","Eff","Class"],"MonadEff"],"constraintArgs":[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}],"constraintData":null}]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[18,33]}}]},{"reExports":[{"moduleName":{"package":"purescript-eff","item":["Control","Monad","Eff","Uncurried"]},"declarations":[{"children":[],"comments":null,"title":"EffFn3","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]}},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[146,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[146,79]}},{"children":[],"comments":null,"title":"EffFn2","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]}},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[145,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[145,71]}},{"children":[],"comments":null,"title":"EffFn1","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]}},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[144,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[144,63]}},{"children":[],"comments":null,"title":"runEffFn3","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn3"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[180,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[181,49]}},{"children":[],"comments":null,"title":"runEffFn2","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn2"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[178,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[179,42]}},{"children":[],"comments":null,"title":"runEffFn1","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn1"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[176,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[177,35]}},{"children":[],"comments":null,"title":"mkEffFn3","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn3"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[159,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[160,51]}},{"children":[],"comments":null,"title":"mkEffFn2","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn2"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[157,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[158,44]}},{"children":[],"comments":null,"title":"mkEffFn1","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn1"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]},null]}},"sourceSpan":{"start":[155,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-eff/src/Control/Monad/Eff/Uncurried.purs","end":[156,37]}}]}],"name":"Control.Monad.Aff.Compat","comments":"This module provides compatability functions for constructing `Aff`s which\nare defined via the FFI.\n","declarations":[{"children":[{"comments":null,"title":"EffFnAff","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn2"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Compat"],"EffFnCb"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Compat"],"EffFnCb"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Compat"],"EffFnCanceler"]},{"tag":"TypeVar","contents":"eff"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"EffFnAff","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["eff",null],["a",null]]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Compat.purs","end":[19,103]}},{"children":[{"comments":null,"title":"EffFnCanceler","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn3"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Compat"],"EffFnCb"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Compat"],"EffFnCb"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"EffFnCanceler","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["eff",null]]},"sourceSpan":{"start":[21,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Compat.purs","end":[21,105]}},{"children":[],"comments":null,"title":"EffFnCb","info":{"arguments":[["eff",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn1"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Compat.purs","end":[17,39]}},{"children":[],"comments":"Lift a FFI definition into an `Aff`. `EffFnAff` makes use of `EffFn` so\n`Eff` thunks are unnecessary. A definition might follow this example:\n\n```javascript\nexports._myAff = function (onError, onSuccess) {\n  var cancel = doSomethingAsync(function (err, res) {\n    if (err) {\n      onError(err);\n    } else {\n      onSuccess(res);\n    }\n  });\n  return function (cancelError, onCancelerError, onCancelerSuccess) {\n    cancel();\n    onCancelerSuccess();\n  };\n};\n```\n\n```purescript\nforeign import _myAff :: forall eff. EffFnAff (myeffect :: MYEFFECT | eff) String\n\nmyAff :: forall eff. Aff (myeffect :: MYEFFECT | eff) String\nmyAff = fromEffFnAff _myAff\n````\n","title":"fromEffFnAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Compat"],"EffFnAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Compat.purs","end":[48,51]}}]},{"reExports":[{"moduleName":{"package":"purescript-console","item":["Control","Monad","Eff","Console"]},"declarations":[{"children":[],"comments":"The `CONSOLE` effect represents those computations which write to the\nconsole.\n","title":"CONSOLE","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[10,1],"name":"/home/travis/build/slamdata/purescript-aff/bower_components/purescript-console/src/Control/Monad/Eff/Console.purs","end":[10,38]}}]}],"name":"Control.Monad.Aff.Console","comments":null,"declarations":[{"children":[],"comments":"Write a message to the console. Shorthand for `liftEff $ log x`.\n","title":"log","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[20,59]}},{"children":[],"comments":"Write a value to the console, using its `Show` instance to produce a\n`String`. Shorthand for `liftEff $ logShow x`.\n","title":"logShow","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[25,69]}},{"children":[],"comments":"Write a warning to the console. Shorthand for `liftEff $ warn x`.\n","title":"warn","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[29,60]}},{"children":[],"comments":"Write a warning value to the console, using its `Show` instance to produce\na `String`. Shorthand for `liftEff $ warnShow x`.\n","title":"warnShow","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[34,70]}},{"children":[],"comments":"Write an error to the console. Shorthand for `liftEff $ error x`.\n","title":"error","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[38,61]}},{"children":[],"comments":"Write an error value to the console, using its `Show` instance to produce a\n`String`. Shorthand for `liftEff $ errorShow x`.\n","title":"errorShow","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[43,71]}},{"children":[],"comments":"Write an info message to the console. Shorthand for `liftEff $ info x`.\n","title":"info","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[47,60]}},{"children":[],"comments":"Write an info value to the console, using its `Show` instance to produce a\n`String`. Shorthand for `liftEff $ infoShow x`.\n","title":"infoShow","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Console.purs","end":[52,70]}}]},{"reExports":[],"name":"Control.Monad.Aff.Unsafe","comments":null,"declarations":[{"children":[],"comments":null,"title":"unsafeCoerceAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff2",{"tag":"ForAll","contents":["eff1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff2"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[8,1],"name":"/home/travis/build/slamdata/purescript-aff/src/Control/Monad/Aff/Unsafe.purs","end":[8,58]}}]}],"resolvedDependencies":{"purescript-free":"4.2.0","purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-maps":"3.6.0","purescript-control":"3.3.1","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-arrays":"4.2.2","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-js-timers":"3.0.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.1.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.3.0","purescript-minibench":"1.0.1","purescript-foldable-traversable":"3.7.1","purescript-tailrec":"3.3.0","purescript-avar":"2.0.1","purescript-gen":"1.1.1","purescript-functors":"2.2.0","purescript-prelude":"3.1.1","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.1.1","purescript-contravariant":"3.1.0","purescript-assert":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.2.0","purescript-eff":"3.1.0","purescript-const":"3.2.0","purescript-transformers":"3.5.0","purescript-globals":"3.0.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-catenable-lists":"4.0.0","purescript-parallel":"3.3.1","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.4.0","purescript-identity":"3.1.0","purescript-lists":"4.12.0","purescript-datetime":"3.4.1","purescript-functions":"3.0.0"},"version":"4.0.2","github":["slamdata","purescript-aff"],"versionTag":"v4.0.2","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Ref":"purescript-refs","Data.Char.Gen":"purescript-strings","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.Time.Component.Gen":"purescript-datetime","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Performance.Minibench":"purescript-minibench","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Data.Time":"purescript-datetime","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Control.Monad.Eff.AVar":"purescript-avar","Control.Monad.Writer":"purescript-transformers","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}