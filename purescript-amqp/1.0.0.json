{"uploader":"abhin4v","packageMeta":{"repository":{"url":"https://github.com/abhin4v/purescript-amqp.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-psci-support":"^3.0.0"},"authors":[{"email":"abhinav@abhinavsarkar.net","name":"Abhinav Sarkar"}],"dependencies":{"purescript-console":"^3.0.0","purescript-foreign-generic":"^4.2.0","purescript-node-process":"^5.0.0","purescript-aff":"^3.1.0","purescript-prelude":"^3.1.0","purescript-node-buffer":"^3.0.1"},"name":"purescript-amqp","keywords":["amqp","amqp-client","purescript"],"license":["MIT"]},"tagTime":"2018-02-08T07:23:24+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Node","AMQP","FFI"]},"declarations":[{"children":[],"comments":null,"title":"EffAMQP","info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["amqp",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AMQP"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[15,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[15,44]}},{"children":[],"comments":null,"title":"AffAMQP","info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["amqp",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AMQP"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[16,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[16,44]}}]},{"moduleName":{"package":null,"item":["Node","AMQP","Types"]},"declarations":[{"children":[],"comments":"An AMQP routing key.\n","title":"RoutingKey","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[34,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[34,25]}},{"children":[],"comments":"Options used to create a queue:\n- `exclusive`: if true, the queue is used by only one connection and is deleted when that connection closes.\n- `durable`: if true, the queue survives broker restarts.\n- `autoDelete`: if true, the queue is deleted when there is no consumers for it.\n- `messageTTL`: if specified, expires messages arriving in the queue after n milliseconds.\n- `expires`: if specified, the queue is destroyed after n milliseconds of disuse, where \"use\"\nmeans having consumers, being asserted or checked, or being polled.\n- `deadLetterExchange`: if specified, an exchange to which messages discarded from the queue are resent to.\n- `deadLetterRoutingKey`: if specified, set as the routing key for the discarded messages.\n- `maxLength`: if specified, the maximum number of messages the queue holds.\n- `maxPriority`: if specified, makes the queue a [priority queue](http://www.rabbitmq.com/priority.html).\n- `arguments`: additional arguments.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_assertQueue> for details.\n","title":"QueueOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["exclusive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["durable",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["autoDelete",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["messageTTL",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["expires",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["deadLetterExchange",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["deadLetterRoutingKey",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["maxLength",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["maxPriority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[89,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[99,22]}},{"children":[],"comments":"An AMQP queue name.\n","title":"QueueName","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[28,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[28,24]}},{"children":[],"comments":"Reply from the server for purging a queue. Contains the count of the mssages purged from the queue.\n","title":"PurgeQueueOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["messageCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[59,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[59,44]}},{"children":[],"comments":"Options to publish a message:\n- `expiration`: if specified, the message is discarded from a queue once it has been there\nlonger than the given number of milliseconds.\n- `userId`: if specified, RabbitMQ compares it to the username supplied when opening the connection,\nand rejects the messages for which it does not match.\n- `cc`: an array of routing keys; messages are routed to these routing keys in addition to the\ngiven routing key.\n- `bcc`: like `cc`, except that the value is not sent in the message headers to consumers.\n- `priority`: if specified, a priority for the message.\n- `persistent`: if true, the message survives broker restarts provided it is in a queue that\nalso survives restarts.\n- `mandatory`: if true, the message is returned if it is not routed to a queue.\n- `contentType`: a MIME type for the message content.\n- `contentEncoding`: a MIME encoding for the message content.\n- `headers`: application specific headers to be carried along with the message content.\n- `correlationId`: usually used to match replies to requests, or similar.\n- `replyTo`: often used to name a queue to which the receiving application must send replies, in an RPC scenario.\n- `messageId`: arbitrary application-specific identifier for the message.\n- `timestamp`: a timestamp for the message.\n- `type`: an arbitrary application-specific type for the message.\n- `appId`: an arbitrary identifier for the originating application.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_publish> for details.\n","title":"PublishOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["expiration",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["userId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["cc",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["bcc",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["persistent",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["mandatory",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["contentType",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["contentEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["headers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["correlationId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["replyTo",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"RCons","contents":["messageId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["timestamp",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]},{"tag":"RCons","contents":["type",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["appId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[183,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[199,24]}},{"children":[],"comments":"Properties of a message received by a consumer. A subset of the `PublishOptions` fields.\n","title":"MessageProperties","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["expiration",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["userId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["persistent",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["contentType",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["contentEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["headers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["correlationId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["replyTo",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"RCons","contents":["messageId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["timestamp",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]},{"tag":"RCons","contents":["type",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["appId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[236,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[249,27]}},{"children":[],"comments":"Fields of a message received by a consumer:\n- `deliveryTag`: a serial number for the message.\n- `consumerTag`: an identifier for the consumer for which the message is destined.\n- `exchange`: the exchange to which the message was published.\n- `routingKey`: the routing key with which the message was published.\n- `redelivered`: if true, indicates that this message has been delivered before and has been\nhanded back to the server.\n","title":"MessageFields","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["deliveryTag",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["consumerTag",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["exchange",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]},{"tag":"RCons","contents":["routingKey",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]},{"tag":"RCons","contents":["redelivered",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[228,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[233,23]}},{"children":[],"comments":"A message received by a consumer:\n- `content`: the content of the message a buffer.\n- `fields`: the message fields.\n- `properties`: the message properties.\n","title":"Message","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["content",{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]},{"tag":"RCons","contents":["fields",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"MessageFields"]},{"tag":"RCons","contents":["properties",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"MessageProperties"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[255,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[258,17]}},{"children":[],"comments":"Options used to get a message from a queue:\n- `noAck`: if true, the broker does expect an acknowledgement of the messages delivered to\nthis consumer. It dequeues messages as soon as they've been sent down the wire.\n","title":"GetOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["noAck",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[297,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[297,45]}},{"children":[{"comments":null,"title":"Direct","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Topic","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Headers","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Fanout","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericExchangeType","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeType"]}]},{"tag":"TypeWildcard","contents":{"start":[67,61],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[67,62]}}]}},"sourceSpan":{"start":[67,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[67,62]}},{"comments":null,"title":"showExchangeType","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeType"]}]}},"sourceSpan":{"start":[69,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[69,47]}},{"comments":null,"title":"eqExchangeType","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeType"]}]}},"sourceSpan":{"start":[72,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[72,43]}}],"comments":"Types of AMQP exchanges. See <https://www.rabbitmq.com/tutorials/amqp-concepts.html> for details.\n","title":"ExchangeType","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[62,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[65,27]}},{"children":[],"comments":"Options to create an exchange:\n- `durable`: if true, the exchange survives broker restarts.\n- `internal`: if true, messages cannot be published directly to the exchange.\n- `autoDelete`: if true, the exchange is destroyed once it has no bindings.\n- `alternateExchange`: if specified, an exchange to send messages to if this exchange can't route them to any queues.\n- `arguments`: additional arguments.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_assertExchange> for details.\n","title":"ExchangeOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["durable",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["internal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["autoDelete",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["alternateExchange",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[134,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[139,25]}},{"children":[],"comments":"An AMQP exchange name.\n","title":"ExchangeName","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[31,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[31,27]}},{"children":[],"comments":"Options used to delete a queue:\n- `ifUnused`: if true and the queue has consumers, it is not deleted and the channel is closed.\n- `ifEmpty`: if true and the queue contains messages, the queue is not deleted and the channel is closed.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_deleteQueue> for details.\n","title":"DeleteQueueOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["ifUnused",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["ifEmpty",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[120,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[120,82]}},{"children":[],"comments":"Reply from the server for deleting a queue. Contains the count of the mssages in the queue.\n","title":"DeleteQueueOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["messageCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[56,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[56,45]}},{"children":[],"comments":"Options to delete an exchange:\n- `ifUnused`: if true and the exchange has bindings, it is not deleted and the channel is closed.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_deleteExchange> for details.\n","title":"DeleteExchangeOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["ifUnused",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[154,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[154,59]}},{"children":[],"comments":"Options used to consume message from a queue:\n- `consumerTag`: an identifier for this consumer, must not be already in use on the channel.\n- `noLocal`: if true, the broker does not deliver messages to the consumer if they were also\npublished on this connection. RabbitMQ doesn't implement it, and will ignore it.\n- `noAck`: if true, the broker does expect an acknowledgement of the messages delivered to\nthis consumer. It dequeues messages as soon as they've been sent down the wire.\n- `exclusive`: if true, the broker does not let anyone else consume from this queue.\n- `priority`: gives a priority to the consumer. Higher priority consumers get messages in\npreference to lower priority consumers.\n- `arguments`: additional arguments.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_consume> for details.\n","title":"ConsumeOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["consumerTag",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["noLocal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["noAck",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["exclusive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[272,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[278,24]}},{"children":[],"comments":"Reply from the server for setting up a consumer. Contains the consumer tag which is the unique\nidentifier for this consumer.\n","title":"ConsumeOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["consumerTag",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[292,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[292,43]}},{"children":[],"comments":"An AMQP connection.\n","title":"Connection","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[22,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[22,39]}},{"children":[],"comments":"Options used to connect to the AMQP server. See\n<http://www.squaremobius.net/amqp.node/channel_api.html#connect> for details.\n","title":"ConnectOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["frameMax",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["channelMax",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["heartbeat",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Seconds"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[38,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[41,24]}},{"children":[],"comments":"An AMQP Channel.\n","title":"Channel","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[25,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[25,39]}},{"children":[],"comments":"Reply from the server for asserting a queue. Contains the\nname of queue asserted, the count of the messages in the queue, and the count of the consumers of\nthe queue.\n","title":"AssertQueueOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["queue",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["messageCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["consumerCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[53,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[53,84]}},{"children":[],"comments":"The effect for computations which talk to an AMQP server.\n","title":"AMQP","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[19,41]}},{"children":[],"comments":"Default options to create a queue. Every field is set to `Nothing` or `empty`.\n","title":"defaultQueueOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueOptions"]}},"sourceSpan":{"start":[102,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[102,36]}},{"children":[],"comments":"Default options to publish a message. Every field is set to `Nothing`.\n","title":"defaultPublishOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PublishOptions"]}},"sourceSpan":{"start":[202,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[202,40]}},{"children":[],"comments":"Default options to get a message from a queue. Every field is set to `Nothing`.\n","title":"defaultGetOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"GetOptions"]}},"sourceSpan":{"start":[300,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[300,32]}},{"children":[],"comments":"Default options to create an exchange. Every field is set to `Nothing` or `empty`.\n","title":"defaultExchangeOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeOptions"]}},"sourceSpan":{"start":[142,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[142,42]}},{"children":[],"comments":"Default options to delete a queue. Every field is set to `Nothing`.\n","title":"defaultDeleteQueueOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteQueueOptions"]}},"sourceSpan":{"start":[123,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[123,48]}},{"children":[],"comments":"Default options to delete an exchange. Every field is set to `Nothing`.\n","title":"defaultDeleteExchangeOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteExchangeOptions"]}},"sourceSpan":{"start":[157,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[157,54]}},{"children":[],"comments":"Default options to consume messages from a queue. Every field is set to `Nothing` or `empty`.\n","title":"defaultConsumeOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConsumeOptions"]}},"sourceSpan":{"start":[281,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[281,40]}},{"children":[],"comments":"Default connection options.\n","title":"defaultConnectOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConnectOptions"]}},"sourceSpan":{"start":[44,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[44,40]}}]}],"name":"Node.AMQP","comments":null,"declarations":[{"children":[],"comments":"Acknowledges a message given its delivery tag.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_ack) for details.\n","title":"ack","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[148,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[148,57]}},{"children":[],"comments":"Acknowledges all outstanding messages on the channel.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_ackAll) for details.\n","title":"ackAll","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[158,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[158,50]}},{"children":[],"comments":"Acknowledges all messages up to the message with the given delivery tag.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_ack) for details.\n","title":"ackAllUpTo","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[153,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[153,64]}},{"children":[],"comments":"Asserts an exchange into existence with the given exchange name, type and options.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_assertExchange) for details.\n","title":"assertExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeType"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[86,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[86,109]}},{"children":[],"comments":"Asserts a queue into existence with the given name and options.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_assertQueue) for details.\n","title":"assertQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AssertQueueOK"]}]}]}]}]},null]}},"sourceSpan":{"start":[51,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[51,93]}},{"children":[],"comments":"Binds an exchange to another exchange. The exchange named by `destExchange` will receive messages\nfrom the exchange named by `sourceExchange`, according to the type of the source and the given\nrouting key.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_bindExchange) for details.\n","title":"bindExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[105,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[105,120]}},{"children":[],"comments":"Asserts a routing path from an exchange to a queue: the given exchange will relay\nmessages to the given queue, according to the type of the exchange and the given routing key.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_bindQueue) details.\n","title":"bindQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[74,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[74,114]}},{"children":[],"comments":"Cancels the consumer identified by the given consumer tag.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_cancel) for details.\n","title":"cancel","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[137,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[137,60]}},{"children":[],"comments":"Checks that the exchange exists by the given name.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_checkExchange) for details.\n","title":"checkExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[92,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[92,73]}},{"children":[],"comments":"Checks that a queue exists with the given queue name.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_checkQueue) for details.\n","title":"checkQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AssertQueueOK"]}]}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[57,76]}},{"children":[],"comments":"Closes the given AMQP connection.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#model_close) for details.\n","title":"close","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[33,52]}},{"children":[],"comments":"Closes the given channel.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_close) for details.\n","title":"closeChannel","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[46,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[46,56]}},{"children":[],"comments":"Connects to an AMQP server given an AMQP URL and [connection options]. Returns the connection in\n`Aff` monad. See [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#connect) for details.\n","title":"connect","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConnectOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]}]}]},null]}},"sourceSpan":{"start":[28,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[28,74]}},{"children":[],"comments":"Sets up a consumer for the given queue and consume options, with a callback to be invoked with each message.\nThe callback receives `Nothing` if the consumer is cancelled by the broker. Returns the consumer tag.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_consume) for details.\n","title":"consume","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConsumeOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Message"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConsumeOK"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[131,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[131,126]}},{"children":[],"comments":"Creates an open channel and returns it.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#model_createChannel) for details.\n","title":"createChannel","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]}]},null]}},"sourceSpan":{"start":[41,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[41,63]}},{"children":[],"comments":"Deletes the exchange by the given name.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_deleteExchange) for details.\n","title":"deleteExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteExchangeOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[97,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[97,99]}},{"children":[],"comments":"Deletes the queue by the given name.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_deleteQueue) for details.\n","title":"deleteQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteQueueOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteQueueOK"]}]}]}]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[62,99]}},{"children":[],"comments":"Gets a message from the given queue. If there are no messages in the queue, returns `Nothing`.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_get) for details.\n","title":"get","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"GetOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Message"]}]}}]}]}]}]},null]}},"sourceSpan":{"start":[142,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[142,85]}},{"children":[],"comments":"Rejects a message given its delivery tag. If the boolean param is true, the server requeues the\nmessage, else it drops it.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_nack) for details.\n","title":"nack","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[164,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[164,69]}},{"children":[],"comments":"Rejects all outstanding messages on the channel. If the boolean param is true,\nthe server requeues the messages, else it drops them.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_nackAll) for details.\n","title":"nackAll","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[176,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[176,62]}},{"children":[],"comments":"Rejects all messages up to the message with the given delivery tag. If the boolean param is true,\nthe server requeues the messages, else it drops them.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_nack) for details.\n","title":"nackAllUpTo","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[170,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[170,76]}},{"children":[],"comments":"Registers an event handler to the channel which is triggered when the channel closes.\nThe handler is called with no arguments.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_events) for details.\n","title":"onChannelClose","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[214,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[214,78]}},{"children":[],"comments":"Registers an event handler to the channel which is triggered when the channel's write buffer\nis emptied. The handler is called with no arguments.\n","title":"onChannelDrain","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[230,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[230,78]}},{"children":[],"comments":"Registers an event handler to the channel which is triggered when the channel errors out.\nThe handler is called with the error.\n","title":"onChannelError","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[219,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[219,89]}},{"children":[],"comments":"Registers an event handler to the channel which is triggered when a message published with\nthe mandatory flag cannot be routed and is returned to the sending channel. The handler is\ncalled with the returned message.\n","title":"onChannelReturn","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[225,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[225,92]}},{"children":[],"comments":"Registers an event handler to the connection which is triggered when the RabbitMQ server\ndecides to block the connection. The handler is called with the reason for blocking.\n","title":"onConnectionBlocked","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[203,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[203,98]}},{"children":[],"comments":"Registers an event handler to the connection which is triggered when the connection closes.\nIf the connection closes because of an error, the handler is called with `Just error`, else\nwith `Nothing`.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#model_events) for details.\n","title":"onConnectionClose","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[193,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[193,101]}},{"children":[],"comments":"Registers an event handler to the connection which is triggered when the connection errors out.\nThe handler is called with the error.\n","title":"onConnectionError","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[198,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[198,95]}},{"children":[],"comments":"Registers an event handler to the connection which is triggered when the RabbitMQ server\ndecides to unblock the connection. The handler is called with no arguments.\n","title":"onConnectionUnblocked","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[208,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[208,88]}},{"children":[],"comments":"Sets the prefetch count for this channel.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_prefetch) for details.\n","title":"prefetch","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[181,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[181,59]}},{"children":[],"comments":"Publish a single message to the given exchange with the given routing key, and the given publish\noptions. The message content is given as a `Buffer`.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_publish) for details.\n","title":"publish","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PublishOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[118,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[118,109]}},{"children":[],"comments":"Purges the messages from the queue by the given name.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_purgeQueue) for details.\n","title":"purgeQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PurgeQueueOK"]}]}]}]},null]}},"sourceSpan":{"start":[68,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[68,75]}},{"children":[],"comments":"Requeues unacknowledged messages on this channel.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_recover) for details.\n","title":"recover","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[186,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[186,51]}},{"children":[],"comments":"Sends a single message with the content given as a `Buffer` to the given queue, bypassing routing.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_sendToQueue) for details.\n","title":"sendToQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PublishOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[124,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[124,96]}},{"children":[],"comments":"Removes a binding from an exchange to another exchange.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_unbindExchange) for details.\n","title":"unbindExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[111,122]}},{"children":[],"comments":"Removes the routing path between the given queue and the given exchange with the given routing key and arguments.\nSee [amqplib docs](http://www.squaremobius.net/amqp.node/channel_api.html#channel_unbindQueue) for details.\n","title":"unbindQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[80,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[80,116]}},{"children":[],"comments":"A convenience function for creating a channel, doing some action with it, and then automatically closing\nit, even in case of errors.\n","title":"withChannel","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"AffAMQP"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[235,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP.purs","end":[235,87]}}]},{"reExports":[],"name":"Node.AMQP.FFI","comments":null,"declarations":[{"children":[],"comments":null,"title":"EffAMQP","info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["amqp",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AMQP"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[15,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[15,44]}},{"children":[],"comments":null,"title":"AffAMQP","info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["amqp",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AMQP"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[16,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[16,44]}},{"children":[],"comments":null,"title":"ECb","info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[18,36]}},{"children":[],"comments":null,"title":"SCb","info":{"arguments":[["r",null],["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[19,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[19,34]}},{"children":[],"comments":null,"title":"_connect","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[22,58]}},{"children":[],"comments":null,"title":"_close","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[25,56]}},{"children":[],"comments":null,"title":"_createChannel","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[28,59]}},{"children":[],"comments":null,"title":"_closeChannel","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[31,53]}},{"children":[],"comments":null,"title":"_assertQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn5"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AssertQueueOK"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[34,80]}},{"children":[],"comments":null,"title":"_checkQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn4"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AssertQueueOK"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[37,72]}},{"children":[],"comments":null,"title":"_deleteQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn5"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteQueueOK"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[40,80]}},{"children":[],"comments":null,"title":"_purgeQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn4"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PurgeQueueOK"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[43,71]}},{"children":[],"comments":null,"title":"_bindQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn7"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[46,95]}},{"children":[],"comments":null,"title":"_unbindQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn7"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[49,95]}},{"children":[],"comments":null,"title":"_assertExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn6"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[51,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[52,81]}},{"children":[],"comments":null,"title":"_checkExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn4"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[55,66]}},{"children":[],"comments":null,"title":"_deleteExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn5"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[57,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[58,74]}},{"children":[],"comments":null,"title":"_bindExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn7"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[60,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[61,92]}},{"children":[],"comments":null,"title":"_unbindExchange","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn7"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[64,92]}},{"children":[],"comments":null,"title":"_publish","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn6"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[67,82]}},{"children":[],"comments":null,"title":"_sendToQueue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn5"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[70,68]}},{"children":[],"comments":null,"title":"_consume","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn6"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"Message'"]}]}}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConsumeOK"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[73,109]}},{"children":[],"comments":null,"title":"_cancel","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn4"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[76,60]}},{"children":[],"comments":null,"title":"_get","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn5"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"Message'"]}]}}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[79,86]}},{"children":[],"comments":null,"title":"_ack","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[82,43]}},{"children":[],"comments":null,"title":"_nack","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn4"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[85,51]}},{"children":[],"comments":null,"title":"_ackAll","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[88,28]}},{"children":[],"comments":null,"title":"_nackAll","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[90,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[91,36]}},{"children":[],"comments":null,"title":"_prefetch","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[94,32]}},{"children":[],"comments":null,"title":"_recover","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"ECb"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[96,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[97,53]}},{"children":[],"comments":null,"title":"_onConnectionClose","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[100,61]}},{"children":[],"comments":null,"title":"_onConnectionError","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[102,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[103,50]}},{"children":[],"comments":null,"title":"_onConnectionBlocked","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[105,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[106,51]}},{"children":[],"comments":null,"title":"_onConnectionUnblocked","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Connection"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[109,48]}},{"children":[],"comments":null,"title":"_onChannelClose","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[112,45]}},{"children":[],"comments":null,"title":"_onChannelError","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[114,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[115,47]}},{"children":[],"comments":null,"title":"_onChannelReturn","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"SCb"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"Message'"]}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[117,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[118,50]}},{"children":[],"comments":null,"title":"_onChannelDrain","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Channel"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","AMQP","FFI"],"EffAMQP"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[120,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/FFI.purs","end":[121,44]}}]},{"reExports":[],"name":"Node.AMQP.Main","comments":null,"declarations":[{"children":[],"comments":null,"title":"main","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["amqp",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"AMQP"]},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"RCons","contents":["process",{"tag":"TypeConstructor","contents":[["Node","Process"],"PROCESS"]},{"tag":"RCons","contents":["buffer",{"tag":"TypeConstructor","contents":[["Node","Buffer"],"BUFFER"]},{"tag":"TypeVar","contents":"eff"}]}]}]}]}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[18,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Main.purs","end":[23,37]}}]},{"reExports":[],"name":"Node.AMQP.Types","comments":null,"declarations":[{"children":[],"comments":"The effect for computations which talk to an AMQP server.\n","title":"AMQP","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[19,41]}},{"children":[],"comments":"An AMQP connection.\n","title":"Connection","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[22,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[22,39]}},{"children":[],"comments":"An AMQP Channel.\n","title":"Channel","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[25,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[25,39]}},{"children":[],"comments":"An AMQP queue name.\n","title":"QueueName","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[28,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[28,24]}},{"children":[],"comments":"An AMQP exchange name.\n","title":"ExchangeName","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[31,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[31,27]}},{"children":[],"comments":"An AMQP routing key.\n","title":"RoutingKey","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[34,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[34,25]}},{"children":[],"comments":"Options used to connect to the AMQP server. See\n<http://www.squaremobius.net/amqp.node/channel_api.html#connect> for details.\n","title":"ConnectOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["frameMax",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["channelMax",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["heartbeat",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Seconds"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[38,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[41,24]}},{"children":[],"comments":"Default connection options.\n","title":"defaultConnectOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConnectOptions"]}},"sourceSpan":{"start":[44,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[44,40]}},{"children":[],"comments":"Reply from the server for asserting a queue. Contains the\nname of queue asserted, the count of the messages in the queue, and the count of the consumers of\nthe queue.\n","title":"AssertQueueOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["queue",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["messageCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["consumerCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[53,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[53,84]}},{"children":[],"comments":"Reply from the server for deleting a queue. Contains the count of the mssages in the queue.\n","title":"DeleteQueueOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["messageCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[56,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[56,45]}},{"children":[],"comments":"Reply from the server for purging a queue. Contains the count of the mssages purged from the queue.\n","title":"PurgeQueueOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["messageCount",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[59,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[59,44]}},{"children":[{"comments":null,"title":"Direct","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Topic","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Headers","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Fanout","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericExchangeType","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeType"]}]},{"tag":"TypeWildcard","contents":{"start":[67,61],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[67,62]}}]}},"sourceSpan":{"start":[67,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[67,62]}},{"comments":null,"title":"showExchangeType","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeType"]}]}},"sourceSpan":{"start":[69,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[69,47]}},{"comments":null,"title":"eqExchangeType","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeType"]}]}},"sourceSpan":{"start":[72,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[72,43]}}],"comments":"Types of AMQP exchanges. See <https://www.rabbitmq.com/tutorials/amqp-concepts.html> for details.\n","title":"ExchangeType","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[62,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[65,27]}},{"children":[],"comments":"Options used to create a queue:\n- `exclusive`: if true, the queue is used by only one connection and is deleted when that connection closes.\n- `durable`: if true, the queue survives broker restarts.\n- `autoDelete`: if true, the queue is deleted when there is no consumers for it.\n- `messageTTL`: if specified, expires messages arriving in the queue after n milliseconds.\n- `expires`: if specified, the queue is destroyed after n milliseconds of disuse, where \"use\"\nmeans having consumers, being asserted or checked, or being polled.\n- `deadLetterExchange`: if specified, an exchange to which messages discarded from the queue are resent to.\n- `deadLetterRoutingKey`: if specified, set as the routing key for the discarded messages.\n- `maxLength`: if specified, the maximum number of messages the queue holds.\n- `maxPriority`: if specified, makes the queue a [priority queue](http://www.rabbitmq.com/priority.html).\n- `arguments`: additional arguments.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_assertQueue> for details.\n","title":"QueueOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["exclusive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["durable",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["autoDelete",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["messageTTL",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["expires",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["deadLetterExchange",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["deadLetterRoutingKey",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["maxLength",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["maxPriority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[89,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[99,22]}},{"children":[],"comments":"Default options to create a queue. Every field is set to `Nothing` or `empty`.\n","title":"defaultQueueOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueOptions"]}},"sourceSpan":{"start":[102,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[102,36]}},{"children":[],"comments":"Options used to delete a queue:\n- `ifUnused`: if true and the queue has consumers, it is not deleted and the channel is closed.\n- `ifEmpty`: if true and the queue contains messages, the queue is not deleted and the channel is closed.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_deleteQueue> for details.\n","title":"DeleteQueueOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["ifUnused",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["ifEmpty",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[120,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[120,82]}},{"children":[],"comments":"Default options to delete a queue. Every field is set to `Nothing`.\n","title":"defaultDeleteQueueOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteQueueOptions"]}},"sourceSpan":{"start":[123,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[123,48]}},{"children":[],"comments":"Options to create an exchange:\n- `durable`: if true, the exchange survives broker restarts.\n- `internal`: if true, messages cannot be published directly to the exchange.\n- `autoDelete`: if true, the exchange is destroyed once it has no bindings.\n- `alternateExchange`: if specified, an exchange to send messages to if this exchange can't route them to any queues.\n- `arguments`: additional arguments.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_assertExchange> for details.\n","title":"ExchangeOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["durable",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["internal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["autoDelete",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["alternateExchange",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[134,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[139,25]}},{"children":[],"comments":"Default options to create an exchange. Every field is set to `Nothing` or `empty`.\n","title":"defaultExchangeOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeOptions"]}},"sourceSpan":{"start":[142,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[142,42]}},{"children":[],"comments":"Options to delete an exchange:\n- `ifUnused`: if true and the exchange has bindings, it is not deleted and the channel is closed.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_deleteExchange> for details.\n","title":"DeleteExchangeOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["ifUnused",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[154,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[154,59]}},{"children":[],"comments":"Default options to delete an exchange. Every field is set to `Nothing`.\n","title":"defaultDeleteExchangeOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteExchangeOptions"]}},"sourceSpan":{"start":[157,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[157,54]}},{"children":[],"comments":"Options to publish a message:\n- `expiration`: if specified, the message is discarded from a queue once it has been there\nlonger than the given number of milliseconds.\n- `userId`: if specified, RabbitMQ compares it to the username supplied when opening the connection,\nand rejects the messages for which it does not match.\n- `cc`: an array of routing keys; messages are routed to these routing keys in addition to the\ngiven routing key.\n- `bcc`: like `cc`, except that the value is not sent in the message headers to consumers.\n- `priority`: if specified, a priority for the message.\n- `persistent`: if true, the message survives broker restarts provided it is in a queue that\nalso survives restarts.\n- `mandatory`: if true, the message is returned if it is not routed to a queue.\n- `contentType`: a MIME type for the message content.\n- `contentEncoding`: a MIME encoding for the message content.\n- `headers`: application specific headers to be carried along with the message content.\n- `correlationId`: usually used to match replies to requests, or similar.\n- `replyTo`: often used to name a queue to which the receiving application must send replies, in an RPC scenario.\n- `messageId`: arbitrary application-specific identifier for the message.\n- `timestamp`: a timestamp for the message.\n- `type`: an arbitrary application-specific type for the message.\n- `appId`: an arbitrary identifier for the originating application.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_publish> for details.\n","title":"PublishOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["expiration",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["userId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["cc",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["bcc",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["persistent",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["mandatory",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["contentType",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["contentEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["headers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["correlationId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["replyTo",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"RCons","contents":["messageId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["timestamp",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]},{"tag":"RCons","contents":["type",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["appId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[183,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[199,24]}},{"children":[],"comments":"Default options to publish a message. Every field is set to `Nothing`.\n","title":"defaultPublishOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PublishOptions"]}},"sourceSpan":{"start":[202,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[202,40]}},{"children":[],"comments":"Fields of a message received by a consumer:\n- `deliveryTag`: a serial number for the message.\n- `consumerTag`: an identifier for the consumer for which the message is destined.\n- `exchange`: the exchange to which the message was published.\n- `routingKey`: the routing key with which the message was published.\n- `redelivered`: if true, indicates that this message has been delivered before and has been\nhanded back to the server.\n","title":"MessageFields","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["deliveryTag",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["consumerTag",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["exchange",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeName"]},{"tag":"RCons","contents":["routingKey",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]},{"tag":"RCons","contents":["redelivered",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[228,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[233,23]}},{"children":[],"comments":"Properties of a message received by a consumer. A subset of the `PublishOptions` fields.\n","title":"MessageProperties","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["expiration",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["userId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["persistent",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["contentType",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["contentEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["headers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["correlationId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["replyTo",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"RCons","contents":["messageId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["timestamp",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]},{"tag":"RCons","contents":["type",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["appId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[236,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[249,27]}},{"children":[],"comments":"A message received by a consumer:\n- `content`: the content of the message a buffer.\n- `fields`: the message fields.\n- `properties`: the message properties.\n","title":"Message","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["content",{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]},{"tag":"RCons","contents":["fields",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"MessageFields"]},{"tag":"RCons","contents":["properties",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"MessageProperties"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[255,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[258,17]}},{"children":[],"comments":"Options used to consume message from a queue:\n- `consumerTag`: an identifier for this consumer, must not be already in use on the channel.\n- `noLocal`: if true, the broker does not deliver messages to the consumer if they were also\npublished on this connection. RabbitMQ doesn't implement it, and will ignore it.\n- `noAck`: if true, the broker does expect an acknowledgement of the messages delivered to\nthis consumer. It dequeues messages as soon as they've been sent down the wire.\n- `exclusive`: if true, the broker does not let anyone else consume from this queue.\n- `priority`: gives a priority to the consumer. Higher priority consumers get messages in\npreference to lower priority consumers.\n- `arguments`: additional arguments.\n\nSee <http://www.squaremobius.net/amqp.node/channel_api.html#channel_consume> for details.\n","title":"ConsumeOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["consumerTag",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["noLocal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["noAck",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["exclusive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[272,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[278,24]}},{"children":[],"comments":"Default options to consume messages from a queue. Every field is set to `Nothing` or `empty`.\n","title":"defaultConsumeOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConsumeOptions"]}},"sourceSpan":{"start":[281,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[281,40]}},{"children":[],"comments":"Reply from the server for setting up a consumer. Contains the consumer tag which is the unique\nidentifier for this consumer.\n","title":"ConsumeOK","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["consumerTag",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[292,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[292,43]}},{"children":[],"comments":"Options used to get a message from a queue:\n- `noAck`: if true, the broker does expect an acknowledgement of the messages delivered to\nthis consumer. It dequeues messages as soon as they've been sent down the wire.\n","title":"GetOptions","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["noAck",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}},"sourceSpan":{"start":[297,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[297,45]}},{"children":[],"comments":"Default options to get a message from a queue. Every field is set to `Nothing`.\n","title":"defaultGetOptions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"GetOptions"]}},"sourceSpan":{"start":[300,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types.purs","end":[300,32]}}]},{"reExports":[],"name":"Node.AMQP.Types.Internal","comments":null,"declarations":[{"children":[],"comments":null,"title":"connectUrl","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[20,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[20,49]}},{"children":[],"comments":null,"title":"encodeQueueOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueOptions"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[26,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[26,46]}},{"children":[],"comments":null,"title":"encodeDeleteQueueOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteQueueOptions"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[29,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[29,58]}},{"children":[],"comments":null,"title":"encodeExchangeOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeOptions"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[32,52]}},{"children":[],"comments":null,"title":"encodeDeleteExchangeOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteExchangeOptions"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[35,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[35,64]}},{"children":[],"comments":null,"title":"encodePublishOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PublishOptions"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[38,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[38,50]}},{"children":[],"comments":null,"title":"encodeConsumeOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConsumeOptions"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[41,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[41,50]}},{"children":[],"comments":null,"title":"encodeGetOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"GetOptions"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[44,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[44,42]}},{"children":[{"comments":null,"title":"QueueOptions'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["exclusive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["durable",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["autoDelete",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["messageTtl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["expires",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["deadLetterExchange",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["deadLetterRoutingKey",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["maxLength",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["maxPriority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericQueueOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"QueueOptions'"]}]},{"tag":"TypeWildcard","contents":{"start":[60,63],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[60,64]}}]}},"sourceSpan":{"start":[60,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[60,64]}},{"comments":null,"title":"encodeQueueOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"Encode"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"QueueOptions'"]}]}},"sourceSpan":{"start":[62,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[62,53]}}],"comments":null,"title":"QueueOptions'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[47,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[58,24]}},{"children":[],"comments":null,"title":"fromQueueOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"QueueOptions'"]}]}},"sourceSpan":{"start":[65,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[65,50]}},{"children":[{"comments":null,"title":"DeleteQueueOptions'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["ifUnused",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["ifEmpty",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericDeleteQueueOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"DeleteQueueOptions'"]}]},{"tag":"TypeWildcard","contents":{"start":[83,75],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[83,76]}}]}},"sourceSpan":{"start":[83,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[83,76]}},{"comments":null,"title":"encodeDeleteQueueOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"Encode"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"DeleteQueueOptions'"]}]}},"sourceSpan":{"start":[85,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[85,65]}}],"comments":null,"title":"DeleteQueueOptions'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[79,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[81,68]}},{"children":[],"comments":null,"title":"fromDeleteQueueOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteQueueOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"DeleteQueueOptions'"]}]}},"sourceSpan":{"start":[88,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[88,68]}},{"children":[{"comments":null,"title":"ExchangeOptions'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["durable",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["internal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["autoDelete",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["alternateExchange",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"REmpty"}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericExchangeOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"ExchangeOptions'"]}]},{"tag":"TypeWildcard","contents":{"start":[102,69],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[102,70]}}]}},"sourceSpan":{"start":[102,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[102,70]}},{"comments":null,"title":"encodeExchangeOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"Encode"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"ExchangeOptions'"]}]}},"sourceSpan":{"start":[104,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[104,59]}}],"comments":null,"title":"ExchangeOptions'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[94,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[100,27]}},{"children":[],"comments":null,"title":"fromExchangeOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ExchangeOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"ExchangeOptions'"]}]}},"sourceSpan":{"start":[107,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[107,59]}},{"children":[{"comments":null,"title":"DeleteExchangeOptions'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["ifUnused",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericDeleteExchangeOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"DeleteExchangeOptions'"]}]},{"tag":"TypeWildcard","contents":{"start":[118,81],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[118,82]}}]}},"sourceSpan":{"start":[118,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[118,82]}},{"comments":null,"title":"encodeDeleteExchangeOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"Encode"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"DeleteExchangeOptions'"]}]}},"sourceSpan":{"start":[120,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[120,71]}}],"comments":null,"title":"DeleteExchangeOptions'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[116,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[116,96]}},{"children":[],"comments":null,"title":"fromDeleteExchangeOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"DeleteExchangeOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"DeleteExchangeOptions'"]}]}},"sourceSpan":{"start":[123,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[123,77]}},{"children":[{"comments":null,"title":"PublishOptions'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["expiration",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["userId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["CC",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["BCC",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"RoutingKey"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["persistent",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["mandatory",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["contentType",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["contentEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["headers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["correlationId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["replyTo",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"RCons","contents":["messageId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["timestamp",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["type",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["appId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericPublishOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"PublishOptions'"]}]},{"tag":"TypeWildcard","contents":{"start":[145,67],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[145,68]}}]}},"sourceSpan":{"start":[145,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[145,68]}},{"comments":null,"title":"encodePublishOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"Encode"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"PublishOptions'"]}]}},"sourceSpan":{"start":[147,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[147,57]}}],"comments":null,"title":"PublishOptions'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[126,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[143,26]}},{"children":[],"comments":null,"title":"fromPublishOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"PublishOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"PublishOptions'"]}]}},"sourceSpan":{"start":[150,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[150,56]}},{"children":[{"comments":null,"title":"MessageProperties'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["expiration",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["userId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["deliveryMode",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["contentType",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["contentEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["headers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"RCons","contents":["correlationId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["replyTo",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"QueueName"]}]},{"tag":"RCons","contents":["messageId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["timestamp",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["type",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["appId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"MessageProperties'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[170,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[184,29]}},{"children":[{"comments":null,"title":"Message'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["content",{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]},{"tag":"RCons","contents":["fields",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"MessageFields"]},{"tag":"RCons","contents":["properties",{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"MessageProperties'"]},{"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Message'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[186,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[190,19]}},{"children":[],"comments":null,"title":"toMessage","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"Message'"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"Message"]}]}},"sourceSpan":{"start":[192,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[192,33]}},{"children":[{"comments":null,"title":"ConsumeOptions'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["consumerTag",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["noLocal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["noAck",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["exclusive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["arguments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericConsumeOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"ConsumeOptions'"]}]},{"tag":"TypeWildcard","contents":{"start":[220,67],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[220,68]}}]}},"sourceSpan":{"start":[220,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[220,68]}},{"comments":null,"title":"encodeConsumeOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"Encode"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"ConsumeOptions'"]}]}},"sourceSpan":{"start":[222,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[222,57]}}],"comments":null,"title":"ConsumeOptions'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[211,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[218,26]}},{"children":[],"comments":null,"title":"fromConsumeOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"ConsumeOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"ConsumeOptions'"]}]}},"sourceSpan":{"start":[225,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[225,56]}},{"children":[{"comments":null,"title":"GetOptions'","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["noAck",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"REmpty"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericGetOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"GetOptions'"]}]},{"tag":"TypeWildcard","contents":{"start":[237,59],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[237,60]}}]}},"sourceSpan":{"start":[237,8],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[237,60]}},{"comments":null,"title":"encodeGetOptions'","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"Encode"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"GetOptions'"]}]}},"sourceSpan":{"start":[239,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[239,49]}}],"comments":null,"title":"GetOptions'","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[235,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[235,71]}},{"children":[],"comments":null,"title":"fromGetOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types"],"GetOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","AMQP","Types","Internal"],"GetOptions'"]}]}},"sourceSpan":{"start":[242,1],"name":"/Users/abhinav/work/juspay/purescript-amqp/src/Node/AMQP/Types/Internal.purs","end":[242,44]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-maps":"3.5.2","purescript-control":"3.3.1","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-node-streams":"3.1.0","purescript-foreign-generic":"4.3.0","purescript-arrays":"4.2.1","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-node-path":"2.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-node-process":"5.0.0","purescript-monoid":"3.3.0","purescript-aff":"3.1.0","purescript-foldable-traversable":"3.6.1","purescript-tailrec":"3.3.0","purescript-gen":"1.1.0","purescript-functors":"2.2.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.1.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-const":"3.0.0","purescript-node-buffer":"3.0.1","purescript-node-fs":"4.0.0","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.3.0","purescript-js-date":"4.0.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-psci-support":"3.0.0","purescript-parallel":"3.3.0","purescript-posix-types":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.3.1","purescript-identity":"3.1.0","purescript-foreign":"4.0.1","purescript-lists":"4.10.0","purescript-nullable":"3.0.0","purescript-datetime":"3.4.0","purescript-functions":"3.0.0"},"version":"1.0.0","github":["abhin4v","purescript-amqp"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Control.Monad.Eff.Ref":"purescript-refs","Data.Char.Gen":"purescript-strings","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Foreign.Generic.Class":"purescript-foreign-generic","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Data.Foreign.NullOrUndefined":"purescript-foreign-generic","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Data.Foreign.Generic.Types":"purescript-foreign-generic","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Foreign.Index":"purescript-foreign","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Data.Foreign.Class":"purescript-foreign-generic","Control.Monad.Cont":"purescript-transformers","Data.Time.Component.Gen":"purescript-datetime","Data.List.ZipList":"purescript-lists","Node.FS":"purescript-node-fs","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Node.FS.Async":"purescript-node-fs","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Generic.Rep.Show":"purescript-generics-rep","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Data.Interval.Duration":"purescript-datetime","Data.Foreign.Internal":"purescript-foreign-generic","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Data.Foreign.Generic":"purescript-foreign-generic","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Node.Buffer.Unsafe":"purescript-node-buffer","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Node.Process":"purescript-node-process","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Posix":"purescript-posix-types","Control.Monad.Eff.Class":"purescript-eff","Data.Posix.Signal":"purescript-posix-types","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Foreign.JSON":"purescript-foreign-generic","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Data.Bifunctor.Join":"purescript-bifunctors","Node.Globals":"purescript-node-process","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Node.Platform":"purescript-node-process","Data.Foreign.Generic.EnumEncoding":"purescript-foreign-generic","Control.Monad.Writer":"purescript-transformers","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}