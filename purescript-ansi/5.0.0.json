{"uploader":"hdgarrood","packageMeta":{"moduleType":["node"],"repository":{"url":"git://github.com/hdgarrood/purescript-ansi","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-console":"^4.1.0","purescript-psci-support":"^4.0.0"},"dependencies":{"purescript-foldable-traversable":"^4.0.0","purescript-strings":"^4.0.0","purescript-lists":"^5.0.0"},"name":"purescript-ansi","license":["MIT"]},"tagTime":"2018-05-28T15:33:28+0000","modules":[{"reExports":[],"name":"Ansi.Codes","comments":"This module defines a data type representing ANSI escape codes, as well as\nfunctions for serialising them as Strings.\n","declarations":[{"children":[],"comments":"The prefix for all escape codes.\n","title":"prefix","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[10,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[10,17]}},{"children":[],"comments":"The suffix for escape codes; note that this is only required for colors.\n","title":"colorSuffix","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[14,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[14,22]}},{"children":[{"comments":null,"title":"Up","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Down","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Forward","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Back","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NextLine","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PreviousLine","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HorizontalAbsolute","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Position","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"EraseData","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EraseParam"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"EraseLine","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EraseParam"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ScrollUp","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ScrollDown","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Graphics","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SavePosition","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RestorePosition","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"QueryPosition","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HideCursor","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ShowCursor","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqEscapeCode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EscapeCode"]}]}},"sourceSpan":{"start":[39,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[39,46]}},{"comments":null,"title":"ordEscapeCode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EscapeCode"]}]}},"sourceSpan":{"start":[40,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[40,48]}}],"comments":"An ANSI escape code. Not all sequences are implemented.\nSee: <https://en.wikipedia.org/wiki/ANSI_escape_code>.\n","title":"EscapeCode","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[37,15]}},{"children":[],"comments":"Convert an escape code to the form recognised by terminals.\n","title":"escapeCodeToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EscapeCode"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[43,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[43,43]}},{"children":[{"comments":null,"title":"ToEnd","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FromBeginning","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Entire","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqEraseParam","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EraseParam"]}]}},"sourceSpan":{"start":[81,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[81,46]}},{"comments":null,"title":"ordEraseParam","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EraseParam"]}]}},"sourceSpan":{"start":[82,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[82,48]}}],"comments":"Specifies how much text to erase.\n\n* ToEnd: erase from the cursor to the end of the line or screen.\n* FromBeginning: erase to the cursor from the beginning of the line or\n   screen.\n* Entire: erase the entire line or screen.\n","title":"EraseParam","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[76,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[79,11]}},{"children":[],"comments":null,"title":"eraseParamToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"EraseParam"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[84,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[84,43]}},{"children":[{"comments":null,"title":"Reset","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PMode","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"RenderingMode"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PForeground","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PBackground","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqGraphicsParam","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[99,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[99,52]}},{"comments":null,"title":"ordGraphicsParam","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[100,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[100,54]}}],"comments":"A graphics parameter, controls how text appears; for example, bold,\nunderlined, foreground color, background color.\n","title":"GraphicsParam","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[93,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[97,22]}},{"children":[],"comments":null,"title":"graphicsParamToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[102,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[102,49]}},{"children":[{"comments":null,"title":"Bold","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Dim","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Italic","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Underline","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Inverse","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Strikethrough","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRenderingMode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"RenderingMode"]}]}},"sourceSpan":{"start":[118,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[118,52]}},{"comments":null,"title":"ordRenderingMode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"RenderingMode"]}]}},"sourceSpan":{"start":[119,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[119,54]}}],"comments":null,"title":"RenderingMode","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[110,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[116,18]}},{"children":[],"comments":null,"title":"codeForRenderingMode","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"RenderingMode"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[121,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[121,45]}},{"children":[{"comments":null,"title":"Black","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Red","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Green","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Yellow","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Blue","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Magenta","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cyan","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"White","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightBlack","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightRed","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightGreen","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightYellow","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightBlue","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightMagenta","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightCyan","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BrightWhite","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqColor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]}},"sourceSpan":{"start":[150,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[150,36]}},{"comments":null,"title":"ordColor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]}},"sourceSpan":{"start":[151,8],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[151,38]}}],"comments":"The standard set of 16 ANSI colors.\n","title":"Color","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[132,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[148,16]}},{"children":[],"comments":null,"title":"colorCode","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[153,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Codes.purs","end":[153,26]}}]},{"reExports":[],"name":"Ansi.Output","comments":"Convenience functions to simplify outputting ANSI escape codes to\nterminals.\n","declarations":[{"children":[],"comments":"Wrap the given text in escape codes corresponding to the given parameters.\nFor example:\n\n```purescript\nConsole.log $ withGraphics (bold <> underline <> foreground BrightRed) \"hello world\"\n```\n\nwould print \"hello world\" to the terminal, bold, underlined, and in bright\nred, and then reset (so that further logging to the console uses the\nnormal color and style).\n\nThis function simply wraps the given text in an escape code and a reset\ncode, so that it is a little more comfortable to use than the functions\nin `Ansi.Codes`.\n","title":"withGraphics","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[24,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[24,63]}},{"children":[],"comments":null,"title":"bold","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[30,35]}},{"children":[],"comments":null,"title":"dim","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[33,34]}},{"children":[],"comments":null,"title":"italic","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[36,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[36,37]}},{"children":[],"comments":null,"title":"underline","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[39,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[39,40]}},{"children":[],"comments":null,"title":"inverse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[42,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[42,38]}},{"children":[],"comments":null,"title":"strikethrough","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}},"sourceSpan":{"start":[45,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[45,44]}},{"children":[],"comments":null,"title":"foreground","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}]}},"sourceSpan":{"start":[48,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[48,50]}},{"children":[],"comments":null,"title":"background","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/harry/code/purescript-ansi/src/Ansi/Output.purs","end":[51,50]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-control":"4.0.0","purescript-console":"4.1.0","purescript-either":"4.0.0","purescript-arrays":"5.0.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lazy":"4.0.0","purescript-foldable-traversable":"4.0.0","purescript-tailrec":"4.0.0","purescript-gen":"2.0.0","purescript-prelude":"4.0.0","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-globals":"4.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-psci-support":"4.0.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-strings":"4.0.0","purescript-identity":"4.0.0","purescript-lists":"5.0.0"},"version":"5.0.0","github":["hdgarrood","purescript-ansi"],"versionTag":"v5.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Data.String.CodeUnits":"purescript-strings","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Math":"purescript-math","Data.String":"purescript-strings","Control.Plus":"purescript-control","Partial":"purescript-partial","Global":"purescript-globals","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Array.ST":"purescript-arrays","Control.Semigroupoid":"purescript-prelude","Data.Char":"purescript-strings","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}