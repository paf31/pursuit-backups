{"uploader":"eskimor","packageMeta":{"homepage":"https://github.com/eskimor/purescript-argonaut-generic-codecs","repository":{"url":"git://github.com/eskimor/purescript-argonaut-generic-codecs.git","type":"git"},"devDependencies":{"purescript-strongcheck-generics":"^1.0.0","purescript-assert":"^3.0.0"},"authors":[{"email":"zimaliev@yandex.ru","name":"Maxim Zimaliev"},{"email":"","name":"Hardy Jones"},{"email":"john@degoes.net","name":"John A. De Goes"},{"name":"Robert Klotzner <robert.klotzner AT gmx.at>"}],"dependencies":{"purescript-arrays":"^4.0.0","purescript-argonaut-core":"^3.1.0","purescript-generics":"^4.0.0","purescript-integers":"^3.0.0","purescript-partial":"^1.2.0"},"name":"purescript-argonaut-generic-codecs","keywords":["purescript","json","argonaut","encode","decode","codec","combinators"],"license":["MIT"],"description":"Generic codecs for purescript argonaut"},"tagTime":"2017-05-04T07:04:04+0000","modules":[{"reExports":[],"name":"Data.Argonaut.Generic.Aeson","comments":null,"declarations":[{"children":[],"comments":"Options for aeson compatible encoding/decoding.\n","title":"options","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}},"sourceSpan":{"start":[32,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Aeson.purs","end":[32,19]}},{"children":[],"comments":"Encode `Json` representation of a value which has a `Generic` type\nwith Aeson options. The encoded data will be compatible with Haskell Aeson,\nif Aeson default options are used.\n","title":"encodeJson","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]},null]}},"sourceSpan":{"start":[55,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Aeson.purs","end":[55,49]}},{"children":[],"comments":"Decode `Json` representation of a value which has a `Generic` type\nwith Aeson options. Data from Haskell, with Aeson default options can be\ndecoded with gAesonDecodJson.\n","title":"decodeJson","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[61,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Aeson.purs","end":[61,63]}},{"children":[],"comments":null,"title":"userEncoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]}},"sourceSpan":{"start":[65,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Aeson.purs","end":[65,74]}},{"children":[],"comments":null,"title":"userDecoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}]}]}]}},"sourceSpan":{"start":[70,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Aeson.purs","end":[70,90]}}]},{"reExports":[],"name":"Data.Argonaut.Generic.Argonaut","comments":"Straight forward encoding/decoding with no special rules.\n","declarations":[{"children":[],"comments":"Default for straight forward argonaut encoding.\n","title":"options","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}},"sourceSpan":{"start":[16,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Argonaut.purs","end":[16,19]}},{"children":[],"comments":null,"title":"sumEncoding","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"SumEncoding"]}},"sourceSpan":{"start":[29,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Argonaut.purs","end":[29,27]}},{"children":[],"comments":"Encode any `Generic` data structure into `Json`,\nformatted according to argonautOptions\n","title":"encodeJson","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]},null]}},"sourceSpan":{"start":[38,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Argonaut.purs","end":[38,49]}},{"children":[],"comments":"Decode `Json` representation of a value which has a `Generic` type\nwith Argonaut options.\n","title":"decodeJson","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[43,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Argonaut.purs","end":[43,63]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Data","Argonaut","Generic","Options"]},"declarations":[{"children":[{"comments":null,"title":"TaggedObject","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["tagFieldName",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["contentsFieldName",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["unpackRecords",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"SumEncoding","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[43,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[55,4]}},{"children":[{"comments":null,"title":"Options","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["constructorTagModifier",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["allNullaryToStringTag",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["sumEncoding",{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"SumEncoding"]},{"tag":"RCons","contents":["flattenContentsArray",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["encodeSingleConstructors",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["userEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]},{"tag":"RCons","contents":["userDecoding",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}]}]}]},{"tag":"RCons","contents":["fieldLabelModifier",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["omitNothingFields",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Options","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[14,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[41,2]}},{"children":[],"comments":"Use this for `userEncoding` if you don't want any special rules.\n","title":"dummyUserEncoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[59,79]}},{"children":[],"comments":"Use this for `userDecodeing` if you don't want any special rules.\n","title":"dummyUserDecoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}]}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[63,95]}}]}],"name":"Data.Argonaut.Generic.Decode","comments":"Flexible generic decoding. Use this for defining your own custom encodings\nor use \"Data.Argonaut.Generic.Aeson\" and \"Data.Argonaut.Generic.Argonaut\" for concrete codecs.\n","declarations":[{"children":[],"comments":"Decode `Json` representation of a value which has a `Generic` type.\n","title":"genericDecodeJson","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Decode.purs","end":[32,81]}},{"children":[],"comments":"Generically decode json, using a supplied userEncoding, falling back to genericEncodeJson':\n","title":"genericUserDecodeJson'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}]}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Decode.purs","end":[38,92]}},{"children":[],"comments":"Decode `Json` representation of a `GenericSpine`.\n","title":"genericDecodeJson'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}]}]}]}},"sourceSpan":{"start":[43,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Decode.purs","end":[43,88]}},{"children":[],"comments":null,"title":"mFail","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[112,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Decode.purs","end":[112,56]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Data","Argonaut","Generic","Options"]},"declarations":[{"children":[{"comments":null,"title":"TaggedObject","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["tagFieldName",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["contentsFieldName",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["unpackRecords",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"SumEncoding","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[43,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[55,4]}},{"children":[{"comments":null,"title":"Options","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["constructorTagModifier",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["allNullaryToStringTag",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["sumEncoding",{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"SumEncoding"]},{"tag":"RCons","contents":["flattenContentsArray",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["encodeSingleConstructors",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["userEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]},{"tag":"RCons","contents":["userDecoding",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}]}]}]},{"tag":"RCons","contents":["fieldLabelModifier",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["omitNothingFields",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Options","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[14,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[41,2]}},{"children":[],"comments":"Use this for `userEncoding` if you don't want any special rules.\n","title":"dummyUserEncoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[59,79]}},{"children":[],"comments":"Use this for `userDecodeing` if you don't want any special rules.\n","title":"dummyUserDecoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}]}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[63,95]}}]}],"name":"Data.Argonaut.Generic.Encode","comments":"Flexible generic encoding. Use this for defining your own custom encodings\nor use \"Data.Argonaut.Generic.Aeson\" and \"Data.Argonaut.Generic.Argonaut\" for concrete codecs.\n","declarations":[{"children":[],"comments":null,"title":"genericEncodeJson","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}},"sourceSpan":{"start":[29,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Encode.purs","end":[29,67]}},{"children":[],"comments":"Generically encode to json, using a supplied `userEncoding`, falling back to `genericEncodeJson'`:\n","title":"genericUserEncodeJson'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}},"sourceSpan":{"start":[35,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Encode.purs","end":[35,78]}},{"children":[],"comments":"Encode `GenericSpine` into `Json`.\nThis function is mutually recursive with `genericUserEncodeJson'`, as for all descendent spines\n`genericUserEncodeJson'` is invoked.\n","title":"genericEncodeJson'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}},"sourceSpan":{"start":[42,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Encode.purs","end":[42,74]}}]},{"reExports":[],"name":"Data.Argonaut.Generic.Options","comments":"Options for generic encoding/decoding.\n","declarations":[{"children":[{"comments":null,"title":"Options","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["constructorTagModifier",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["allNullaryToStringTag",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["sumEncoding",{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"SumEncoding"]},{"tag":"RCons","contents":["flattenContentsArray",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["encodeSingleConstructors",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["userEncoding",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]},{"tag":"RCons","contents":["userDecoding",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}]}]}]},{"tag":"RCons","contents":["fieldLabelModifier",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["omitNothingFields",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Options","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[14,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[41,2]}},{"children":[{"comments":null,"title":"TaggedObject","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["tagFieldName",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["contentsFieldName",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["unpackRecords",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"SumEncoding","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[43,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[55,4]}},{"children":[],"comments":"Use this for `userEncoding` if you don't want any special rules.\n","title":"dummyUserEncoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[59,79]}},{"children":[],"comments":"Use this for `userDecodeing` if you don't want any special rules.\n","title":"dummyUserDecoding","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Generic","Options"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}]}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Options.purs","end":[63,95]}}]},{"reExports":[],"name":"Data.Argonaut.Generic.Util","comments":null,"declarations":[{"children":[],"comments":null,"title":"allConstructorsNullary","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"DataConstructor"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[11,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Util.purs","end":[11,59]}},{"children":[],"comments":"Needed for applying unwrapUnaryRecords.\n","title":"isUnaryRecord","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"DataConstructor"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[16,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Util.purs","end":[16,50]}},{"children":[],"comments":null,"title":"stripModulePath","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[20,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Util.purs","end":[20,36]}},{"children":[],"comments":"Check whether a given spine is a record\n","title":"spineIsRecord","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Util.purs","end":[26,41]}},{"children":[],"comments":"Check whether a constructor is a Haskell constructor with record fields.\n","title":"constructorIsRecord","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"DataConstructor"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[32,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Util.purs","end":[32,50]}},{"children":[],"comments":null,"title":"sigIsMaybe","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/robert/projects/purescript-argonaut-generic-codecs/src/Data/Argonaut/Generic/Util.purs","end":[40,42]}}]}],"resolvedDependencies":{"purescript-free":"4.0.1","purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-maps":"3.0.0","purescript-control":"3.2.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-profunctor":"3.0.0","purescript-strongcheck-generics":"1.0.0","purescript-arrays":"4.1.0","purescript-maybe":"3.0.0","purescript-strongcheck":"3.1.0","purescript-type-equality":"2.1.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-argonaut-core":"3.1.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.2.0","purescript-gen":"1.1.0","purescript-prelude":"3.0.0","purescript-inject":"1.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-assert":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-transformers":"3.3.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-psci-support":"2.0.0","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.0","purescript-strings":"3.1.0","purescript-identity":"3.1.0","purescript-functor-coproducts":"1.1.0","purescript-machines":"4.0.0","purescript-lists":"4.3.0","purescript-datetime":"3.0.0","purescript-functions":"3.0.0"},"version":"6.0.3","github":["eskimor","purescript-argonaut-generic-codecs"],"versionTag":"v6.0.3","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Char.Gen":"purescript-strings","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Test.StrongCheck.Gen":"purescript-strongcheck","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Argonaut.Parser":"purescript-argonaut-core","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Test.StrongCheck.Data.AlphaNumString":"purescript-strongcheck","Test.StrongCheck.Data.ApproxNumber":"purescript-strongcheck","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Test.StrongCheck.Generic":"purescript-strongcheck-generics","Data.CatList":"purescript-catenable-lists","Type.Proxy":"purescript-proxy","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Test.StrongCheck":"purescript-strongcheck","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Test.StrongCheck.Perturb":"purescript-strongcheck","Control.Monad.Trampoline":"purescript-free","Test.StrongCheck.Data.ArbDateTime":"purescript-strongcheck","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Test.StrongCheck.Landscape":"purescript-strongcheck","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Test.StrongCheck.Data.NonZero":"purescript-strongcheck","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functor-coproducts","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Test.StrongCheck.Data.Signum":"purescript-strongcheck","Test.StrongCheck.Data.Positive":"purescript-strongcheck","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Inject":"purescript-inject","Data.List.Types":"purescript-lists","Test.StrongCheck.GenericValue":"purescript-strongcheck-generics","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Test.StrongCheck.Data.ArbBoundedEnum":"purescript-strongcheck","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Test.StrongCheck.Arbitrary":"purescript-strongcheck","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functor-coproducts","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Test.StrongCheck.LCG":"purescript-strongcheck","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Data.Time":"purescript-datetime","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Argonaut.Core":"purescript-argonaut-core","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Test.StrongCheck.Data.Negative":"purescript-strongcheck","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Machine.Mealy":"purescript-machines","Control.Monad.Writer":"purescript-transformers","Data.Argonaut.Gen":"purescript-argonaut-core","Data.Profunctor.Choice":"purescript-profunctor","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}