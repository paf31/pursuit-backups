{"uploader":"natefaubion","packageMeta":{"homepage":"https://github.com/slamdata/purescript-avar","repository":{"url":"git://github.com/slamdata/purescript-avar.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","test","tests"],"main":[""],"devDependencies":{"purescript-console":"^3.0.0","purescript-assert":"^3.0.0","purescript-refs":"^3.0.0","purescript-transformers":"^3.4.0"},"authors":[{"email":"nathan@n-son.com","name":"Nathan Faubion"}],"dependencies":{"purescript-exceptions":"^3.0.0","purescript-either":"^3.1.0","purescript-maybe":"^3.0.0","purescript-eff":"^3.1.0","purescript-functions":"^3.0.0"},"name":"purescript-avar","keywords":["PureScript","AVar"],"license":["Apache-2.0"],"description":"Low-level interface for asynchronous variables"},"tagTime":"2017-09-20T15:11:16+0000","modules":[{"reExports":[],"name":"Control.Monad.Eff.AVar","comments":null,"declarations":[{"children":[],"comments":null,"title":"AVarEff","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[32,43]}},{"children":[],"comments":null,"title":"AVarCallback","info":{"arguments":[["eff",null],["a",null]],"declType":"typeSynonym","type":{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}},"sourceSpan":{"start":[34,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[34,62]}},{"children":[],"comments":null,"title":"AVar","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[36,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[36,39]}},{"children":[],"comments":null,"title":"AVAR","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[38,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[38,34]}},{"children":[{"comments":null,"title":"Killed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Filled","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"AVarStatus","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[40,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[43,10]}},{"children":[],"comments":"Creates a fresh AVar.\n","title":"makeEmptyVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[46,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[46,60]}},{"children":[],"comments":"Creates a fresh AVar with an initial value.\n","title":"makeVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[49,59]}},{"children":[],"comments":"Kills the AVar with an exception. All pending and future actions will\nresolve immediately with the provided exception.\n","title":"killVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[53,53]}},{"children":[],"comments":"Sets the value of the AVar. If the AVar is already filled, it will be\nqueued until the value is emptied. Multiple puts will resolve in order as\nthe AVar becomes available. Returns an effect which will remove the\ncallback from the pending queue.\n","title":"putVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarCallback"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[60,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[60,86]}},{"children":[],"comments":"Attempts to synchronously fill an AVar. If the AVar is already filled,\nthis will do nothing. Returns true or false depending on if it succeeded.\n","title":"tryPutVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}},"sourceSpan":{"start":[65,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[65,54]}},{"children":[],"comments":"Takes the AVar value, leaving it empty. If the AVar is already empty,\nthe callback will be queued until the AVar is filled. Multiple takes will\nresolve in order as the AVar fills. Returns an effect which will remove\nthe callback from the pending queue.\n","title":"takeVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarCallback"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[72,80]}},{"children":[],"comments":"Attempts to synchronously take an AVar value, leaving it empty. If the\nAVar is empty, this will return `Nothing`.\n","title":"tryTakeVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[77,53]}},{"children":[],"comments":"Reads the AVar value. Unlike `takeVar`, this will not leave the AVar empty.\nIf the AVar is empty, this will queue until it is filled. Multiple reads\nwill resolve at the same time, as soon as possible.\n","title":"readVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarCallback"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[83,80]}},{"children":[],"comments":"Attempts to synchronously read an AVar. If the AVar is empty, this will\nreturn `Nothing`.\n","title":"tryReadVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[88,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[88,53]}},{"children":[],"comments":"Synchronously checks the status of an AVar.\n","title":"status","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[92,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[92,54]}},{"children":[],"comments":"Synchronously checks whether an AVar currently is empty.\n","title":"isEmptyVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[96,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[96,51]}},{"children":[],"comments":"Synchronously checks whether an AVar currently has a value.\n","title":"isFilledVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[100,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[100,52]}},{"children":[],"comments":"Synchronously checks whether an AVar has been killed.\n","title":"isKilledVar","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[104,52]}},{"children":[],"comments":null,"title":"isEmpty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[107,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[107,38]}},{"children":[],"comments":null,"title":"isFilled","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[112,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[112,39]}},{"children":[],"comments":null,"title":"isKilled","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVarStatus"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[117,1],"name":"/Users/nathan/Sites/purescript/purescript-avar/src/Control/Monad/Eff/AVar.purs","end":[117,39]}}]}],"resolvedDependencies":{"purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-control":"3.3.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-arrays":"4.1.2","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.3.1","purescript-tailrec":"3.3.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-assert":"3.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-eff":"3.1.0","purescript-transformers":"3.4.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-identity":"3.1.0","purescript-functions":"3.0.0"},"version":"2.0.1","github":["slamdata","purescript-avar"],"versionTag":"v2.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Ref":"purescript-refs","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Array.ST.Partial":"purescript-arrays","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Category":"purescript-prelude","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Data.Array.Partial":"purescript-arrays","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Control.Comonad.Trans.Class":"purescript-transformers","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}