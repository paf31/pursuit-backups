{"uploader":"hdgarrood","packageMeta":{"homepage":"https://github.com/tfausak/purescript-batteries","repository":{"url":"git://github.com/tfausak/purescript-batteries.git","type":"git"},"resolutions":{"purescript-proxy":"~1.0.0","purescript-math":"~1.0.0"},"ignore":["/.psci","/.psci_modules/","/.pulp-cache/","/bower_components/","/node_modules/","/npm-debug.log","/output/"],"main":["src/Batteries.purs"],"authors":[{"homepage":"http://taylor.fausak.me","email":"taylor@fausak.me","name":"Taylor Fausak"}],"dependencies":{"purescript-coproducts":"~0.4.1","purescript-free":"~0.9.1","purescript-proxy":"~1.0.0","purescript-exceptions":"~0.3.4","purescript-these":"~0.3.3","purescript-maps":"~0.5.7","purescript-control":"~0.3.2","purescript-console":"~0.1.1","purescript-either":"~0.2.3","purescript-profunctor":"~0.3.2","purescript-arrows":"~0.6.2","purescript-arrays":"~0.4.5","purescript-maybe":"~0.3.5","purescript-exists":"~0.2.0","purescript-distributive":"~0.5.1","purescript-unfoldable":"~0.4.1","purescript-invariant":"~0.3.0","purescript-lazy":"~0.4.1","purescript-monoid":"~0.3.2","purescript-aff":"~0.16.1","purescript-foldable-traversable":"~0.4.2","purescript-tailrec":"~0.3.1","purescript-lens":"~0.9.1","purescript-sequences":"~0.6.0","purescript-prelude":"~0.1.5","purescript-inject":"~0.3.0","purescript-st":"~0.1.1","purescript-bifunctors":"~0.4.0","purescript-contravariant":"~0.2.3","purescript-assert":"~0.1.1","purescript-generics":"~0.7.2","purescript-unsafe-coerce":"~0.1.0","purescript-refs":"~0.2.0","purescript-integers":"~0.2.1","purescript-eff":"~0.1.2","purescript-orders":"~0.1.1","purescript-const":"~0.5.0","purescript-transformers":"~0.8.4","purescript-globals":"~0.2.2","purescript-math":"~1.0.0","purescript-enums":"~0.7.0","purescript-catenable-lists":"~0.1.1","purescript-validation":"~0.2.1","purescript-random":"~0.2.3","purescript-parallel":"~0.5.1","purescript-tuples":"~0.4.0","purescript-semirings":"~0.2.0","purescript-strings":"~0.7.1","purescript-identity":"~0.4.1","purescript-foreign":"~0.7.2","purescript-sets":"~0.5.7","purescript-lists":"~0.7.10","purescript-nullable":"~0.2.1","purescript-datetime":"~0.9.2","purescript-functions":"~0.1.0"},"name":"purescript-batteries","keywords":["batteries","prelude","purescript"],"license":["MIT"],"description":"A PureScript prelude with more features."},"modules":[{"reExports":[{"moduleName":["Control","Alt"],"declarations":[{"children":[{"comments":null,"title":"alt","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"altArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-control/src/Control/Alt.purs","end":[29,9]}}],"comments":"The `Alt` type class identifies an associative operation on a type\nconstructor.  It is similar to `Semigroup`, except that it applies to\ntypes of kind `* -> *`, like `Array` or `List`, rather than concrete types\n`String` or `Number`.\n\n`Alt` instances are required to satisfy the following laws:\n\n- Associativity: `(x <|> y) <|> z == x <|> (y <|> z)`\n- Distributivity: `f <$> (x <|> y) == (f <$> x) <|> (f <$> y)`\n\nFor example, the `Array` (`[]`) type is an instance of `Alt`, where\n`(<|>)` is defined to be concatenation.\n","title":"Alt","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-control/src/Control/Alt.purs","end":[22,1]}},{"children":[],"comments":"An infix version of `alt`.\n","title":"(<|>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Control","Alt"],"Alt"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-control/src/Control/Alt.purs","end":[26,1]}}]},{"moduleName":["Control","Alternative"],"declarations":[{"children":[{"comments":null,"title":"alternativeArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-control/src/Control/Alternative.purs","end":[20,42]}}],"comments":"The `Alternative` type class has no members of its own; it just specifies\nthat the type constructor has both `Applicative` and `Plus` instances.\n\nTypes which have `Alternative` instances should also satisfy the following\nlaws:\n\n- Distributivity: `(f <|> g) <*> x == (f <*> x) <|> (g <*> x)`\n- Annihilation: `empty <*> f = empty`\n","title":"Alternative","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Control","Plus"],"Plus"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-control/src/Control/Alternative.purs","end":[20,1]}}]},{"moduleName":["Control","Apply"],"declarations":[{"children":[],"comments":"Lift a function of two arguments to a function which accepts and returns\nvalues wrapped with the type constructor `f`.\n","title":"lift2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-control/src/Control/Apply.purs","end":[21,1]}},{"children":[],"comments":"Lift a function of three arguments to a function which accepts and returns\nvalues wrapped with the type constructor `f`.\n","title":"lift3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"d"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-control/src/Control/Apply.purs","end":[26,1]}},{"children":[],"comments":"Lift a function of four arguments to a function which accepts and returns\nvalues wrapped with the type constructor `f`.\n","title":"lift4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-control/src/Control/Apply.purs","end":[31,1]}},{"children":[],"comments":"Lift a function of five arguments to a function which accepts and returns\nvalues wrapped with the type constructor `f`.\n","title":"lift5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"g"}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"g"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-control/src/Control/Apply.purs","end":[36,1]}},{"children":[],"comments":"Combine two effectful actions, keeping only the result of the second.\n","title":"(*>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-control/src/Control/Apply.purs","end":[16,1]}},{"children":[],"comments":"Combine two effectful actions, keeping only the result of the first.\n","title":"(<*)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[11,1],"name":"bower_components/purescript-control/src/Control/Apply.purs","end":[12,1]}}]},{"moduleName":["Control","Arrow"],"declarations":[{"children":[{"comments":null,"title":"arrowFunction","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow"],"Arrow"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-arrows/src/Control/Arrow.purs","end":[16,1]}}],"comments":"The `Arrow` type class combines the operations of a `Category` with those of\na `Strong` profunctor.\n","title":"Arrow","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Category"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Profunctor","Strong"],"Strong"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[11,1],"name":"bower_components/purescript-arrows/src/Control/Arrow.purs","end":[13,1]}},{"children":[{"comments":null,"title":"aplus","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]}},"sourceSpan":null}],"comments":"Arrows with a monoidal operation on morphisms\n","title":"ArrowPlus","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Control","Arrow"],"ArrowZero"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-arrows/src/Control/Arrow.purs","end":[26,1]}},{"children":[{"comments":null,"title":"azero","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},null]},null]}},"sourceSpan":null}],"comments":"Arrows with zero morphisms\n","title":"ArrowZero","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Control","Arrow"],"Arrow"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-arrows/src/Control/Arrow.purs","end":[19,1]}},{"children":[],"comments":"An infix alias for `aplus`. \n","title":"(<+>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Control","Arrow"],"ArrowPlus"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-arrows/src/Control/Arrow.purs","end":[27,1]}}]},{"moduleName":["Control","Arrow","Cokleisli"],"declarations":[{"children":[{"comments":null,"title":"Cokleisli","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupoidCokleisli","info":{"declType":"instance","dependencies":[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroupoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Cokleisli"],"Cokleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Cokleisli.purs","end":[26,1]}},{"comments":null,"title":"categoryCokleisli","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Category"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Cokleisli"],"Cokleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Cokleisli.purs","end":[29,1]}},{"comments":null,"title":"profunctorCokleisli","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor"],"Profunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Cokleisli"],"Cokleisli"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Cokleisli.purs","end":[32,1]}},{"comments":null,"title":"strongCokleisli","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Strong"],"Strong"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Cokleisli"],"Cokleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Cokleisli.purs","end":[36,1]}},{"comments":null,"title":"arrowCokleisli","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow"],"Arrow"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Cokleisli"],"Cokleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Cokleisli.purs","end":[36,61]}}],"comments":"`Cokleisli` gives an `Arrow` instance for the Co-Kleisli category of a `Comonad`.\n\nComposition is defined using `=>=` with `extract` as the identity morhism.\n","title":"Cokleisli","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["w",null],["a",null],["b",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Cokleisli.purs","end":[20,1]}},{"children":[],"comments":"Unpack a `Cokleisli` arrow.\n","title":"runCokleisli","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Cokleisli"],"Cokleisli"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Cokleisli.purs","end":[21,1]}}]},{"moduleName":["Control","Arrow","Kleisli"],"declarations":[{"children":[{"comments":null,"title":"Kleisli","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupoidKleisli","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroupoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[28,1]}},{"comments":null,"title":"categoryKleisli","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Category"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[31,1]}},{"comments":null,"title":"profunctorKleisli","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor"],"Profunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[34,1]}},{"comments":null,"title":"strongKleisli","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Strong"],"Strong"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[38,1]}},{"comments":null,"title":"arrowKleisli","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow"],"Arrow"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[40,1]}},{"comments":null,"title":"arrowZeroKleisli","info":{"declType":"instance","dependencies":[[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow"],"ArrowZero"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[43,1]}},{"comments":null,"title":"arrowPlusKleisli","info":{"declType":"instance","dependencies":[[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow"],"ArrowPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[44,61]}}],"comments":"`Kleisli` gives an `Arrow` instance for the Kleisli category of a `Monad`.\n\nComposition is defined using `>=>` with `return` as the identity morhism.\n","title":"Kleisli","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["m",null],["a",null],["b",null]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[22,1]}},{"children":[],"comments":"Unpack a `Kleisli` arrow.\n","title":"runKleisli","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Kleisli"],"Kleisli"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Kleisli.purs","end":[23,1]}}]},{"moduleName":["Control","Arrow","Static"],"declarations":[{"children":[{"comments":null,"title":"Static","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupoidStatic","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Semigroupoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroupoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Static"],"Static"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[23,1]}},{"comments":null,"title":"categoryStatic","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Category"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Category"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Static"],"Static"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[26,1]}},{"comments":null,"title":"profunctorStatic","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor"],"Profunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Static"],"Static"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[29,1]}},{"comments":null,"title":"strongStatic","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Profunctor","Strong"],"Strong"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Strong"],"Strong"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Static"],"Static"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[33,1]}},{"comments":null,"title":"choiceStatic","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Profunctor","Choice"],"Choice"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Choice"],"Choice"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Static"],"Static"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[37,1]}},{"comments":null,"title":"arrowStatic","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Control","Arrow"],"Arrow"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow"],"Arrow"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Static"],"Static"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[37,70]}}],"comments":"`Static` gives an `Arrow` instance for the static arrows of an `Applicative` functor.\n","title":"Static","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["a",null],["b",null],["c",null]]},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[17,1]}},{"children":[],"comments":"Unpack a `Static` arrow.\n","title":"runStatic","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Arrow","Static"],"Static"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-arrows/src/Control/Arrow/Static.purs","end":[18,1]}}]},{"moduleName":["Control","Biapplicative"],"declarations":[{"children":[],"comments":"`Biapplicative` captures type constructors of two arguments which support lifting of\nfunctions of zero or more arguments, in the sense of `Applicative`.\n","title":"Biapplicative","fixity":null,"info":{"arguments":[["w",null]],"declType":"typeClass","superclasses":[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[9,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapplicative.purs","end":[10,39]}}]},{"moduleName":["Control","Biapply"],"declarations":[{"children":[],"comments":"`Biapply` captures type constructors of two arguments which support lifting of\nfunctions of one or more arguments, in the sense of `Apply`.\n","title":"Biapply","fixity":null,"info":{"arguments":[["w",null]],"declType":"typeClass","superclasses":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapply.purs","end":[27,1]}},{"children":[],"comments":"Lift a function of two arguments.\n","title":"bilift2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"f"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapply.purs","end":[40,1]}},{"children":[],"comments":"Lift a function of three arguments.\n","title":"bilift3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"h"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapply.purs","end":[44,1]}},{"children":[],"comments":"Keep the results of the second computation\n","title":"(*>>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapply.purs","end":[32,1]}},{"children":[],"comments":"A convenience function which can be used to apply the result of `bipure` in\nthe style of `Applicative`:\n\n```purescript\nbipure f g <<$>> x <<*>> y\n```\n","title":"(<<$>>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapply.purs","end":[19,1]}},{"children":[],"comments":"Keep the results of the first computation\n","title":"(<<*)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapply.purs","end":[36,1]}},{"children":[],"comments":"An infix version of `biapply`.\n","title":"(<<*>>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-bifunctors/src/Control/Biapply.purs","end":[28,1]}}]},{"moduleName":["Control","Bind"],"declarations":[{"children":[],"comments":"Execute a monadic action if a condition holds.\n\nFor example:\n\n```purescript\nmain = ifM ((< 0.5) <$> random)\n         (trace \"Heads\")\n         (trace \"Tails\")\n```\n","title":"ifM","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-control/src/Control/Bind.purs","end":[45,1]}},{"children":[],"comments":"Collapse two applications of a monadic type constructor into one.\n","title":"join","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-control/src/Control/Bind.purs","end":[33,1]}},{"children":[],"comments":"Backwards Kleisli composition.\n","title":"(<=<)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-control/src/Control/Bind.purs","end":[29,1]}},{"children":[],"comments":"A version of `(>>=)` with its arguments flipped.\n","title":"(=<<)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-control/src/Control/Bind.purs","end":[13,1]}},{"children":[],"comments":"Forwards Kleisli composition.\n\nFor example:\n\n```purescript\nimport Data.Array (head, tail)\n\nthird = tail >=> tail >=> head\n```\n","title":"(>=>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-control/src/Control/Bind.purs","end":[25,1]}}]},{"moduleName":["Control","Comonad"],"declarations":[{"children":[{"comments":null,"title":"extract","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":null}],"comments":"`Comonad` extends the `Extend` class with the `extract` function\nwhich extracts a value, discarding the comonadic context.\n\n`Comonad` is the dual of `Monad`, and `extract` is the dual of \n`pure` or `return`.\n\nLaws:\n\n- Left Identity: `extract <<= xs = xs`\n- Right Identity: `extract (f <<= xs) = f xs`\n","title":"Comonad","fixity":null,"info":{"arguments":[["w",null]],"declType":"typeClass","superclasses":[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-control/src/Control/Comonad.purs","end":[20,31]}}]},{"moduleName":["Control","Comonad","Cofree"],"declarations":[{"children":[{"comments":null,"title":"functorCofree","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[53,1]}},{"comments":null,"title":"foldableCofree","info":{"declType":"instance","dependencies":[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[67,1]}},{"comments":null,"title":"traversableCofree","info":{"declType":"instance","dependencies":[[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[73,1]}},{"comments":null,"title":"extendCofree","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[77,1]}},{"comments":null,"title":"comonadCofree","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[80,1]}},{"comments":null,"title":"applyCofree","info":{"declType":"instance","dependencies":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[80,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[85,1]}},{"comments":null,"title":"applicativeCofree","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[88,1]}},{"comments":null,"title":"bindCofree","info":{"declType":"instance","dependencies":[[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[93,1]}},{"comments":null,"title":"monadCofree","info":{"declType":"instance","dependencies":[[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[93,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[93,57]}}],"comments":"The `Cofree` `Comonad` for a functor.\n\nA value of type `Cofree f a` consists of an `f`-branching\ntree, annotated with labels of type `a`.\n\nThe `Comonad` instance supports _redecoration_, recomputing\nlabels from the local context.\n","title":"Cofree","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[32,1]}},{"children":[],"comments":"Create a value of type `Cofree f a` from a label and a\nfunctor-full of \"subtrees\".\n","title":"mkCofree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-free/src/Control/Comonad/Cofree.purs","end":[33,1]}}]},{"moduleName":["Control","Comonad","Env"],"declarations":[{"children":[],"comments":"The `Env` comonad is a synonym for the `EnvT` comonad transformer, applied\nto the `Identity` monad.\n","title":"Env","fixity":null,"info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env.purs","end":[17,1]}},{"children":[],"comments":"Create a value in context in the `Env` comonad.\n","title":"env","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env.purs","end":[30,1]}},{"children":[],"comments":"Change the data type in an `Env` computation.\n","title":"mapEnv","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env.purs","end":[26,1]}},{"children":[],"comments":"Unwrap a value in the `Env` comonad.\n","title":"runEnv","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env.purs","end":[18,1]}},{"children":[],"comments":"Change the environment type in an `Env` computation.\n","title":"withEnv","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["e1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e2"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env.purs","end":[22,1]}}]},{"moduleName":["Control","Comonad","Env","Class"],"declarations":[{"children":[{"comments":null,"title":"comonadEnvTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Class"],"ComonadEnv"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Class.purs","end":[37,1]}},{"comments":null,"title":"comonadEnvEnvT","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Class"],"ComonadEnv"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Class.purs","end":[40,30]}}],"comments":"The `ComonadEnv` type class represents those monads which support a global environment via\n`ask` and `local`.\n\n- `ask` reads the current environment from the context.\n- `local` changes the value of the global environment.\n\nAn implementation is provided for `EnvT`.\n\nLaws:\n\n- `ask (local f x) = f (ask x)`\n- `extract (local _ x) = extract a`\n- `extend g (local f x) = extend (g <<< local f) x`\n","title":"ComonadEnv","fixity":null,"info":{"arguments":[["e",null],["w",null]],"declType":"typeClass","superclasses":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Class.purs","end":[30,1]}},{"children":[],"comments":"Get a value which depends on the environment.\n","title":"asks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["e1",{"tag":"ConstrainedType","contents":[[[[["Control","Comonad","Env","Class"],"ComonadEnv"],[{"tag":"TypeVar","contents":"e1"},{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"e1"}]}]},{"tag":"TypeVar","contents":"e2"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Class.purs","end":[31,1]}}]},{"moduleName":["Control","Comonad","Env","Trans"],"declarations":[{"children":[{"comments":null,"title":"EnvT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorEnvT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[36,1]}},{"comments":null,"title":"extendEnvT","info":{"declType":"instance","dependencies":[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[39,1]}},{"comments":null,"title":"comonadEnvT","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[42,1]}},{"comments":null,"title":"comonadTransEnvT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Trans"],"ComonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[43,30]}}],"comments":"The environment comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad with a _global environment_ of\ntype `e`.\n\nThe `ComonadEnv` type class describes the operations supported by this comonad.\n","title":"EnvT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["w",null],["a",null]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[22,1]}},{"children":[],"comments":"Change the underlying comonad and data type in an `EnvT` context.\n","title":"mapEnvT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w2"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[31,1]}},{"children":[],"comments":"Unwrap a value in the `EnvT` comonad.\n","title":"runEnvT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[23,1]}},{"children":[],"comments":"Change the environment type in an `EnvT` context.\n","title":"withEnvT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["e1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e2"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Env/Trans.purs","end":[27,1]}}]},{"moduleName":["Control","Comonad","Store"],"declarations":[{"children":[],"comments":"The `Store` comonad is a synonym for the `StoreT` comonad transformer, applied\nto the `Identity` monad.\n","title":"Store","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store.purs","end":[17,1]}},{"children":[],"comments":"Unwrap a value in the `Store` comonad.\n","title":"runStore","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store"],"Store"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store.purs","end":[18,1]}},{"children":[],"comments":"Create a value in context in the `Store` comonad.\n","title":"store","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store"],"Store"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store.purs","end":[22,1]}}]},{"moduleName":["Control","Comonad","Store","Class"],"declarations":[{"children":[{"comments":null,"title":"pos","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"s"}]},null]}},"sourceSpan":null},{"comments":null,"title":"comonadStoreStoreT","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Class"],"ComonadStore"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Class.purs","end":[54,43]}}],"comments":"The `ComonadStore` type class represents those monads which support local position information via\n`pos` and `peek`.\n\n- `pos` reads the current position.\n- `peek` reads the value at the specified position in the specified context.\n\nAn implementation is provided for `StoreT`.\n\nLaws:\n\n- `pos (extend _ x) = pos x`\n- `peek (pos x) x = extract x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadStore Number w) -> w Number -> w Number\nblur = extend \\r -> (peeks (\\n -> n - 1) r + peeks (\\n -> n + 1) r) / 2)\n```\n","title":"ComonadStore","fixity":null,"info":{"arguments":[["s",null],["w",null]],"declType":"typeClass","superclasses":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Class.purs","end":[37,1]}},{"children":[],"comments":"Extract a collection of values from positions which depend on the current position.\n","title":"experiment","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Control","Comonad","Store","Class"],"ComonadStore"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"s"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Class.purs","end":[38,1]}},{"children":[],"comments":"Extract a value from a position which depends on the current position.\n","title":"peeks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Control","Comonad","Store","Class"],"ComonadStore"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Class.purs","end":[42,1]}},{"children":[],"comments":"Reposition the focus at the specified position.\n","title":"seek","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Control","Comonad","Store","Class"],"ComonadStore"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]],[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Class.purs","end":[46,1]}},{"children":[],"comments":"Reposition the focus at the specified position, which depends on the current position.\n","title":"seeks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Control","Comonad","Store","Class"],"ComonadStore"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]],[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Class.purs","end":[50,1]}}]},{"moduleName":["Control","Comonad","Store","Trans"],"declarations":[{"children":[{"comments":null,"title":"StoreT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"TypeVar","contents":"s"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorStoreT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Trans.purs","end":[28,1]}},{"comments":null,"title":"extendStoreT","info":{"declType":"instance","dependencies":[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Trans.purs","end":[31,1]}},{"comments":null,"title":"comonadStoreT","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Trans.purs","end":[34,1]}},{"comments":null,"title":"comonadTransStoreT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Trans"],"ComonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","contents":"s"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Trans.purs","end":[35,48]}}],"comments":"The store comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad so that the value\ndepends on a position of type `s`.\n\nThe `ComonadStore` type class describes the operations supported by this comonad.\n","title":"StoreT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["w",null],["a",null]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Trans.purs","end":[22,1]}},{"children":[],"comments":"Unwrap a value in the `StoreT` comonad.\n","title":"runStoreT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Store/Trans.purs","end":[23,1]}}]},{"moduleName":["Control","Comonad","Traced"],"declarations":[{"children":[],"comments":"The `Traced` comonad is a synonym for the `TracedT` comonad transformer, applied\nto the `Identity` monad.\n","title":"Traced","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced.purs","end":[16,1]}},{"children":[],"comments":"Unwrap a value in the `Traced` comonad.\n","title":"runTraced","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced"],"Traced"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced.purs","end":[17,1]}},{"children":[],"comments":"Create a value in context in the `Traced` comonad.\n","title":"traced","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced"],"Traced"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced.purs","end":[21,1]}}]},{"moduleName":["Control","Comonad","Traced","Class"],"declarations":[{"children":[{"comments":null,"title":"track","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"comonadTracedTracedT","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Class"],"ComonadTraced"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Class.purs","end":[51,40]}}],"comments":"The `ComonadTraced` type class represents those monads which support relative (monoidal)\nposition information via `track`.\n\n- `track` extracts a value at the specified relative position.\n\nAn implementation is provided for `TracedT`.\n\nLaws:\n\n- `track mempty = extract`\n- `track s <<= track t x = track (s <> t) x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadTraced (Additive Number) w) -> w Number -> w Number\nblur = extend \\r -> (track (Additive (-1)) r + track (Additive 1) r) / 2\n```\n","title":"ComonadTraced","fixity":null,"info":{"arguments":[["t",null],["w",null]],"declType":"typeClass","superclasses":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Class.purs","end":[35,1]}},{"children":[],"comments":"Extracts a value at a relative position which depends on the current value.\n","title":"tracks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Comonad","Traced","Class"],"ComonadTraced"],[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Class.purs","end":[36,1]}}]},{"moduleName":["Control","Comonad","Traced","Trans"],"declarations":[{"children":[{"comments":null,"title":"TracedT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorTracedT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Trans.purs","end":[28,1]}},{"comments":null,"title":"extendTracedT","info":{"declType":"instance","dependencies":[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Trans.purs","end":[31,1]}},{"comments":null,"title":"comonadTracedT","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Trans.purs","end":[34,1]}},{"comments":null,"title":"comonadTransTracedT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Trans"],"ComonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Trans.purs","end":[35,44]}}],"comments":"The cowriter comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad so that the value\ndepends on a monoidal position of type `t`.\n\nThe `ComonadTraced` type class describes the operations supported by this comonad.\n","title":"TracedT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["t",null],["w",null],["a",null]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Trans.purs","end":[22,1]}},{"children":[],"comments":"Unwrap a value in the `TracedT` comonad.\n","title":"runTracedT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Traced/Trans.purs","end":[23,1]}}]},{"moduleName":["Control","Comonad","Trans"],"declarations":[{"children":[{"comments":null,"title":"lower","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":null}],"comments":"The `ComonadTrans` type class represents _comonad transformers_.\n\nA comonad transformer is a type constructor of kind `(* -> *) -> * -> *`, which\ntakes a `Comonad` as its first argument, and returns another `Comonad`.\n\nThis allows us to extend a comonad to provide additional context. By iterating this\nprocess, we create comonad transformer _stacks_, which contain all of the contextual information\nrequired for a particular computation.\n\nThe laws state that `lower` is a `Comonad` morphism.\n\nLaws:\n\n- `extract (lower a) = extract a`\n- `lower (extend w (f <<< lower)) = extend (lower w) f`\n","title":"ComonadTrans","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-transformers/src/Control/Comonad/Trans.purs","end":[25,50]}}]},{"moduleName":["Control","Extend"],"declarations":[{"children":[{"comments":null,"title":"extend","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"extendFn","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-control/src/Control/Extend.purs","end":[29,1]}}],"comments":"The `Extend` class defines the extension operator `(<<=)`\nwhich extends a local context-dependent computation to\na global computation.\n\n`Extend` is the dual of `Bind`, and `(<<=)` is the dual of\n`(>>=)`.\n\nLaws:\n\n- Associativity: `extend f <<< extend g = extend (f <<< extend g)`\n","title":"Extend","fixity":null,"info":{"arguments":[["w",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-control/src/Control/Extend.purs","end":[25,1]}},{"children":[],"comments":"Duplicate a comonadic context.\n\n`duplicate` is dual to `Control.Bind.join`.\n","title":"duplicate","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-control/src/Control/Extend.purs","end":[48,1]}},{"children":[],"comments":"An infix version of `extend`\n","title":"(<<=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-control/src/Control/Extend.purs","end":[30,1]}},{"children":[],"comments":"Backwards co-Kleisli composition.\n","title":"(=<=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-control/src/Control/Extend.purs","end":[42,1]}},{"children":[],"comments":"Forwards co-Kleisli composition.\n","title":"(=>=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-control/src/Control/Extend.purs","end":[38,1]}},{"children":[],"comments":"A version of `(<<=)` with its arguments flipped.\n","title":"(=>>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-control/src/Control/Extend.purs","end":[34,1]}}]},{"moduleName":["Control","Lazy"],"declarations":[{"children":[{"comments":null,"title":"defer","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeVar","contents":"l"}]}}]},{"tag":"TypeVar","contents":"l"}]}},"sourceSpan":null}],"comments":"The `Lazy` class represents types which allow evaluation of values\nto be _deferred_.\n\nUsually, this means that a type contains a function arrow which can\nbe used to delay evaluation.\n","title":"Lazy","fixity":null,"info":{"arguments":[["l",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-control/src/Control/Lazy.purs","end":[19,1]}},{"children":[],"comments":"`fix` defines a value as the fixed point of a function.\n\nThe `Lazy` instance allows us to generate the result lazily.\n","title":"fix","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["l",{"tag":"ConstrainedType","contents":[[[[["Control","Lazy"],"Lazy"],[{"tag":"TypeVar","contents":"l"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeVar","contents":"l"}]}}]},{"tag":"TypeVar","contents":"l"}]}]},null]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-control/src/Control/Lazy.purs","end":[20,1]}}]},{"moduleName":["Control","Monad"],"declarations":[{"children":[],"comments":"Perform a monadic action unless a condition is true.\n","title":"unless","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-control/src/Control/Monad.purs","end":[14,1]}},{"children":[],"comments":"Perform a monadic action when a condition is true.\n","title":"when","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[8,1],"name":"bower_components/purescript-control/src/Control/Monad.purs","end":[9,1]}}]},{"moduleName":["Control","Monad","Aff"],"declarations":[{"children":[{"comments":null,"title":"semigroupAff","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[153,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[156,1]}},{"comments":null,"title":"monoidAff","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[156,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[159,1]}},{"comments":null,"title":"functorAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[159,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[162,1]}},{"comments":null,"title":"applyAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[162,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[165,1]}},{"comments":null,"title":"applicativeAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[165,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[168,1]}},{"comments":null,"title":"bindAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[168,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[171,1]}},{"comments":null,"title":"monadAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[171,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[173,1]}},{"comments":null,"title":"monadEffAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[173,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[178,1]}},{"comments":"Allows users to catch and throw errors on the error channel of the\nasynchronous computation. See documentation in `purescript-transformers`.\n","title":"monadErrorAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[178,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[183,1]}},{"comments":null,"title":"altAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[183,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[186,1]}},{"comments":null,"title":"plusAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[186,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[189,1]}},{"comments":null,"title":"alternativeAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[189,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[191,1]}},{"comments":null,"title":"monadPlusAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[191,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[193,1]}},{"comments":null,"title":"monadRecAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[193,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[203,1]}},{"comments":null,"title":"monadContAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Class"],"MonadCont"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[203,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[206,1]}}],"comments":"An asynchronous computation with effects `e`. The computation either\nerrors or produces a value of type `a`.\n\nThis is moral equivalent of `ErrorT (ContT Unit (Eff e)) a`.\n","title":"Aff","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"Bang","contents":[]}},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]},"declType":"externData"},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[49,1]}},{"children":[{"comments":null,"title":"Canceler","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupCanceler","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[206,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[209,1]}},{"comments":null,"title":"monoidCanceler","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[209,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[212,1]}}],"comments":"A canceler is asynchronous function that can be used to attempt the\ncancelation of a computation. Returns a boolean flag indicating whether\nor not the cancellation was successful. Many computations may be composite,\nin such cases the flag indicates whether any part of the computation was\nsuccessfully canceled. The flag should not be used for communication.\n","title":"Canceler","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null]]},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[59,1]}},{"children":[],"comments":"A pure asynchronous computation, having no effects other than\nasynchronous computation.\n","title":"PureAff","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[56,1]}},{"children":[],"comments":"Ignores any errors.\n","title":"apathize","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[138,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[139,1]}},{"children":[],"comments":"Promotes any error to the value level of the asynchronous monad.\n","title":"attempt","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[134,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[135,1]}},{"children":[],"comments":"Unwraps the canceler function from the newtype that wraps it.\n","title":"cancel","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[60,1]}},{"children":[],"comments":"This function allows you to attach a custom canceler to an asynchronous\ncomputation. If the computation is canceled, then the custom canceler\nwill be run along side the computation's own canceler.\n","title":"cancelWith","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[66,1]}},{"children":[],"comments":"Compute `aff1`, followed by `aff2` regardless of whether `aff1` terminated successfully.\n","title":"finally","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[112,1]}},{"children":[],"comments":"Forks the specified asynchronous computation so subsequent computations\nwill not block on the result of the computation.\n\nReturns a canceler that can be used to attempt cancellation of the\nforked computation.\n","title":"forkAff","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"e"}]}}]}]},null]},null]}},"sourceSpan":{"start":[122,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[123,1]}},{"children":[],"comments":"Runs the asynchronous computation off the current execution context.\n","title":"later","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[103,1]}},{"children":[],"comments":"Runs the specified asynchronous computation later, by the specified\nnumber of milliseconds.\n","title":"later'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[108,1]}},{"children":[],"comments":"Converts the asynchronous computation into a synchronous one. All values\nare ignored, and if the computation produces an error, it is thrown.\n\nCatching exceptions by using `catchException` with the resulting Eff\ncomputation is not recommended, as exceptions may end up being thrown\nasynchronously, in which case they cannot be caught.\n\nIf you do need to handle exceptions, you can use `runAff` instead, or\nyou can handle the exception within the Aff computation, using\n`catchError` (or any of the other mechanisms).\n","title":"launchAff","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["err",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[79,1]}},{"children":[],"comments":"Lifts a synchronous computation and makes explicit any failure from exceptions.\n","title":"liftEff'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["err",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[142,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[143,1]}},{"children":[],"comments":"Creates an asynchronous effect from a function that accepts error and\nsuccess callbacks. This function can be used for asynchronous computations\nthat cannot be canceled.\n","title":"makeAff","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[93,1]}},{"children":[],"comments":"Creates an asynchronous effect from a function that accepts error and\nsuccess callbacks, and returns a canceler for the computation. This\nfunction can be used for asynchronous computations that can be canceled.\n","title":"makeAff'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"e"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[99,1]}},{"children":[],"comments":"A constant canceller that always returns false.\n","title":"nonCanceler","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Canceler"]},{"tag":"TypeVar","contents":"e"}]},null]}},"sourceSpan":{"start":[146,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[147,1]}},{"children":[],"comments":"Runs the asynchronous computation. You must supply an error callback and a\nsuccess callback.\n","title":"runAff","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff.purs","end":[87,1]}}]},{"moduleName":["Control","Monad","Aff","AVar"],"declarations":[{"children":[],"comments":null,"title":"AVAR","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[23,1]}},{"children":[],"comments":null,"title":"AVar","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[25,1]}},{"children":[],"comments":null,"title":"AffAVar","fixity":null,"info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[28,1]}},{"children":[],"comments":"Kills an asynchronous avar.\n","title":"killVar","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[53,1]}},{"children":[],"comments":"Makes a new asynchronous avar.\n","title":"makeVar","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[29,1]}},{"children":[],"comments":"Makes a avar and sets it to some value.\n","title":"makeVar'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[33,1]}},{"children":[],"comments":"Modifies the value at the head of the avar (will suspend until one is available).\n","title":"modifyVar","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[49,1]}},{"children":[],"comments":"Puts a new value into the asynchronous avar. If the avar has\nbeen killed, this will result in an error.\n","title":"putVar","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[45,1]}},{"children":[],"comments":"Takes the next value from the asynchronous avar.\n","title":"takeVar","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs","end":[40,1]}}]},{"moduleName":["Control","Monad","Aff","Class"],"declarations":[{"children":[{"comments":null,"title":"liftAff","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"monadAffAff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[25,1]}},{"comments":null,"title":"monadAffContT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[28,1]}},{"comments":null,"title":"monadAffExceptT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[31,1]}},{"comments":null,"title":"monadAffListT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[34,1]}},{"comments":null,"title":"monadAffMaybe","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[37,1]}},{"comments":null,"title":"monadAffReader","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[40,1]}},{"comments":null,"title":"monadAffRWS","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[43,1]}},{"comments":null,"title":"monadAffState","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[46,1]}},{"comments":null,"title":"monadAffWriter","info":{"declType":"instance","dependencies":[[[["Control","Monad","Aff","Class"],"MonadAff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[47,22]}}],"comments":null,"title":"MonadAff","fixity":null,"info":{"arguments":[["eff",null],["m",null]],"declType":"typeClass","superclasses":[[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs","end":[22,1]}}]},{"moduleName":["Control","Monad","Aff","Par"],"declarations":[{"children":[{"comments":null,"title":"Par","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupPar","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[29,1]}},{"comments":null,"title":"monoidPar","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[32,1]}},{"comments":null,"title":"functorPar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[35,1]}},{"comments":null,"title":"applyPar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[43,1]}},{"comments":null,"title":"applicativePar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[47,1]}},{"comments":"Returns the first value, or the first error if both error.\n","title":"altPar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[60,1]}},{"comments":null,"title":"plusPar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[60,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[63,1]}},{"comments":null,"title":"alternativePar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[63,46]}}],"comments":null,"title":"Par","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["a",null]]},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[23,1]}},{"children":[],"comments":"Extracts the `Aff` from the `Par`.\n","title":"runPar","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Par"],"Par"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AffAVar"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs","end":[24,1]}}]},{"moduleName":["Control","Monad","Aff","Unsafe"],"declarations":[{"children":[],"comments":null,"title":"unsafeInterleaveAff","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["e1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e2"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[8,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Unsafe.purs","end":[8,74]}},{"children":[],"comments":null,"title":"unsafeTrace","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[6,1],"name":"bower_components/purescript-aff/src/Control/Monad/Aff/Unsafe.purs","end":[8,1]}}]},{"moduleName":["Control","Monad","Cont","Class"],"declarations":[{"children":[{"comments":null,"title":"callCC","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":null}],"comments":"The `MonadCont` type class represents those monads which support the\n`callCC`, or _call-with-current-continuation_ operation.\n\nThis action makes the current continuation available to the caller.\n\nFor example:\n\n```purescript\ndelay :: forall eff. Number -> ContT Unit (Eff (timeout :: Timeout | eff)) Unit\ndelay n = callCC \\cont ->\n  lift $ setTimeout n (runContT (cont unit) (\\_ -> return unit))\n```\nAn implementation is provided for `ContT`, and for other monad transformers\ndefined in this library.\n","title":"MonadCont","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs","end":[25,50]}}]},{"moduleName":["Control","Monad","Cont","Trans"],"declarations":[{"children":[{"comments":null,"title":"ContT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"monadContContT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Class"],"MonadCont"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[37,1]}},{"comments":null,"title":"functorContT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[40,1]}},{"comments":null,"title":"applyContT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[43,1]}},{"comments":null,"title":"applicativeContT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[46,1]}},{"comments":null,"title":"bindContT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[49,1]}},{"comments":null,"title":"monadContT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[51,1]}},{"comments":null,"title":"monadTransContT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[54,1]}},{"comments":null,"title":"monadEffContT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[57,1]}},{"comments":null,"title":"monadReaderContT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Reader","Class"],"MonadReader"],[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[63,1]}},{"comments":null,"title":"monadStateContT","info":{"declType":"instance","dependencies":[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[64,20]}}],"comments":"The CPS monad transformer.\n\nThis monad transformer extends the base monad with the operation `callCC`.\n","title":"ContT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null],["m",null],["a",null]]},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[23,1]}},{"children":[],"comments":"Modify the underlying action in a `ContT` monad action.\n","title":"mapContT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[28,1]}},{"children":[],"comments":"Run a computation in the `ContT` monad, by providing a continuation.\n","title":"runContT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[24,1]}},{"children":[],"comments":"Modify the continuation in a `ContT` monad action\n","title":"withContT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs","end":[32,1]}}]},{"moduleName":["Control","Monad","Eff"],"declarations":[{"children":[{"comments":null,"title":"functorEff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[32,1]}},{"comments":null,"title":"applyEff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[35,1]}},{"comments":null,"title":"applicativeEff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[38,1]}},{"comments":null,"title":"bindEff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[41,1]}},{"comments":null,"title":"monadEff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[47,1]}}],"comments":"The `Eff` type constructor is used to represent _native_ effects.\n\nSee [Handling Native Effects with the Eff Monad](http://www.purescript.org/learn/eff/) for more details.\n\nThe first type parameter is a row of effects which represents the contexts in which a computation can be run, and the second type parameter is the return type.\n","title":"Eff","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"Bang","contents":[]}},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[17,1]}},{"children":[],"comments":"The `Pure` type synonym represents _pure_ computations, i.e. ones in which all effects have been handled.\n\nThe `runPure` function can be used to run pure computations and obtain their result.\n","title":"Pure","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"REmpty","contents":[]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[27,1]}},{"children":[],"comments":"Loop over a consecutive collection of numbers.\n\n`forE lo hi f` runs the computation returned by the function `f` for each of the inputs\nbetween `lo` (inclusive) and `hi` (exclusive).\n","title":"forE","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[64,1]}},{"children":[],"comments":"Loop over an array of values.\n\n`foreach xs f` runs the computation returned by the function `f` for each of the inputs `xs`.\n","title":"foreachE","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[64,78]}},{"children":[],"comments":"Run a pure computation and return its result.\n","title":"runPure","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Pure"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[29,1]}},{"children":[],"comments":"Loop until a condition becomes `true`.\n\n`untilE b` is an effectful computation which repeatedly runs the effectful computation `b`,\nuntil its return value is `true`.\n","title":"untilE","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[53,1]}},{"children":[],"comments":"Loop while a condition is `true`.\n\n`whileE b m` is effectful computation which runs the effectful computation `b`. If its result is\n`true`, it runs the effectful computation `m` and loops. If not, the computation ends.\n","title":"whileE","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff.purs","end":[59,1]}}]},{"moduleName":["Control","Monad","Eff","Class"],"declarations":[{"children":[{"comments":null,"title":"liftEff","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"monadEffEff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs","end":[24,13]}}],"comments":"The `MonadEff` class captures those monads which support native effects.\n\nInstances are provided for `Eff` itself, and the standard monad transformers.\n\n`liftEff` can be used in any appropriate monad transformer stack to lift an action\nof type `Eff eff a` into the monad.\n\nNote that `MonadEff` is parameterized by the row of effects, so type inference can be\ntricky. It is generally recommended to either work with a polymorphic row of effects,\nor a concrete, closed row of effects such as `(trace :: Trace)`.\n","title":"MonadEff","fixity":null,"info":{"arguments":[["eff",null],["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs","end":[23,1]}}]},{"moduleName":["Control","Monad","Eff","Console"],"declarations":[{"children":[],"comments":"The `CONSOLE` effect represents those computations which write to the console.\n","title":"CONSOLE","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[9,1],"name":"bower_components/purescript-console/src/Control/Monad/Eff/Console.purs","end":[12,1]}},{"children":[],"comments":"Write a value to the console, using its `Show` instance to produce a `String`.\n","title":"print","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-console/src/Control/Monad/Eff/Console.purs","end":[19,1]}}]},{"moduleName":["Control","Monad","Eff","Console","Unsafe"],"declarations":[{"children":[],"comments":"Write an error with an arbitrary value to the console.\n","title":"errorAny","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-console/src/Control/Monad/Eff/Console/Unsafe.purs","end":[13,78]}},{"children":[],"comments":"Write an arbitrary value to the console.\n","title":"logAny","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-console/src/Control/Monad/Eff/Console/Unsafe.purs","end":[13,1]}}]},{"moduleName":["Control","Monad","Eff","Exception"],"declarations":[{"children":[],"comments":"This effect is used to annotate code which possibly throws exceptions\n","title":"EXCEPTION","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[23,1]}},{"children":[{"comments":null,"title":"showError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[28,1]}}],"comments":"The type of JavaScript errors\n","title":"Error","fixity":null,"info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[25,1]}},{"children":[],"comments":"Catch an exception by providing an exception handler.\n\nThis handler removes the `EXCEPTION` effect.\n\nFor example:\n\n```purescript\nmain = catchException print do\n  trace \"Exceptions thrown in this block will be logged to the console\"\n```\n","title":"catchException","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["err",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[68,1]}},{"children":[],"comments":"Create a JavaScript error, specifying a message\n","title":"error","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[34,1]}},{"children":[],"comments":"Get the error message from a JavaScript error\n","title":"message","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[37,1]}},{"children":[],"comments":"Get the stack trace from a JavaScript error\n","title":"stack","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[38,1]}},{"children":[],"comments":"Throw an exception\n\nFor example:\n\n```purescript\nmain = do\n  x <- readNumber\n  when (x < 0) $ throwException $\n    error \"Expected a non-negative number\"\n```\n","title":"throwException","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["err",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs","end":[64,1]}}]},{"moduleName":["Control","Monad","Eff","Random"],"declarations":[{"children":[],"comments":"The `RANDOM` effect indicates that an Eff action may access or modify the\nJavaScript global random number generator, i.e. `Math.random()`.\n","title":"RANDOM","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-random/src/Control/Monad/Eff/Random.purs","end":[14,1]}},{"children":[],"comments":"Returns a random number between 0 (inclusive) and 1 (exclusive). This is\na direct wrapper around JavaScript's `Math.random()`.\n","title":"random","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},null]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-random/src/Control/Monad/Eff/Random.purs","end":[26,1]}},{"children":[],"comments":"Returns a random boolean value with an equal chance of being `true` or\n`false`.\n","title":"randomBool","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-random/src/Control/Monad/Eff/Random.purs","end":[48,1]}},{"children":[],"comments":"Takes a range specified by `low` (the first argument) and `high` (the\nsecond), and returns a random integer uniformly distributed in the closed\ninterval `[low, high]`. It is unspecified what happens if `low > high`,\nor if either of `low` or `high` is not an integer.\n\nFor example:\n``` purescript\nrandomInt 1 10 >>= Console.print\n```\nwill print a random integer between 1 and 10.\n","title":"randomInt","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-random/src/Control/Monad/Eff/Random.purs","end":[27,1]}},{"children":[],"comments":"Returns a random number between a minimum value (inclusive) and a maximum\nvalue (exclusive). It is unspecified what happens if `maximum < minimum`.\n\nFor example:\n``` purescript\nrandomRange 1.0 2.0 >>= Console.print\n```\nwill print a random number between 1 and 2.\n","title":"randomRange","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]},null]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-random/src/Control/Monad/Eff/Random.purs","end":[41,1]}}]},{"moduleName":["Control","Monad","Eff","Ref"],"declarations":[{"children":[],"comments":"The effect associated with the use of global mutable variables.\n","title":"REF","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs","end":[17,1]}},{"children":[],"comments":"A value of type `Ref a` represents a mutable reference\nwhich holds a value of type `a`.\n","title":"Ref","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs","end":[20,1]}},{"children":[],"comments":"Update the value of a mutable reference by applying a function\nto the current value.\n","title":"modifyRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs","end":[32,1]}},{"children":[],"comments":"Update the value of a mutable reference by applying a function\nto the current value.\n","title":"modifyRef'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["state",{"tag":"TypeVar","contents":"s"},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"b"},{"tag":"REmpty","contents":[]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs","end":[31,1]}},{"children":[],"comments":"Create a new mutable reference containing the specified value.\n","title":"newRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs","end":[23,1]}},{"children":[],"comments":"Read the current value of a mutable reference\n","title":"readRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs","end":[27,1]}},{"children":[],"comments":"Update the value of a mutable reference to the specified value.\n","title":"writeRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs","end":[35,75]}}]},{"moduleName":["Control","Monad","Eff","Ref","Unsafe"],"declarations":[{"children":[],"comments":"This handler function unsafely removes the `Ref` effect from an\neffectful action.\n\nThis function might be used when it is impossible to prove to the\ntypechecker that a particular mutable reference does not escape\nits scope.\n","title":"unsafeRunRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-refs/src/Control/Monad/Eff/Ref/Unsafe.purs","end":[16,1]}}]},{"moduleName":["Control","Monad","Eff","Unsafe"],"declarations":[{"children":[],"comments":"Change the type of an effectful computation, allowing it to be run in another context.\n\nNote: use of this function can result in arbitrary side-effects.\n","title":"unsafeInterleaveEff","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff2",{"tag":"ForAll","contents":["eff1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff2"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-eff/src/Control/Monad/Eff/Unsafe.purs","end":[14,1]}}]},{"moduleName":["Control","Monad","Error","Class"],"declarations":[{"children":[{"comments":null,"title":"throwError","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"catchError","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"monadErrorEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs","end":[51,1]}},{"comments":null,"title":"monadErrorMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs","end":[54,32]}}],"comments":"The `MonadError` type class represents those monads which support errors via\n`throwError` and `catchError`.\n\n- `throwError e` throws the error `e`\n- `catchError x f` calls the error handler `f` if an error is thrown during the\n  evaluation of `x`.\n\nAn implementation is provided for `ErrorT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- Left zero: `throwError e >>= f = throwError e`\n- Catch: `catchError (throwError e) f = f e`\n- Pure: `catchError (pure a) f = pure a`\n\n","title":"MonadError","fixity":null,"info":{"arguments":[["e",null],["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs","end":[34,1]}},{"children":[],"comments":"This function allows you to provide a predicate for selecting the\nexceptions that you're interested in, and handle only those exceptons.\nIf the inner computation throws an exception, and the predicate returns\nNothing, then the whole computation will still fail with that exception.\n","title":"catchJust","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","Error","Class"],"MonadError"],[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs","end":[39,1]}}]},{"moduleName":["Control","Monad","Except"],"declarations":[{"children":[],"comments":"A parametrizable exception monad; computations are either exceptions or\npure values. If an exception is thrown (see `throwError`), the computation\nterminates with that value. Exceptions may also be caught with `catchError`,\nallowing the computation to resume and exit successfully.\n\nThe type parameter `e` is the type of exceptions, and `a` is the type\nof successful results.\n\nA mechanism for trying many different computations until one succeeds is\nprovided via the `Alt` instance, specifically the `(<|>)` function.\nThe first computation to succeed is returned; if all fail, the exceptions\nare combined using their `Semigroup` instance. The `Plus` instance goes\nfurther and adds the possibility of a computation failing with an 'empty'\nexception; naturally, this requires the stronger constraint of a `Monoid`\ninstance for the exception type.\n","title":"Except","fixity":null,"info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except.purs","end":[37,1]}},{"children":[],"comments":"Construct a computation in the `Except` monad from an `Either` value.\n","title":"except","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except.purs","end":[38,1]}},{"children":[],"comments":"Transform the unwrapped computation using the given function.\n","title":"mapExcept","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except.purs","end":[46,1]}},{"children":[],"comments":"Run a computation in the `Except` monad. The inverse of `except`.\n","title":"runExcept","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except.purs","end":[42,1]}},{"children":[],"comments":"Transform any exceptions thrown by an `Except` computation using the given function.\n","title":"withExcept","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"e'"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except.purs","end":[50,1]}}]},{"moduleName":["Control","Monad","Except","Trans"],"declarations":[{"children":[{"comments":null,"title":"ExceptT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorExceptT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[53,1]}},{"comments":null,"title":"applyExceptT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[59,1]}},{"comments":null,"title":"applicativeExceptT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[62,1]}},{"comments":null,"title":"bindExceptT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[66,1]}},{"comments":null,"title":"monadExceptT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[68,1]}},{"comments":null,"title":"monadRecExceptT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[68,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[76,1]}},{"comments":null,"title":"altExceptT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"e"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[87,1]}},{"comments":null,"title":"plusExceptT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"e"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[87,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[90,1]}},{"comments":null,"title":"alternativeExceptT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"e"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[90,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[92,1]}},{"comments":null,"title":"monadPlusExceptT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"e"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[94,1]}},{"comments":null,"title":"monadTransExceptT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[99,1]}},{"comments":null,"title":"monadEffExceptT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[99,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[102,1]}},{"comments":null,"title":"monadContExceptT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Cont","Class"],"MonadCont"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Class"],"MonadCont"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[105,1]}},{"comments":null,"title":"monadErrorExceptT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[109,1]}},{"comments":null,"title":"monadReaderExceptT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Reader","Class"],"MonadReader"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[109,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[113,1]}},{"comments":null,"title":"monadStateExceptT","info":{"declType":"instance","dependencies":[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[116,1]}},{"comments":null,"title":"monadWriterExceptT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Writer","Class"],"MonadWriter"],[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Class"],"MonadWriter"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[116,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[127,1]}},{"comments":null,"title":"monadRWSExceptT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","RWS","Class"],"MonadRWS"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Class"],"MonadRWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[127,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[127,88]}}],"comments":"A monad transformer which adds exceptions to other monads, in the same way\nas `Except`. As before, `e` is the type of exceptions, and `a` is the type\nof successful results. The new type parameter `m` is the inner monad that\ncomputations run in.\n","title":"ExceptT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["m",null],["a",null]]},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[36,1]}},{"children":[],"comments":"Transform the unwrapped computation using the given function.\n","title":"mapExceptT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["n",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"n"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"n"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[48,1]}},{"children":[],"comments":"The inverse of `ExceptT`. Run a computation in the `ExceptT` monad.\n","title":"runExceptT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[37,1]}},{"children":[],"comments":"Transform any exceptions thrown by an `ExceptT` computation using the given function.\n","title":"withExceptT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"e'"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs","end":[41,1]}}]},{"moduleName":["Control","Monad","Free"],"declarations":[{"children":[{"comments":null,"title":"freeFunctor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[45,1]}},{"comments":null,"title":"freeBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[51,1]}},{"comments":null,"title":"freeApplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[54,1]}},{"comments":null,"title":"freeApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[57,1]}},{"comments":null,"title":"freeMonad","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[59,1]}},{"comments":null,"title":"freeMonadTrans","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[62,1]}},{"comments":null,"title":"freeMonadRec","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[66,1]}}],"comments":"The free monad for a type constructor `f`.\n\nImplemented in the spirit of [Relection without Remorse](http://okmij.org/ftp/Haskell/zseq.pdf),\nthe free monad is represented using a sequential data structure in\norder to overcome the quadratic complexity of left-associated binds\nand traversal through the free monad structure.\n","title":"Free","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[36,1]}},{"children":[],"comments":"Run a free monad with a natural transformation from the type constructor `f`\nto the tail-recursive monad `m`. See the `MonadRec` type class for more details.\n","title":"foldFree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NaturalTransformation"],"NaturalTransformation"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[106,1]}},{"children":[],"comments":"Embed computations in one `Free` monad as computations in the `Free` monad for\na coproduct type constructor.\n\nThis construction allows us to write computations which are polymorphic in the\nparticular `Free` monad we use, allowing us to extend the functionality of\nour monad later.\n","title":"injF","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Inject"],"Inject"],[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"g"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[100,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[101,1]}},{"children":[],"comments":"Lift an impure value described by the generating type constructor `f` into the free monad.\n","title":"liftF","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[67,1]}},{"children":[],"comments":"Lift an action described by the generating type constructor `f` into\n`Free g` using `Inject` to go from `f` to `g`.\n","title":"liftFI","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Inject"],"Inject"],[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"g"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[78,1]}},{"children":[],"comments":"Use a natural transformation to change the generating type constructor of a free monad.\n","title":"mapF","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NaturalTransformation"],"NaturalTransformation"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[92,1]}},{"children":[],"comments":"Run a free monad with a function that unwraps a single layer of the functor `f` at a time.\n","title":"runFree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[116,1]}},{"children":[],"comments":"Run a free monad with a function mapping a functor `f` to a tail-recursive monad `m`.\nSee the `MonadRec` type class for more details.\n","title":"runFreeM","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]],[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[120,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[121,1]}},{"children":[],"comments":"Suspend a value given the applicative functor `f` into the free monad.\n","title":"suspendF","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-free/src/Control/Monad/Free.purs","end":[82,1]}}]},{"moduleName":["Control","Monad","List","Trans"],"declarations":[{"children":[{"comments":null,"title":"semigroupListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[240,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[243,1]}},{"comments":null,"title":"monoidListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[243,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[246,1]}},{"comments":null,"title":"functorListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[246,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[252,1]}},{"comments":null,"title":"unfoldableListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable"],"Unfoldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[252,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[257,1]}},{"comments":null,"title":"applyListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[257,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[260,1]}},{"comments":null,"title":"applicativeListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[260,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[263,1]}},{"comments":null,"title":"bindListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[263,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[271,1]}},{"comments":null,"title":"monadListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[271,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[273,1]}},{"comments":null,"title":"monadTransListT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]}]}},"sourceSpan":{"start":[273,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[276,1]}},{"comments":null,"title":"altListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[276,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[279,1]}},{"comments":null,"title":"plusListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[279,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[282,1]}},{"comments":null,"title":"alternativeListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[282,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[284,1]}},{"comments":null,"title":"monadPlusListT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[284,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[286,1]}},{"comments":null,"title":"monadEffListT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[286,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[287,22]}}],"comments":"The list monad transformer.\n\nThis monad transformer extends the base monad with _non-determinism_.\nThat is, the transformed monad supports the same effects as the base monad\nbut with multiple return values.\n","title":"ListT","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[62,1]}},{"children":[],"comments":"Lift a computation from the base functor.\n","title":"fromEffect","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[103,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[104,1]}},{"children":[],"comments":"Prepend an element to a list.\n","title":"prepend","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[85,1]}},{"children":[],"comments":"Prepend an element to a lazily-evaluated list.\n","title":"prepend'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[81,1]}},{"children":[],"comments":"Unfold a list using an effectful generator function.\n","title":"unfold","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[116,1]}},{"children":[],"comments":"Lift a computation from the base monad.\n","title":"wrapEffect","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[108,1]}},{"children":[],"comments":"Defer evaluation of a list.\n","title":"wrapLazy","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[112,1]}},{"children":[],"comments":"Zip the elements of two lists, combining elements at the same position from each list.\n","title":"zipWith'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[223,1],"name":"bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs","end":[224,1]}}]},{"moduleName":["Control","Monad","Maybe","Trans"],"declarations":[{"children":[{"comments":null,"title":"MaybeT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[46,1]}},{"comments":null,"title":"applyMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[49,1]}},{"comments":null,"title":"applicativeMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[52,1]}},{"comments":null,"title":"bindMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[59,1]}},{"comments":null,"title":"monadMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[61,1]}},{"comments":null,"title":"monadTransMaybeT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[64,1]}},{"comments":null,"title":"altMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[71,1]}},{"comments":null,"title":"plusMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[74,1]}},{"comments":null,"title":"alternativeMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[74,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[76,1]}},{"comments":null,"title":"monadPlusMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[78,1]}},{"comments":null,"title":"monadRecMaybeT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[78,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[86,1]}},{"comments":null,"title":"monadEffMaybe","info":{"declType":"instance","dependencies":[[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[89,1]}},{"comments":null,"title":"monadContMaybeT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Cont","Class"],"MonadCont"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Class"],"MonadCont"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[92,1]}},{"comments":null,"title":"monadErrorMaybeT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Error","Class"],"MonadError"],[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[96,1]}},{"comments":null,"title":"monadReaderMaybeT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Reader","Class"],"MonadReader"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[96,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[100,1]}},{"comments":null,"title":"monadStateMaybeT","info":{"declType":"instance","dependencies":[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[100,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[103,1]}},{"comments":null,"title":"monadWriterMaybeT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Monad","Writer","Class"],"MonadWriter"],[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Class"],"MonadWriter"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[103,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[114,1]}},{"comments":null,"title":"monadRWSMaybeT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","RWS","Class"],"MonadRWS"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Class"],"MonadRWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[114,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[114,84]}}],"comments":"The `MaybeT` monad transformer.\n\nThis monad transformer extends the base monad, supporting failure and alternation via\nthe `MonadPlus` type class.\n","title":"MaybeT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["m",null],["a",null]]},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[36,1]}},{"children":[],"comments":"Change the result type of a `MaybeT` monad action.\n","title":"mapMaybeT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[41,1]}},{"children":[],"comments":"Run a computation in the `MaybeT` monad.\n","title":"runMaybeT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Maybe","Trans"],"MaybeT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs","end":[37,1]}}]},{"moduleName":["Control","Monad","RWS"],"declarations":[{"children":[],"comments":"The `RWS` monad is a synonym for the `RWST` monad transformer, applied\nto the `Identity` monad.\n","title":"RWS","fixity":null,"info":{"arguments":[["r",null],["w",null],["s",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS.purs","end":[28,1]}},{"children":[],"comments":"Run a computation in the `RWS` monad, discarding the final state\n","title":"evalRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `RWS` monad, discarding the result\n","title":"execRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS.purs","end":[41,1]}},{"children":[],"comments":"Change the types of the result and accumulator in a `RWS` action\n","title":"mapRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a2",{"tag":"ForAll","contents":["a1",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a1"}]},{"tag":"TypeVar","contents":"w1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a2"}]},{"tag":"TypeVar","contents":"w2"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a2"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS.purs","end":[45,1]}},{"children":[],"comments":"Run a computation in the `RWS` monad.\n","title":"runRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS.purs","end":[33,1]}},{"children":[],"comments":"Create an action in the `RWS` monad from a function which uses the\nglobal context and state explicitly.\n","title":"rws","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS.purs","end":[29,1]}},{"children":[],"comments":"Change the type of the context in a `RWS` action\n","title":"withRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"s"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS.purs","end":[49,1]}}]},{"moduleName":["Control","Monad","RWS","Class"],"declarations":[{"children":[],"comments":"`MonadRWS r w s` combines the operations and laws of the `MonadReader r`,\n`MonadWriter w` and `MonadState s` type classes.\n\nAn implementation is provided for `RWST`, and for other monad transformers\ndefined in this library.\n","title":"MonadRWS","fixity":null,"info":{"arguments":[["r",null],["w",null],["s",null],["m",null]],"declType":"typeClass","superclasses":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Reader","Class"],"MonadReader"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]],[[["Control","Monad","Writer","Class"],"MonadWriter"],[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]],[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Class.purs","end":[25,86]}}]},{"moduleName":["Control","Monad","RWS","Trans"],"declarations":[{"children":[{"comments":null,"title":"RWSResult","info":{"arguments":[{"tag":"TypeVar","contents":"state"},{"tag":"TypeVar","contents":"result"},{"tag":"TypeVar","contents":"writer"}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"RWSResult","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["state",null],["result",null],["writer",null]]},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[29,1]}},{"children":[{"comments":null,"title":"RWST","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}}]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[54,1]}},{"comments":null,"title":"applyRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[60,1]}},{"comments":null,"title":"bindRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[60,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[66,1]}},{"comments":null,"title":"applicativeRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[69,1]}},{"comments":null,"title":"monadRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[71,1]}},{"comments":null,"title":"monadTransRWST","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]}}]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[74,1]}},{"comments":null,"title":"monadEffRWS","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[74,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[77,1]}},{"comments":null,"title":"monadReaderRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[81,1]}},{"comments":null,"title":"monadStateRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[84,1]}},{"comments":null,"title":"monadWriterRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Class"],"MonadWriter"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[89,1]}},{"comments":null,"title":"monadRWSRWST","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Class"],"MonadRWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[91,1]}},{"comments":null,"title":"monadErrorRWST","info":{"declType":"instance","dependencies":[[[["Control","Monad","Error","Class"],"MonadError"],[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[95,1]}},{"comments":null,"title":"monadRecRWST","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[95,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[102,75]}}],"comments":"The reader-writer-state monad transformer, which combines the operations\nof `ReaderT`, `WriterT` and `StateT` into a single monad transformer.\n","title":"RWST","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null],["w",null],["s",null],["m",null],["a",null]]},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[32,1]}},{"children":[],"comments":"Run a computation in the `RWST` monad, discarding the final state.\n","title":"evalRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `RWST` monad, discarding the result.\n","title":"execRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[41,1]}},{"children":[],"comments":"Change the result and accumulator types in a `RWST` monad action.\n","title":"mapRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a2",{"tag":"ForAll","contents":["a1",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a1"}]},{"tag":"TypeVar","contents":"w1"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a2"}]},{"tag":"TypeVar","contents":"w2"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"a2"}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[45,1]}},{"children":[],"comments":"Run a computation in the `RWST` monad.\n","title":"runRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWSResult"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[33,1]}},{"children":[],"comments":"Change the context type in a `RWST` monad action.\n","title":"withRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"s"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs","end":[49,1]}}]},{"moduleName":["Control","Monad","Reader"],"declarations":[{"children":[],"comments":"The `Reader` monad is a synonym for the `ReaderT` monad transformer, applied\nto the `Identity` monad.\n","title":"Reader","fixity":null,"info":{"arguments":[["r",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader.purs","end":[23,1]}},{"children":[],"comments":"Change the type of the result in a `Reader` monad action.\n","title":"mapReader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader"],"Reader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader"],"Reader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader.purs","end":[32,1]}},{"children":[],"comments":"Run a computation in the `Reader` monad.\n","title":"runReader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader"],"Reader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader.purs","end":[24,1]}},{"children":[],"comments":"Change the type of the context in a `Reader` monad action.\n","title":"withReader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"r1"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader"],"Reader"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader"],"Reader"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader.purs","end":[28,1]}}]},{"moduleName":["Control","Monad","Reader","Class"],"declarations":[{"children":[{"comments":null,"title":"monadReaderFun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs","end":[32,15]}}],"comments":"The `MonadReader` type class represents those monads which support a global context via\n`ask` and `local`.\n\n- `ask` reads the current context.\n- `local f x` changes the value of the local context during the execution of the action `x`.\n\nAn implementation is provided for `ReaderT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- `do { ask ; ask } = ask`\n- `local f ask = f <$> ask`\n- `local _ (pure a) = pure a`\n- `local f (do { a <- x ; y }) = do { a <- local f x ; local f y }`\n","title":"MonadReader","fixity":null,"info":{"arguments":[["r",null],["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs","end":[27,1]}},{"children":[],"comments":"Read a value which depends on the global context in any `MonadReader`.\n","title":"reader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","Reader","Class"],"MonadReader"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs","end":[28,1]}}]},{"moduleName":["Control","Monad","Reader","Trans"],"declarations":[{"children":[{"comments":null,"title":"ReaderT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorReaderT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[50,1]}},{"comments":null,"title":"applyReaderT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[53,1]}},{"comments":null,"title":"applicativeReaderT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[56,1]}},{"comments":null,"title":"altReaderT","info":{"declType":"instance","dependencies":[[[["Control","Alt"],"Alt"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[59,1]}},{"comments":null,"title":"plusReaderT","info":{"declType":"instance","dependencies":[[[["Control","Plus"],"Plus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[62,1]}},{"comments":null,"title":"alternativeReaderT","info":{"declType":"instance","dependencies":[[[["Control","Alternative"],"Alternative"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[64,1]}},{"comments":null,"title":"bindReaderT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[69,1]}},{"comments":null,"title":"monadReaderT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[71,1]}},{"comments":null,"title":"monadPlusReaderT","info":{"declType":"instance","dependencies":[[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[73,1]}},{"comments":null,"title":"monadTransReaderT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[76,1]}},{"comments":null,"title":"monadEffReader","info":{"declType":"instance","dependencies":[[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[79,1]}},{"comments":null,"title":"monadContReaderT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Cont","Class"],"MonadCont"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Class"],"MonadCont"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[79,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[82,1]}},{"comments":null,"title":"monadErrorReaderT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Error","Class"],"MonadError"],[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[82,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[86,1]}},{"comments":null,"title":"monadReaderReaderT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[90,1]}},{"comments":null,"title":"monadStateReaderT","info":{"declType":"instance","dependencies":[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[90,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[93,1]}},{"comments":null,"title":"monadWriterReaderT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Monad","Writer","Class"],"MonadWriter"],[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Class"],"MonadWriter"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[93,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[98,1]}},{"comments":null,"title":"distributiveReaderT","info":{"declType":"instance","dependencies":[[[["Data","Distributive"],"Distributive"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Distributive"],"Distributive"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[102,1]}},{"comments":null,"title":"monadRecReaderT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[107,34]}}],"comments":"The reader monad transformer.\n\nThis monad transformer extends the base monad transformer with a _global context_ of\ntype `r`.\n\nThe `MonadReader` type class describes the operations supported by this monad.\n","title":"ReaderT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null],["m",null],["a",null]]},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[36,1]}},{"children":[],"comments":"Change the type of the result in a `ReaderT` monad action.\n","title":"mapReaderT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[41,1]}},{"children":[],"comments":"Run a computation in the `ReaderT` monad.\n","title":"runReaderT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[37,1]}},{"children":[],"comments":"Change the type of the context in a `ReaderT` monad action.\n","title":"withReaderT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"r1"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs","end":[45,1]}}]},{"moduleName":["Control","Monad","Rec","Class"],"declarations":[{"children":[{"comments":null,"title":"tailRecM","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"monadRecIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[72,1]}},{"comments":null,"title":"monadRecEff","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[72,1],"name":"bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[75,1]}}],"comments":"This type class captures those monads which support tail recursion in constant stack space.\n\nThe `tailRecM` function takes a step function, and applies that step function recursively\nuntil a return value of type `b` is found.\n\nInstances are provided for standard monad transformers.\n\nFor example:\n\n```purescript\nloopWriter :: Number -> WriterT Sum (Eff (trace :: Trace)) Unit\nloopWriter n = tailRecM go n\n  where\n  go 0 = do\n    lift $ trace \"Done!\"\n    return (Right unit)\n  go n = do\n    tell $ Sum n\n    return (Left (n - 1))\n```\n","title":"MonadRec","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[44,1]}},{"children":[],"comments":"`forever` runs an action indefinitely, using the `MonadRec` instance to\nensure constant stack usage.\n\nFor example:\n\n```purescript\nmain = forever $ trace \"Hello, World!\"\n```\n","title":"forever","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[100,1]}},{"children":[],"comments":"Create a pure tail-recursive function of one argument\n\nFor example:\n\n```purescript\npow :: Number -> Number -> Number\npow n p = tailRec go { accum: 1, power: p }\n  where\n  go :: _ -> Either _ Number\n  go { accum: acc, power: 0 } = Right acc\n  go { accum: acc, power: p } = Left { accum: acc * n, power: p - 1 }\n```\n","title":"tailRec","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[64,1]}},{"children":[],"comments":"Create a tail-recursive function of two arguments which uses constant stack space.\n","title":"tailRecM2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["a",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["b",{"tag":"TypeVar","contents":"b"},{"tag":"REmpty","contents":[]}]}]}]}]},{"tag":"TypeVar","contents":"c"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[45,1]}},{"children":[],"comments":"Create a tail-recursive function of three arguments which uses constant stack space.\n","title":"tailRecM3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["a",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["b",{"tag":"TypeVar","contents":"b"},{"tag":"RCons","contents":["c",{"tag":"TypeVar","contents":"c"},{"tag":"REmpty","contents":[]}]}]}]}]}]},{"tag":"TypeVar","contents":"d"}]}}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"d"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[49,1]}}]},{"moduleName":["Control","Monad","ST"],"declarations":[{"children":[],"comments":"The `ST` effect represents _local mutation_, i.e. mutation which does not \"escape\" into the surrounding computation.\n\nAn `ST` computation is parameterized by a phantom type which is used to restrict the set of reference cells it is allowed to access.\n\nThe `runST` function can be used to handle the `ST` effect.\n","title":"ST","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Bang","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[15,1]}},{"children":[],"comments":"The type `STRef s a` represents a mutable reference holding a value of type `a`, which can be used with the `ST s` effect.\n","title":"STRef","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[18,1]}},{"children":[],"comments":"Modify the value of a mutable reference by applying a function to the current value.\n","title":"modifySTRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"STRef"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[27,1]}},{"children":[],"comments":"Create a new mutable reference.\n","title":"newSTRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"STRef"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[21,1]}},{"children":[],"comments":"A convenience function which combines `runST` with `runPure`, which can be used when the only required effect is `ST`.\n\nNote: since this function has a rank-2 type, it may cause problems to apply this function using the `$` operator. The recommended approach\nis to use parentheses instead.\n","title":"pureST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"REmpty","contents":[]}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[42,1]}},{"children":[],"comments":"Read the current value of a mutable reference.\n","title":"readSTRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"STRef"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[24,1]}},{"children":[],"comments":"Run an `ST` computation.\n\nNote: the type of `runST` uses a rank-2 type to constrain the phantom type `s`, such that the computation must not leak any mutable references\nto the surrounding computation.\n\nIt may cause problems to apply this function using the `$` operator. The recommended approach is to use parentheses instead.\n","title":"runST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[41,1]}},{"children":[],"comments":"Set the value of a mutable reference.\n","title":"writeSTRef","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"STRef"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-st/src/Control/Monad/ST.purs","end":[35,1]}}]},{"moduleName":["Control","Monad","State"],"declarations":[{"children":[],"comments":"The `State` monad is a synonym for the `StateT` monad transformer, applied\nto the `Identity` monad.\n","title":"State","fixity":null,"info":{"arguments":[["s",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State.purs","end":[26,1]}},{"children":[],"comments":"Run a computation in the `State` monad, discarding the final state\n","title":"evalState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State.purs","end":[31,1]}},{"children":[],"comments":"Run a computation in the `State` monad, discarding the result\n","title":"execState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State.purs","end":[35,1]}},{"children":[],"comments":"Change the type of the result in a `State` action\n","title":"mapState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State.purs","end":[39,1]}},{"children":[],"comments":"Run a computation in the `State` monad\n","title":"runState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State.purs","end":[27,1]}},{"children":[],"comments":"Modify the state in a `State` action\n","title":"withState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State.purs","end":[43,1]}}]},{"moduleName":["Control","Monad","State","Class"],"declarations":[{"children":[{"comments":null,"title":"state","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null}],"comments":"The `MonadState s` type class represents those monads which support a single piece of mutable\nstate of type `s`.\n\n- `state f` updates the state using the function `f`.\n\nAn implementation is provided for `StateT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- `do { get ; get } = get`\n- `do { put x ; put y } = put y`\n- `do { put x ; get } = put x $> x`\n- `do { s <- get ; put s } = pure unit`\n\n","title":"MonadState","fixity":null,"info":{"arguments":[["s",null],["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Class.purs","end":[28,1]}},{"children":[],"comments":"Get the current state.\n","title":"get","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Class.purs","end":[29,1]}},{"children":[],"comments":"Get a value which depends on the current state.\n","title":"gets","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Class.purs","end":[33,1]}},{"children":[],"comments":"Modify the state by applying a function to the current state.\n","title":"modify","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Class.purs","end":[41,1]}},{"children":[],"comments":"Set the state.\n","title":"put","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Class.purs","end":[37,1]}}]},{"moduleName":["Control","Monad","State","Trans"],"declarations":[{"children":[{"comments":null,"title":"StateT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[59,1]}},{"comments":null,"title":"applyStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[62,1]}},{"comments":null,"title":"applicativeStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[65,1]}},{"comments":null,"title":"altStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Alt"],"Alt"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[68,1]}},{"comments":null,"title":"plusStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Plus"],"Plus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[68,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[71,1]}},{"comments":null,"title":"alternativeStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Alternative"],"Alternative"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[73,1]}},{"comments":null,"title":"bindStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[78,1]}},{"comments":null,"title":"monadStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[78,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[80,1]}},{"comments":null,"title":"monadRecStateT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[80,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[89,1]}},{"comments":null,"title":"monadPlusStateT","info":{"declType":"instance","dependencies":[[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[91,1]}},{"comments":null,"title":"monadTransStateT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]}}]}},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[96,1]}},{"comments":null,"title":"lazyStateT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[96,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[99,1]}},{"comments":null,"title":"monadEffState","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[99,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[102,1]}},{"comments":null,"title":"monadContStateT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Cont","Class"],"MonadCont"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Class"],"MonadCont"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[105,1]}},{"comments":null,"title":"monadErrorStateT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Error","Class"],"MonadError"],[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[109,1]}},{"comments":null,"title":"monadReaderStateT","info":{"declType":"instance","dependencies":[[[["Control","Monad","Reader","Class"],"MonadReader"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[109,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[113,1]}},{"comments":null,"title":"monadStateStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[116,1]}},{"comments":null,"title":"monadWriterStateT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Monad","Writer","Class"],"MonadWriter"],[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Class"],"MonadWriter"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[116,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[123,33]}}],"comments":"The state monad transformer.\n\nThis monad transformer extends the base monad with the operations `get`\nand `put` which can be used to model a single piece of mutable state.\n\nThe `MonadState` type class describes the operations supported by this monad.\n","title":"StateT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["m",null],["a",null]]},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `StateT` monad, discarding the final state.\n","title":"evalStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[42,1]}},{"children":[],"comments":"Run a computation in the `StateT` monad discarding the result.\n","title":"execStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[46,1]}},{"children":[],"comments":"Change the result type in a `StateT` monad action.\n","title":"mapStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[50,1]}},{"children":[],"comments":"Run a computation in the `StateT` monad.\n","title":"runStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[38,1]}},{"children":[],"comments":"Modify the final state in a `StateT` monad action.\n","title":"withStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs","end":[54,1]}}]},{"moduleName":["Control","Monad","Trampoline"],"declarations":[{"children":[],"comments":"The `Trampoline` monad\n\nA computation of type `Trampoline a` consists of zero or more lazy\nsuspensions before a value is returned.\n","title":"Trampoline","fixity":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-free/src/Control/Monad/Trampoline.purs","end":[27,1]}},{"children":[],"comments":"Use the `Trampoline` monad to represent the delayed evaluation of a value.\n","title":"delay","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-free/src/Control/Monad/Trampoline.purs","end":[40,1]}},{"children":[],"comments":"Use the `Trampoline` monad to represent a `Lazy` value.\n","title":"delay'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-free/src/Control/Monad/Trampoline.purs","end":[36,1]}},{"children":[],"comments":"Return a value immediately\n","title":"done","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-free/src/Control/Monad/Trampoline.purs","end":[28,1]}},{"children":[],"comments":"Run a computation in the `Trampoline` monad.\n","title":"runTrampoline","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-free/src/Control/Monad/Trampoline.purs","end":[44,1]}},{"children":[],"comments":"Suspend a computation by one step.\n","title":"suspend","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-free/src/Control/Monad/Trampoline.purs","end":[32,1]}}]},{"moduleName":["Control","Monad","Trans"],"declarations":[{"children":[{"comments":null,"title":"lift","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":null}],"comments":"The `MonadTrans` type class represents _monad transformers_.\n\nA monad transformer is a type constructor of kind `(* -> *) -> * -> *`, which\ntakes a `Monad` as its first argument, and returns another `Monad`.\n\nThis allows us to add additional effects to an existing monad. By iterating this\nprocess, we create monad transformer _stacks_, which contain all of the effects\nrequired for a particular computation.\n\nThe laws state that `lift` is a `Monad` morphism.\n\nLaws:\n\n- `lift (pure a) = pure a`\n- `lift (do { x <- m ; y }) = do { x <- lift m ; lift y }`\n","title":"MonadTrans","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Trans.purs","end":[23,47]}}]},{"moduleName":["Control","Monad","Writer"],"declarations":[{"children":[],"comments":"The `Writer` monad is a synonym for the `WriterT` monad transformer, applied\nto the `Identity` monad.\n","title":"Writer","fixity":null,"info":{"arguments":[["w",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer.purs","end":[24,1]}},{"children":[],"comments":"Run a computation in the `Writer` monad, discarding the result\n","title":"execWriter","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"w"}]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer.purs","end":[29,1]}},{"children":[],"comments":"Change the result and accumulator types in a `Writer` monad action\n","title":"mapWriter","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"w2"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer.purs","end":[33,1]}},{"children":[],"comments":"Run a computation in the `Writer` monad\n","title":"runWriter","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer.purs","end":[25,1]}}]},{"moduleName":["Control","Monad","Writer","Class"],"declarations":[{"children":[{"comments":null,"title":"writer","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"pass","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"w"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null}],"comments":"The `MonadWriter w` type class represents those monads which support a monoidal accumulator\nof type `w`.\n\n- `writer` appends a value to the accumulator.\n- `listen` modifies the result to include the changes to the accumulator.\n- `pass` applies the returned function to the accumulator.\n\nAn implementation is provided for `WriterT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- `writer a mempty = pure a`\n- `do { tell x ; tell y } = tell (x <> y)`\n- `listen (pure a) = pure (Tuple a mempty)`\n- `listen (writer a x) = tell x $> Tuple a x`\n\n","title":"MonadWriter","fixity":null,"info":{"arguments":[["w",null],["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs","end":[33,1]}},{"children":[],"comments":"Append a value to the accumulator.\n","title":"tell","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Monad","Writer","Class"],"MonadWriter"],[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs","end":[34,1]}}]},{"moduleName":["Control","Monad","Writer","Trans"],"declarations":[{"children":[{"comments":null,"title":"WriterT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorWriterT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[51,1]}},{"comments":null,"title":"applyWriterT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[56,1]}},{"comments":null,"title":"applicativeWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[59,1]}},{"comments":null,"title":"altWriterT","info":{"declType":"instance","dependencies":[[[["Control","Alt"],"Alt"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[62,1]}},{"comments":null,"title":"plusWriterT","info":{"declType":"instance","dependencies":[[[["Control","Plus"],"Plus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[65,1]}},{"comments":null,"title":"alternativeWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Alternative"],"Alternative"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[67,1]}},{"comments":null,"title":"bindWriterT","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[73,1]}},{"comments":null,"title":"monadWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[75,1]}},{"comments":null,"title":"monadRecWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Rec","Class"],"MonadRec"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[75,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[84,1]}},{"comments":null,"title":"monadPlusWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[86,1]}},{"comments":null,"title":"monadTransWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[91,1]}},{"comments":null,"title":"monadEffWriter","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Eff","Class"],"MonadEff"],[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[94,1]}},{"comments":null,"title":"monadContWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Cont","Class"],"MonadCont"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Class"],"MonadCont"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[97,1]}},{"comments":null,"title":"monadErrorWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Error","Class"],"MonadError"],[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[97,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[101,1]}},{"comments":null,"title":"monadReaderWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","Reader","Class"],"MonadReader"],[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[101,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[105,1]}},{"comments":null,"title":"monadStateWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Control","Monad","State","Class"],"MonadState"],[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[108,1]}},{"comments":null,"title":"monadWriterWriterT","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"w"}]],[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Class"],"MonadWriter"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[108,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[115,26]}}],"comments":"The writer monad transformer.\n\nThis monad transformer extends the base monad with a monoidal accumulator of\ntype `w`.\n\nThe `MonadWriter` type class describes the operations supported by this monad.\n","title":"WriterT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["w",null],["m",null],["a",null]]},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `WriterT` monad, discarding the result.\n","title":"execWriterT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"w"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[42,1]}},{"children":[],"comments":"Change the accumulator and base monad types in a `WriterT` monad action.\n","title":"mapWriterT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w1"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"w2"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[46,1]}},{"children":[],"comments":"Run a computation in the `WriterT` monad.\n","title":"runWriterT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs","end":[38,1]}}]},{"moduleName":["Control","MonadPlus"],"declarations":[{"children":[{"comments":null,"title":"monadPlusArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-control/src/Control/MonadPlus.purs","end":[39,38]}}],"comments":"The `MonadPlus` type class has no members of its own; it just specifies\nthat the type has both `Monad` and `Alternative` instances.\n\nTypes which have `MonadPlus` instances should also satisfy the following\nlaws:\n\n- Distributivity: `(x <|> y) >>= f == (x >>= f) <|> (y >>= f)`\n- Annihilation: `empty >>= f = empty`\n","title":"MonadPlus","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]],[[["Control","Alternative"],"Alternative"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-control/src/Control/MonadPlus.purs","end":[35,1]}},{"children":[],"comments":"Fail using `Plus` if a condition does not hold, or\nsucceed using `Monad` if it does.\n\nFor example:\n\n```purescript\nimport Data.Array\n\nfactors :: Number -> Array Number\nfactors n = do\n  a <- 1 .. n\n  b <- 1 .. a\n  guard $ a * b == n\n  return a\n```\n","title":"guard","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Control","MonadPlus"],"MonadPlus"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-control/src/Control/MonadPlus.purs","end":[36,1]}}]},{"moduleName":["Control","Parallel"],"declarations":[{"children":[{"comments":null,"title":"functorParallel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[114,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[117,1]}},{"comments":null,"title":"applyParallel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[117,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[120,1]}},{"comments":null,"title":"applicativeParallel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[120,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[123,1]}},{"comments":null,"title":"altParallel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[123,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[126,1]}},{"comments":null,"title":"plusParallel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[126,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[129,1]}},{"comments":null,"title":"alternativeParallel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[129,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[129,58]}}],"comments":"The `Parallel` type constructor wraps the `ContT` type constructor\nand provides type class instances for parallel composition of\ncomputations:\n\n- The definition of `(<*>)` from `Apply` runs two computations in parallel and applies\n  a function when both complete.\n- The definition of `(<|>)` from the `Alt` type class runs two computations in parallel\n  and returns the result of the computation which completes first.\n\nParallel sections of code can be embedded in sequential code by using\nthe `inParallel` and `runParallel` functions:\n\n```purescript\nloadModel :: ContT Unit (Eff (ajax :: AJAX)) Model\nloadModel = do\n  token <- authenticate\n  runParallel $\n    Model <$> inParallel (get \"/products/popular/\" token)\n          <*> inParallel (get \"/categories/all\" token)\n```\n","title":"Parallel","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["eff",null],["a",null]]},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[94,1]}},{"children":[],"comments":"Create a computation to be run in parallel from a computation in the\ncontinuation monad.\n\n","title":"inParallel","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[95,1]}},{"children":[],"comments":"Run two asynchronous computations in parallel, using the specified\nfunction to combine their results once both have completed.\n","title":"par","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[31,1]}},{"children":[],"comments":"Run two asynchronous computations in parallel, returning the result\nfrom the computation which finishes first.\n","title":"race","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[50,1]}},{"children":[],"comments":"Unwrap a parallel computation so that it may be embedded in sequential code,\nor run using `runContT`.\n","title":"runParallel","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[106,1]}},{"children":[],"comments":"Run a parallel computation by providing a callback\n\nThis function is just shorthand for `runContT` composed with `runParallel`.\n","title":"runParallelWith","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[112,1]}},{"children":[],"comments":"Create a parallel computation from an action which uses a callback.\n\nThis function is just shorthand for `inParallel <<< ContT`.\n","title":"withCallback","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Parallel"],"Parallel"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[100,1],"name":"bower_components/purescript-parallel/src/Control/Parallel.purs","end":[101,1]}}]},{"moduleName":["Control","Plus"],"declarations":[{"children":[{"comments":null,"title":"empty","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":null},{"comments":null,"title":"plusArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-control/src/Control/Plus.purs","end":[25,12]}}],"comments":"The `Plus` type class extends the `Alt` type class with a value that\nshould be the left and right identity for `(<|>)`.\n\nIt is similar to `Monoid`, except that it applies to types of\nkind `* -> *`, like `Array` or `List`, rather than concrete types like\n`String` or `Number`.\n\n`Plus` instances should satisfy the following laws:\n\n- Left identity: `empty <|> x == x`\n- Right identity: `x <|> empty == x`\n- Annihilation: `f <$> empty == empty`\n","title":"Plus","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Control","Alt"],"Alt"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-control/src/Control/Plus.purs","end":[24,1]}}]},{"moduleName":["Data","Array","ST"],"declarations":[{"children":[],"comments":"An element and its index.\n","title":"Assoc","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["index",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":[]}]}]}]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[42,1]}},{"children":[],"comments":"A reference to a mutable array.\n\nThe first type parameter represents the memory region which the array belongs to.\nThe second type parameter defines the type of elements of the mutable array.\n\nThe runtime representation of a value of type `STArray h a` is the same as that of `Array a`,\nexcept that mutation is allowed.\n","title":"STArray","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]},"declType":"externData"},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[36,1]}},{"children":[],"comments":"Create an empty mutable array.\n","title":"emptySTArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[48,1]}},{"children":[],"comments":"Create an immutable copy of a mutable array.\n","title":"freeze","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[53,1]}},{"children":[],"comments":"Read the value at the specified index in a mutable array.\n","title":"peekSTArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[59,1]}},{"children":[],"comments":"Change the value at the specified index in a mutable array.\n","title":"pokeSTArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[67,1]}},{"children":[],"comments":"Append the values in an immutable array to the end of a mutable array.\n","title":"pushAllSTArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[74,1]}},{"children":[],"comments":"Append an element to the end of a mutable array.\n","title":"pushSTArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[68,1]}},{"children":[],"comments":"Freeze a mutable array, creating an immutable array. Use this function as you would use\n`runST` to freeze a mutable reference.\n\nThe rank-2 type prevents the reference from escaping the scope of `runSTArray`.\n","title":"runSTArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[45,1]}},{"children":[],"comments":"Remove and/or insert elements from/into a mutable array at the specified index.\n","title":"spliceSTArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[74,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[78,1]}},{"children":[],"comments":"Create a mutable copy of an immutable array.\n","title":"thaw","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[49,1]}},{"children":[],"comments":"Create an immutable copy of a mutable array, where each element\nis labelled with its index in the original array.\n","title":"toAssocArray","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"STArray"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST"],"Assoc"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"bower_components/purescript-arrays/src/Data/Array/ST.purs","end":[78,98]}}]},{"moduleName":["Data","Bifoldable"],"declarations":[{"children":[{"comments":null,"title":"bifoldr","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"bifoldl","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"bifoldMap","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]}]},null]},null]},null]}},"sourceSpan":null}],"comments":"`Bifoldable` represents data structures with two type arguments which can be\nfolded.\n\nA fold for such a structure requires two step functions, one for each type\nargument. Type class instances should choose the appropriate step function based\non the type of the element encountered at each point of the fold.\n\nDefault implementations are provided by the following functions:\n\n- `bifoldrDefault`\n- `bifoldlDefault`\n- `bifoldMapDefaultR`\n- `bifoldMapDefaultL`\n\nNote: some combinations of the default implementations are unsafe to\nuse together - causing a non-terminating mutually recursive cycle.\nThese combinations are documented per function.\n","title":"Bifoldable","fixity":null,"info":{"arguments":[["p",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs","end":[39,1]}},{"children":[],"comments":null,"title":"biall","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[[[["Data","Bifoldable"],"Bifoldable"],[{"tag":"TypeVar","contents":"t"}]],[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"c"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[96,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs","end":[97,1]}},{"children":[],"comments":"Test whether a predicate holds at any position in a data structure.\n","title":"biany","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[[[["Data","Bifoldable"],"Bifoldable"],[{"tag":"TypeVar","contents":"t"}]],[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"c"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs","end":[93,1]}},{"children":[],"comments":"Fold a data structure, accumulating values in a monoidal type.\n","title":"bifold","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[[[["Data","Bifoldable"],"Bifoldable"],[{"tag":"TypeVar","contents":"t"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]},null]},null]}},"sourceSpan":{"start":[74,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs","end":[75,1]}},{"children":[],"comments":"A version of `bitraverse_` with the data structure as the first argument.\n","title":"bifor_","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[[[["Data","Bifoldable"],"Bifoldable"],[{"tag":"TypeVar","contents":"t"}]],[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"d"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs","end":[84,1]}},{"children":[],"comments":"Collapse a data structure, collecting effects using an `Applicative` functor,\nignoring the final result.\n","title":"bisequence_","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[[[["Data","Bifoldable"],"Bifoldable"],[{"tag":"TypeVar","contents":"t"}]],[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs","end":[89,1]}},{"children":[],"comments":"Traverse a data structure, accumulating effects using an `Applicative` functor,\nignoring the final result.\n","title":"bitraverse_","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[[[["Data","Bifoldable"],"Bifoldable"],[{"tag":"TypeVar","contents":"t"}]],[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"d"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[79,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs","end":[80,1]}}]},{"moduleName":["Data","Bifunctor"],"declarations":[{"children":[],"comments":"A `Bifunctor` is a `Functor` from the pair category `(Type, Type)` to `Type`.\n\nA type constructor with two type arguments can be made into a `Bifunctor` if\nboth of its type arguments are covariant.\n\nThe `bimap` function maps a pair of functions over the two type arguments\nof the bifunctor.\n\nLaws:\n\n- Identity: `bimap id id == id`\n- Composition: `bimap f1 g1 <<< bimap f2 g2 == bimap (f1 <<< f2) (g1 <<< g2)`\n\n","title":"Bifunctor","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor.purs","end":[22,1]}},{"children":[],"comments":"Map a function over the first type argument of a `Bifunctor`.\n","title":"lmap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor.purs","end":[23,1]}},{"children":[],"comments":"Map a function over the second type arguments of a `Bifunctor`.\n","title":"rmap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor.purs","end":[27,1]}}]},{"moduleName":["Data","Bifunctor","Clown"],"declarations":[{"children":[{"comments":null,"title":"Clown","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"clownBifunctor","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Clown"],"Clown"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Clown.purs","end":[18,1]}},{"comments":null,"title":"clownFunctor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Clown"],"Clown"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Clown.purs","end":[21,1]}},{"comments":null,"title":"clownBiapply","info":{"declType":"instance","dependencies":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapply"],"Biapply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Clown"],"Clown"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Clown.purs","end":[24,1]}},{"comments":null,"title":"clownBiapplicative","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapplicative"],"Biapplicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Clown"],"Clown"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Clown.purs","end":[25,29]}}],"comments":"Make a `Functor` over the first argument of a `Bifunctor`\n","title":"Clown","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null],["b",null]]},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Clown.purs","end":[12,1]}},{"children":[],"comments":null,"title":"runClown","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Clown"],"Clown"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Clown.purs","end":[13,1]}}]},{"moduleName":["Data","Bifunctor","Flip"],"declarations":[{"children":[{"comments":null,"title":"Flip","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"flipBifunctor","info":{"declType":"instance","dependencies":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Flip"],"Flip"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Flip.purs","end":[19,1]}},{"comments":null,"title":"flipFunctor","info":{"declType":"instance","dependencies":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Flip"],"Flip"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Flip.purs","end":[22,1]}},{"comments":null,"title":"flipBiapply","info":{"declType":"instance","dependencies":[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapply"],"Biapply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Flip"],"Flip"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Flip.purs","end":[25,1]}},{"comments":null,"title":"flipBiapplicative","info":{"declType":"instance","dependencies":[[[["Control","Biapplicative"],"Biapplicative"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapplicative"],"Biapplicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Flip"],"Flip"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Flip.purs","end":[26,32]}}],"comments":"Flips the order of the type arguments of a `Bifunctor`.\n","title":"Flip","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["p",null],["a",null],["b",null]]},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Flip.purs","end":[13,1]}},{"children":[],"comments":"Remove the `Flip` constructor.\n","title":"runFlip","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["p",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Flip"],"Flip"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Flip.purs","end":[14,1]}}]},{"moduleName":["Data","Bifunctor","Join"],"declarations":[{"children":[{"comments":null,"title":"Join","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"joinFunctor","info":{"declType":"instance","dependencies":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Join"],"Join"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Join.purs","end":[20,1]}},{"comments":null,"title":"joinApply","info":{"declType":"instance","dependencies":[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Join"],"Join"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Join.purs","end":[23,1]}},{"comments":null,"title":"joinApplicative","info":{"declType":"instance","dependencies":[[[["Control","Biapplicative"],"Biapplicative"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Join"],"Join"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Join.purs","end":[24,28]}}],"comments":"`Join` turns a `Bifunctor` into a `Functor` by equating the\ntwo type arguments.\n","title":"Join","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["p",null],["a",null]]},"sourceSpan":{"start":[11,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Join.purs","end":[14,1]}},{"children":[],"comments":"Remove the `Join` constructor.\n","title":"runJoin","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["p",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Join"],"Join"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Join.purs","end":[15,1]}}]},{"moduleName":["Data","Bifunctor","Joker"],"declarations":[{"children":[{"comments":null,"title":"Joker","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"jokerBifunctor","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Joker"],"Joker"]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Joker.purs","end":[18,1]}},{"comments":null,"title":"jokerFunctor","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Joker"],"Joker"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Joker.purs","end":[21,1]}},{"comments":null,"title":"jokerBiapply","info":{"declType":"instance","dependencies":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapply"],"Biapply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Joker"],"Joker"]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Joker.purs","end":[24,1]}},{"comments":null,"title":"jokerBiapplicative","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapplicative"],"Biapplicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Joker"],"Joker"]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Joker.purs","end":[25,29]}}],"comments":"Make a `Functor` over the second argument of a `Bifunctor`\n","title":"Joker","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["g",null],["a",null],["b",null]]},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Joker.purs","end":[12,1]}},{"children":[],"comments":null,"title":"runJoker","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Joker"],"Joker"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Joker.purs","end":[13,1]}}]},{"moduleName":["Data","Bifunctor","Product"],"declarations":[{"children":[{"comments":null,"title":"Pair","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"productBifunctor","info":{"declType":"instance","dependencies":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Product"],"Product"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Product.purs","end":[15,1]}},{"comments":null,"title":"productBiapply","info":{"declType":"instance","dependencies":[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"f"}]],[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapply"],"Biapply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Product"],"Product"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Product.purs","end":[18,1]}},{"comments":null,"title":"productBiapplicative","info":{"declType":"instance","dependencies":[[[["Control","Biapplicative"],"Biapplicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Control","Biapplicative"],"Biapplicative"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapplicative"],"Biapplicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Product"],"Product"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Product.purs","end":[19,45]}}],"comments":"The product of two `Bifunctor`s.\n","title":"Product","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["g",null],["a",null],["b",null]]},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Product.purs","end":[12,1]}}]},{"moduleName":["Data","Bifunctor","Wrap"],"declarations":[{"children":[{"comments":null,"title":"Wrap","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"wrapBifunctor","info":{"declType":"instance","dependencies":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Wrap"],"Wrap"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Wrap.purs","end":[20,1]}},{"comments":null,"title":"wrapFunctor","info":{"declType":"instance","dependencies":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Wrap"],"Wrap"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Wrap.purs","end":[23,1]}},{"comments":null,"title":"wrapBiapply","info":{"declType":"instance","dependencies":[[[["Control","Biapply"],"Biapply"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapply"],"Biapply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Wrap"],"Wrap"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Wrap.purs","end":[26,1]}},{"comments":null,"title":"wrapBiapplicative","info":{"declType":"instance","dependencies":[[[["Control","Biapplicative"],"Biapplicative"],[{"tag":"TypeVar","contents":"p"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapplicative"],"Biapplicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Wrap"],"Wrap"]},{"tag":"TypeVar","contents":"p"}]}}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Wrap.purs","end":[27,32]}}],"comments":"A `newtype` wrapper which provides a `Functor` over the second argument of\na `Bifunctor`\n","title":"Wrap","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["p",null],["a",null],["b",null]]},"sourceSpan":{"start":[11,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Wrap.purs","end":[14,1]}},{"children":[],"comments":"Remove the `Wrap` constructor.\n","title":"unwrap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["p",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor","Wrap"],"Wrap"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-bifunctors/src/Data/Bifunctor/Wrap.purs","end":[15,1]}}]},{"moduleName":["Data","Bitraversable"],"declarations":[{"children":[{"comments":null,"title":"bitraverse","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"d"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"bisequence","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]}},"sourceSpan":null}],"comments":"`Bitraversable` represents data structures with two type arguments which can be\ntraversed.\n\nA traversal for such a structure requires two functions, one for each type\nargument. Type class instances should choose the appropriate function based\non the type of the element encountered at each point of the traversal.\n\nDefault implementations are provided by the following functions:\n\n- `bitraverseDefault`\n- `bisequenceDefault`\n","title":"Bitraversable","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[[[["Data","Bifunctor"],"Bifunctor"],[{"tag":"TypeVar","contents":"t"}]],[[["Data","Bifoldable"],"Bifoldable"],[{"tag":"TypeVar","contents":"t"}]]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bitraversable.purs","end":[25,1]}},{"children":[],"comments":"Traverse a data structure, accumulating effects and results using an `Applicative` functor.\n","title":"bifor","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[[[["Data","Bitraversable"],"Bitraversable"],[{"tag":"TypeVar","contents":"t"}]],[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"d"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Bitraversable.purs","end":[37,1]}}]},{"moduleName":["Data","CatList"],"declarations":[{"children":[{"comments":null,"title":"CatNil","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"CatCons","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupCatList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-catenable-lists/src/Data/CatList.purs","end":[110,1]}},{"comments":null,"title":"monoidCatList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-catenable-lists/src/Data/CatList.purs","end":[113,1]}},{"comments":null,"title":"showCatList","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-catenable-lists/src/Data/CatList.purs","end":[115,70]}}],"comments":"A strict catenable list.\n\n`CatList` may be empty, represented by `CatNil`.\n\n`CatList` may be non-empty, represented by `CatCons`. The `CatCons`\ndata constructor takes the first element of the list and a queue of\n`CatList`.\n","title":"CatList","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-catenable-lists/src/Data/CatList.purs","end":[40,1]}}]},{"moduleName":["Data","CatQueue"],"declarations":[{"children":[{"comments":null,"title":"CatQueue","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showCatQueue","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-catenable-lists/src/Data/CatQueue.purs","end":[56,70]}}],"comments":"A strict queue representated using a pair of lists.\n","title":"CatQueue","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-catenable-lists/src/Data/CatQueue.purs","end":[29,1]}}]},{"moduleName":["Data","Char"],"declarations":[{"children":[],"comments":"Constructs a character from the given Unicode numeric value.\n","title":"fromCharCode","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-strings/src/Data/Char.purs","end":[22,1]}},{"children":[],"comments":"Returns the numeric Unicode value of the character.\n","title":"toCharCode","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-strings/src/Data/Char.purs","end":[19,1]}},{"children":[],"comments":"Returns the string of length `1` containing only the given character.\n","title":"toString","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-strings/src/Data/Char.purs","end":[16,1]}}]},{"moduleName":["Data","Comparison"],"declarations":[{"children":[{"comments":null,"title":"Comparison","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"contravariantComparison","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant"],"Contravariant"]},{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]}]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-contravariant/src/Data/Comparison.purs","end":[18,1]}},{"comments":null,"title":"semigroupComparison","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-contravariant/src/Data/Comparison.purs","end":[21,1]}},{"comments":null,"title":"monoidComparison","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-contravariant/src/Data/Comparison.purs","end":[25,1]}}],"comments":"An adaptor allowing `>$<` to map over the inputs of a comparison function.\n","title":"Comparison","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-contravariant/src/Data/Comparison.purs","end":[12,1]}},{"children":[],"comments":"The default comparison for any values with an `Ord` instance.\n","title":"defaultComparison","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-contravariant/src/Data/Comparison.purs","end":[26,1]}},{"children":[],"comments":null,"title":"runComparison","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}]},null]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-contravariant/src/Data/Comparison.purs","end":[13,1]}}]},{"moduleName":["Data","Const"],"declarations":[{"children":[{"comments":null,"title":"Const","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqConst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[30,1]}},{"comments":null,"title":"ordConst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[33,1]}},{"comments":null,"title":"boundedConst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[37,1]}},{"comments":null,"title":"showConst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[40,1]}},{"comments":null,"title":"semigroupoidConst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroupoid"]},{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[43,1]}},{"comments":null,"title":"semigroupConst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[46,1]}},{"comments":null,"title":"monoidConst","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[49,1]}},{"comments":null,"title":"functorConst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[52,1]}},{"comments":null,"title":"invariantConst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[55,1]}},{"comments":null,"title":"applyConst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[58,1]}},{"comments":null,"title":"bindConst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[61,1]}},{"comments":null,"title":"applicativeConst","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[64,1]}},{"comments":null,"title":"contravariantConst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant"],"Contravariant"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[67,1]}},{"comments":null,"title":"foldableConst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[72,1]}},{"comments":null,"title":"traversableConst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[72,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[74,37]}}],"comments":"The `Const` type constructor, which wraps its first type argument\nand ignores its second. That is, `Const a b` is isomorphic to `a`\nfor any `b`.\n\n`Const` has some useful instances. For example, the `Applicative`\ninstance allows us to collect results using a `Monoid` while\nignoring return values.\n","title":"Const","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[24,1]}},{"children":[],"comments":"Unwrap a value of type `Const a b`.\n","title":"getConst","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-const/src/Data/Const.purs","end":[25,1]}}]},{"moduleName":["Data","Coyoneda"],"declarations":[{"children":[{"comments":null,"title":"Coyoneda","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"CoyonedaF"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorCoyoneda","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[34,1]}},{"comments":null,"title":"applyCoyoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[37,1]}},{"comments":null,"title":"applicativeCoyoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[40,1]}},{"comments":null,"title":"bindCoyoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[43,1]}},{"comments":null,"title":"monadCoyoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[45,1]}},{"comments":null,"title":"monadTransCoyoneda","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[48,1]}},{"comments":null,"title":"extendCoyoneda","info":{"declType":"instance","dependencies":[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[51,1]}},{"comments":null,"title":"comonadCoyoneda","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[55,1]}}],"comments":"The `Coyoneda` `Functor`.\n\n`Coyoneda f` is a `Functor` for any type constructor `f`. In fact,\nit is the _free_ `Functor` for `f`.\n","title":"Coyoneda","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[31,1]}},{"children":[{"comments":null,"title":"CoyonedaF","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["fi",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"i"}]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"`Coyoneda` is encoded as an existential type using `Data.Exists`.\n\nThis type constructor encodes the contents of the existential package.\n","title":"CoyonedaF","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["a",null],["i",null]]},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[29,1]}},{"children":[],"comments":"Construct a value of type `Coyoneda f a`.\n","title":"coyoneda","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[56,1]}},{"children":[],"comments":"Lift a value described by the type constructor `f` to `Coyoneda f`.\n","title":"liftCoyoneda","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[60,1]}},{"children":[],"comments":null,"title":"liftCoyonedaT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NaturalTransformation"],"NaturalTransformation"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NaturalTransformation"],"NaturalTransformation"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"g"}]}}]}]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[67,1]}},{"children":[],"comments":null,"title":"liftCoyonedaTF","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"g"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NaturalTransformation"],"NaturalTransformation"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NaturalTransformation"],"NaturalTransformation"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"g"}]}]}]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[70,1]}},{"children":[],"comments":"Lower a value of type `Yoneda f a` to the `Functor` `f`.\n","title":"lowerCoyoneda","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-free/src/Data/Coyoneda.purs","end":[64,1]}}]},{"moduleName":["Data","Date"],"declarations":[{"children":[{"comments":null,"title":"eqDate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[43,1]}},{"comments":null,"title":"ordDate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[46,1]}},{"comments":null,"title":"showDate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[51,1]}}],"comments":"A combined date/time value. `Date`s cannot be constructed directly to\nensure they are not the `Invalid Date` value, and instead must be created\nvia `fromJSDate`, `fromEpochMilliseconds`, `fromString`, etc. or the `date`\nand `dateTime` functions in the `Data.Date.Locale` and `Data.Date.UTC`\nmodules.\n","title":"Date","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[40,1]}},{"children":[{"comments":null,"title":"DayOfMonth","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqDayOfMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfMonth"]}]}},"sourceSpan":{"start":[219,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[222,1]}},{"comments":null,"title":"ordDayOfMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfMonth"]}]}},"sourceSpan":{"start":[222,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[225,1]}},{"comments":null,"title":"showDayOfMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfMonth"]}]}},"sourceSpan":{"start":[225,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[229,1]}}],"comments":"A day-of-month date component value.\n","title":"DayOfMonth","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[217,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[219,1]}},{"children":[{"comments":null,"title":"Sunday","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Monday","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Tuesday","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Wednesday","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Thursday","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Friday","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Saturday","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqDayOfWeek","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfWeek"]}]}},"sourceSpan":{"start":[238,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[248,1]}},{"comments":null,"title":"ordDayOfWeek","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfWeek"]}]}},"sourceSpan":{"start":[248,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[251,1]}},{"comments":null,"title":"boundedDayOfWeek","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfWeek"]}]}},"sourceSpan":{"start":[251,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[255,1]}},{"comments":null,"title":"boundedOrdDayOfWeek","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfWeek"]}]}},"sourceSpan":{"start":[255,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[257,1]}},{"comments":null,"title":"showDayOfWeek","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfWeek"]}]}},"sourceSpan":{"start":[257,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[266,1]}},{"comments":null,"title":"enumDayOfWeek","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfWeek"]}]}},"sourceSpan":{"start":[266,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[273,1]}}],"comments":"A day-of-week date component value.\n","title":"DayOfWeek","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[229,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[238,1]}},{"children":[],"comments":"A native JavaScript `Date` object.\n","title":"JSDate","fixity":null,"info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[38,1]}},{"children":[{"comments":null,"title":"LocaleOffset","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A timezone locale offset, measured in minutes.\n","title":"LocaleOffset","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[96,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[99,1]}},{"children":[{"comments":null,"title":"January","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"February","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"March","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"April","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"May","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"June","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"July","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"August","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"September","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"October","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"November","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"December","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]}},"sourceSpan":{"start":[142,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[157,1]}},{"comments":null,"title":"ordMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]}},"sourceSpan":{"start":[157,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[160,1]}},{"comments":null,"title":"boundedMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]}},"sourceSpan":{"start":[160,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[164,1]}},{"comments":null,"title":"boundedOrdMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]}},"sourceSpan":{"start":[164,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[166,1]}},{"comments":null,"title":"showMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]}},"sourceSpan":{"start":[166,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[180,1]}},{"comments":null,"title":"enumMonth","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]}},"sourceSpan":{"start":[180,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[187,1]}}],"comments":"A month date component value.\n","title":"Month","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[128,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[142,1]}},{"children":[],"comments":"Effect type for when accessing the current date/time.\n","title":"Now","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[88,1]}},{"children":[{"comments":null,"title":"Year","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqYear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]}},"sourceSpan":{"start":[109,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[112,1]}},{"comments":null,"title":"ordYear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]}},"sourceSpan":{"start":[112,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[115,1]}},{"comments":null,"title":"semiringYear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]}},"sourceSpan":{"start":[115,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[121,1]}},{"comments":null,"title":"ringYear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]}},"sourceSpan":{"start":[121,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[124,1]}},{"comments":null,"title":"showYear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]}},"sourceSpan":{"start":[124,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[128,1]}}],"comments":"A year date component value.\n","title":"Year","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[109,1]}},{"children":[],"comments":"Creates a `Date` value from a number of milliseconds elapsed since 1st\nJanuary 1970 00:00:00 UTC.\n","title":"fromEpochMilliseconds","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[64,1]}},{"children":[],"comments":"Attempts to create a `Date` from a `JSDate`. If the `JSDate` is an invalid\ndate `Nothing` is returned.\n","title":"fromJSDate","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"JSDate"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[52,1]}},{"children":[],"comments":"Attempts to construct a date from a simplified extended ISO 8601 format\n(`YYYY-MM-DDTHH:mm:ss.sssZ`). `Nothing` is returned if the format is not\nan exact match or the resulting date is invalid.\n","title":"fromStringStrict","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}},"sourceSpan":{"start":[80,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[81,1]}},{"children":[],"comments":"Gets a `Date` value for the current date/time according to the current\nmachine’s local time.\n","title":"now","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["now",{"tag":"TypeConstructor","contents":[["Data","Date"],"Now"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},null]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[89,1]}},{"children":[],"comments":"Gets the number of milliseconds elapsed milliseconds since 1st January\n1970 00:00:00 UTC according to the current machine’s local time\n","title":"nowEpochMilliseconds","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["now",{"tag":"TypeConstructor","contents":[["Data","Date"],"Now"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]},null]}},"sourceSpan":{"start":[93,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[96,1]}},{"children":[],"comments":"Get the locale time offset for a `Date`.\n","title":"timezoneOffset","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"LocaleOffset"]}]}},"sourceSpan":{"start":[99,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[100,1]}},{"children":[],"comments":"Gets the number of milliseconds elapsed since 1st January 1970 00:00:00\nUTC for a `Date`.\n","title":"toEpochMilliseconds","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[68,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[69,1]}},{"children":[],"comments":"Extracts a `JSDate` from a `Date`.\n","title":"toJSDate","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"JSDate"]}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-datetime/src/Data/Date.purs","end":[59,1]}}]},{"moduleName":["Data","Date","Locale"],"declarations":[{"children":[],"comments":"The effect of reading the current system locale/timezone.\n","title":"Locale","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-datetime/src/Data/Date/Locale.purs","end":[37,1]}},{"children":[],"comments":"Format a date as a human-readable string, based on the current machine's\nlocale. Example output: \"Friday, May 22, 2015\", although bear in mind that\nthis can vary significantly across platforms.\n","title":"toLocaleDateString","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["locale",{"tag":"TypeConstructor","contents":[["Data","Date","Locale"],"Locale"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-datetime/src/Data/Date/Locale.purs","end":[103,1]}},{"children":[],"comments":"Format a date as a human-readable string (including the date and the\ntime), based on the current machine's locale. Example output:\n\"Fri May 22 2015 19:45:07 GMT+0100 (BST)\", although bear in mind that this\ncan vary significantly across platforms.\n","title":"toLocaleString","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["locale",{"tag":"TypeConstructor","contents":[["Data","Date","Locale"],"Locale"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[90,1],"name":"bower_components/purescript-datetime/src/Data/Date/Locale.purs","end":[91,1]}},{"children":[],"comments":"Format a time as a human-readable string, based on the current machine's\nlocale. Example output: \"19:45:07\", although bear in mind that this\ncan vary significantly across platforms.\n","title":"toLocaleTimeString","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["locale",{"tag":"TypeConstructor","contents":[["Data","Date","Locale"],"Locale"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[96,1],"name":"bower_components/purescript-datetime/src/Data/Date/Locale.purs","end":[97,1]}}]},{"moduleName":["Data","Date","UTC"],"declarations":[{"children":[],"comments":"Attempts to create a `Date` from UTC date components. `Nothing` is\nreturned if the resulting date is invalid.\n","title":"date","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfMonth"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[35,1]}},{"children":[],"comments":"Attempts to create a `Date` from UTC date and time components. `Nothing`\nis returned if the resulting date is invalid.\n","title":"dateTime","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfMonth"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"HourOfDay"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MinuteOfHour"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"SecondOfMinute"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MillisecondOfSecond"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[29,1]}},{"children":[],"comments":"Gets the UTC day-of-month value for a date.\n","title":"dayOfMonth","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfMonth"]}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[47,1]}},{"children":[],"comments":"Gets the UTC day-of-week value for a date.\n","title":"dayOfWeek","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"DayOfWeek"]}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[51,1]}},{"children":[],"comments":"Gets the UTC hour-of-day value for a date.\n","title":"hourOfDay","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"HourOfDay"]}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[55,1]}},{"children":[],"comments":"Get the UTC millisecond-of-second value for a date.\n","title":"millisecondOfSecond","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MillisecondOfSecond"]}]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[67,1]}},{"children":[],"comments":"Gets the UTC minute-of-hour value for a date.\n","title":"minuteOfHour","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MinuteOfHour"]}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[59,1]}},{"children":[],"comments":"Gets the UTC month component for a date.\n","title":"month","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Month"]}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[43,1]}},{"children":[],"comments":"Get the UTC second-of-minute value for a date.\n","title":"secondOfMinute","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"SecondOfMinute"]}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[63,1]}},{"children":[],"comments":"Gets the UTC year component for a date.\n","title":"year","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Year"]}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-datetime/src/Data/Date/UTC.purs","end":[39,1]}}]},{"moduleName":["Data","Distributive"],"declarations":[{"children":[{"comments":null,"title":"distribute","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"g"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"collect","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"g"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"distributiveIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Distributive"],"Distributive"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-distributive/src/Data/Distributive.purs","end":[27,1]}},{"comments":null,"title":"distributiveFunction","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Distributive"],"Distributive"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-distributive/src/Data/Distributive.purs","end":[29,34]}}],"comments":"Categorical dual of `Traversable`:\n\n- `distribute` is the dual of `sequence` - it zips an\n  arbitrary collection of containers\n- `collect` is the dual of `traverse` - it traverses\n  an arbitrary collection of values\n","title":"Distributive","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-distributive/src/Data/Distributive.purs","end":[20,1]}},{"children":[],"comments":"Zip an arbitrary collection of containers and summarize the results\n","title":"cotraverse","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Distributive"],"Distributive"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"g"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-distributive/src/Data/Distributive.purs","end":[21,1]}}]},{"moduleName":["Data","Either"],"declarations":[{"children":[{"comments":null,"title":"Left","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Right","info":{"arguments":[{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"The `Functor` instance allows functions to transform the contents of a\n`Right` with the `<$>` operator:\n\n``` purescript\nf <$> Right x == Right (f x)\n```\n\n`Left` values are untouched:\n\n``` purescript\nf <$> Left y == Left y\n```\n","title":"functorEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[56,1]}},{"comments":null,"title":"bifunctorEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]}]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[92,1]}},{"comments":"The `Apply` instance allows functions contained within a `Right` to\ntransform a value contained within a `Right` using the `(<*>)` operator:\n\n``` purescript\nRight f <*> Right x == Right (f x)\n```\n\n`Left` values are left untouched:\n\n``` purescript\nLeft f <*> Right x == Left x\nRight f <*> Left y == Left y\n```\n\nCombining `Functor`'s `<$>` with `Apply`'s `<*>` can be used transform a\npure function to take `Either`-typed arguments so `f :: a -> b -> c`\nbecomes `f :: Either l a -> Either l b -> Either l c`:\n\n``` purescript\nf <$> Right x <*> Right y == Right (f x y)\n```\n\nThe `Left`-preserving behaviour of both operators means the result of\nan expression like the above but where any one of the values is `Left`\nmeans the whole result becomes `Left` also, taking the first `Left` value\nfound:\n\n``` purescript\nf <$> Left x <*> Right y == Left x\nf <$> Right x <*> Left y == Left y\nf <$> Left x <*> Left y == Left x\n```\n","title":"applyEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[116,1]}},{"comments":"The `Applicative` instance enables lifting of values into `Either` with the\n`pure` or `return` function (`return` is an alias for `pure`):\n\n``` purescript\npure x :: Either _ _ == Right x\nreturn x :: Either _ _ == Right x\n```\n\nCombining `Functor`'s `<$>` with `Apply`'s `<*>` and `Applicative`'s\n`pure` can be used to pass a mixture of `Either` and non-`Either` typed\nvalues to a function that does not usually expect them, by using `pure`\nfor any value that is not already `Either` typed:\n\n``` purescript\nf <$> Right x <*> pure y == Right (f x y)\n```\n\nEven though `pure = Right` it is recommended to use `pure` in situations\nlike this as it allows the choice of `Applicative` to be changed later\nwithout having to go through and replace `Right` with a new constructor.\n","title":"applicativeEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[116,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[128,1]}},{"comments":"The `Alt` instance allows for a choice to be made between two `Either`\nvalues with the `<|>` operator, where the first `Right` encountered\nis taken.\n\n``` purescript\nRight x <|> Right y == Right x\nLeft x <|> Right y == Right y\nLeft x <|> Left y == Left y\n```\n","title":"altEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[128,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[139,1]}},{"comments":"The `Bind` instance allows sequencing of `Either` values and functions that\nreturn an `Either` by using the `>>=` operator:\n\n``` purescript\nLeft x >>= f = Left x\nRight x >>= f = f x\n```\n","title":"bindEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[139,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[157,1]}},{"comments":"The `Monad` instance guarantees that there are both `Applicative` and\n`Bind` instances for `Either`. This also enables the `do` syntactic sugar:\n\n``` purescript\ndo\n  x' <- x\n  y' <- y\n  pure (f x' y')\n```\n\nWhich is equivalent to:\n\n``` purescript\nx >>= (\\x' -> y >>= (\\y' -> pure (f x' y')))\n```\n","title":"monadEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[157,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[167,1]}},{"comments":"The `Extend` instance allows sequencing of `Either` values and functions\nthat accept an `Either` and return a non-`Either` result using the\n`<<=` operator.\n\n``` purescript\nf <<= Left x = Left x\nf <<= Right x = Right (f x)\n```\n","title":"extendEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[167,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[174,1]}},{"comments":"The `Show` instance allows `Either` values to be rendered as a string with\n`show` whenever there is an `Show` instance for both type the `Either` can\ncontain.\n","title":"showEither","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[174,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[181,1]}},{"comments":"The `Eq` instance allows `Either` values to be checked for equality with\n`==` and inequality with `/=` whenever there is an `Eq` instance for both\ntypes the `Either` can contain.\n","title":"eqEither","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[181,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[191,1]}},{"comments":"The `Ord` instance allows `Either` values to be compared with\n`compare`, `>`, `>=`, `<` and `<=` whenever there is an `Ord` instance for\nboth types the `Either` can contain.\n\nAny `Left` value is considered to be less than a `Right` value.\n","title":"ordEither","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[191,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[197,1]}},{"comments":null,"title":"boundedEither","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[197,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[201,1]}},{"comments":null,"title":"foldableEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[201,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[209,1]}},{"comments":null,"title":"bifoldableEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifoldable"],"Bifoldable"]},{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]}]}},"sourceSpan":{"start":[209,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[217,1]}},{"comments":null,"title":"traversableEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[217,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[223,1]}},{"comments":null,"title":"bitraversableEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bitraversable"],"Bitraversable"]},{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]}]}},"sourceSpan":{"start":[223,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[229,1]}},{"comments":null,"title":"semiringEither","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[229,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[235,1]}},{"comments":null,"title":"semigroupEither","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[235,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[236,33]}}],"comments":"The `Either` type is used to represent a choice between two types of value.\n\nA common use case for `Either` is error handling, where `Left` is used to\ncarry an error value and `Right` is used to carry a success value.\n","title":"Either","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[28,1]}},{"children":[],"comments":"Takes two functions and an `Either` value, if the value is a `Left` the\ninner value is applied to the first function, if the value is a `Right`\nthe inner value is applied to the second function.\n\n``` purescript\neither f g (Left x) == f x\neither f g (Right y) == g y\n```\n","title":"either","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[29,1]}},{"children":[],"comments":"Returns `true` when the `Either` value was constructed with `Left`.\n","title":"isLeft","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[34,1]}},{"children":[],"comments":"Returns `true` when the `Either` value was constructed with `Right`.\n","title":"isRight","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-either/src/Data/Either.purs","end":[38,1]}}]},{"moduleName":["Data","Either","Nested"],"declarations":[{"children":[],"comments":null,"title":"Either10","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["i",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[36,1]}},{"children":[],"comments":null,"title":"Either2","fixity":null,"info":{"arguments":[["a",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[26,1]}},{"children":[],"comments":null,"title":"Either3","fixity":null,"info":{"arguments":[["a",null],["b",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[27,1]}},{"children":[],"comments":null,"title":"Either4","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[28,1]}},{"children":[],"comments":null,"title":"Either5","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[29,1]}},{"children":[],"comments":null,"title":"Either6","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[30,1]}},{"children":[],"comments":null,"title":"Either7","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[31,1]}},{"children":[],"comments":null,"title":"Either8","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[32,1]}},{"children":[],"comments":null,"title":"Either9","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[33,1]}},{"children":[],"comments":null,"title":"either10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[230,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[231,1]}},{"children":[],"comments":null,"title":"either10of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[203,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[204,1]}},{"children":[],"comments":null,"title":"either1of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[176,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[177,1]}},{"children":[],"comments":null,"title":"either1of2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[37,1]}},{"children":[],"comments":null,"title":"either1of3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[44,1]}},{"children":[],"comments":null,"title":"either1of4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[54,1]}},{"children":[],"comments":null,"title":"either1of5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[67,1]}},{"children":[],"comments":null,"title":"either1of6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[83,1]}},{"children":[],"comments":null,"title":"either1of7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[101,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[102,1]}},{"children":[],"comments":null,"title":"either1of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[123,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[124,1]}},{"children":[],"comments":null,"title":"either1of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[148,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[149,1]}},{"children":[],"comments":null,"title":"either2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[206,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[207,1]}},{"children":[],"comments":null,"title":"either2of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[179,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[180,1]}},{"children":[],"comments":null,"title":"either2of2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[40,1]}},{"children":[],"comments":null,"title":"either2of3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[47,1]}},{"children":[],"comments":null,"title":"either2of4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[57,1]}},{"children":[],"comments":null,"title":"either2of5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[70,1]}},{"children":[],"comments":null,"title":"either2of6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[86,1]}},{"children":[],"comments":null,"title":"either2of7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[105,1]}},{"children":[],"comments":null,"title":"either2of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[126,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[127,1]}},{"children":[],"comments":null,"title":"either2of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[151,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[152,1]}},{"children":[],"comments":null,"title":"either3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[209,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[210,1]}},{"children":[],"comments":null,"title":"either3of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[182,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[183,1]}},{"children":[],"comments":null,"title":"either3of3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[50,1]}},{"children":[],"comments":null,"title":"either3of4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[60,1]}},{"children":[],"comments":null,"title":"either3of5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[73,1]}},{"children":[],"comments":null,"title":"either3of6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[89,1]}},{"children":[],"comments":null,"title":"either3of7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[108,1]}},{"children":[],"comments":null,"title":"either3of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[129,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[130,1]}},{"children":[],"comments":null,"title":"either3of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[154,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[155,1]}},{"children":[],"comments":null,"title":"either4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[212,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[213,1]}},{"children":[],"comments":null,"title":"either4of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[186,1]}},{"children":[],"comments":null,"title":"either4of4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[63,1]}},{"children":[],"comments":null,"title":"either4of5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[76,1]}},{"children":[],"comments":null,"title":"either4of6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[92,1]}},{"children":[],"comments":null,"title":"either4of7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[111,1]}},{"children":[],"comments":null,"title":"either4of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[132,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[133,1]}},{"children":[],"comments":null,"title":"either4of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[157,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[158,1]}},{"children":[],"comments":null,"title":"either5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[215,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[216,1]}},{"children":[],"comments":null,"title":"either5of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[188,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[189,1]}},{"children":[],"comments":null,"title":"either5of5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[79,1]}},{"children":[],"comments":null,"title":"either5of6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[95,1]}},{"children":[],"comments":null,"title":"either5of7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[114,1]}},{"children":[],"comments":null,"title":"either5of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[136,1]}},{"children":[],"comments":null,"title":"either5of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[160,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[161,1]}},{"children":[],"comments":null,"title":"either6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[218,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[219,1]}},{"children":[],"comments":null,"title":"either6of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[191,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[192,1]}},{"children":[],"comments":null,"title":"either6of6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[98,1]}},{"children":[],"comments":null,"title":"either6of7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[116,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[117,1]}},{"children":[],"comments":null,"title":"either6of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[138,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[139,1]}},{"children":[],"comments":null,"title":"either6of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[163,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[164,1]}},{"children":[],"comments":null,"title":"either7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[221,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[222,1]}},{"children":[],"comments":null,"title":"either7of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[194,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[195,1]}},{"children":[],"comments":null,"title":"either7of7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[119,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[120,1]}},{"children":[],"comments":null,"title":"either7of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[141,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[142,1]}},{"children":[],"comments":null,"title":"either7of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[166,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[167,1]}},{"children":[],"comments":null,"title":"either8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[224,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[225,1]}},{"children":[],"comments":null,"title":"either8of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[197,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[198,1]}},{"children":[],"comments":null,"title":"either8of8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[144,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[145,1]}},{"children":[],"comments":null,"title":"either8of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[169,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[170,1]}},{"children":[],"comments":null,"title":"either9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[227,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[228,1]}},{"children":[],"comments":null,"title":"either9of10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[200,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[201,1]}},{"children":[],"comments":null,"title":"either9of9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either","Nested"],"Either9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[172,1],"name":"bower_components/purescript-either/src/Data/Either/Nested.purs","end":[173,1]}}]},{"moduleName":["Data","Either","Unsafe"],"declarations":[{"children":[],"comments":"A partial function that extracts the value from the `Left` data constructor.\nPassing a `Right` to `fromLeft` will throw an error at runtime.\n","title":"fromLeft","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-either/src/Data/Either/Unsafe.purs","end":[13,1]}},{"children":[],"comments":"A partial function that extracts the value from the `Right` data constructor.\nPassing a `Left` to `fromRight` will throw an error at runtime.\n","title":"fromRight","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-either/src/Data/Either/Unsafe.purs","end":[19,1]}}]},{"moduleName":["Data","Enum"],"declarations":[{"children":[{"comments":null,"title":"Cardinality","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Cardinality","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[30,1]}},{"children":[{"comments":null,"title":"cardinality","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Cardinality"]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"succ","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"pred","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"toEnum","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"fromEnum","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":null},{"comments":"## Instances\n","title":"enumChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[121,1]}},{"comments":null,"title":"enumMaybe","info":{"declType":"instance","dependencies":[[[["Data","Enum"],"Enum"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[128,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[138,1]}},{"comments":null,"title":"enumBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[148,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[155,1]}},{"comments":null,"title":"enumTuple","info":{"declType":"instance","dependencies":[[[["Data","Enum"],"Enum"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Enum"],"Enum"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[163,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[171,1]}},{"comments":null,"title":"enumEither","info":{"declType":"instance","dependencies":[[[["Data","Enum"],"Enum"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Enum"],"Enum"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[180,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[189,1]}}],"comments":"Type class for enumerations. This should not be considered a part of a\nnumeric hierarchy, ala Haskell. Rather, this is a type class for small,\nordered sum types with statically-determined cardinality and the ability\nto easily compute successor and predecessor elements. e.g. `DayOfWeek`, etc.\n\nLaws:\n\n- ```succ bottom >>= succ >>= succ ... succ [cardinality - 1 times] == top```\n- ```pred top    >>= pred >>= pred ... pred [cardinality - 1 times] == bottom```\n- ```e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2```\n- ```forall a > bottom: pred a >>= succ == Just a```\n- ```forall a < top:  succ a >>= pred == Just a```\n- ```pred >=> succ >=> pred = pred```\n- ```succ >=> pred >=> succ = succ```\n- ```toEnum (fromEnum a) = Just a```\n- ```forall a > bottom: fromEnum <$> pred a = Just (fromEnum a - 1)```\n- ```forall a < top:  fromEnum <$> succ a = Just (fromEnum a + 1)```\n","title":"Enum","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[60,1]}},{"children":[],"comments":"Runs in `O(n)` where `n` is `fromEnum a`\n\n```defaultFromEnum pred = fromEnum```\n","title":"defaultFromEnum","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},null]}},"sourceSpan":{"start":[78,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[79,1]}},{"children":[],"comments":"```defaultPred toEnum fromEnum = pred```\n","title":"defaultPred","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},null]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[65,1]}},{"children":[],"comments":"```defaultSucc toEnum fromEnum = succ```\n","title":"defaultSucc","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},null]}},"sourceSpan":{"start":[60,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[61,1]}},{"children":[],"comments":"Runs in `O(n)` where `n` is `fromEnum a`\n\n```defaultToEnum succ bottom = toEnum```\n","title":"defaultToEnum","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},null]}},"sourceSpan":{"start":[70,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[71,1]}},{"children":[],"comments":"`[a,b..c]`\n\nCorrectness for using `fromJust` is the same as for `enumFromTo`.\n","title":"enumFromThenTo","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Enum"],"Enum"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[93,1]}},{"children":[],"comments":"Property: ```fromEnum a = a', fromEnum b = b' => forall e', a' <= e' <= b': Exists e: toEnum e' = Just e```\n\nFollowing from the propery of `intFromTo`, we are sure all elements in `intFromTo (fromEnum a) (fromEnum b)` are `Just`s.\n","title":"enumFromTo","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Enum"],"Enum"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[85,1]}},{"children":[],"comments":"Property: ```forall e in intFromTo a b: a <= e <= b```\n","title":"intFromTo","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[99,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[100,1]}},{"children":[],"comments":"Property: ```forall e in intStepFromTo step a b: a <= e <= b```\n","title":"intStepFromTo","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}},"sourceSpan":{"start":[103,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[104,1]}},{"children":[],"comments":null,"title":"runCardinality","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Cardinality"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-enums/src/Data/Enum.purs","end":[31,1]}}]},{"moduleName":["Data","Equivalence"],"declarations":[{"children":[{"comments":null,"title":"Equivalence","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"contravariantEquivalence","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant"],"Contravariant"]},{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]}]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-contravariant/src/Data/Equivalence.purs","end":[20,1]}},{"comments":null,"title":"semigroupEquivalence","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-contravariant/src/Data/Equivalence.purs","end":[23,1]}},{"comments":null,"title":"monoidEquivalence","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-contravariant/src/Data/Equivalence.purs","end":[27,1]}}],"comments":"An adaptor allowing `>$<` to map over the inputs of an equivalence\nrelation.\n","title":"Equivalence","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-contravariant/src/Data/Equivalence.purs","end":[14,1]}},{"children":[],"comments":"An equivalence relation for any `Comparison`.\n","title":"comparisonEquivalence","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-contravariant/src/Data/Equivalence.purs","end":[32,1]}},{"children":[],"comments":"The default equivalence relation for any values with an `Eq` instance.\n","title":"defaultEquivalence","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-contravariant/src/Data/Equivalence.purs","end":[28,1]}},{"children":[],"comments":null,"title":"runEquivalence","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-contravariant/src/Data/Equivalence.purs","end":[15,1]}}]},{"moduleName":["Data","Exists"],"declarations":[{"children":[],"comments":"This type constructor can be used to existentially quantify over a type of kind `*`.\n\nSpecifically, the type `Exists f` is isomorphic to the existential type `exists a. f a`.\n\nExistential types can be encoded using universal types (`forall`) for endofunctors in more general\ncategories. The benefit of this library is that, by using the FFI, we can create an efficient\nrepresentation of the existential by simply hiding type information.\n\nFor example, consider the type `exists s. Tuple s (s -> Tuple s a)` which represents infinite streams\nof elements of type `a`.\n\nThis type can be constructed by creating a type constructor `StreamF` as follows:\n\n```purescript\ndata StreamF a s = StreamF s (s -> Tuple s a) \n```\n\nWe can then define the type of streams using `Exists`:\n\n```purescript\ntype Stream a = Exists (StreamF a)\n```\n","title":"Exists","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-exists/src/Data/Exists.purs","end":[38,1]}},{"children":[],"comments":"The `mkExists` function is used to introduce a value of type `Exists f`, by providing a value of\ntype `f a`, for some type `a` which will be hidden in the existentially-quantified type.\n\nFor example, to create a value of type `Stream Number`, we might use `mkExists` as follows:\n\n```purescript\nnats :: Stream Number\nnats = mkExists $ StreamF 0 (\\n -> Tuple (n + 1) n)\n```\n","title":"mkExists","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-exists/src/Data/Exists.purs","end":[53,1]}},{"children":[],"comments":"The `runExists` function is used to eliminate a value of type `Exists f`. The rank 2 type ensures\nthat the existentially-quantified type does not escape its scope. Since the function is required\nto work for _any_ type `a`, it will work for the existentially-quantified type.\n\nFor example, we can write a function to obtain the head of a stream by using `runExists` as follows:\n\n```purescript\nhead :: forall a. Stream a -> a\nhead = runExists head'\n  where\n  head' :: forall s. StreamF a s -> a\n  head' (StreamF s f) = snd (f s) \n```\n","title":"runExists","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"r"}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-exists/src/Data/Exists.purs","end":[53,77]}}]},{"moduleName":["Data","FingerTree"],"declarations":[{"children":[],"comments":null,"title":"Digit","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[135,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[137,1]}},{"children":[{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Single","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Deep","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"v"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showFingerTree","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"v"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[137,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[147,1]}},{"comments":null,"title":"semigroupFingerTree","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[147,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[154,1]}},{"comments":null,"title":"functorFingerTree","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[187,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[192,1]}},{"comments":null,"title":"foldableFingerTree","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[192,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[218,1]}},{"comments":null,"title":"traversableFingerTree","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[218,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[231,1]}},{"comments":null,"title":"measuredFingerTree","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Internal"],"Measured"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"v"}]}},"sourceSpan":{"start":[231,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[237,1]}}],"comments":null,"title":"FingerTree","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["v",null],["a",null]]},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[122,1]}},{"children":[{"comments":null,"title":"LazySplit","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}},{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"LazySplit","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[393,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[395,1]}},{"children":[{"comments":null,"title":"Node2","info":{"arguments":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Node3","info":{"arguments":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showNode","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"v"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[68,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[81,1]}},{"comments":null,"title":"functorNode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[95,1]}},{"comments":null,"title":"foldableNode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[95,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[102,1]}},{"comments":null,"title":"traversableNode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[107,1]}},{"comments":null,"title":"measuredNode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Internal"],"Measured"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"v"}]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[113,1]}}],"comments":null,"title":"Node","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["v",null],["a",null]]},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[68,1]}},{"children":[{"comments":null,"title":"Split","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}},{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Split","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[392,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[393,1]}},{"children":[{"comments":null,"title":"NilL","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ConsL","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorViewL","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"s"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"ViewL"]},{"tag":"TypeVar","contents":"s"}]}}]}},"sourceSpan":{"start":[282,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[286,1]}}],"comments":null,"title":"ViewL","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["s",null],["a",null]]},"sourceSpan":{"start":[280,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[282,1]}},{"children":[{"comments":null,"title":"NilR","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SnocR","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"a"}]}}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"ViewR","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["s",null],["a",null]]},"sourceSpan":{"start":[342,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[344,1]}},{"children":[],"comments":null,"title":"app3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[369,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[371,1]}},{"children":[],"comments":null,"title":"compareFingerTree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]],[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}]},null]},null]}},"sourceSpan":{"start":[173,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[175,1]}},{"children":[],"comments":null,"title":"consAll","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[268,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[270,1]}},{"children":[],"comments":null,"title":"deep","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[125,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[130,1]}},{"children":[],"comments":null,"title":"deepL","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[313,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[315,1]}},{"children":[],"comments":null,"title":"deepR","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[351,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[353,1]}},{"children":[],"comments":null,"title":"eqFingerTree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]],[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}},"sourceSpan":{"start":[154,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[156,1]}},{"children":[],"comments":null,"title":"headDigit","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[286,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[287,1]}},{"children":[],"comments":null,"title":"initDigit","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[339,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[340,1]}},{"children":[],"comments":null,"title":"lastDigit","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[336,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[337,1]}},{"children":[],"comments":null,"title":"lazyEmpty","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}},"sourceSpan":{"start":[122,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[123,1]}},{"children":[],"comments":null,"title":"node2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[82,1]}},{"children":[],"comments":null,"title":"node3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[85,1]}},{"children":[],"comments":null,"title":"nodeToDigit","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[88,1]}},{"children":[],"comments":null,"title":"nodes","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[382,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[383,1]}},{"children":[],"comments":null,"title":"snocAll","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[272,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[274,1]}},{"children":[],"comments":null,"title":"tailDigit","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[289,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[290,1]}},{"children":[],"comments":null,"title":"toFingerTree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[276,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[278,1]}},{"children":[],"comments":null,"title":"unfoldLeft","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Unfoldable"],"Unfoldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[455,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[457,1]}},{"children":[],"comments":null,"title":"unfoldRight","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Unfoldable"],"Unfoldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[463,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[465,1]}},{"children":[],"comments":null,"title":"unsafeSplitDigit","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Split"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[395,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[397,1]}},{"children":[],"comments":null,"title":"unsafeSplitTree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"LazySplit"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[409,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[411,1]}},{"children":[],"comments":null,"title":"viewL","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"ViewL"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[292,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[294,1]}},{"children":[],"comments":null,"title":"viewR","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"v"}]],[[["Data","Sequence","Internal"],"Measured"],[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"ViewR"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[344,1],"name":"bower_components/purescript-sequences/src/Data/FingerTree.purs","end":[346,1]}}]},{"moduleName":["Data","Foldable"],"declarations":[{"children":[{"comments":null,"title":"foldr","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"foldl","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"foldMap","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"foldableArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[95,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[100,1]}},{"comments":null,"title":"foldableMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[103,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[111,1]}},{"comments":null,"title":"foldableFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[111,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[116,1]}},{"comments":null,"title":"foldableLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[116,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[121,1]}},{"comments":null,"title":"foldableAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[121,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[126,1]}},{"comments":null,"title":"foldableDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[126,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[131,1]}},{"comments":null,"title":"foldableDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[131,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[136,1]}},{"comments":null,"title":"foldableConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[136,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[141,1]}},{"comments":null,"title":"foldableMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[141,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[147,1]}}],"comments":"`Foldable` represents data structures which can be _folded_.\n\n- `foldr` folds a structure from the right\n- `foldl` folds a structure from the left\n- `foldMap` folds a structure by accumulating values in a `Monoid`\n\nDefault implementations are provided by the following functions:\n\n- `foldrDefault`\n- `foldlDefault`\n- `foldMapDefaultR`\n- `foldMapDefaultL`\n\nNote: some combinations of the default implementations are unsafe to\nuse together - causing a non-terminating mutually recursive cycle.\nThese combinations are documented per function.\n","title":"Foldable","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[66,1]}},{"children":[],"comments":"Test whether a predicate holds for all elements in a data structure.\n","title":"all","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"b"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[213,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[214,1]}},{"children":[],"comments":"Test whether all `Boolean` values in a data structure are `true`.\n","title":"and","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[201,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[202,1]}},{"children":[],"comments":"Test whether a predicate holds for any element in a data structure.\n","title":"any","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"b"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[209,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[210,1]}},{"children":[],"comments":"Test whether a value is an element of a data structure.\n","title":"elem","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}},"sourceSpan":{"start":[225,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[226,1]}},{"children":[],"comments":"Try to find an element in a data structure which satisfies a predicate.\n","title":"find","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[233,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[234,1]}},{"children":[],"comments":"Fold a data structure, accumulating values in some `Monoid`.\n","title":"fold","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]},null]},null]}},"sourceSpan":{"start":[147,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[148,1]}},{"children":[],"comments":"A version of `traverse_` with its arguments flipped.\n\nThis can be useful when running an action written using do notation\nfor every element in a data structure:\n\nFor example:\n\n```purescript\nfor_ [1, 2, 3] \\n -> do\n  print n\n  trace \"squared is\"\n  print (n * n)\n```\n","title":"for_","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[175,1]}},{"children":[],"comments":"Fold a data structure, accumulating values in some `Monoid`,\ncombining adjacent elements using the specified separator.\n","title":"intercalate","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]}},"sourceSpan":{"start":[194,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[195,1]}},{"children":[],"comments":"Find the largest element of a structure, according to its `Ord` instance.\n","title":"maximum","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[237,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[238,1]}},{"children":[],"comments":"Find the largest element of a structure, according to a given comparison\nfunction. The comparison function should represent a total ordering (see\nthe `Ord` type class laws); if it does not, the behaviour is undefined.\n","title":"maximumBy","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[243,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[244,1]}},{"children":[],"comments":"Fold a data structure, accumulating values in some `Monoid`.\n","title":"mconcat","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]},null]},null]}},"sourceSpan":{"start":[189,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[190,1]}},{"children":[],"comments":"Find the smallest element of a structure, according to its `Ord` instance.\n","title":"minimum","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[252,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[253,1]}},{"children":[],"comments":"Find the smallest element of a structure, according to a given comparison\nfunction. The comparison function should represent a total ordering (see\nthe `Ord` type class laws); if it does not, the behaviour is undefined.\n","title":"minimumBy","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[258,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[259,1]}},{"children":[],"comments":"Test whether a value is not an element of a data structure.\n","title":"notElem","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}},"sourceSpan":{"start":[229,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[230,1]}},{"children":[],"comments":"Test whether any `Boolean` value in a data structure is `true`.\n","title":"or","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[205,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[206,1]}},{"children":[],"comments":"Find the product of the numeric values in a data structure.\n","title":"product","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[221,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[222,1]}},{"children":[],"comments":"Perform all of the effects in some data structure in the order\ngiven by the `Foldable` instance, ignoring the final result.\n\nFor example:\n\n```purescript\nsequence_ [ trace \"Hello, \", trace \" world!\" ]\n```\n","title":"sequence_","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[186,1]}},{"children":[],"comments":"Find the sum of the numeric values in a data structure.\n","title":"sum","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[217,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[218,1]}},{"children":[],"comments":"Traverse a data structure, performing some effects encoded by an\n`Applicative` functor at each value, ignoring the final result.\n\nFor example:\n\n```purescript\ntraverse_ print [1, 2, 3]\n```\n","title":"traverse_","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[158,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[159,1]}}]},{"moduleName":["Data","Foreign"],"declarations":[{"children":[],"comments":"An error monad, used in this library to encode possible failure when\ndealing with foreign data.\n","title":"F","fixity":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}]}},"sourceSpan":{"start":[68,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[70,1]}},{"children":[],"comments":"A type for _foreign data_.\n\nForeign data is data from any external _unknown_ or _unreliable_\nsource, for which it cannot be guaranteed that the runtime representation\nconforms to that of any particular type.\n\nSuitable applications of `Foreign` are\n\n- To represent responses from web services\n- To integrate with external JavaScript libraries.\n","title":"Foreign","fixity":null,"info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[47,1]}},{"children":[{"comments":null,"title":"TypeMismatch","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ErrorAtIndex","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ErrorAtProperty","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"JSONError","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showForeignError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[59,1]}},{"comments":null,"title":"eqForeignError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[68,1]}}],"comments":"A type for runtime type errors\n","title":"ForeignError","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[53,1]}},{"children":[],"comments":"Test whether a foreign value is an array\n","title":"isArray","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[103,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[106,1]}},{"children":[],"comments":"Test whether a foreign value is null\n","title":"isNull","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[97,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[100,1]}},{"children":[],"comments":"Test whether a foreign value is undefined\n","title":"isUndefined","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[100,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[103,1]}},{"children":[],"comments":"Attempt to parse a JSON string, returning the result as foreign data.\n","title":"parseJSON","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[74,1]}},{"children":[],"comments":"Attempt to coerce a foreign value to an array.\n","title":"readArray","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}}]}]}},"sourceSpan":{"start":[138,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[139,1]}},{"children":[],"comments":"Attempt to coerce a foreign value to a `Boolean`.\n","title":"readBoolean","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[120,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[121,1]}},{"children":[],"comments":"Attempt to coerce a foreign value to a `Char`.\n","title":"readChar","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[111,1]}},{"children":[],"comments":"Attempt to coerce a foreign value to an `Int`.\n","title":"readInt","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[128,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[129,1]}},{"children":[],"comments":"Attempt to coerce a foreign value to a `Number`.\n","title":"readNumber","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[124,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[125,1]}},{"children":[],"comments":"Attempt to coerce a foreign value to a `String`.\n","title":"readString","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[106,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[107,1]}},{"children":[],"comments":"Read the Javascript _tag_ of a value.\n\nThis function wraps the `Object.toString` method.\n","title":"tagOf","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[92,1]}},{"children":[],"comments":"Coerce any value to the a `Foreign` value.\n","title":"toForeign","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},null]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[80,1]}},{"children":[],"comments":"Read the Javascript _type_ of a value\n","title":"typeOf","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[83,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[88,1]}},{"children":[],"comments":"Unsafely coerce a `Foreign` value.\n","title":"unsafeFromForeign","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[80,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[83,1]}},{"children":[],"comments":"Unsafely coerce a `Foreign` value when the value has a particular `tagOf`\nvalue.\n","title":"unsafeReadTagged","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-foreign/src/Data/Foreign.purs","end":[93,1]}}]},{"moduleName":["Data","Foreign","Class"],"declarations":[{"children":[{"comments":null,"title":"read","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"foreignIsForeign","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[35,1]}},{"comments":null,"title":"stringIsForeign","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[38,1]}},{"comments":null,"title":"charIsForeign","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[41,1]}},{"comments":null,"title":"booleanIsForeign","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[44,1]}},{"comments":null,"title":"numberIsForeign","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[47,1]}},{"comments":null,"title":"intIsForeign","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[50,1]}},{"comments":null,"title":"arrayIsForeign","info":{"declType":"instance","dependencies":[[[["Data","Foreign","Class"],"IsForeign"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[59,1]}},{"comments":null,"title":"nullIsForeign","info":{"declType":"instance","dependencies":[[[["Data","Foreign","Class"],"IsForeign"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Null"],"Null"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[62,1]}},{"comments":null,"title":"undefinedIsForeign","info":{"declType":"instance","dependencies":[[[["Data","Foreign","Class"],"IsForeign"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Undefined"],"Undefined"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[65,1]}},{"comments":null,"title":"nullOrUndefinedIsForeign","info":{"declType":"instance","dependencies":[[[["Data","Foreign","Class"],"IsForeign"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Class"],"IsForeign"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[69,1]}}],"comments":"A type class instance for this class can be written for a type if it\nis possible to attempt to _safely_ coerce a `Foreign` value to that\ntype.\n\nInstances are provided for standard data structures, and the `F` monad\ncan be used to construct instances for new data structures.\n","title":"IsForeign","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[32,1]}},{"children":[],"comments":"Attempt to read a data structure from a JSON string\n","title":"readJSON","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foreign","Class"],"IsForeign"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[70,1]}},{"children":[],"comments":"Attempt to read a property of a foreign value at the specified index\n","title":"readProp","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foreign","Class"],"IsForeign"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Foreign","Index"],"Index"],[{"tag":"TypeVar","contents":"i"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[78,1]}},{"children":[],"comments":"Attempt to read a foreign value, handling errors using the specified function\n","title":"readWith","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Foreign","Class"],"IsForeign"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Class.purs","end":[74,1]}}]},{"moduleName":["Data","Foreign","Index"],"declarations":[{"children":[{"comments":null,"title":"ix","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]}]}},"sourceSpan":null},{"comments":null,"title":"hasProperty","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":null},{"comments":null,"title":"hasOwnProperty","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":null},{"comments":null,"title":"errorAt","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"ForeignError"]}]}]}},"sourceSpan":null},{"comments":null,"title":"indexString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Index"],"Index"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Index.purs","end":[71,1]}},{"comments":null,"title":"indexInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Index"],"Index"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Index.purs","end":[75,13]}}],"comments":"This type class identifies types wich act like _property indices_.\n\nThe canonical instances are for `String`s and `Number`s.\n","title":"Index","fixity":null,"info":{"arguments":[["i",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Index.purs","end":[30,1]}},{"children":[],"comments":"Attempt to read a value from a foreign value property\n","title":"prop","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Index.purs","end":[43,1]}},{"children":[],"comments":"An infix alias for `ix`.\n","title":"(!)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[[[[["Data","Foreign","Index"],"Index"],[{"tag":"TypeVar","contents":"i"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]}]}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Index.purs","end":[34,1]}}]},{"moduleName":["Data","Foreign","Null"],"declarations":[{"children":[{"comments":null,"title":"Null","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A `newtype` wrapper whose `IsForeign` instance correctly handles\nnull values.\n\nConceptually, this type represents values which may be `null`,\nbut not `undefined`.\n","title":"Null","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Null.purs","end":[20,1]}},{"children":[],"comments":"Read a `Null` value\n","title":"readNull","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Null"],"Null"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Null.purs","end":[25,1]}},{"children":[],"comments":"Unwrap a `Null` value\n","title":"runNull","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Null"],"Null"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Null.purs","end":[21,1]}}]},{"moduleName":["Data","Foreign","NullOrUndefined"],"declarations":[{"children":[{"comments":null,"title":"NullOrUndefined","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A `newtype` wrapper whose `IsForeign` instance correctly handles\nnull and undefined values.\n\nConceptually, this type represents values which may be `null`\nor `undefined`.\n","title":"NullOrUndefined","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/NullOrUndefined.purs","end":[20,1]}},{"children":[],"comments":"Read a `NullOrUndefined` value\n","title":"readNullOrUndefined","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/NullOrUndefined.purs","end":[25,1]}},{"children":[],"comments":"Unwrap a `NullOrUndefined` value\n","title":"runNullOrUndefined","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","NullOrUndefined"],"NullOrUndefined"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/NullOrUndefined.purs","end":[21,1]}}]},{"moduleName":["Data","Foreign","Undefined"],"declarations":[{"children":[{"comments":null,"title":"Undefined","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A `newtype` wrapper whose `IsForeign` instance correctly handles\nundefined values.\n\nConceptually, this type represents values which may be `undefined`,\nbut not `null`.\n","title":"Undefined","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Undefined.purs","end":[20,1]}},{"children":[],"comments":"Read an `Undefined` value\n","title":"readUndefined","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Undefined"],"Undefined"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Undefined.purs","end":[25,1]}},{"children":[],"comments":"Unwrap an `Undefined` value\n","title":"runUndefined","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign","Undefined"],"Undefined"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-foreign/src/Data/Foreign/Undefined.purs","end":[21,1]}}]},{"moduleName":["Data","Function"],"declarations":[{"children":[],"comments":"A function of zero arguments\n","title":"Fn0","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[20,1]}},{"children":[],"comments":"A function of one argument\n","title":"Fn1","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]},"declType":"externData"},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[23,1]}},{"children":[],"comments":"A function of ten arguments\n","title":"Fn10","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]}]}]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[50,1]}},{"children":[],"comments":"A function of two arguments\n","title":"Fn2","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[26,1]}},{"children":[],"comments":"A function of three arguments\n","title":"Fn3","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[29,1]}},{"children":[],"comments":"A function of four arguments\n","title":"Fn4","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[32,1]}},{"children":[],"comments":"A function of five arguments\n","title":"Fn5","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[35,1]}},{"children":[],"comments":"A function of six arguments\n","title":"Fn6","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[38,1]}},{"children":[],"comments":"A function of seven arguments\n","title":"Fn7","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[41,1]}},{"children":[],"comments":"A function of eight arguments\n","title":"Fn8","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[44,1]}},{"children":[],"comments":"A function of nine arguments\n","title":"Fn9","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]}]}]}]}]}]}]}]},"declType":"externData"},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[47,1]}},{"children":[],"comments":"Create a function of no arguments\n","title":"mkFn0","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn0"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[53,1]}},{"children":[],"comments":"Create a function of one argument\n","title":"mkFn1","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn1"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[56,1]}},{"children":[],"comments":"Create a function of ten arguments from a curried function\n","title":"mkFn10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"k"}]}]}]}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"k"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[83,1]}},{"children":[],"comments":"Create a function of two arguments from a curried function\n","title":"mkFn2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[59,1]}},{"children":[],"comments":"Create a function of three arguments from a curried function\n","title":"mkFn3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[62,1]}},{"children":[],"comments":"Create a function of four arguments from a curried function\n","title":"mkFn4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[65,1]}},{"children":[],"comments":"Create a function of five arguments from a curried function\n","title":"mkFn5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[68,1]}},{"children":[],"comments":"Create a function of six arguments from a curried function\n","title":"mkFn6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[68,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[71,1]}},{"children":[],"comments":"Create a function of seven arguments from a curried function\n","title":"mkFn7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[74,1]}},{"children":[],"comments":"Create a function of eight arguments from a curried function\n","title":"mkFn8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[74,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[77,1]}},{"children":[],"comments":"Create a function of nine arguments from a curried function\n","title":"mkFn9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[80,1]}},{"children":[],"comments":"The `on` function is used to change the domain of a binary operator.\n\nFor example, we can create a function which compares two records based on the values of their `x` properties:\n\n```purescript\ncompareX :: forall r. { x :: Number | r } -> { x :: Number | r } -> Ordering\ncompareX = compare `on` _.x\n```\n","title":"on","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[14,1]}},{"children":[],"comments":"Apply a function of no arguments\n","title":"runFn0","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn0"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[83,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[86,1]}},{"children":[],"comments":"Apply a function of one argument\n","title":"runFn1","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn1"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[89,1]}},{"children":[],"comments":"Apply a function of ten arguments\n","title":"runFn10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"k"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"k"}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[113,137]}},{"children":[],"comments":"Apply a function of two arguments\n","title":"runFn2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[92,1]}},{"children":[],"comments":"Apply a function of three arguments\n","title":"runFn3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[95,1]}},{"children":[],"comments":"Apply a function of four arguments\n","title":"runFn4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[98,1]}},{"children":[],"comments":"Apply a function of five arguments\n","title":"runFn5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[101,1]}},{"children":[],"comments":"Apply a function of six arguments\n","title":"runFn6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[101,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[104,1]}},{"children":[],"comments":"Apply a function of seven arguments\n","title":"runFn7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[107,1]}},{"children":[],"comments":"Apply a function of eight arguments\n","title":"runFn8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[110,1]}},{"children":[],"comments":"Apply a function of nine arguments\n","title":"runFn9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function"],"Fn9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-functions/src/Data/Function.purs","end":[113,1]}}]},{"moduleName":["Data","Functor"],"declarations":[{"children":[],"comments":"A version of `(<$)` with its arguments flipped.\n","title":"($>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-control/src/Data/Functor.purs","end":[16,1]}},{"children":[],"comments":"Ignore the return value of a computation, using the specified return value instead.\n","title":"(<$)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[11,1],"name":"bower_components/purescript-control/src/Data/Functor.purs","end":[12,1]}}]},{"moduleName":["Data","Functor","Contravariant"],"declarations":[{"children":[{"comments":null,"title":"cmap","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null}],"comments":"A `Contravariant` functor can be seen as a way of changing the input type\nof a consumer of input, in contrast to the standard covariant `Functor`\nthat can be seen as a way of changing the output type of a producer of\noutput.\n\n`Contravariant` instances should satisfy the following laws:\n\n- Identity `(>$<) id = id`\n- Composition `(f >$<) <<< (g >$<) = (>$<) (g <<< f)`\n","title":"Contravariant","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant.purs","end":[16,1]}},{"children":[],"comments":"`(>#<)` is `(>$<)` with its arguments reversed.\n","title":"(>#<)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Functor","Contravariant"],"Contravariant"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant.purs","end":[21,1]}},{"children":[],"comments":"An infix version of `cmap`.\n","title":"(>$<)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Functor","Contravariant"],"Contravariant"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant.purs","end":[17,1]}}]},{"moduleName":["Data","Functor","Contravariant","Divisible"],"declarations":[{"children":[{"comments":null,"title":"lose","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"decidableComparison","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decidable"]},{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]}]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[108,1]}},{"comments":null,"title":"decidableEquivalence","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decidable"]},{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]}]}},"sourceSpan":{"start":[117,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[120,1]}},{"comments":null,"title":"decidablePredicate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decidable"]},{"tag":"TypeConstructor","contents":[["Data","Predicate"],"Predicate"]}]}},"sourceSpan":{"start":[123,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[126,1]}},{"comments":null,"title":"decidableOp","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"r"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decidable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[129,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[130,10]}}],"comments":"`Decidable` is the contravariant analogue of `Alternative`.\n","title":"Decidable","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Data","Functor","Contravariant","Divisible"],"Decide"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Functor","Contravariant","Divisible"],"Divisible"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[93,1]}},{"children":[{"comments":null,"title":"decide","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"decideComparison","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decide"]},{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]}]}},"sourceSpan":{"start":[96,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[105,1]}},{"comments":null,"title":"decideEquivalence","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decide"]},{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]}]}},"sourceSpan":{"start":[108,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[117,1]}},{"comments":null,"title":"decidePredicate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decide"]},{"tag":"TypeConstructor","contents":[["Data","Predicate"],"Predicate"]}]}},"sourceSpan":{"start":[120,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[123,1]}},{"comments":null,"title":"decideOp","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"r"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Decide"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[126,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[129,1]}}],"comments":"`Decide` is the contravariant analogue of `Alt`.\n","title":"Decide","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Data","Functor","Contravariant","Divisible"],"Divide"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[89,1]}},{"children":[{"comments":null,"title":"divide","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"divideComparison","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divide"]},{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[55,1]}},{"comments":null,"title":"divideEquivalence","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divide"]},{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[63,1]}},{"comments":null,"title":"dividePredicate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divide"]},{"tag":"TypeConstructor","contents":[["Data","Predicate"],"Predicate"]}]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[70,1]}},{"comments":null,"title":"divideOp","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"r"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divide"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[77,1]}}],"comments":"`Divide` is the contravariant analogue of `Apply`.\n\nFor example, to test equality of `Point`s, we can use the `Divide` instance\nfor `Equivalence`:\n\n```purescript\ntype Point = Tuple Int Int\n\npointEquiv :: Equivalence Point\npointEquiv = divided defaultEquivalence defaultEquivalence\n```\n","title":"Divide","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Data","Functor","Contravariant"],"Contravariant"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[47,1]}},{"children":[{"comments":null,"title":"conquer","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":null},{"comments":null,"title":"divisibleComparison","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divisible"]},{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[58,1]}},{"comments":null,"title":"divisibleEquivalence","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divisible"]},{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]}]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[66,1]}},{"comments":null,"title":"divisiblePredicate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divisible"]},{"tag":"TypeConstructor","contents":[["Data","Predicate"],"Predicate"]}]}},"sourceSpan":{"start":[70,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[73,1]}},{"comments":null,"title":"divisibleOp","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"r"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant","Divisible"],"Divisible"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[81,1]}}],"comments":"`Divisible` is the contravariant analogue of `Applicative`.\n","title":"Divisible","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Data","Functor","Contravariant","Divisible"],"Divide"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[50,1]}},{"children":[],"comments":"`decided = decide id`\n","title":"decided","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Functor","Contravariant","Divisible"],"Decide"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[94,1]}},{"children":[],"comments":"`divided = divide id`\n","title":"divided","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Functor","Contravariant","Divisible"],"Divide"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-contravariant/src/Data/Functor/Contravariant/Divisible.purs","end":[82,1]}}]},{"moduleName":["Data","Functor","Coproduct"],"declarations":[{"children":[{"comments":null,"title":"Coproduct","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorCoproduct","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[34,1]}},{"comments":null,"title":"foldableCoproduct","info":{"declType":"instance","dependencies":[[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[39,1]}},{"comments":null,"title":"traversableCoproduct","info":{"declType":"instance","dependencies":[[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[45,46]}}],"comments":"`Coproduct f g` is the coproduct of two functors `f` and `g`\n","title":"Coproduct","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["g",null],["a",null]]},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[15,1]}},{"children":[],"comments":"Eliminate a coproduct by providing eliminators for the left and\nright components\n","title":"coproduct","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[29,1]}},{"children":[],"comments":"Left injection\n","title":"left","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[20,1]}},{"children":[],"comments":"Right injection\n","title":"right","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[24,1]}},{"children":[],"comments":"Unwrap a coproduct\n","title":"runCoproduct","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-coproducts/src/Data/Functor/Coproduct.purs","end":[16,1]}}]},{"moduleName":["Data","Functor","Invariant"],"declarations":[{"children":[{"comments":null,"title":"imap","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"invariantFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-invariant/src/Data/Functor/Invariant.purs","end":[26,1]}},{"comments":null,"title":"invariantArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-invariant/src/Data/Functor/Invariant.purs","end":[27,10]}}],"comments":"A type of functor that can be used to adapt the type of a wrapped function\nwhere the parameterised type occurs in both the positive and negative\nposition, for example, `F (a -> a)`.\n\nAn `Invariant` instance should satisfy the following laws:\n\n- Identity: `imap id id = id`\n- Composition: `imap g1 g2 <<< imap f1 f2 = imap (g1 <<< f1) (f2 <<< g2)`\n\n","title":"Invariant","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-invariant/src/Data/Functor/Invariant.purs","end":[20,1]}},{"children":[],"comments":"As all `Functor`s are also trivially `Invariant`, this function can be\nused as the `imap` implementation for all `Invariant` instances for\n`Functors`.\n","title":"imapF","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-invariant/src/Data/Functor/Invariant.purs","end":[21,1]}}]},{"moduleName":["Data","Generic"],"declarations":[{"children":[{"comments":null,"title":"SigProd","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"DataConstructor"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SigRecord","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["recLabel",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["recValue",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"REmpty","contents":[]}]}]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SigNumber","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SigBoolean","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SigInt","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SigString","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SigChar","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SigArray","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showGenericSignature","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]}},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[94,1]}}],"comments":"A GenericSignature is a universal representation of the structure of an arbitrary data structure (that does not contain function arrows).\n","title":"GenericSignature","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[54,1]}},{"children":[{"comments":null,"title":"SProd","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SRecord","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["recLabel",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["recValue",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"REmpty","contents":[]}]}]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SNumber","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SBoolean","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SInt","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SString","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SChar","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SArray","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqGeneric","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}},"sourceSpan":{"start":[257,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[272,1]}},{"comments":null,"title":"ordGeneric","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}},"sourceSpan":{"start":[277,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[318,1]}}],"comments":"A GenericSpine is a universal representation of an arbitrary data structure (that does not contain function arrows).\n","title":"GenericSpine","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[39,1]}},{"children":[{"comments":null,"title":"toSpine","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}},"sourceSpan":null},{"comments":null,"title":"toSignature","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]}},"sourceSpan":null},{"comments":null,"title":"fromSpine","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"genericNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[142,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[148,1]}},{"comments":null,"title":"genericInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[148,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[154,1]}},{"comments":null,"title":"genericString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[154,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[160,1]}},{"comments":null,"title":"genericChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[160,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[166,1]}},{"comments":null,"title":"genericBool","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[166,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[172,1]}},{"comments":null,"title":"genericArray","info":{"declType":"instance","dependencies":[[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[172,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[181,1]}},{"comments":null,"title":"genericTuple","info":{"declType":"instance","dependencies":[[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[181,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[197,1]}},{"comments":null,"title":"genericMaybe","info":{"declType":"instance","dependencies":[[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[197,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[214,1]}},{"comments":null,"title":"genericEither","info":{"declType":"instance","dependencies":[[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[214,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[235,1]}}],"comments":"The Generic typeclass provides methods for sending data to/from spine representations, as well as querying about the signatures of spine representations.\nFor standard data structures, you can simply write `derive instance genericFoo :: Generic Foo` in the module they are declared, and the instance methods will be filled in for you.\n","title":"Generic","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[118,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[124,1]}},{"children":[],"comments":"This function can be used as the default instance for the compare method of Ord for any instance of Generic\n","title":"gCompare","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}]},null]}},"sourceSpan":{"start":[318,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[319,1]}},{"children":[],"comments":"This function can be used as the default instance for Eq for any instance of Generic\n","title":"gEq","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[272,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[273,1]}},{"children":[],"comments":"This function can be used as the default instance for Show for any instance of Generic\n","title":"gShow","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Generic"],"Generic"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[252,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[253,1]}},{"children":[],"comments":"Checks that the spine follows the structure defined by the signature\n","title":"isValidSpine","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[124,1],"name":"bower_components/purescript-generics/src/Data/Generic.purs","end":[125,1]}}]},{"moduleName":["Data","Identity"],"declarations":[{"children":[{"comments":null,"title":"Identity","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[20,1]}},{"comments":null,"title":"ordIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[23,1]}},{"comments":null,"title":"boundedIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[27,1]}},{"comments":null,"title":"boundedOrdIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"BoundedOrd"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[29,1]}},{"comments":null,"title":"booleanAlgebraIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BooleanAlgebra"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[34,1]}},{"comments":null,"title":"semigroupIdenity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[37,1]}},{"comments":null,"title":"monoidIdentity","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[40,1]}},{"comments":null,"title":"semiringIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[46,1]}},{"comments":null,"title":"moduloSemiringIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"ModuloSemiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[50,1]}},{"comments":null,"title":"ringIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[53,1]}},{"comments":null,"title":"divisionRingIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"DivisionRing"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[55,1]}},{"comments":null,"title":"numIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Num"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[57,1]}},{"comments":null,"title":"showIdentity","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[60,1]}},{"comments":null,"title":"functorIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[60,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[63,1]}},{"comments":null,"title":"invariantIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[66,1]}},{"comments":null,"title":"applyIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[69,1]}},{"comments":null,"title":"applicativeIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[72,1]}},{"comments":null,"title":"bindIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[72,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[75,1]}},{"comments":null,"title":"monadIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[75,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[77,1]}},{"comments":null,"title":"extendIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[80,1]}},{"comments":null,"title":"comonadIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[80,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[83,1]}},{"comments":null,"title":"foldableIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[83,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[88,1]}},{"comments":null,"title":"traversableIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[90,40]}}],"comments":null,"title":"Identity","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[14,1]}},{"children":[],"comments":null,"title":"runIdentity","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-identity/src/Data/Identity.purs","end":[15,1]}}]},{"moduleName":["Data","Inject"],"declarations":[{"children":[{"comments":null,"title":"inj","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"prj","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":null},{"comments":"Any functor is isomorphic to the coproduct of itself with the \nconstantly-`Void` functor.\n","title":"injectReflexive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Inject"],"Inject"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"f"}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-inject/src/Data/Inject.purs","end":[34,1]}},{"comments":"Left injection\n","title":"injectLeft","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Inject"],"Inject"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-inject/src/Data/Inject.purs","end":[39,1]}},{"comments":"Right injection\n","title":"injectRight","info":{"declType":"instance","dependencies":[[[["Data","Inject"],"Inject"],[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Inject"],"Inject"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"g"}]}}]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-inject/src/Data/Inject.purs","end":[41,35]}}],"comments":"The `Inject` class asserts a coproduct relationship between two functors.\n\nSpecifically, an instance `Inject f g` indicates that `g` is isomorphic to\na coproduct of `f` and some third functor.\n\nLaws:\n\n- `prj g = Just f` if and only if `inj f = g`\n","title":"Inject","fixity":null,"info":{"arguments":[["f",null],["g",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-inject/src/Data/Inject.purs","end":[29,1]}}]},{"moduleName":["Data","Int"],"declarations":[{"children":[],"comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\ngreater than the argument. Values outside the `Int` range are clamped.\n","title":"ceil","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-integers/src/Data/Int.purs","end":[38,1]}},{"children":[],"comments":"Returns whether an `Int` is an even number.\n\n``` purescript\neven 0 == true\neven 1 == false\n```\n","title":"even","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[75,1],"name":"bower_components/purescript-integers/src/Data/Int.purs","end":[76,1]}},{"children":[],"comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\nless than the argument. Values outside the `Int` range are clamped.\n","title":"floor","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-integers/src/Data/Int.purs","end":[33,1]}},{"children":[],"comments":"Creates an `Int` from a `Number` value. The number must already be an\ninteger and fall within the valid range of values for the `Int` type\notherwise `Nothing` is returned.\n","title":"fromNumber","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-integers/src/Data/Int.purs","end":[23,1]}},{"children":[],"comments":"The negation of `even`.\n\n``` purescript\nodd 0 == false\nodd 1 == false\n```\n","title":"odd","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-integers/src/Data/Int.purs","end":[85,1]}},{"children":[],"comments":"Convert a `Number` to an `Int`, by taking the nearest integer to the\nargument. Values outside the `Int` range are clamped.\n","title":"round","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-integers/src/Data/Int.purs","end":[43,1]}},{"children":[],"comments":"Converts an `Int` value back into a `Number`. Any `Int` is a valid `Number`\nso there is no loss of precision with this function.\n","title":"toNumber","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-integers/src/Data/Int.purs","end":[61,1]}}]},{"moduleName":["Data","Int","Bits"],"declarations":[{"children":[],"comments":"Bitwise NOT.\n","title":"complement","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[44,1],"name":"bower_components/purescript-integers/src/Data/Int/Bits.purs","end":[44,37]}},{"children":[],"comments":"Bitwise shift left.\n","title":"shl","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-integers/src/Data/Int/Bits.purs","end":[38,1]}},{"children":[],"comments":"Bitwise shift right.\n","title":"shr","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-integers/src/Data/Int/Bits.purs","end":[41,1]}},{"children":[],"comments":"Bitwise zero-fill shift right.\n","title":"zshr","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-integers/src/Data/Int/Bits.purs","end":[44,1]}},{"children":[],"comments":"Bitwise AND.\n","title":"(.&.)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-integers/src/Data/Int/Bits.purs","end":[18,1]}},{"children":[],"comments":"Bitwise XOR.\n","title":"(.^.)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-integers/src/Data/Int/Bits.purs","end":[30,1]}},{"children":[],"comments":"Bitwise OR.\n","title":"(.|.)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-integers/src/Data/Int/Bits.purs","end":[24,1]}}]},{"moduleName":["Data","Lazy"],"declarations":[{"children":[],"comments":"Force evaluation of a `Lazy` value.\n","title":"force","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-lazy/src/Data/Lazy.purs","end":[30,1]}}]},{"moduleName":["Data","List"],"declarations":[{"children":[{"comments":null,"title":"Nil","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cons","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showList","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[726,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[730,1]}},{"comments":null,"title":"eqList","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[730,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[739,1]}},{"comments":null,"title":"ordList","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[739,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[750,1]}},{"comments":null,"title":"semigroupList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[750,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[754,1]}},{"comments":null,"title":"monoidList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[754,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[757,1]}},{"comments":null,"title":"functorList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[757,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[764,1]}},{"comments":null,"title":"foldableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[764,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[774,1]}},{"comments":null,"title":"unfoldableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable"],"Unfoldable"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[774,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[781,1]}},{"comments":null,"title":"traversableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[781,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[787,1]}},{"comments":null,"title":"applyList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[787,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[791,1]}},{"comments":null,"title":"applicativeList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[791,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[794,1]}},{"comments":null,"title":"bindList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[794,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[797,1]}},{"comments":null,"title":"monadList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[797,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[799,1]}},{"comments":null,"title":"altList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[799,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[802,1]}},{"comments":null,"title":"plusList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[802,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[805,1]}},{"comments":null,"title":"alternativeList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[805,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[807,1]}},{"comments":null,"title":"monadPlusList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"TypeConstructor","contents":[["Data","List"],"List"]}]}},"sourceSpan":{"start":[807,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[807,37]}}],"comments":"A strict linked list.\n\nA list is either empty (represented by the `Nil` constructor) or non-empty, in\nwhich case it consists of a head element, and another list (represented by the\n`Cons` constructor).\n","title":"List","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[111,1],"name":"bower_components/purescript-lists/src/Data/List.purs","end":[116,1]}}]},{"moduleName":["Data","List","Lazy"],"declarations":[{"children":[],"comments":"Create a list by repeating another list\n","title":"cycle","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[182,1],"name":"bower_components/purescript-lists/src/Data/List/Lazy.purs","end":[183,1]}},{"children":[],"comments":"Unwrap a lazy linked list\n","title":"runList","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"Step"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[118,1],"name":"bower_components/purescript-lists/src/Data/List/Lazy.purs","end":[119,1]}},{"children":[],"comments":"Unwrap a lazy linked list\n","title":"step","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"Step"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[142,1],"name":"bower_components/purescript-lists/src/Data/List/Lazy.purs","end":[143,1]}}]},{"moduleName":["Data","List","ZipList"],"declarations":[{"children":[{"comments":null,"title":"ZipList","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"List"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showZipList","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[31,1]}},{"comments":null,"title":"eqZipList","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[34,1]}},{"comments":null,"title":"ordZipList","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[37,1]}},{"comments":null,"title":"semigroupZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[40,1]}},{"comments":null,"title":"monoidZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[43,1]}},{"comments":null,"title":"foldableZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[48,1]}},{"comments":null,"title":"traversableZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[52,1]}},{"comments":null,"title":"functorZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[55,1]}},{"comments":null,"title":"applyZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[58,1]}},{"comments":null,"title":"applicativeZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[61,1]}},{"comments":null,"title":"altZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[64,1]}},{"comments":null,"title":"plusZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[67,1]}},{"comments":null,"title":"alternativeZipList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]}]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[67,44]}}],"comments":"`ZipList` is a newtype around `List` which provides a zippy\n`Applicative` instance.\n","title":"ZipList","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[25,1]}},{"children":[],"comments":"Unpack a `ZipList` to obtain the underlying list.\n","title":"runZipList","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","ZipList"],"ZipList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-lists/src/Data/List/ZipList.purs","end":[26,1]}}]},{"moduleName":["Data","Map"],"declarations":[{"children":[{"comments":null,"title":"eqMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"k"}]],[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"v"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[49,1]}},{"comments":null,"title":"showMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"k"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"v"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[52,1]}},{"comments":null,"title":"ordMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"k"}]],[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"v"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[55,1]}},{"comments":null,"title":"semigroupMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"k"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[58,1]}},{"comments":null,"title":"monoidMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"k"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[61,1]}},{"comments":null,"title":"functorMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]}}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[66,1]}},{"comments":null,"title":"foldableMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]}}]}},"sourceSpan":{"start":[66,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[71,1]}},{"comments":null,"title":"traversableMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"k"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]}}]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[76,1]}}],"comments":"`Map k v` represents maps from keys of type `k` to values of type `v`.\n","title":"Map","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["k",null],["v",null]]},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[46,1]}},{"children":[],"comments":"Render a `Map` as a `String`\n","title":"showTree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"k"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"v"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[77,1]}},{"children":[],"comments":"Compute the union of two maps, using the specified function\nto combine values for duplicate keys.\n","title":"unionWith","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"k"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[317,1],"name":"bower_components/purescript-maps/src/Data/Map.purs","end":[318,1]}}]},{"moduleName":["Data","Maybe"],"declarations":[{"children":[{"comments":null,"title":"Nothing","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Just","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"The `Functor` instance allows functions to transform the contents of a\n`Just` with the `<$>` operator:\n\n``` purescript\nf <$> Just x == Just (f x)\n```\n\n`Nothing` values are left untouched:\n\n``` purescript\nf <$> Nothing == Nothing\n```\n","title":"functorMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[121,1]}},{"comments":"The `Apply` instance allows functions contained within a `Just` to\ntransform a value contained within a `Just` using the `apply` operator:\n\n``` purescript\nJust f <*> Just x == Just (f x)\n```\n\n`Nothing` values are left untouched:\n\n``` purescript\nJust f <*> Nothing == Nothing\nNothing <*> Just x == Nothing\n```\n\nCombining `Functor`'s `<$>` with `Apply`'s `<*>` can be used transform a\npure function to take `Maybe`-typed arguments so `f :: a -> b -> c`\nbecomes `f :: Maybe a -> Maybe b -> Maybe c`:\n\n``` purescript\nf <$> Just x <*> Just y == Just (f x y)\n```\n\nThe `Nothing`-preserving behaviour of both operators means the result of\nan expression like the above but where any one of the values is `Nothing`\nmeans the whole result becomes `Nothing` also:\n\n``` purescript\nf <$> Nothing <*> Just y == Nothing\nf <$> Just x <*> Nothing == Nothing\nf <$> Nothing <*> Nothing == Nothing\n```\n","title":"applyMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[121,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[145,1]}},{"comments":"The `Applicative` instance enables lifting of values into `Maybe` with the\n`pure` or `return` function (`return` is an alias for `pure`):\n\n``` purescript\npure x :: Maybe _ == Just x\nreturn x :: Maybe _ == Just x\n```\n\nCombining `Functor`'s `<$>` with `Apply`'s `<*>` and `Applicative`'s\n`pure` can be used to pass a mixture of `Maybe` and non-`Maybe` typed\nvalues to a function that does not usually expect them, by using `pure`\nfor any value that is not already `Maybe` typed:\n\n``` purescript\nf <$> Just x <*> pure y == Just (f x y)\n```\n\nEven though `pure = Just` it is recommended to use `pure` in situations\nlike this as it allows the choice of `Applicative` to be changed later\nwithout having to go through and replace `Just` with a new constructor.\n","title":"applicativeMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[145,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[157,1]}},{"comments":"The `Alt` instance allows for a choice to be made between two `Maybe`\nvalues with the `<|>` operator, where the first `Just` encountered\nis taken.\n\n``` purescript\nJust x <|> Just y == Just x\nNothing <|> Just y == Just y\nNothing <|> Nothing == Nothing\n```\n","title":"altMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[157,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[166,1]}},{"comments":"The `Plus` instance provides a default `Maybe` value:\n\n``` purescript\nempty :: Maybe _ == Nothing\n```\n","title":"plusMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[166,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[171,1]}},{"comments":"The `Alternative` instance guarantees that there are both `Applicative` and\n`Plus` instances for `Maybe`.\n","title":"alternativeMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[171,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[180,1]}},{"comments":"The `Bind` instance allows sequencing of `Maybe` values and functions that\nreturn a `Maybe` by using the `>>=` operator:\n\n``` purescript\nJust x >>= f = f x\nNothing >>= f = Nothing\n```\n","title":"bindMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[180,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[199,1]}},{"comments":"The `Monad` instance guarantees that there are both `Applicative` and\n`Bind` instances for `Maybe`. This also enables the `do` syntactic sugar:\n\n``` purescript\ndo\n  x' <- x\n  y' <- y\n  pure (f x' y')\n```\n\nWhich is equivalent to:\n\n``` purescript\nx >>= (\\x' -> y >>= (\\y' -> pure (f x' y')))\n```\n","title":"monadMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[199,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[203,1]}},{"comments":"The `MonadPlus` instance guarantees that there are both `Monad` and\n`Alternative` instances for `Maybe`.\n","title":"monadPlusMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[203,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[213,1]}},{"comments":"The `Extend` instance allows sequencing of `Maybe` values and functions\nthat accept a `Maybe a` and return a non-`Maybe` result using the\n`<<=` operator.\n\n``` purescript\nf <<= Nothing = Nothing\nf <<= Just x = Just (f x)\n```\n","title":"extendMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[213,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[217,1]}},{"comments":null,"title":"invariantMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[217,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[231,1]}},{"comments":"The `Semigroup` instance enables use of the operator `<>` on `Maybe` values\nwhenever there is a `Semigroup` instance for the type the `Maybe` contains.\nThe exact behaviour of `<>` depends on the \"inner\" `Semigroup` instance,\nbut generally captures the notion of appending or combining things.\n\n``` purescript\nJust x <> Just y = Just (x <> y)\nJust x <> Nothing = Just x\nNothing <> Just y = Just y\nNothing <> Nothing = Nothing\n```\n","title":"semigroupMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[231,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[236,1]}},{"comments":null,"title":"monoidMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[236,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[239,1]}},{"comments":null,"title":"semiringMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[239,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[245,1]}},{"comments":null,"title":"moduloSemiringMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"ModuloSemiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[245,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[249,1]}},{"comments":null,"title":"ringMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[249,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[252,1]}},{"comments":null,"title":"divisionRingMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"DivisionRing"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[252,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[254,1]}},{"comments":null,"title":"numMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Num"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[254,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[259,1]}},{"comments":"The `Eq` instance allows `Maybe` values to be checked for equality with\n`==` and inequality with `/=` whenever there is an `Eq` instance for the\ntype the `Maybe` contains.\n","title":"eqMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[259,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[269,1]}},{"comments":"The `Ord` instance allows `Maybe` values to be compared with\n`compare`, `>`, `>=`, `<` and `<=` whenever there is an `Ord` instance for\nthe type the `Maybe` contains.\n\n`Nothing` is considered to be less than any `Just` value.\n","title":"ordMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[269,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[275,1]}},{"comments":null,"title":"boundedMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[275,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[279,1]}},{"comments":null,"title":"boundedOrdMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"BoundedOrd"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[279,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[281,1]}},{"comments":null,"title":"booleanAlgebraMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BooleanAlgebra"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[281,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[289,1]}},{"comments":"The `Show` instance allows `Maybe` values to be rendered as a string with\n`show` whenever there is an `Show` instance for the type the `Maybe`\ncontains.\n","title":"showMaybe","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[289,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[291,19]}}],"comments":"The `Maybe` type is used to represent optional values and can be seen as\nsomething like a type-safe `null`, where `Nothing` is `null` and `Just x`\nis the non-null value `x`.\n","title":"Maybe","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[26,1]}},{"children":[],"comments":"Takes a default value, and a `Maybe` value. If the `Maybe` value is\n`Nothing` the default value is returned, otherwise the value inside the\n`Just` is returned.\n\n``` purescript\nfromMaybe x Nothing == x\nfromMaybe x (Just y) == y\n```\n","title":"fromMaybe","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[52,1]}},{"children":[],"comments":"Returns `true` when the `Maybe` value was constructed with `Just`.\n","title":"isJust","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[68,1]}},{"children":[],"comments":"Returns `true` when the `Maybe` value is `Nothing`.\n","title":"isNothing","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[72,1]}},{"children":[],"comments":"Takes a default value, a function, and a `Maybe` value. If the `Maybe`\nvalue is `Nothing` the default value is returned, otherwise the function\nis applied to the value inside the `Just` and the result is returned.\n\n``` purescript\nmaybe x f Nothing == x\nmaybe x f (Just y) == f y\n```\n","title":"maybe","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[27,1]}},{"children":[],"comments":"Similar to `maybe` but for use in cases where the default value may be\nexpensive to compute. As PureScript is not lazy, the standard `maybe` has\nto evaluate the default value before returning the result, whereas here\nthe value is only computed when the `Maybe` is known to be `Nothing`.\n\n``` purescript\nmaybe' (\\_ -> x) f Nothing == x\nmaybe' (\\_ -> x) f (Just y) == f y\n```\n","title":"maybe'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-maybe/src/Data/Maybe.purs","end":[40,1]}}]},{"moduleName":["Data","Maybe","First"],"declarations":[{"children":[{"comments":null,"title":"First","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqFirst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[27,1]}},{"comments":null,"title":"ordFirst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[30,1]}},{"comments":null,"title":"boundedFirst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[34,1]}},{"comments":null,"title":"functorFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[37,1]}},{"comments":null,"title":"applyFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[40,1]}},{"comments":null,"title":"applicativeFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[43,1]}},{"comments":null,"title":"bindFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[46,1]}},{"comments":null,"title":"monadFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[48,1]}},{"comments":null,"title":"extendFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[51,1]}},{"comments":null,"title":"invariantFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[54,1]}},{"comments":null,"title":"showFirst","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[57,1]}},{"comments":null,"title":"semigroupFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[61,1]}},{"comments":null,"title":"monoidFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[62,18]}}],"comments":"Monoid returning the first (left-most) non-`Nothing` value.\n\n``` purescript\nFirst (Just x) <> First (Just y) == First (Just x)\nFirst Nothing <> First (Just y) == First (Just y)\nFirst Nothing <> Nothing == First Nothing\nmempty :: First _ == First Nothing\n```\n","title":"First","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[21,1]}},{"children":[],"comments":null,"title":"runFirst","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/First.purs","end":[22,1]}}]},{"moduleName":["Data","Maybe","Last"],"declarations":[{"children":[{"comments":null,"title":"Last","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqLast","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[27,1]}},{"comments":null,"title":"ordLast","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[30,1]}},{"comments":null,"title":"boundedLast","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[34,1]}},{"comments":null,"title":"functorLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[37,1]}},{"comments":null,"title":"applyLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[40,1]}},{"comments":null,"title":"applicativeLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[43,1]}},{"comments":null,"title":"bindLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[46,1]}},{"comments":null,"title":"monadLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[48,1]}},{"comments":null,"title":"extendLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[51,1]}},{"comments":null,"title":"invariantLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[54,1]}},{"comments":null,"title":"showLast","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[57,1]}},{"comments":null,"title":"semigroupLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[61,1]}},{"comments":null,"title":"monoidLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[62,17]}}],"comments":"Monoid returning the last (right-most) non-`Nothing` value.\n\n``` purescript\nLast (Just x) <> Last (Just y) == Last (Just y)\nLast (Just x) <> Nothing == Last (Just x)\nLast Nothing <> Nothing == Last Nothing\nmempty :: Last _ == Last Nothing\n```\n","title":"Last","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[21,1]}},{"children":[],"comments":null,"title":"runLast","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Last.purs","end":[22,1]}}]},{"moduleName":["Data","Maybe","Unsafe"],"declarations":[{"children":[],"comments":"A partial function that extracts the value from the `Just` data\nconstructor. Passing `Nothing` to `fromJust` will throw an error at\nruntime.\n","title":"fromJust","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Unsafe.purs","end":[11,1]}},{"children":[],"comments":null,"title":"unsafeThrow","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[14,1],"name":"bower_components/purescript-maybe/src/Data/Maybe/Unsafe.purs","end":[14,51]}}]},{"moduleName":["Data","Monoid"],"declarations":[{"children":[{"comments":null,"title":"mempty","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"m"}},"sourceSpan":null},{"comments":null,"title":"monoidUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-monoid/src/Data/Monoid.purs","end":[21,1]}},{"comments":null,"title":"monoidFn","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-monoid/src/Data/Monoid.purs","end":[24,1]}},{"comments":null,"title":"monoidString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-monoid/src/Data/Monoid.purs","end":[27,1]}},{"comments":null,"title":"monoidArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-monoid/src/Data/Monoid.purs","end":[28,13]}}],"comments":"A `Monoid` is a `Semigroup` with a value `mempty`, which is both a\nleft and right unit for the associative operation `<>`:\n\n```text\nforall x. mempty <> x = x <> mempty = x\n```\n\n`Monoid`s are commonly used as the result of fold operations, where\n`<>` is used to combine individual results, and `mempty` gives the result\nof folding an empty collection of elements.\n","title":"Monoid","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-monoid/src/Data/Monoid.purs","end":[18,1]}}]},{"moduleName":["Data","Monoid","Additive"],"declarations":[{"children":[{"comments":null,"title":"Additive","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAdditive","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[25,1]}},{"comments":null,"title":"ordAdditive","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[28,1]}},{"comments":null,"title":"functorAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[31,1]}},{"comments":null,"title":"applyAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[34,1]}},{"comments":null,"title":"applicativeAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[37,1]}},{"comments":null,"title":"bindAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[40,1]}},{"comments":null,"title":"monadAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[42,1]}},{"comments":null,"title":"extendAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[45,1]}},{"comments":null,"title":"comonadAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[48,1]}},{"comments":null,"title":"invariantAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[51,1]}},{"comments":null,"title":"showAdditive","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[54,1]}},{"comments":null,"title":"semigroupAdditive","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[57,1]}},{"comments":null,"title":"monoidAdditive","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[58,21]}}],"comments":"Monoid and semigroup for semirings under addition.\n\n``` purescript\nAdditive x <> Additive y == Additive (x + y)\nmempty :: Additive _ == Additive zero\n```\n","title":"Additive","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[19,1]}},{"children":[],"comments":null,"title":"runAdditive","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Additive.purs","end":[20,1]}}]},{"moduleName":["Data","Monoid","Conj"],"declarations":[{"children":[{"comments":null,"title":"Conj","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqConj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[24,1]}},{"comments":null,"title":"ordConj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[27,1]}},{"comments":null,"title":"boundedConj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[31,1]}},{"comments":null,"title":"functorConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[34,1]}},{"comments":null,"title":"applyConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[37,1]}},{"comments":null,"title":"applicativeConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[40,1]}},{"comments":null,"title":"bindConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[43,1]}},{"comments":null,"title":"monadConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[45,1]}},{"comments":null,"title":"extendConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[48,1]}},{"comments":null,"title":"comonadConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[51,1]}},{"comments":null,"title":"showConj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[54,1]}},{"comments":null,"title":"semigroupConj","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[57,1]}},{"comments":null,"title":"monoidConj","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[60,1]}},{"comments":null,"title":"semiringConj","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[60,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[64,41]}}],"comments":"Monoid under conjuntion.\n\n``` purescript\nConj x <> Conj y == Conj (x && y)\nmempty :: Conj _ == Conj top\n```\n","title":"Conj","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[18,1]}},{"children":[],"comments":null,"title":"runConj","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Conj.purs","end":[19,1]}}]},{"moduleName":["Data","Monoid","Disj"],"declarations":[{"children":[{"comments":null,"title":"Disj","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqDisj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[24,1]}},{"comments":null,"title":"ordDisj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[27,1]}},{"comments":null,"title":"boundedDisj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[31,1]}},{"comments":null,"title":"functorDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[34,1]}},{"comments":null,"title":"applyDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[37,1]}},{"comments":null,"title":"applicativeDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[40,1]}},{"comments":null,"title":"bindDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[43,1]}},{"comments":null,"title":"monadDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[45,1]}},{"comments":null,"title":"extendDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[48,1]}},{"comments":null,"title":"comonadDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[51,1]}},{"comments":null,"title":"showDisj","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[54,1]}},{"comments":null,"title":"semigroupDisj","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[57,1]}},{"comments":null,"title":"monoidDisj","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[60,1]}},{"comments":null,"title":"semiringDisj","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[60,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[64,41]}}],"comments":"Monoid under disjuntion.\n\n``` purescript\nDisj x <> Disj y == Disj (x || y)\nmempty :: Disj _ == Disj bottom\n```\n","title":"Disj","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[18,1]}},{"children":[],"comments":null,"title":"runDisj","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Disj.purs","end":[19,1]}}]},{"moduleName":["Data","Monoid","Dual"],"declarations":[{"children":[{"comments":null,"title":"Dual","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqDual","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[25,1]}},{"comments":null,"title":"ordDual","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[28,1]}},{"comments":null,"title":"functorDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[31,1]}},{"comments":null,"title":"applyDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[34,1]}},{"comments":null,"title":"applicativeDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[37,1]}},{"comments":null,"title":"bindDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[40,1]}},{"comments":null,"title":"monadDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[42,1]}},{"comments":null,"title":"extendDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[45,1]}},{"comments":null,"title":"comonadDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[48,1]}},{"comments":null,"title":"invariantDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[51,1]}},{"comments":null,"title":"showDual","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[54,1]}},{"comments":null,"title":"semigroupDual","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[57,1]}},{"comments":null,"title":"monoidDual","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[58,17]}}],"comments":"The dual of a monoid.\n\n``` purescript\nDual x <> Dual y == Dual (y <> x)\nmempty :: Dual _ == Dual mempty\n```\n","title":"Dual","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[19,1]}},{"children":[],"comments":null,"title":"runDual","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Dual.purs","end":[20,1]}}]},{"moduleName":["Data","Monoid","Endo"],"declarations":[{"children":[{"comments":null,"title":"Endo","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"invariantEndo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Endo.purs","end":[23,1]}},{"comments":null,"title":"semigroupEndo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Endo.purs","end":[26,1]}},{"comments":null,"title":"monoidEndo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Endo.purs","end":[27,17]}}],"comments":"Monoid of endomorphisms under composition.\n\nComposes of functions of type `a -> a`:\n``` purescript\nEndo f <> Endo g == Endo (f <<< g)\nmempty :: Endo _ == Endo id\n```\n","title":"Endo","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Endo.purs","end":[17,1]}},{"children":[],"comments":null,"title":"runEndo","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Endo.purs","end":[18,1]}}]},{"moduleName":["Data","Monoid","Multiplicative"],"declarations":[{"children":[{"comments":null,"title":"Multiplicative","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMultiplicative","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[25,1]}},{"comments":null,"title":"ordMultiplicative","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[28,1]}},{"comments":null,"title":"functorMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[31,1]}},{"comments":null,"title":"applyMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[34,1]}},{"comments":null,"title":"applicativeMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[37,1]}},{"comments":null,"title":"bindMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[40,1]}},{"comments":null,"title":"monadMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[42,1]}},{"comments":null,"title":"extendMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[45,1]}},{"comments":null,"title":"comonadMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[48,1]}},{"comments":null,"title":"invariantMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[51,1]}},{"comments":null,"title":"showMultiplicative","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[54,1]}},{"comments":null,"title":"semigroupMultiplicative","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[57,1]}},{"comments":null,"title":"monoidMultiplicative","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[58,27]}}],"comments":"Monoid and semigroup for semirings under multiplication.\n\n``` purescript\nMultiplicative x <> Multiplicative y == Multiplicative (x * y)\nmempty :: Multiplicative _ == Multiplicative one\n```\n","title":"Multiplicative","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[19,1]}},{"children":[],"comments":null,"title":"runMultiplicative","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs","end":[20,1]}}]},{"moduleName":["Data","NaturalTransformation"],"declarations":[{"children":[],"comments":"Alias for `NaturalTransformation`\n","title":"Natural","fixity":null,"info":{"arguments":[["f",null],["g",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NaturalTransformation"],"NaturalTransformation"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-free/src/Data/NaturalTransformation.purs","end":[10,44]}},{"children":[],"comments":"A natural transformation\n","title":"NaturalTransformation","fixity":null,"info":{"arguments":[["f",null],["g",null]],"declType":"typeSynonym","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[7,1],"name":"bower_components/purescript-free/src/Data/NaturalTransformation.purs","end":[10,1]}}]},{"moduleName":["Data","Nullable"],"declarations":[{"children":[{"comments":null,"title":"showNullable","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-nullable/src/Data/Nullable.purs","end":[42,1]}},{"comments":null,"title":"eqNullable","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[42,1],"name":"bower_components/purescript-nullable/src/Data/Nullable.purs","end":[45,1]}},{"comments":null,"title":"ordNullable","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-nullable/src/Data/Nullable.purs","end":[46,26]}}],"comments":"A nullable type.\n\nThis type constructor may be useful when interoperating with JavaScript functions\nwhich accept or return null values.\n","title":"Nullable","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-nullable/src/Data/Nullable.purs","end":[22,1]}},{"children":[],"comments":"Represent `null` using `Maybe a` as `Nothing`. \n","title":"toMaybe","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-nullable/src/Data/Nullable.purs","end":[35,1]}},{"children":[],"comments":"Takes `Nothing` to `null`, and `Just a` to `a`.\n","title":"toNullable","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-nullable/src/Data/Nullable.purs","end":[31,1]}}]},{"moduleName":["Data","Op"],"declarations":[{"children":[{"comments":null,"title":"Op","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupoidOp","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroupoid"]},{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]}]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-contravariant/src/Data/Op.purs","end":[22,1]}},{"comments":null,"title":"categoryOp","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Category"]},{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-contravariant/src/Data/Op.purs","end":[25,1]}},{"comments":null,"title":"contravariantOp","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant"],"Contravariant"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-contravariant/src/Data/Op.purs","end":[28,1]}},{"comments":null,"title":"semigroupOp","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-contravariant/src/Data/Op.purs","end":[31,1]}},{"comments":null,"title":"monoidOp","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-contravariant/src/Data/Op.purs","end":[32,28]}}],"comments":"The opposite of the function category.\n","title":"Op","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-contravariant/src/Data/Op.purs","end":[16,1]}},{"children":[],"comments":"Unpack a value of type `Op a b`, revealing a function.\n","title":"runOp","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-contravariant/src/Data/Op.purs","end":[17,1]}}]},{"moduleName":["Data","Ord"],"declarations":[{"children":[{"comments":null,"title":"Down","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqDown","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Down"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[30,1]}},{"comments":null,"title":"showDown","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Down"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[33,1]}},{"comments":null,"title":"ordDown","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Down"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[43,1]}}],"comments":"A newtype wrapper which provides a reversed `Ord` instance. This allows\nyou to do things like:\n\n    > sortBy (comparing Down) [1,2,3]\n    [3,2,1]\n\n","title":"Down","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[27,1]}},{"children":[{"comments":null,"title":"Max","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMax","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Max"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[116,1]}},{"comments":null,"title":"showMax","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Max"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[116,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[119,1]}},{"comments":null,"title":"ordMax","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Max"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[119,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[122,1]}},{"comments":null,"title":"semigroupMax","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Max"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[122,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[125,1]}},{"comments":null,"title":"monoidMax","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Max"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[125,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[126,16]}}],"comments":"Provides a `Semigroup` based on the `max` function. If the type\nhas a `Bounded` instance, then a `Monoid` instance can be provided\ntoo. For example:\n\n    runMax (Max 5 <> Max 6) = 6\n    mempty :: Max Ordering = Max LT\n\n","title":"Max","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[108,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[110,1]}},{"children":[{"comments":null,"title":"Min","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMin","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Min"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[89,1]}},{"comments":null,"title":"showMin","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Min"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[92,1]}},{"comments":null,"title":"ordMin","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Min"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[95,1]}},{"comments":null,"title":"semigroupMin","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Min"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[95,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[98,1]}},{"comments":null,"title":"monoidMin","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Min"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[108,1]}}],"comments":"Provides a `Semigroup` based on the `min` function. If the type\nhas a `Bounded` instance, then a `Monoid` instance can be provided\ntoo. For example:\n\n    runMin (Min 5 <> Min 6) = 5\n    mempty :: Min Ordering = Min GT\n\n","title":"Min","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[83,1]}},{"children":[],"comments":"Test whether a value is between a minimum and a maximum. For example:\n\n    let f = between 0 10\n    f (-5) == false\n    f 5    == true\n    f 15   == false\n\n","title":"between","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[54,1]}},{"children":[],"comments":"Clamp a value between a minimum and a maximum. For example:\n\n    let f = clamp 0 10\n    f (-5) == 0\n    f 5    == 5\n    f 15   == 10\n\n","title":"clamp","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[44,1]}},{"children":[],"comments":null,"title":"comparing","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"b"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}}]}]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[17,1]}},{"children":[],"comments":null,"title":"invert","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[11,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[12,1]}},{"children":[],"comments":"Take the maximum of two values. If they compare to `EQ`, the first\nargument is chosen.\n","title":"max","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[68,1]}},{"children":[],"comments":"Take the minimum of two values. If they compare to `EQ`, the first\nargument is chosen.\n","title":"min","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[59,1]}},{"children":[],"comments":null,"title":"runMax","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Max"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[111,1]}},{"children":[],"comments":null,"title":"runMin","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Min"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[83,1],"name":"bower_components/purescript-orders/src/Data/Ord.purs","end":[84,1]}}]},{"moduleName":["Data","Predicate"],"declarations":[{"children":[{"comments":null,"title":"Predicate","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"contravariantPredicate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Contravariant"],"Contravariant"]},{"tag":"TypeConstructor","contents":[["Data","Predicate"],"Predicate"]}]}},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-contravariant/src/Data/Predicate.purs","end":[14,44]}}],"comments":"An adaptor allowing `>$<` to map over the inputs of a predicate.\n","title":"Predicate","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[8,1],"name":"bower_components/purescript-contravariant/src/Data/Predicate.purs","end":[10,1]}},{"children":[],"comments":null,"title":"runPredicate","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Predicate"],"Predicate"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[10,1],"name":"bower_components/purescript-contravariant/src/Data/Predicate.purs","end":[11,1]}}]},{"moduleName":["Data","Profunctor"],"declarations":[{"children":[{"comments":null,"title":"profunctorFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor"],"Profunctor"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor.purs","end":[37,39]}}],"comments":"A `Profunctor` is a `Functor` from the pair category `(Type^op, Type)`\nto `Type`.\n\nIn other words, a `Profunctor` is a type constructor of two type\narguments, which is contravariant in its first argument and covariant\nin its second argument.\n\nThe `dimap` function can be used to map functions over both arguments\nsimultaneously.\n\nA straightforward example of a profunctor is the function arrow `(->)`.\n\nLaws:\n\n- Identity: `dimap id id = id`\n- Composition: `dimap f1 g1 <<< dimap f2 g2 = dimap (f1 >>> f2) (g1 <<< g2)`\n","title":"Profunctor","fixity":null,"info":{"arguments":[["p",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor.purs","end":[25,1]}},{"children":[],"comments":"Lift a pure function into any `Profunctor` which is also a `Category`.\n","title":"arr","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Category"],[{"tag":"TypeVar","contents":"p"}]],[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor.purs","end":[34,1]}}]},{"moduleName":["Data","Profunctor","Choice"],"declarations":[{"children":[{"comments":null,"title":"left","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"right","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"choiceFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Choice"],"Choice"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Choice.purs","end":[22,1]}}],"comments":"The `Choice` class extends `Profunctor` with combinators for working with\nsum types.\n\n`left` and `right` lift values in a `Profunctor` to act on the `Left` and\n`Right` components of a sum, respectively.\n","title":"Choice","fixity":null,"info":{"arguments":[["p",null]],"declType":"typeClass","superclasses":[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]]},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Choice.purs","end":[17,1]}},{"children":[],"comments":"Compose a value acting on a sum from two values, each acting on one of\nthe components of the sum.\n","title":"(+++)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Category"],[{"tag":"TypeVar","contents":"p"}]],[[["Data","Profunctor","Choice"],"Choice"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Choice.purs","end":[28,1]}},{"children":[],"comments":"Compose a value which eliminates a sum from two values, each eliminating\none side of the sum.\n\nThis combinator is useful when assembling values from smaller components,\nbecause it provides a way to support two different types of input.\n","title":"(|||)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Category"],[{"tag":"TypeVar","contents":"p"}]],[[["Data","Profunctor","Choice"],"Choice"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Choice.purs","end":[36,1]}}]},{"moduleName":["Data","Profunctor","Closed"],"declarations":[{"children":[{"comments":null,"title":"closed","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"closedFunction","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Closed"],"Closed"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]}},"sourceSpan":{"start":[11,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Closed.purs","end":[12,16]}}],"comments":"The `Closed` class extends the `Profunctor` class to work with functions.\n","title":"Closed","fixity":null,"info":{"arguments":[["p",null]],"declType":"typeClass","superclasses":[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]]},"sourceSpan":{"start":[8,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Closed.purs","end":[11,1]}}]},{"moduleName":["Data","Profunctor","Cochoice"],"declarations":[{"children":[{"comments":null,"title":"unleft","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"unright","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":null}],"comments":"The `Cochoice` class provides the dual operations of the `Choice` class.\n","title":"Cochoice","fixity":null,"info":{"arguments":[["p",null]],"declType":"typeClass","superclasses":[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]]},"sourceSpan":{"start":[9,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Cochoice.purs","end":[11,63]}}]},{"moduleName":["Data","Profunctor","Costrong"],"declarations":[{"children":[{"comments":null,"title":"unfirst","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"unsecond","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":null}],"comments":"The `Costrong` class provides the dual operations of the `Strong` class.\n","title":"Costrong","fixity":null,"info":{"arguments":[["p",null]],"declType":"typeClass","superclasses":[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]]},"sourceSpan":{"start":[9,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Costrong.purs","end":[11,62]}}]},{"moduleName":["Data","Profunctor","Star"],"declarations":[{"children":[{"comments":null,"title":"Star","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"profunctorStar","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor"],"Profunctor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Star.purs","end":[21,1]}},{"comments":null,"title":"strongStar","info":{"declType":"instance","dependencies":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Strong"],"Strong"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Star.purs","end":[25,1]}},{"comments":null,"title":"choiceStar","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Choice"],"Choice"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Star.purs","end":[27,66]}}],"comments":"`Star` turns a `Functor` into a `Profunctor`.\n","title":"Star","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["a",null],["b",null]]},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Star.purs","end":[15,1]}},{"children":[],"comments":"Unwrap a value of type `Star f a b`.\n","title":"runStar","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Star.purs","end":[16,1]}}]},{"moduleName":["Data","Profunctor","Strong"],"declarations":[{"children":[{"comments":null,"title":"strongFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Strong"],"Strong"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Strong.purs","end":[21,1]}}],"comments":"The `Strong` class extends `Profunctor` with combinators for working with\nproduct types.\n\n`first` and `second` lift values in a `Profunctor` to act on the first and\nsecond components of a `Tuple`, respectively.\n","title":"Strong","fixity":null,"info":{"arguments":[["p",null]],"declType":"typeClass","superclasses":[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]]},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Strong.purs","end":[17,1]}},{"children":[],"comments":"Compose a value which introduces a `Tuple` from two values, each introducing\none side of the `Tuple`.\n\nThis combinator is useful when assembling values from smaller components,\nbecause it provides a way to support two different types of output.\n","title":"(&&&)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Category"],[{"tag":"TypeVar","contents":"p"}]],[[["Data","Profunctor","Strong"],"Strong"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Strong.purs","end":[35,1]}},{"children":[],"comments":"Compose a value acting on a `Tuple` from two values, each acting on one of\nthe components of the `Tuple`.\n","title":"(***)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Category"],[{"tag":"TypeVar","contents":"p"}]],[[["Data","Profunctor","Strong"],"Strong"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-profunctor/src/Data/Profunctor/Strong.purs","end":[27,1]}}]},{"moduleName":["Data","Semiring","Free"],"declarations":[{"children":[],"comments":"Lift a value of type `a` to a value of type `Free a`\n","title":"free","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring","Free"],"Free"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-semirings/src/Data/Semiring/Free.purs","end":[24,1]}},{"children":[],"comments":"`Free` is left adjoint to the forgetful functor from `Semiring`s to types.\n","title":"liftFree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"s"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring","Free"],"Free"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-semirings/src/Data/Semiring/Free.purs","end":[28,1]}},{"children":[],"comments":"`Free` is left adjoint to the forgetful functor from `Semiring`s to types.\n","title":"lowerFree","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"s"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring","Free"],"Free"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-semirings/src/Data/Semiring/Free.purs","end":[32,1]}}]},{"moduleName":["Data","Sequence"],"declarations":[{"children":[{"comments":null,"title":"ordSeq","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[101,1]}},{"comments":null,"title":"eqSeq","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[101,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[104,1]}},{"comments":null,"title":"showSeq","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[104,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[107,1]}},{"comments":null,"title":"semigroupSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[110,1]}},{"comments":null,"title":"monoidSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[113,1]}},{"comments":null,"title":"foldableSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[118,1]}},{"comments":null,"title":"traversableSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[118,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[122,1]}},{"comments":null,"title":"unfoldableSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable"],"Unfoldable"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[122,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[127,1]}},{"comments":null,"title":"functorSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[127,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[130,1]}},{"comments":null,"title":"applySeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[130,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[133,1]}},{"comments":null,"title":"applicativeSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[133,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[136,1]}},{"comments":null,"title":"bindSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[136,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[139,1]}},{"comments":null,"title":"monadSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[139,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[141,1]}},{"comments":null,"title":"altSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[141,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[144,1]}},{"comments":null,"title":"plusSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[144,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[147,1]}},{"comments":null,"title":"alternativeSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[147,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[149,1]}},{"comments":null,"title":"monadPlusSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]}]}},"sourceSpan":{"start":[149,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[152,1]}}],"comments":null,"title":"Seq","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[95,1]}},{"children":[],"comments":"O(log(min(i,n-i))). Adjust the element at the specified index by\napplying the given function to it. If the index is out of range, the\nsequence is returned unchanged.\n","title":"adjust","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[261,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[262,1]}},{"children":[],"comments":"O(1). True if the given index specifies an element that exists in the\nsequence, false otherwise.\n","title":"inBounds","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[241,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[242,1]}},{"children":[],"comments":"O(log(min(i,n-i))). Split the sequence into two subsequences. The first\nsubsequence will have i elements (unless there are not that many in the\nwhole sequence, in which case the first element is the same sequence,\nunchanged).\n","title":"splitAt","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[223,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[224,1]}},{"children":[],"comments":"O(1). If the sequence is nonempty, take one element off its right side and\nreturn that together with the rest of the original sequence. Otherwise,\nreturn Nothing.\n","title":"unsnoc","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[204,1],"name":"bower_components/purescript-sequences/src/Data/Sequence.purs","end":[205,1]}}]},{"moduleName":["Data","Sequence","NonEmpty"],"declarations":[{"children":[],"comments":"O(1). Turn a non-empty sequence into a \"plain\" sequence (i.e. one from\nData.Sequence), containing the same elements.\n","title":"toPlain","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[123,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/NonEmpty.purs","end":[124,1]}}]},{"moduleName":["Data","Sequence","Ordered"],"declarations":[{"children":[{"comments":null,"title":"eqOrdSeq","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[78,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[81,1]}},{"comments":null,"title":"showOrdSeq","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[84,1]}},{"comments":null,"title":"semigroupOrdSeq","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[87,1]}},{"comments":null,"title":"monoidOrdSeq","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[87,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[90,1]}},{"comments":null,"title":"foldableOrdSeq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]}]}},"sourceSpan":{"start":[90,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[96,1]}}],"comments":"An ordered sequence. The Semigroup instance uses the `merge` function.\n","title":"OrdSeq","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[70,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[73,1]}},{"children":[],"comments":"O(log(n)). Delete all elements from the sequence which compare EQ to the\ngiven value.\n","title":"deleteAll","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[124,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[125,1]}},{"children":[],"comments":"O(1). Access the greatest element of the sequence, or Nothing if the\nsequence is empty.\n","title":"greatest","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[181,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[182,1]}},{"children":[],"comments":"O(1). Access the least element of the sequence, or Nothing if the sequence\nis empty.\n","title":"least","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[165,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[166,1]}},{"children":[],"comments":"O(m*log(n/m)), where m and n are the lengths of the longer and shorter\nsequences respectively. Create a new sequence containing every element\nin both of the given sequences.\n","title":"merge","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[136,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[137,1]}},{"children":[],"comments":"O(log(n)). Split an ordered sequence into two halves. The first element\nof the returned tuple contains all elements which compared less than or\nequal to the argument; the second element contains the rest.\n","title":"partition","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[108,1]}},{"children":[],"comments":"O(1). Remove the greatest element of the sequence, returning that element\nand the remainder of the sequence. If the sequence is empty, return\nNothing.\n","title":"popGreatest","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]},null]}},"sourceSpan":{"start":[190,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[191,1]}},{"children":[],"comments":"O(1). Remove the least element of the sequence, returning that element and\nthe remainder of the sequence. If the sequence is empty, return Nothing.\n","title":"popLeast","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]},null]}},"sourceSpan":{"start":[173,1],"name":"bower_components/purescript-sequences/src/Data/Sequence/Ordered.purs","end":[174,1]}}]},{"moduleName":["Data","Set"],"declarations":[{"children":[{"comments":null,"title":"eqSet","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[50,1]}},{"comments":null,"title":"showSet","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[50,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[53,1]}},{"comments":null,"title":"ordSet","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[56,1]}},{"comments":null,"title":"monoidSet","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[56,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[59,1]}},{"comments":null,"title":"semigroupSet","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[62,1]}},{"comments":null,"title":"foldableSet","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]}]}},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[68,1]}}],"comments":"`Set a` represents a set of values of type `a`\n","title":"Set","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[47,1]}},{"children":[],"comments":"Form the set difference\n","title":"difference","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[124,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[125,1]}},{"children":[],"comments":"The set of elements which are in both the first and second set\n","title":"intersection","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[138,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[139,1]}},{"children":[],"comments":"True if and only if the first set is a subset of the second set\nand the sets are not equal\n","title":"properSubset","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[134,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[135,1]}},{"children":[],"comments":"True if and only if every element in the first set\nis an element of the second set\n","title":"subset","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[129,1],"name":"bower_components/purescript-sets/src/Data/Set.purs","end":[130,1]}}]},{"moduleName":["Data","StrMap"],"declarations":[{"children":[{"comments":null,"title":"functorStrMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]}]}},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[88,1]}},{"comments":null,"title":"foldableStrMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]}]}},"sourceSpan":{"start":[104,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[109,1]}},{"comments":null,"title":"traversableStrMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]}]}},"sourceSpan":{"start":[109,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[116,1]}},{"comments":null,"title":"eqStrMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[128,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[131,1]}},{"comments":null,"title":"showStrMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[131,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[135,1]}},{"comments":null,"title":"semigroupStrMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[236,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[239,1]}},{"comments":null,"title":"monoidStrMap","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[239,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[240,12]}}],"comments":"`StrMap a` represents a map from `String`s to values of type `a`.\n","title":"StrMap","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[54,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[56,1]}},{"children":[],"comments":"Fold the keys and values of a map.\n\nThis function allows the folding function to terminate the fold early,\nusing `Maybe`.\n","title":"foldMaybe","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"z"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"z"}]}]}]},null]},null]}},"sourceSpan":{"start":[122,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[123,1]}},{"children":[],"comments":"Convert a mutable map into an immutable map\n","title":"freezeST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap","ST"],"STStrMap"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[66,1]}},{"children":[],"comments":"Test whether one map contains all of the keys and values contained in another map\n","title":"isSubmap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[138,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[139,1]}},{"children":[],"comments":"Convert an immutable map into a mutable map\n","title":"thawST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap","ST"],"STStrMap"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-maps/src/Data/StrMap.purs","end":[62,1]}}]},{"moduleName":["Data","StrMap","ST"],"declarations":[{"children":[],"comments":"A reference to a mutable map\n\nThe first type parameter represents the memory region which the map belongs to. The second type parameter defines the type of elements of the mutable array.\n\nThe runtime representation of a value of type `STStrMap h a` is the same as that of `StrMap a`, except that mutation is allowed.\n","title":"STStrMap","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]},"declType":"externData"},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-maps/src/Data/StrMap/ST.purs","end":[27,1]}},{"children":[],"comments":"Create a new, empty mutable map\n","title":"new","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap","ST"],"STStrMap"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-maps/src/Data/StrMap/ST.purs","end":[30,1]}},{"children":[],"comments":"Update the value for a key in a mutable map\n","title":"poke","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap","ST"],"STStrMap"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap","ST"],"STStrMap"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-maps/src/Data/StrMap/ST.purs","end":[39,1]}}]},{"moduleName":["Data","StrMap","ST","Unsafe"],"declarations":[{"children":[],"comments":"Unsafely get the map out of ST without copying it\n\nIf you later change the ST version of the map the pure value will also change.\n","title":"unsafeGet","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap","ST"],"STStrMap"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-maps/src/Data/StrMap/ST/Unsafe.purs","end":[15,89]}}]},{"moduleName":["Data","String"],"declarations":[{"children":[],"comments":"Returns the character at the given index, if the index is within bounds.\n","title":"charAt","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[44,1]}},{"children":[],"comments":"Returns the numeric Unicode value of the character at the given index,\nif the index is within bounds.\n","title":"charCodeAt","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[64,1]}},{"children":[],"comments":"Checks whether the first string exists in the second string.\n","title":"contains","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[125,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[126,1]}},{"children":[],"comments":"Returns the number of contiguous characters at the beginning\nof the string for which the predicate holds.\n","title":"count","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[201,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[206,1]}},{"children":[],"comments":"Returns a string of length `1` containing the given character.\n","title":"fromChar","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[54,1]}},{"children":[],"comments":"Converts an array of characters into a string.\n","title":"fromCharArray","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[122,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[125,1]}},{"children":[],"comments":"Returns the index of the first occurrence of the first string in the\nsecond string. Returns `Nothing` if there is no match.\n","title":"indexOf","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[130,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[131,1]}},{"children":[],"comments":"Returns the index of the first occurrence of the first string in the\nsecond string, starting at the given index. Returns `Nothing` if there is\nno match.\n","title":"indexOf'","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}},"sourceSpan":{"start":[142,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[143,1]}},{"children":[],"comments":"Joins the strings in the array together, inserting the first argument\nas separator between them.\n","title":"joinWith","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[224,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[224,54]}},{"children":[],"comments":"Returns the index of the last occurrence of the first string in the\nsecond string. Returns `Nothing` if there is no match.\n","title":"lastIndexOf","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[154,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[155,1]}},{"children":[],"comments":"Returns the index of the last occurrence of the first string in the\nsecond string, starting at the given index. Returns `Nothing` if there is\nno match.\n","title":"lastIndexOf'","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}},"sourceSpan":{"start":[166,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[167,1]}},{"children":[],"comments":"Locale-aware sort order comparison.\n","title":"localeCompare","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}},"sourceSpan":{"start":[180,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[181,1]}},{"children":[],"comments":"If the string starts with the given prefix, return the portion of the\nstring left after removing it, as a Just value. Otherwise, return Nothing.\n* `stripPrefix \"http:\" \"http://purescript.org\" == Just \"//purescript.org\"`\n* `stripPrefix \"http:\" \"https://purescript.org\" == Nothing`\n","title":"stripPrefix","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[103,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[104,1]}},{"children":[],"comments":"If the string ends with the given suffix, return the portion of the\nstring left after removing it, as a Just value. Otherwise, return Nothing.\n* `stripSuffix \".exe\" \"psc.exe\" == Just \"psc\"`\n* `stripSuffix \".exe\" \"psc\" == Nothing`\n","title":"stripSuffix","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[114,1]}},{"children":[],"comments":null,"title":"toChar","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[72,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[73,1]}},{"children":[],"comments":"Converts the string into an array of characters.\n","title":"toCharArray","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[209,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[212,1]}},{"children":[],"comments":"Returns the argument converted to lowercase.\n","title":"toLower","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[212,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[215,1]}},{"children":[],"comments":"Returns the argument converted to uppercase.\n","title":"toUpper","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[215,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[220,1]}},{"children":[],"comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n","title":"trim","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[220,1],"name":"bower_components/purescript-strings/src/Data/String.purs","end":[224,1]}}]},{"moduleName":["Data","String","Regex"],"declarations":[{"children":[{"comments":null,"title":"showRegex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[34,1]}}],"comments":"Wraps Javascript `RegExp` objects.\n","title":"Regex","fixity":null,"info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[28,1]}},{"children":[],"comments":"Flags that control matching.\n","title":"RegexFlags","fixity":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["global",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["ignoreCase",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["multiline",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["sticky",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["unicode",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":[]}]}]}]}]}]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[43,1]}},{"children":[],"comments":"Returns the `RegexFlags` used to construct the given `Regex`.\n","title":"flags","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"RegexFlags"]}]}},"sourceSpan":{"start":[60,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[63,1]}},{"children":[],"comments":"Matches the string against the `Regex` and returns an array of matches\nif there were any. Each match has type `Maybe String`, where `Nothing`\nrepresents an unmatched optional capturing group.\nSee [reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match).\n","title":"match","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}]}]}]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[95,1]}},{"children":[],"comments":"All flags set to false.\n","title":"noFlags","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"RegexFlags"]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[44,1]}},{"children":[],"comments":"Parses the string representation of `RegexFlags`.\n","title":"parseFlags","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"RegexFlags"]}]}},"sourceSpan":{"start":[72,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[73,1]}},{"children":[],"comments":"Constructs a `Regex` from a pattern string and flags.\n","title":"regex","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"RegexFlags"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[54,1]}},{"children":[],"comments":"Returns the string representation of the given `RegexFlags`.\n","title":"renderFlags","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"RegexFlags"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[63,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[64,1]}},{"children":[],"comments":"Replaces occurences of the `Regex` with the first string. The replacement\nstring can include special replacement patterns escaped with `\"$\"`.\nSee [reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace).\n","title":"replace","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[100,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[105,1]}},{"children":[],"comments":"Transforms occurences of the `Regex` using a function of the matched\nsubstring and a list of submatch strings.\nSee the [reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_function_as_a_parameter).\n","title":"replace'","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[107,1]}},{"children":[],"comments":"Returns `Just` the index of the first match of the `Regex` in the string,\nor `Nothing` if there is no match.\n","title":"search","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[115,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[116,1]}},{"children":[],"comments":"Returns the pattern string used to construct the given `Regex`.\n","title":"source","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[60,1]}},{"children":[],"comments":"Split the string into an array of substrings along occurences of the `Regex`.\n","title":"split","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[119,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[119,50]}},{"children":[],"comments":"Returns `true` if the `Regex` matches the string.\n","title":"test","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[82,1],"name":"bower_components/purescript-strings/src/Data/String/Regex.purs","end":[84,1]}}]},{"moduleName":["Data","String","Unsafe"],"declarations":[{"children":[],"comments":"Converts a string of length `1` to a character.\n\n**Unsafe:** throws runtime exception if length is not `1`.\n","title":"char","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-strings/src/Data/String/Unsafe.purs","end":[21,34]}}]},{"moduleName":["Data","These"],"declarations":[{"children":[{"comments":null,"title":"This","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"That","info":{"arguments":[{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Both","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupThese","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[41,1]}},{"comments":null,"title":"functorThese","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[46,1]}},{"comments":null,"title":"foldableThese","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[51,1]}},{"comments":null,"title":"traversableThese","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[59,1]}},{"comments":null,"title":"bifunctorThese","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"TypeConstructor","contents":[["Data","These"],"These"]}]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[64,1]}},{"comments":null,"title":"bifoldableThese","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifoldable"],"Bifoldable"]},{"tag":"TypeConstructor","contents":[["Data","These"],"These"]}]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[69,1]}},{"comments":null,"title":"bitraversableThese","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bitraversable"],"Bitraversable"]},{"tag":"TypeConstructor","contents":[["Data","These"],"These"]}]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[75,1]}},{"comments":null,"title":"applyThese","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[75,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[84,1]}},{"comments":null,"title":"applicativeThese","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[87,1]}},{"comments":null,"title":"bindThese","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[87,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[95,1]}},{"comments":null,"title":"monadThese","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[95,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[97,1]}}],"comments":null,"title":"These","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[30,1]}},{"children":[],"comments":null,"title":"fromThese","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[111,1]}},{"children":[],"comments":null,"title":"thatOrBoth","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[106,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[107,1]}},{"children":[],"comments":null,"title":"these","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[98,1]}},{"children":[],"comments":null,"title":"theseLeft","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[116,1]}},{"children":[],"comments":null,"title":"theseRight","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[120,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[121,1]}},{"children":[],"comments":null,"title":"thisOrBoth","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-these/src/Data/These.purs","end":[103,1]}}]},{"moduleName":["Data","Time"],"declarations":[{"children":[{"comments":null,"title":"HourOfDay","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHourOfDay","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"HourOfDay"]}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[28,1]}},{"comments":null,"title":"ordHourOfDay","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"HourOfDay"]}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[32,1]}}],"comments":"An hour component from a time value. Should fall between 0 and 23\ninclusive.\n","title":"HourOfDay","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[25,1]}},{"children":[{"comments":null,"title":"Hours","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[37,1]}},{"comments":null,"title":"ordHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[40,1]}},{"comments":null,"title":"semiringHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[46,1]}},{"comments":null,"title":"ringHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[46,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[49,1]}},{"comments":null,"title":"moduloSemiringHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[53,1]}},{"comments":null,"title":"divisionRingHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[55,1]}},{"comments":null,"title":"numHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[57,1]}},{"comments":null,"title":"showHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[62,1]}},{"comments":null,"title":"timeValueHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[187,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[197,1]}}],"comments":"A quantity of hours (not necessarily a value between 0 and 23).\n","title":"Hours","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[34,1]}},{"children":[{"comments":null,"title":"MillisecondOfSecond","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMillisecondOfSecond","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MillisecondOfSecond"]}]}},"sourceSpan":{"start":[142,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[145,1]}},{"comments":null,"title":"ordMillisecondOfSecond","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MillisecondOfSecond"]}]}},"sourceSpan":{"start":[145,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[149,1]}}],"comments":"A millisecond component from a time value. Should fall between 0 and 999\ninclusive.\n","title":"MillisecondOfSecond","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[140,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[142,1]}},{"children":[{"comments":null,"title":"Milliseconds","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[151,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[154,1]}},{"comments":null,"title":"ordMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[154,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[157,1]}},{"comments":null,"title":"semiringMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[157,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[163,1]}},{"comments":null,"title":"ringMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[163,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[166,1]}},{"comments":null,"title":"moduloSemiringMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[166,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[170,1]}},{"comments":null,"title":"divisionRingMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[170,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[172,1]}},{"comments":null,"title":"numMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[172,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[174,1]}},{"comments":null,"title":"showMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[174,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[177,1]}},{"comments":null,"title":"timeValueMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[217,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[225,24]}}],"comments":"A quantity of milliseconds (not necessarily a value between 0 and 1000).\n","title":"Milliseconds","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[149,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[151,1]}},{"children":[{"comments":null,"title":"MinuteOfHour","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMinuteOfHour","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MinuteOfHour"]}]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[67,1]}},{"comments":null,"title":"ordMinuteOfHour","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"MinuteOfHour"]}]}},"sourceSpan":{"start":[67,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[71,1]}}],"comments":"A minute component from a time value. Should fall between 0 and 59\ninclusive.\n","title":"MinuteOfHour","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[62,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[64,1]}},{"children":[{"comments":null,"title":"Minutes","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[76,1]}},{"comments":null,"title":"ordMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[79,1]}},{"comments":null,"title":"semiringMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[79,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[85,1]}},{"comments":null,"title":"ringMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[88,1]}},{"comments":null,"title":"moduloSemiringMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[92,1]}},{"comments":null,"title":"divisionRingMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[94,1]}},{"comments":null,"title":"numMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[96,1]}},{"comments":null,"title":"showMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[96,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[101,1]}},{"comments":null,"title":"timeValueMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[197,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[207,1]}}],"comments":"A quantity of minutes (not necessarily a value between 0 and 60).\n","title":"Minutes","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[73,1]}},{"children":[{"comments":null,"title":"SecondOfMinute","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqSecondOfMinute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"SecondOfMinute"]}]}},"sourceSpan":{"start":[103,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[106,1]}},{"comments":null,"title":"ordSecondOfMinute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"SecondOfMinute"]}]}},"sourceSpan":{"start":[106,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[110,1]}}],"comments":"A second component from a time value. Should fall between 0 and 59\ninclusive.\n","title":"SecondOfMinute","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[101,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[103,1]}},{"children":[{"comments":null,"title":"Seconds","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[112,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[115,1]}},{"comments":null,"title":"ordSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[115,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[118,1]}},{"comments":null,"title":"semiringSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[118,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[124,1]}},{"comments":null,"title":"ringSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[124,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[127,1]}},{"comments":null,"title":"moduloSemiringSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[127,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[131,1]}},{"comments":null,"title":"divisionRingSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[131,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[133,1]}},{"comments":null,"title":"numSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[133,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[135,1]}},{"comments":null,"title":"showSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[135,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[140,1]}},{"comments":null,"title":"timeValueSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[207,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[217,1]}}],"comments":"A quantity of seconds (not necessarily a value between 0 and 60).\n","title":"Seconds","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[112,1]}},{"children":[{"comments":null,"title":"toHours","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":null},{"comments":null,"title":"toMinutes","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":null},{"comments":null,"title":"toSeconds","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":null},{"comments":null,"title":"toMilliseconds","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":null},{"comments":null,"title":"fromHours","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"fromMinutes","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"fromSeconds","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"fromMilliseconds","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"timeValueHours","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Hours"]}]}},"sourceSpan":{"start":[187,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[197,1]}},{"comments":null,"title":"timeValueMinutes","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Minutes"]}]}},"sourceSpan":{"start":[197,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[207,1]}},{"comments":null,"title":"timeValueSeconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Seconds"]}]}},"sourceSpan":{"start":[207,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[217,1]}},{"comments":null,"title":"timeValueMilliseconds","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Time"],"TimeValue"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Milliseconds"]}]}},"sourceSpan":{"start":[217,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[225,24]}}],"comments":null,"title":"TimeValue","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[177,1],"name":"bower_components/purescript-datetime/src/Data/Time.purs","end":[187,1]}}]},{"moduleName":["Data","Traversable"],"declarations":[{"children":[],"comments":null,"title":"Accum","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["accum",{"tag":"TypeVar","contents":"s"},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":[]}]}]}]}},"sourceSpan":{"start":[126,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[128,1]}},{"children":[{"comments":null,"title":"traverse","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"sequence","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"traversableArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[72,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[76,1]}},{"comments":null,"title":"traversableMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[82,1]}},{"comments":null,"title":"traversableFirst","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","First"],"First"]}]}},"sourceSpan":{"start":[82,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[86,1]}},{"comments":null,"title":"traversableLast","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]}]}},"sourceSpan":{"start":[86,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[90,1]}},{"comments":null,"title":"traversableAdditive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]}]}},"sourceSpan":{"start":[90,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[94,1]}},{"comments":null,"title":"traversableDual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Dual"],"Dual"]}]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[98,1]}},{"comments":null,"title":"traversableConj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]}]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[102,1]}},{"comments":null,"title":"traversableDisj","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]}]}},"sourceSpan":{"start":[102,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[106,1]}},{"comments":null,"title":"traversableMultiplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["Data","Monoid","Multiplicative"],"Multiplicative"]}]}},"sourceSpan":{"start":[106,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[123,1]}}],"comments":"`Traversable` represents data structures which can be _traversed_,\naccumulating results and effects in some `Applicative` functor.\n\n- `traverse` runs an action for every element in a data structure,\n  and accumulates the results.\n- `sequence` runs the actions _contained_ in a data structure,\n  and accumulates the results.\n\nThe `traverse` and `sequence` functions should be compatible in the\nfollowing sense:\n\n- `traverse f xs = sequence (f <$> xs)`\n- `sequence = traverse id`\n\n`Traversable` instances should also be compatible with the corresponding\n`Foldable` instances, in the following sense:\n\n- `foldMap f = runConst <<< traverse (Const <<< f)`\n\nDefault implementations are provided by the following functions:\n\n- `traverseDefault`\n- `sequenceDefault`\n","title":"Traversable","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"t"}]],[[["Data","Foldable"],"Foldable"],[{"tag":"TypeVar","contents":"t"}]]]},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[54,1]}},{"children":[],"comments":"A version of `traverse` with its arguments flipped.\n\n\nThis can be useful when running an action written using do notation\nfor every element in a data structure:\n\nFor example:\n\n```purescript\nfor [1, 2, 3] \\n -> do\n  print n\n  return (n * n)\n```\n","title":"for","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"t"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[123,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[124,1]}},{"children":[],"comments":"Fold a data structure from the left, keeping all intermediate results\ninstead of only the final result.\n\nUnlike `scanl`, `mapAccumL` allows the type of accumulator to differ\nfrom the element type of the final data structure.\n","title":"mapAccumL","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Accum"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Accum"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[155,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[156,1]}},{"children":[],"comments":"Fold a data structure from the right, keeping all intermediate results\ninstead of only the final result.\n\nUnlike `scanr`, `mapAccumR` allows the type of accumulator to differ\nfrom the element type of the final data structure.\n","title":"mapAccumR","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Accum"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Accum"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[186,1]}},{"children":[],"comments":"Fold a data structure from the left, keeping all intermediate results\ninstead of only the final result.\n","title":"scanl","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[147,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[148,1]}},{"children":[],"comments":"Fold a data structure from the right, keeping all intermediate results\ninstead of only the final result.\n","title":"scanr","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[177,1],"name":"bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[178,1]}}]},{"moduleName":["Data","Tuple"],"declarations":[{"children":[{"comments":null,"title":"Tuple","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Allows `Tuple`s to be rendered as a string with `show` whenever there are\n`Show` instances for both component types.\n","title":"showTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[31,1]}},{"comments":"Allows `Tuple`s to be checked for equality with `==` and `/=` whenever\nthere are `Eq` instances for both component types.\n","title":"eqTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[38,1]}},{"comments":"Allows `Tuple`s to be compared with `compare`, `>`, `>=`, `<` and `<=`\nwhenever there are `Ord` instances for both component types. To obtain\nthe result, the `fst`s are `compare`d, and if they are `EQ`ual, the\n`snd`s are `compare`d.\n","title":"ordTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[43,1]}},{"comments":null,"title":"boundedTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[47,1]}},{"comments":null,"title":"boundedOrdTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"BoundedOrd"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"BoundedOrd"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[49,1]}},{"comments":null,"title":"semigroupoidTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroupoid"]},{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[58,1]}},{"comments":"The `Semigroup` instance enables use of the associative operator `<>` on\n`Tuple`s whenever there are `Semigroup` instances for the component\ntypes. The `<>` operator is applied pairwise, so:\n```purescript\n(Tuple a1 b1) <> (Tuple a2 b2) = Tuple (a1 <> a2) (b1 <> b2)\n```\n","title":"semigroupTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[61,1]}},{"comments":null,"title":"monoidTuple","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]],[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[64,1]}},{"comments":null,"title":"semiringTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[64,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[70,1]}},{"comments":null,"title":"moduloSemiringTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"ModuloSemiring"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"ModuloSemiring"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[70,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[74,1]}},{"comments":null,"title":"ringTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[74,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[77,1]}},{"comments":null,"title":"divisionRingTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"DivisionRing"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"DivisionRing"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[79,1]}},{"comments":null,"title":"numTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Num"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Num"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[79,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[81,1]}},{"comments":null,"title":"booleanAlgebraTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BooleanAlgebra"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[92,1]}},{"comments":"The `Functor` instance allows functions to transform the contents of a\n`Tuple` with the `<$>` operator, applying the function to the second\ncomponent, so:\n```purescript\nf <$> (Tuple x y) = Tuple x (f y)\n````\n","title":"functorTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[95,1]}},{"comments":null,"title":"invariantTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[95,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[98,1]}},{"comments":null,"title":"bifunctorTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]}]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[107,1]}},{"comments":"The `Functor` instance allows functions to transform the contents of a\n`Tuple` with the `<*>` operator whenever there is a `Semigroup` instance\nfor the `fst` component, so:\n```purescript\n(Tuple a1 f) <*> (Tuple a2 x) == Tuple (a1 <> a2) (f x)\n```\n","title":"applyTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[107,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[110,1]}},{"comments":null,"title":"biapplyTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapply"],"Biapply"]},{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]}]}},"sourceSpan":{"start":[110,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[113,1]}},{"comments":null,"title":"applicativeTuple","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[116,1]}},{"comments":null,"title":"biapplicativeTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Biapplicative"],"Biapplicative"]},{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]}]}},"sourceSpan":{"start":[116,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[119,1]}},{"comments":null,"title":"bindTuple","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[119,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[123,1]}},{"comments":null,"title":"monadTuple","info":{"declType":"instance","dependencies":[[[["Data","Monoid"],"Monoid"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[123,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[125,1]}},{"comments":null,"title":"extendTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[125,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[128,1]}},{"comments":null,"title":"comonadTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[128,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[131,1]}},{"comments":null,"title":"lazyTuple","info":{"declType":"instance","dependencies":[[[["Control","Lazy"],"Lazy"],[{"tag":"TypeVar","contents":"a"}]],[[["Control","Lazy"],"Lazy"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[131,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[134,1]}},{"comments":null,"title":"foldableTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[134,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[139,1]}},{"comments":null,"title":"bifoldableTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifoldable"],"Bifoldable"]},{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]}]}},"sourceSpan":{"start":[139,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[144,1]}},{"comments":null,"title":"traversableTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[144,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[148,1]}},{"comments":null,"title":"bitraversableTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bitraversable"],"Bitraversable"]},{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]}]}},"sourceSpan":{"start":[148,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[153,1]}}],"comments":"A simple product type for wrapping a pair of component values.\n","title":"Tuple","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[26,1]}},{"children":[],"comments":"Turn a function that expects a tuple into a function of two arguments.\n","title":"curry","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[161,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[162,1]}},{"children":[],"comments":"Returns the first component of a tuple.\n","title":"fst","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[153,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[154,1]}},{"children":[],"comments":"Returns the second component of a tuple.\n","title":"snd","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}},"sourceSpan":{"start":[157,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[158,1]}},{"children":[],"comments":"Exchange the first and second components of a tuple.\n","title":"swap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[169,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[170,1]}},{"children":[],"comments":"Turn a function of two arguments into a function that expects a tuple.\n","title":"uncurry","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":{"start":[165,1],"name":"bower_components/purescript-tuples/src/Data/Tuple.purs","end":[166,1]}}]},{"moduleName":["Data","Tuple","Nested"],"declarations":[{"children":[],"comments":null,"title":"Tuple10","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["i",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[41,1]}},{"children":[],"comments":null,"title":"Tuple2","fixity":null,"info":{"arguments":[["a",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[31,1]}},{"children":[],"comments":null,"title":"Tuple3","fixity":null,"info":{"arguments":[["a",null],["b",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[32,1]}},{"children":[],"comments":null,"title":"Tuple4","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[32,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[33,1]}},{"children":[],"comments":null,"title":"Tuple5","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[34,1]}},{"children":[],"comments":null,"title":"Tuple6","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[35,1]}},{"children":[],"comments":null,"title":"Tuple7","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[35,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[36,1]}},{"children":[],"comments":null,"title":"Tuple8","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[37,1]}},{"children":[],"comments":null,"title":"Tuple9","fixity":null,"info":{"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["z",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}}]},{"tag":"TypeVar","contents":"z"}]}},"sourceSpan":{"start":[37,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[38,1]}},{"children":[],"comments":"Given a function that accepts a 10-tuple, return a function of 10 arguments.\n","title":"curry10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[145,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[146,1]}},{"children":[],"comments":"Given a function that accepts a 2-tuple, return a function of 2 arguments.\n","title":"curry2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[82,1]}},{"children":[],"comments":"Given a function that accepts a 3-tuple, return a function of 3 arguments.\n","title":"curry3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[89,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[90,1]}},{"children":[],"comments":"Given a function that accepts a 4-tuple, return a function of 4 arguments.\n","title":"curry4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[98,1]}},{"children":[],"comments":"Given a function that accepts a 5-tuple, return a function of 5 arguments.\n","title":"curry5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[105,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[106,1]}},{"children":[],"comments":"Given a function that accepts a 6-tuple, return a function of 6 arguments.\n","title":"curry6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[114,1]}},{"children":[],"comments":"Given a function that accepts a 7-tuple, return a function of 7 arguments.\n","title":"curry7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[121,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[122,1]}},{"children":[],"comments":"Given a function that accepts a 8-tuple, return a function of 8 arguments.\n","title":"curry8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[129,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[130,1]}},{"children":[],"comments":"Given a function that accepts a 9-tuple, return a function of 9 arguments.\n","title":"curry9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[137,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[138,1]}},{"children":[],"comments":"Given 10 values, creates a nested 10-tuple.\n","title":"tuple10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[74,1]}},{"children":[],"comments":"Given 2 values, creates a nested 2-tuple.\n","title":"tuple2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[42,1]}},{"children":[],"comments":"Given 3 values, creates a nested 3-tuple.\n","title":"tuple3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[46,1]}},{"children":[],"comments":"Given 4 values, creates a nested 4-tuple.\n","title":"tuple4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[50,1]}},{"children":[],"comments":"Given 5 values, creates a nested 5-tuple.\n","title":"tuple5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[54,1]}},{"children":[],"comments":"Given 6 values, creates a nested 6-tuple.\n","title":"tuple6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[58,1]}},{"children":[],"comments":"Given 7 values, creates a nested 7-tuple.\n","title":"tuple7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[62,1]}},{"children":[],"comments":"Given 8 values, creates a nested 8-tuple.\n","title":"tuple8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[65,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[66,1]}},{"children":[],"comments":"Given 9 values, creates a nested 9-tuple.\n","title":"tuple9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[70,1]}},{"children":[],"comments":"Given a function of 10 arguments, return a function that accepts a 10-tuple.\n","title":"uncurry10","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["j",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[141,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[142,1]}},{"children":[],"comments":"Given a function of 2 arguments, return a function that accepts a 2-tuple.\n","title":"uncurry2","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[78,1]}},{"children":[],"comments":"Given a function of 3 arguments, return a function that accepts a 3-tuple.\n","title":"uncurry3","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"z"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[86,1]}},{"children":[],"comments":"Given a function of 4 arguments, return a function that accepts a 4-tuple.\n","title":"uncurry4","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[94,1]}},{"children":[],"comments":"Given a function of 5 arguments, return a function that accepts a 5-tuple.\n","title":"uncurry5","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[101,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[102,1]}},{"children":[],"comments":"Given a function of 6 arguments, return a function that accepts a 6-tuple.\n","title":"uncurry6","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[109,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[110,1]}},{"children":[],"comments":"Given a function of 7 arguments, return a function that accepts a 7-tuple.\n","title":"uncurry7","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[117,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[118,1]}},{"children":[],"comments":"Given a function of 8 arguments, return a function that accepts a 8-tuple.\n","title":"uncurry8","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[125,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[126,1]}},{"children":[],"comments":"Given a function of 9 arguments, return a function that accepts a 9-tuple.\n","title":"uncurry9","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeVar","contents":"z"}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[133,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[134,1]}},{"children":[],"comments":"Shorthand for constructing n-tuples as nested pairs.\n`a /\\ b /\\ c /\\ d` becomes `Tuple (Tuple (Tuple a b) c ) d`\n","title":"(/\\)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[152,1],"name":"bower_components/purescript-tuples/src/Data/Tuple/Nested.purs","end":[153,1]}}]},{"moduleName":["Data","Unfoldable"],"declarations":[{"children":[{"comments":null,"title":"unfoldr","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"unfoldableArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable"],"Unfoldable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[29,1],"name":"bower_components/purescript-unfoldable/src/Data/Unfoldable.purs","end":[49,1]}}],"comments":"This class identifies data structures which can be _unfolded_,\ngeneralizing `unfoldr` on arrays.\n\nThe generating function `f` in `unfoldr f` in understood as follows:\n\n- If `f b` is `Nothing`, then `unfoldr f b` should be empty.\n- If `f b` is `Just (Tuple a b1)`, then `unfoldr f b` should consist of `a`\n  appended to the result of `unfoldr f b1`.\n","title":"Unfoldable","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[26,1],"name":"bower_components/purescript-unfoldable/src/Data/Unfoldable.purs","end":[29,1]}},{"children":[],"comments":"The container with no elements - unfolded with zero iterations.\nFor example:\n\n~~~ purescript\nnone == [] :: forall a. Array a\n~~~\n","title":"none","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Unfoldable"],"Unfoldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[68,1],"name":"bower_components/purescript-unfoldable/src/Data/Unfoldable.purs","end":[69,1]}},{"children":[],"comments":"Replicate a value some natural number of times.\nFor example:\n\n~~~ purescript\nreplicate 2 \"foo\" == [\"foo\", \"foo\"] :: Array String\n~~~\n","title":"replicate","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Unfoldable"],"Unfoldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-unfoldable/src/Data/Unfoldable.purs","end":[50,1]}},{"children":[],"comments":"Perform an Applicative action `n` times, and accumulate all the results.\n","title":"replicateA","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]],[[["Data","Unfoldable"],"Unfoldable"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Traversable"],"Traversable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-unfoldable/src/Data/Unfoldable.purs","end":[60,1]}},{"children":[],"comments":"Contain a single value.\nFor example:\n\n~~~ purescript\nsingleton \"foo\" == [\"foo\"] :: Array String\n~~~\n","title":"singleton","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Unfoldable"],"Unfoldable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"bower_components/purescript-unfoldable/src/Data/Unfoldable.purs","end":[78,1]}}]},{"moduleName":["Data","Validation"],"declarations":[{"children":[{"comments":null,"title":"showV","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"err"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"result"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}}]}},"sourceSpan":{"start":[47,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[51,1]}},{"comments":null,"title":"functorV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation"],"V"]},{"tag":"TypeVar","contents":"err"}]}}]}},"sourceSpan":{"start":[51,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[55,1]}},{"comments":null,"title":"applyV","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation"],"V"]},{"tag":"TypeVar","contents":"err"}]}}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[61,1]}},{"comments":null,"title":"applicativeV","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation"],"V"]},{"tag":"TypeVar","contents":"err"}]}}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[62,10]}}],"comments":"The `V` functor, used for applicative validation\n\nThe `Applicative` instance collects multiple failures in\nan arbitrary `Semigroup`.\n\nFor example:\n\n```purescript\nvalidate :: Person -> V (Array Error) Person\nvalidate person = { first: _, last: _, email: _ }\n  <$> validateName person.first\n  <*> validateName person.last\n  <*> validateEmail person.email\n```\n","title":"V","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["err",null],["result",null]]},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[33,1]}},{"children":[],"comments":"Fail with a validation error\n","title":"invalid","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[34,1]}},{"children":[],"comments":"Test whether validation was successful or not\n","title":"isValid","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[44,1]}},{"children":[],"comments":"Unpack the `V` type constructor, providing functions to handle the error\nand success cases.\n","title":"runV","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"result"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-validation/src/Data/Validation.purs","end":[39,1]}}]},{"moduleName":["Data","Yoneda"],"declarations":[{"children":[{"comments":null,"title":"Yoneda","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},null]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorYoneda","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[19,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[22,1]}},{"comments":null,"title":"applyYoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[25,1]}},{"comments":null,"title":"applicativeYoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[28,1]}},{"comments":null,"title":"bindYoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[28,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[31,1]}},{"comments":null,"title":"monadYoneda","info":{"declType":"instance","dependencies":[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]}}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[33,1]}},{"comments":null,"title":"monadTransYoneda","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans"],"MonadTrans"]},{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[36,1]}},{"comments":null,"title":"extendYoneda","info":{"declType":"instance","dependencies":[[[["Control","Extend"],"Extend"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[39,1]}},{"comments":null,"title":"comonadYoneda","info":{"declType":"instance","dependencies":[[[["Control","Comonad"],"Comonad"],[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[43,1]}}],"comments":"The Yoneda `Functor`\n\n`Yoneda f` is a `Functor` for any type constructor `f`.\n","title":"Yoneda","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[19,1]}},{"children":[],"comments":"Lift a value described by the `Functor` `f` to the\n`Functor` `Yoneda f`.\n","title":"liftYoneda","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[49,1]}},{"children":[],"comments":"Lower a value of type `Yoneda f a` to the type constructor `f`.\n","title":"lowerYoneda","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[53,1]}},{"children":[],"comments":"Run a computation of type `Yoneda f a`.\n","title":"runYoneda","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-free/src/Data/Yoneda.purs","end":[44,1]}}]},{"moduleName":["Global"],"declarations":[{"children":[],"comments":"uri decoding\n","title":"decodeURI","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[24,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[27,1]}},{"children":[],"comments":"uri component decoding\n","title":"decodeURIComponent","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[30,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[33,1]}},{"children":[],"comments":"uri encoding\n","title":"encodeURI","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[30,1]}},{"children":[],"comments":"uri component encoding\n","title":"encodeURIComponent","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[33,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[33,48]}},{"children":[],"comments":"Positive infinity\n","title":"infinity","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[15,1]}},{"children":[],"comments":"Test whether a number is finite\n","title":"isFinite","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[18,1]}},{"children":[],"comments":"Test whether a number is NaN\n","title":"isNaN","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[9,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[12,1]}},{"children":[],"comments":"Not a number (NaN)\n","title":"nan","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[6,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[9,1]}},{"children":[],"comments":"Parse a floating point value from a `String`\n","title":"readFloat","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[21,1],"name":"bower_components/purescript-globals/src/Global.purs","end":[24,1]}}]},{"moduleName":["Global","Unsafe"],"declarations":[{"children":[],"comments":"Uses the global JSON object to turn anything into a string. Careful! Trying\nto serialize functions returns undefined\n","title":"unsafeStringify","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]}},"sourceSpan":{"start":[5,1],"name":"bower_components/purescript-globals/src/Global/Unsafe.purs","end":[5,50]}}]},{"moduleName":["Math"],"declarations":[{"children":[],"comments":"An alias to make types in this module more explicit.\n","title":"Radians","fixity":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[6,1],"name":"bower_components/purescript-math/src/Math.purs","end":[9,1]}},{"children":[],"comments":"Returns the absolute value of the argument.\n","title":"abs","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[9,1],"name":"bower_components/purescript-math/src/Math.purs","end":[12,1]}},{"children":[],"comments":"Returns the inverse cosine of the argument.\n","title":"acos","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}},"sourceSpan":{"start":[12,1],"name":"bower_components/purescript-math/src/Math.purs","end":[15,1]}},{"children":[],"comments":"Returns the inverse sine of the argument.\n","title":"asin","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}},"sourceSpan":{"start":[15,1],"name":"bower_components/purescript-math/src/Math.purs","end":[18,1]}},{"children":[],"comments":"Returns the inverse tangent of the argument.\n","title":"atan","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-math/src/Math.purs","end":[25,1]}},{"children":[],"comments":"Four-quadrant tangent inverse. Given the arguments `y` and `x`, returns\nthe inverse tangent of `y / x`, where the signs of both arguments are used\nto determine the sign of the result.\nIf the first argument is negative, the result will be negative.\nThe result is the angle between the positive x axis and  a point `(x, y)`.\n","title":"atan2","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}]}},"sourceSpan":{"start":[25,1],"name":"bower_components/purescript-math/src/Math.purs","end":[28,1]}},{"children":[],"comments":"Returns the cosine of the argument.\n","title":"cos","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-math/src/Math.purs","end":[34,1]}},{"children":[],"comments":"The base of natural logarithms, *e*, around 2.71828.\n","title":"e","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[73,1],"name":"bower_components/purescript-math/src/Math.purs","end":[76,1]}},{"children":[],"comments":"Returns `e` exponentiated to the power of the argument.\n","title":"exp","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[34,1],"name":"bower_components/purescript-math/src/Math.purs","end":[37,1]}},{"children":[],"comments":"The natural logarithm of 10, around 2.3025.\n","title":"ln10","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[79,1],"name":"bower_components/purescript-math/src/Math.purs","end":[82,1]}},{"children":[],"comments":"The natural logarithm of 2, around 0.6931.\n","title":"ln2","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-math/src/Math.purs","end":[79,1]}},{"children":[],"comments":"Returns the natural logarithm of a number.\n","title":"log","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[40,1],"name":"bower_components/purescript-math/src/Math.purs","end":[43,1]}},{"children":[],"comments":"Base 10 logarithm of `e`, around 0.43429.\n","title":"log10e","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-math/src/Math.purs","end":[88,1]}},{"children":[],"comments":"The base 2 logarithm of `e`, around 1.4426.\n","title":"log2e","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[82,1],"name":"bower_components/purescript-math/src/Math.purs","end":[85,1]}},{"children":[],"comments":"The ratio of the circumference of a circle to its diameter, around 3.14159.\n","title":"pi","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[88,1],"name":"bower_components/purescript-math/src/Math.purs","end":[91,1]}},{"children":[],"comments":"Return  the first argument exponentiated to the power of the second argument.\n","title":"pow","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[49,1],"name":"bower_components/purescript-math/src/Math.purs","end":[52,1]}},{"children":[],"comments":"Returns the sine of the argument.\n","title":"sin","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-math/src/Math.purs","end":[58,1]}},{"children":[],"comments":"Returns the square root of the argument.\n","title":"sqrt","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-math/src/Math.purs","end":[61,1]}},{"children":[],"comments":"The Square root of one half, around 0.707107.\n","title":"sqrt1_2","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[91,1],"name":"bower_components/purescript-math/src/Math.purs","end":[94,1]}},{"children":[],"comments":"The square root of two, around 1.41421.\n","title":"sqrt2","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[94,1],"name":"bower_components/purescript-math/src/Math.purs","end":[94,25]}},{"children":[],"comments":"Returns the tangent of the argument.\n","title":"tan","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[61,1],"name":"bower_components/purescript-math/src/Math.purs","end":[65,1]}},{"children":[],"comments":"Computes the remainder after division, wrapping Javascript's `%` operator.\n","title":"(%)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[70,1],"name":"bower_components/purescript-math/src/Math.purs","end":[73,1]}}]},{"moduleName":["Optic","Core"],"declarations":[{"children":[],"comments":"`..` is a synonym for `<<<` for aesthetic reasons.\n\n`foo .. bar .. baz` looks and reads better than `foo <<< bar <<< baz`,\nand mimics accessor notation for records.\n","title":"(..)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semigroupoid"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[24,3],"name":"bower_components/purescript-lens/src/Optic/Core.purs","end":[25,3]}}]},{"moduleName":["Optic","Getter"],"declarations":[{"children":[],"comments":null,"title":"to","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Data","Functor","Contravariant"],"Contravariant"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"s"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[17,3],"name":"bower_components/purescript-lens/src/Optic/Getter.purs","end":[18,3]}},{"children":[],"comments":null,"title":"view","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Getting"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[20,3],"name":"bower_components/purescript-lens/src/Optic/Getter.purs","end":[21,3]}},{"children":[],"comments":null,"title":"(^.)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Getting"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[23,3],"name":"bower_components/purescript-lens/src/Optic/Getter.purs","end":[24,3]}}]},{"moduleName":["Optic","Laws","Lens"],"declarations":[{"children":[],"comments":"If you get a value out, and then set it immediately back,\nnothing should change.\n","title":"getSet","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"s"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"LensP"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}},"sourceSpan":{"start":[18,3],"name":"bower_components/purescript-lens/src/Optic/Laws/Lens.purs","end":[19,3]}},{"children":[],"comments":"If you set a value, and them get it immediately out,\nyou should get the value you set.\n","title":"setGet","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"LensP"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[23,3],"name":"bower_components/purescript-lens/src/Optic/Laws/Lens.purs","end":[24,3]}},{"children":[],"comments":"If you set two values, the last set is the one that matters.\n","title":"setSet","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"s"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,3],"name":"bower_components/purescript-lens/src/Optic/Laws/Lens.purs","end":[28,3]}},{"children":[],"comments":"A valid `Lens` satisfies all three of the following laws.\n","title":"validLens","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"s"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"LensP"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[11,3],"name":"bower_components/purescript-lens/src/Optic/Laws/Lens.purs","end":[12,3]}}]},{"moduleName":["Optic","Lens"],"declarations":[{"children":[],"comments":null,"title":"lens","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[12,3],"name":"bower_components/purescript-lens/src/Optic/Lens.purs","end":[13,3]}},{"children":[],"comments":null,"title":"(??)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[15,3],"name":"bower_components/purescript-lens/src/Optic/Lens.purs","end":[16,3]}}]},{"moduleName":["Optic","Prism"],"declarations":[{"children":[],"comments":null,"title":"clonePrism","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Profunctor","Choice"],"Choice"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[28,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[29,3]}},{"children":[],"comments":null,"title":"is","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[31,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[32,3]}},{"children":[],"comments":null,"title":"isn't","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[34,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[35,3]}},{"children":[],"comments":null,"title":"matching","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[38,3]}},{"children":[],"comments":null,"title":"nearly","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"PrismP"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[40,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[41,3]}},{"children":[],"comments":null,"title":"only","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"PrismP"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[47,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[48,3]}},{"children":[],"comments":null,"title":"prism","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Profunctor","Choice"],"Choice"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[50,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[51,3]}},{"children":[],"comments":null,"title":"prism'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Prism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[53,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[54,3]}},{"children":[],"comments":null,"title":"withPrism","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[56,3],"name":"bower_components/purescript-lens/src/Optic/Prism.purs","end":[57,3]}}]},{"moduleName":["Optic","Setter"],"declarations":[{"children":[],"comments":null,"title":"argument","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Setter"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[39,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[40,3]}},{"children":[],"comments":null,"title":"contramapped","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Functor","Contravariant"],"Contravariant"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Setter"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[42,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[43,3]}},{"children":[],"comments":null,"title":"mapped","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Setter"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[46,3]}},{"children":[],"comments":null,"title":"over","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Setting"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[48,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[49,3]}},{"children":[],"comments":null,"title":"set","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[51,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[52,3]}},{"children":[],"comments":null,"title":"set'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetterP"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]},null]}},"sourceSpan":{"start":[54,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[55,3]}},{"children":[],"comments":null,"title":"sets","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["q",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]],[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"q"}]],[[["Optic","Internal","Setter"],"Settable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"q"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Optical"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"q"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[57,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[58,3]}},{"children":[],"comments":null,"title":"(%~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[[[[["Data","Profunctor"],"Profunctor"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Setting"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[62,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[63,3]}},{"children":[],"comments":null,"title":"(&&~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[83,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[84,3]}},{"children":[],"comments":null,"title":"(*~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[74,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[75,3]}},{"children":[],"comments":null,"title":"(++~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[89,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[90,3]}},{"children":[],"comments":null,"title":"(+~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[68,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[69,3]}},{"children":[],"comments":null,"title":"(-~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[71,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[72,3]}},{"children":[],"comments":null,"title":"(.~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[65,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[66,3]}},{"children":[],"comments":null,"title":"(//~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"DivisionRing"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[77,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[78,3]}},{"children":[],"comments":null,"title":"(<>~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[86,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[87,3]}},{"children":[],"comments":null,"title":"(?~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[92,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[93,3]}},{"children":[],"comments":null,"title":"(||~)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[80,3],"name":"bower_components/purescript-lens/src/Optic/Setter.purs","end":[81,3]}}]},{"moduleName":["Optic","Types"],"declarations":[{"children":[],"comments":null,"title":"APrism","fixity":null,"info":{"arguments":[["s",null],["t",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Internal","Prism"],"Market"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Internal","Prism"],"Market"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"t"}]}}]}]}},"sourceSpan":{"start":[16,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[17,3]}},{"children":[],"comments":null,"title":"APrismP","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[17,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[19,3]}},{"children":[],"comments":null,"title":"ASetter","fixity":null,"info":{"arguments":[["s",null],["t",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"t"}]}]}]}},"sourceSpan":{"start":[19,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[20,3]}},{"children":[],"comments":null,"title":"ASetterP","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"ASetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[20,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[22,3]}},{"children":[],"comments":null,"title":"Accessing","fixity":null,"info":{"arguments":[["p",null],["m",null],["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"s"}]}]}]}},"sourceSpan":{"start":[14,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[16,3]}},{"children":[],"comments":null,"title":"Getter","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Data","Functor","Contravariant"],"Contravariant"],[{"tag":"TypeVar","contents":"f"}]],[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]}},"sourceSpan":{"start":[24,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[26,3]}},{"children":[],"comments":null,"title":"Getting","fixity":null,"info":{"arguments":[["r",null],["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"s"}]}]}]}},"sourceSpan":{"start":[22,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[24,3]}},{"children":[],"comments":null,"title":"Lens","fixity":null,"info":{"arguments":[["s",null],["t",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]}},"sourceSpan":{"start":[26,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[27,3]}},{"children":[],"comments":null,"title":"LensP","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[27,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[29,3]}},{"children":[],"comments":null,"title":"Optical","fixity":null,"info":{"arguments":[["p",null],["q",null],["f",null],["s",null],["t",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"q"},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}}]}]}},"sourceSpan":{"start":[29,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[30,3]}},{"children":[],"comments":null,"title":"OpticalP","fixity":null,"info":{"arguments":[["p",null],["q",null],["f",null],["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Optical"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"q"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[30,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[32,3]}},{"children":[],"comments":null,"title":"Prism","fixity":null,"info":{"arguments":[["s",null],["t",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]],[[["Data","Profunctor","Choice"],"Choice"],[{"tag":"TypeVar","contents":"p"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[32,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[33,3]}},{"children":[],"comments":null,"title":"PrismP","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Prism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[33,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[35,3]}},{"children":[],"comments":null,"title":"Setter","fixity":null,"info":{"arguments":[["s",null],["t",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Optic","Internal","Setter"],"Settable"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]}},"sourceSpan":{"start":[35,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[36,3]}},{"children":[],"comments":null,"title":"SetterP","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[36,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[38,3]}},{"children":[],"comments":null,"title":"Setting","fixity":null,"info":{"arguments":[["p",null],["s",null],["t",null],["a",null],["b",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"t"}]}]}]}},"sourceSpan":{"start":[38,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[39,3]}},{"children":[],"comments":null,"title":"SettingP","fixity":null,"info":{"arguments":[["p",null],["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Optic","Types"],"Setting"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[39,3],"name":"bower_components/purescript-lens/src/Optic/Types.purs","end":[39,41]}}]},{"moduleName":["Prelude"],"declarations":[{"children":[{"comments":null,"title":"LT","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"GT","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"EQ","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[413,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[418,1]}},{"comments":null,"title":"eqOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[613,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[619,1]}},{"comments":null,"title":"ordOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[668,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[677,1]}},{"comments":null,"title":"boundedOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[732,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[736,1]}},{"comments":null,"title":"boundedOrdOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[764,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[765,1]}},{"comments":null,"title":"showOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[863,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[868,1]}}],"comments":"The `Ordering` data type represents the three possible outcomes of\ncomparing two values:\n\n`LT` - The first value is _less than_ the second.\n`GT` - The first value is _greater than_ the second.\n`EQ` - The first value is _equal to_ the second.\n","title":"Ordering","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[629,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[639,1]}},{"children":[{"comments":null,"title":"semigroupUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[407,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[410,1]}},{"comments":null,"title":"semiringUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[458,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[464,1]}},{"comments":null,"title":"ringUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[496,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[499,1]}},{"comments":null,"title":"moduloSemiringUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[531,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[535,1]}},{"comments":null,"title":"divisionRingUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[557,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[565,1]}},{"comments":null,"title":"numUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[568,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[577,1]}},{"comments":null,"title":"eqUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[607,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[610,1]}},{"comments":null,"title":"ordUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[657,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[660,1]}},{"comments":null,"title":"boundedUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[728,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[732,1]}},{"comments":null,"title":"boundedOrdUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[763,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[764,1]}},{"comments":null,"title":"booleanAlgebraUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BooleanAlgebra"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[807,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[812,1]}},{"comments":null,"title":"showUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[857,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[860,1]}}],"comments":"The `Unit` type has a single inhabitant, called `unit`. It represents\nvalues with no computational content.\n\n`Unit` is often used, wrapped in a monadic type constructor, as the\nreturn type of a computation where only\nthe _effects_ are important.\n","title":"Unit","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[36,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[39,1]}},{"children":[{"comments":null,"title":"pure","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"applicativeFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[266,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[269,1]}},{"comments":null,"title":"applicativeArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[269,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[273,1]}}],"comments":"The `Applicative` type class extends the [`Apply`](#apply) type class\nwith a `pure` function, which can be used to create values of type `f a`\nfrom values of type `a`.\n\nWhere [`Apply`](#apply) provides the ability to lift functions of two or\nmore arguments to functions whose arguments are wrapped using `f`, and\n[`Functor`](#functor) provides the ability to lift functions of one\nargument, `pure` can be seen as the function which lifts functions of\n_zero_ arguments. That is, `Applicative` functors support a lifting\noperation for any number of function arguments.\n\nInstances must satisfy the following laws in addition to the `Apply`\nlaws:\n\n- Identity: `(pure id) <*> v = v`\n- Composition: `(pure <<<) <*> f <*> g <*> h = f <*> (g <*> h)`\n- Homomorphism: `(pure f) <*> (pure x) = pure (f x)`\n- Interchange: `u <*> (pure y) = (pure ($ y)) <*> u`\n","title":"Applicative","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[263,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[266,1]}},{"children":[{"comments":null,"title":"apply","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"applyFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[233,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[236,1]}},{"comments":null,"title":"applyArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Apply"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[236,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[239,1]}}],"comments":"The `Apply` class provides the `(<*>)` which is used to apply a function\nto an argument under a type constructor.\n\n`Apply` can be used to lift functions of two or more arguments to work on\nvalues wrapped with the type constructor `f`. It might also be understood\nin terms of the `lift2` function:\n\n```purescript\nlift2 :: forall f a b c. (Apply f) => (a -> b -> c) -> f a -> f b -> f c\nlift2 f a b = f <$> a <*> b\n```\n\n`(<*>)` is recovered from `lift2` as `lift2 ($)`. That is, `(<*>)` lifts\nthe function application operator `($)` to arguments wrapped with the\ntype constructor `f`.\n\nInstances must satisfy the following law in addition to the `Functor`\nlaws:\n\n- Associative composition: `(<<<) <$> f <*> g <*> h = f <*> (g <*> h)`\n\nFormally, `Apply` represents a strong lax semi-monoidal endofunctor.\n","title":"Apply","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[230,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[233,1]}},{"children":[{"comments":null,"title":"bind","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"bindFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[320,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[323,1]}},{"comments":null,"title":"bindArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bind"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[323,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[326,1]}}],"comments":"The `Bind` type class extends the [`Apply`](#apply) type class with a\n\"bind\" operation `(>>=)` which composes computations in sequence, using\nthe return value of one computation to determine the next computation.\n\nThe `>>=` operator can also be expressed using `do` notation, as follows:\n\n```purescript\nx >>= f = do y <- x\n             f y\n```\n\nwhere the function argument of `f` is given the name `y`.\n\nInstances must satisfy the following law in addition to the `Apply`\nlaws:\n\n- Associativity: `(x >>= f) >>= g = x >>= (\\k => f k >>= g)`\n\nAssociativity tells us that we can regroup operations which use `do`\nnotation so that we can unambiguously write, for example:\n\n```purescript\ndo x <- m1\n   y <- m2 x\n   m3 x y\n```\n","title":"Bind","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[317,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[320,1]}},{"children":[{"comments":null,"title":"conj","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"disj","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"not","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"booleanAlgebraBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BooleanAlgebra"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[802,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[807,1]}},{"comments":null,"title":"booleanAlgebraUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BooleanAlgebra"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[807,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[812,1]}},{"comments":null,"title":"booleanAlgebraFn","info":{"declType":"instance","dependencies":[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BooleanAlgebra"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[812,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[817,1]}}],"comments":"The `BooleanAlgebra` type class represents types that behave like boolean\nvalues.\n\nInstances should satisfy the following laws in addition to the `Bounded`\nlaws:\n\n- Associativity:\n  - `a || (b || c) = (a || b) || c`\n  - `a && (b && c) = (a && b) && c`\n- Commutativity:\n  - `a || b = b || a`\n  - `a && b = b && a`\n- Distributivity:\n  - `a && (b || c) = (a && b) || (a && c)`\n  - `a || (b && c) = (a || b) && (a || c)`\n- Identity:\n  - `a || bottom = a`\n  - `a && top = a`\n- Idempotent:\n  - `a || a = a`\n  - `a && a = a`\n- Absorption:\n  - `a || (a && b) = a`\n  - `a && (a || b) = a`\n- Annhiliation:\n  - `a || top = top`\n- Complementation:\n  - `a && not a = bottom`\n  - `a || not a = top`\n","title":"BooleanAlgebra","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[797,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[802,1]}},{"children":[{"comments":null,"title":"top","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"bottom","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"boundedBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[724,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[728,1]}},{"comments":null,"title":"boundedUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[728,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[732,1]}},{"comments":null,"title":"boundedOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[732,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[736,1]}},{"comments":null,"title":"boundedInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[736,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[741,1]}},{"comments":"Characters fall within the Unicode range.\n","title":"boundedChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[741,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[745,1]}},{"comments":null,"title":"boundedFn","info":{"declType":"instance","dependencies":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Bounded"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[745,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[749,1]}}],"comments":"The `Bounded` type class represents types that are finite.\n\nAlthough there are no \"internal\" laws for `Bounded`, every value of `a`\nshould be considered less than or equal to `top` by some means, and greater\nthan or equal to `bottom`.\n\nThe lack of explicit `Ord` constraint allows flexibility in the use of\n`Bounded` so it can apply to total and partially ordered sets, boolean\nalgebras, etc.\n","title":"Bounded","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[720,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[724,1]}},{"children":[{"comments":null,"title":"boundedOrdBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[762,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[763,1]}},{"comments":null,"title":"boundedOrdUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[763,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[764,1]}},{"comments":null,"title":"boundedOrdOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[764,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[765,1]}},{"comments":null,"title":"boundedOrdInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[765,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[766,1]}},{"comments":null,"title":"boundedOrdChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"BoundedOrd"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[766,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[797,1]}}],"comments":"The `BoundedOrd` type class represents totally ordered finite data types.\n\nInstances should satisfy the following law in addition to the `Ord` laws:\n\n- Ordering: `bottom <= a <= top`\n","title":"BoundedOrd","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Bounded"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[760,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[762,1]}},{"children":[{"comments":null,"title":"id","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"t"}]},null]}},"sourceSpan":null},{"comments":null,"title":"categoryFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Category"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]}},"sourceSpan":{"start":[153,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[167,1]}}],"comments":"`Category`s consist of objects and composable morphisms between them, and\nas such are [`Semigroupoids`](#semigroupoid), but unlike `semigroupoids`\nmust have an identity element.\n\nInstances must satisfy the following law in addition to the\n`Semigroupoid` law:\n\n- Identity: `id <<< p = p <<< id = p`\n","title":"Category","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Semigroupoid"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[150,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[153,1]}},{"children":[{"comments":null,"title":"divisionRingNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[556,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[557,1]}},{"comments":null,"title":"divisionRingUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[557,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[565,1]}}],"comments":"A `Ring` where every nonzero element has a multiplicative inverse.\n\nInstances must satisfy the following law in addition to the `Ring` and\n`ModuloSemiring` laws:\n\n- Multiplicative inverse: `(one / x) * x = one`\n\nAs a consequence of this ```a `mod` b = zero``` as no divide operation\nwill have a remainder.\n","title":"DivisionRing","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"ModuloSemiring"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[554,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[556,1]}},{"children":[{"comments":null,"title":"eq","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":null},{"comments":null,"title":"eqBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[592,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[595,1]}},{"comments":null,"title":"eqInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[595,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[598,1]}},{"comments":null,"title":"eqNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[598,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[601,1]}},{"comments":null,"title":"eqChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[601,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[604,1]}},{"comments":null,"title":"eqString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[604,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[607,1]}},{"comments":null,"title":"eqUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[607,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[610,1]}},{"comments":null,"title":"eqArray","info":{"declType":"instance","dependencies":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[610,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[613,1]}},{"comments":null,"title":"eqOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[613,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[619,1]}}],"comments":"The `Eq` type class represents types which support decidable equality.\n\n`Eq` instances should satisfy the following laws:\n\n- Reflexivity: `x == x = true`\n- Symmetry: `x == y = y == x`\n- Transitivity: if `x == y` and `y == z` then `x == z`\n","title":"Eq","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[577,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[580,1]}},{"children":[{"comments":null,"title":"map","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"functorFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[170,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[173,1]}},{"comments":null,"title":"functorArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Functor"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[173,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[176,1]}}],"comments":"A `Functor` is a type constructor which supports a mapping operation\n`(<$>)`.\n\n`(<$>)` can be used to turn functions `a -> b` into functions\n`f a -> f b` whose argument and return types use the type constructor `f`\nto represent some computational context.\n\nInstances must satisfy the following laws:\n\n- Identity: `(<$>) id = id`\n- Composition: `(<$>) (f <<< g) = (f <$>) <<< (g <$>)`\n","title":"Functor","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[167,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[170,1]}},{"children":[{"comments":null,"title":"div","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"mod","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"moduloSemiringInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[523,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[527,1]}},{"comments":null,"title":"moduloSemiringNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[527,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[531,1]}},{"comments":null,"title":"moduloSemiringUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[531,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[535,1]}}],"comments":"The `ModuloSemiring` class is for types that support addition,\nmultiplication, division, and modulo (division remainder) operations.\n\nInstances must satisfy the following law in addition to the `Semiring`\nlaws:\n\n- Remainder: ``a / b * b + (a `mod` b) = a``\n","title":"ModuloSemiring","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[519,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[523,1]}},{"children":[{"comments":null,"title":"monadFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[346,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[347,1]}},{"comments":null,"title":"monadArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Monad"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[347,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[360,1]}}],"comments":"The `Monad` type class combines the operations of the `Bind` and\n`Applicative` type classes. Therefore, `Monad` instances represent type\nconstructors which support sequential composition, and also lifting of\nfunctions of arbitrary arity.\n\nInstances must satisfy the following laws in addition to the\n`Applicative` and `Bind` laws:\n\n- Left Identity: `pure x >>= f = f x`\n- Right Identity: `x >>= pure = x`\n","title":"Monad","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]],[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[344,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[346,1]}},{"children":[{"comments":null,"title":"numNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[567,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[568,1]}},{"comments":null,"title":"numUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[568,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[577,1]}}],"comments":"The `Num` class is for types that are commutative fields.\n\nInstances must satisfy the following law in addition to the\n`DivisionRing` laws:\n\n- Commutative multiplication: `a * b = b * a`\n","title":"Num","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"DivisionRing"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[565,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[567,1]}},{"children":[{"comments":null,"title":"compare","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]}},"sourceSpan":null},{"comments":null,"title":"ordBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[642,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[645,1]}},{"comments":null,"title":"ordInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[645,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[648,1]}},{"comments":null,"title":"ordNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[648,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[651,1]}},{"comments":null,"title":"ordString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[651,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[654,1]}},{"comments":null,"title":"ordChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[654,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[657,1]}},{"comments":null,"title":"ordUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[657,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[660,1]}},{"comments":null,"title":"ordArray","info":{"declType":"instance","dependencies":[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[660,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[666,1]}},{"comments":null,"title":"ordOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[668,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[677,1]}}],"comments":"The `Ord` type class represents types which support comparisons with a\n_total order_.\n\n`Ord` instances should satisfy the laws of total orderings:\n\n- Reflexivity: `a <= a`\n- Antisymmetry: if `a <= b` and `b <= a` then `a = b`\n- Transitivity: if `a <= b` and `b <= c` then `a <= c`\n","title":"Ord","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[639,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[642,1]}},{"children":[{"comments":null,"title":"sub","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"ringInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[490,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[493,1]}},{"comments":null,"title":"ringNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[493,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[496,1]}},{"comments":null,"title":"ringUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[496,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[499,1]}}],"comments":"The `Ring` class is for types that support addition, multiplication,\nand subtraction operations.\n\nInstances must satisfy the following law in addition to the `Semiring`\nlaws:\n\n- Additive inverse: `a - a = (zero - a) + a = zero`\n","title":"Ring","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[487,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[490,1]}},{"children":[{"comments":null,"title":"append","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"semigroupString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[404,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[407,1]}},{"comments":null,"title":"semigroupUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[407,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[410,1]}},{"comments":null,"title":"semigroupFn","info":{"declType":"instance","dependencies":[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"s'"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s'"}]}}]}},"sourceSpan":{"start":[410,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[413,1]}},{"comments":null,"title":"semigroupOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[413,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[418,1]}},{"comments":null,"title":"semigroupArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[418,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[421,1]}}],"comments":"The `Semigroup` type class identifies an associative operation on a type.\n\nInstances are required to satisfy the following law:\n\n- Associativity: `(x <> y) <> z = x <> (y <> z)`\n\nOne example of a `Semigroup` is `String`, with `(<>)` defined as string\nconcatenation.\n","title":"Semigroup","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[390,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[393,1]}},{"children":[{"comments":null,"title":"compose","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"semigroupoidFn","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semigroupoid"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]}},"sourceSpan":{"start":[128,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[131,1]}}],"comments":"A `Semigroupoid` is similar to a [`Category`](#category) but does not\nrequire an identity element `id`, just composable morphisms.\n\n`Semigroupoid`s must satisfy the following law:\n\n- Associativity: `p <<< (q <<< r) = (p <<< q) <<< r`\n\nOne example of a `Semigroupoid` is the function type constructor `(->)`,\nwith `(<<<)` defined as function composition.\n","title":"Semigroupoid","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[125,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[128,1]}},{"children":[{"comments":null,"title":"add","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"zero","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"mul","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"one","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"semiringInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[446,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[452,1]}},{"comments":null,"title":"semiringNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[452,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[458,1]}},{"comments":null,"title":"semiringUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[458,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[464,1]}}],"comments":"The `Semiring` class is for types that support an addition and\nmultiplication operation.\n\nInstances must satisfy the following laws:\n\n- Commutative monoid under addition:\n  - Associativity: `(a + b) + c = a + (b + c)`\n  - Identity: `zero + a = a + zero = a`\n  - Commutative: `a + b = b + a`\n- Monoid under multiplication:\n  - Associativity: `(a * b) * c = a * (b * c)`\n  - Identity: `one * a = a * one = a`\n- Multiplication distributes over addition:\n  - Left distributivity: `a * (b + c) = (a * b) + (a * c)`\n  - Right distributivity: `(a + b) * c = (a * c) + (b * c)`\n- Annihiliation: `zero * a = a * zero = zero`\n","title":"Semiring","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[440,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[446,1]}},{"children":[{"comments":null,"title":"show","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":null},{"comments":null,"title":"showBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[841,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[845,1]}},{"comments":null,"title":"showInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[845,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[848,1]}},{"comments":null,"title":"showNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[848,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[851,1]}},{"comments":null,"title":"showChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[851,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[854,1]}},{"comments":null,"title":"showString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[854,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[857,1]}},{"comments":null,"title":"showUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[857,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[860,1]}},{"comments":null,"title":"showArray","info":{"declType":"instance","dependencies":[[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[860,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[863,1]}},{"comments":null,"title":"showOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[863,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[868,1]}}],"comments":"The `Show` type class represents those types which can be converted into\na human-readable `String` representation.\n\nWhile not required, it is recommended that for any expression `x`, the\nstring `show x` be executable PureScript code which evaluates to the same\nvalue as the expression `x`.\n","title":"Show","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[838,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[841,1]}},{"children":[],"comments":"`ap` provides a default implementation of `(<*>)` for any\n[`Monad`](#monad), without using `(<*>)` as provided by the\n[`Apply`](#apply)-[`Monad`](#monad) superclass relationship.\n\n`ap` can therefore be used to write [`Apply`](#apply) instances as\nfollows:\n\n```purescript\ninstance applyF :: Apply F where\n  apply = ap\n```\n","title":"ap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[376,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[377,1]}},{"children":[],"comments":"This function returns its first argument, and can be used to assert type\nequalities. This can be useful when types are otherwise ambiguous.\n\n```purescript\nmain = print $ [] `asTypeOf` [0]\n```\n\nIf instead, we had written `main = print []`, the type of the argument\n`[]` would have been ambiguous, resulting in a compile-time error.\n","title":"asTypeOf","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[104,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[105,1]}},{"children":[],"comments":"Returns its first argument and ignores its second.\n\n```purescript\nconst 1 \"hello\" = 1\n```\n","title":"const","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[92,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[93,1]}},{"children":[],"comments":"Flips the order of the arguments to a function of two arguments.\n\n```purescript\nflip const 1 2 = const 2 1 = 2\n```\n","title":"flip","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[85,1]}},{"children":[],"comments":"`liftA1` provides a default implementation of `(<$>)` for any\n[`Applicative`](#applicative) functor, without using `(<$>)` as provided\nby the [`Functor`](#functor)-[`Applicative`](#applicative) superclass\nrelationship.\n\n`liftA1` can therefore be used to write [`Functor`](#functor) instances\nas follows:\n\n```purescript\ninstance functorF :: Functor F where\n  map = liftA1\n```\n","title":"liftA1","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[288,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[289,1]}},{"children":[],"comments":"`liftM1` provides a default implementation of `(<$>)` for any\n[`Monad`](#monad), without using `(<$>)` as provided by the\n[`Functor`](#functor)-[`Monad`](#monad) superclass relationship.\n\n`liftM1` can therefore be used to write [`Functor`](#functor) instances\nas follows:\n\n```purescript\ninstance functorF :: Functor F where\n  map = liftM1\n```\n","title":"liftM1","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Monad"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[360,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[361,1]}},{"children":[],"comments":"`negate x` can be used as a shorthand for `zero - x`.\n","title":"negate","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[506,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[507,1]}},{"children":[],"comments":"An alias for `true`, which can be useful in guard clauses:\n\n```purescript\nmax x y | x >= y    = x\n        | otherwise = y\n```\n","title":"otherwise","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}},"sourceSpan":{"start":[113,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[114,1]}},{"children":[],"comments":"`return` is an alias for `pure`.\n","title":"return","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Applicative"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[273,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[274,1]}},{"children":[],"comments":"`unit` is the sole inhabitant of the `Unit` type.\n","title":"unit","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}},"sourceSpan":{"start":[39,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[40,1]}},{"children":[],"comments":null,"title":"unsafeCompare","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}]},null]}},"sourceSpan":{"start":[706,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[707,1]}},{"children":[],"comments":"The `void` function is used to ignore the type wrapped by a\n[`Functor`](#functor), replacing it with `Unit` and keeping only the type\ninformation provided by the type constructor itself.\n\n`void` is often useful when using `do` notation to change the return type\nof a monadic computation:\n\n```purescript\nmain = forE 1 10 \\n -> void do\n  print n\n  print (n * n)\n```\n","title":"void","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[205,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[206,1]}},{"children":[],"comments":"Applies an argument to a function.\n\n```purescript\nproducts # filter isInStock # groupBy productCategory # length\n```\n\nis equivalent to:\n\n```purescript\nlength (groupBy productCategory (filter isInStock products))\n```\n\n`(#)` is different from [`($)`](#-1) because it is left-infix instead of\nright: `x # a # b # c # d = (((x # a) # b) # c) # d = d (c (b (a x)))`\n","title":"(#)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[77,1]}},{"children":[],"comments":"Applies a function to its argument.\n\n```purescript\nlength $ groupBy productCategory $ filter isInStock $ products\n```\n\nis equivalent to:\n\n```purescript\nlength (groupBy productCategory (filter isInStock products))\n```\n\n`($)` is different from [`(#)`](#-2) because it is right-infix instead of\nleft: `a $ b $ c $ d x = a $ (b $ (c $ (d $ x))) = a (b (c (d x)))`\n","title":"($)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[60,1]}},{"children":[],"comments":"`(&&)` is an alias for `conj`.\n","title":"(&&)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[821,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[822,1]}},{"children":[],"comments":"`(*)` is an alias for `mul`.\n","title":"(*)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[472,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[473,1]}},{"children":[],"comments":"`(+)` is an alias for `add`.\n","title":"(+)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semiring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[468,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[469,1]}},{"children":[],"comments":"`(++)` is an alternative alias for `append`.\n","title":"(++)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"s"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[401,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[402,1]}},{"children":[],"comments":"`(-)` is an alias for `sub`.\n","title":"(-)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[502,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[503,1]}},{"children":[],"comments":"`(/)` is an alias for `div`.\n","title":"(/)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"ModuloSemiring"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[538,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[539,1]}},{"children":[],"comments":"`(/=)` tests whether one value is _not equal_ to another. Shorthand for\n`not (x == y)`.\n","title":"(/=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[589,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[590,1]}},{"children":[],"comments":"Test whether one value is _strictly less than_ another.\n","title":"(<)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[683,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[684,1]}},{"children":[],"comments":"`(<#>)` is `(<$>)` with its arguments reversed. For example:\n\n```purescript\n[1, 2, 3] <#> \\n -> n * n\n```\n","title":"(<#>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[190,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[191,1]}},{"children":[],"comments":"`(<$>)` is an alias for `map`\n","title":"(<$>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Functor"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[182,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[183,1]}},{"children":[],"comments":"`(<*>)` is an alias for `apply`.\n","title":"(<*>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Apply"],[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[242,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[243,1]}},{"children":[],"comments":"`(<<<)` is an alias for `compose`.\n","title":"(<<<)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semigroupoid"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[136,1]}},{"children":[],"comments":"Test whether one value is _non-strictly less than_ another.\n","title":"(<=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[695,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[696,1]}},{"children":[],"comments":"`(<>)` is an alias for `append`.\n","title":"(<>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semigroup"],[{"tag":"TypeVar","contents":"s"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[397,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[398,1]}},{"children":[],"comments":"`(==)` is an alias for `eq`. Tests whether one value is equal to another.\n","title":"(==)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[584,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[585,1]}},{"children":[],"comments":"Test whether one value is _strictly greater than_ another.\n","title":"(>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[689,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[690,1]}},{"children":[],"comments":"Test whether one value is _non-strictly greater than_ another.\n","title":"(>=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Ord"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[701,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[702,1]}},{"children":[],"comments":"`(>>=)` is an alias for `bind`.\n","title":"(>>=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Bind"],[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[331,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[332,1]}},{"children":[],"comments":"Forwards composition, or `(<<<)` with its arguments reversed.\n","title":"(>>>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Semigroupoid"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[139,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[140,1]}},{"children":[],"comments":"`(||)` is an alias for `disj`.\n","title":"(||)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"BooleanAlgebra"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[825,1],"name":"bower_components/purescript-prelude/src/Prelude.purs","end":[826,1]}}]},{"moduleName":["Test","Assert"],"declarations":[{"children":[],"comments":"Assertion effect type.\n","title":"ASSERT","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[13,1],"name":"bower_components/purescript-assert/src/Test/Assert.purs","end":[17,1]}},{"children":[],"comments":"Throws a runtime exception with message \"Assertion failed\" when the boolean\nvalue is false.\n","title":"assert","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["assert",{"tag":"TypeConstructor","contents":[["Test","Assert"],"ASSERT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[17,1],"name":"bower_components/purescript-assert/src/Test/Assert.purs","end":[18,1]}},{"children":[],"comments":"Throws a runtime exception with the specified message when the boolean\nvalue is false.\n","title":"assert'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["assert",{"tag":"TypeConstructor","contents":[["Test","Assert"],"ASSERT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[22,1],"name":"bower_components/purescript-assert/src/Test/Assert.purs","end":[31,1]}},{"children":[],"comments":"Throws a runtime exception with message \"Assertion failed: An error should\nhave been thrown\", unless the argument throws an exception when evaluated.\n\nThis function is specifically for testing unsafe pure code; for example,\nto make sure that an exception is thrown if a precondition is not\nsatisfied. Functions which use `Eff (err :: EXCEPTION | eff) a` can be\ntested with `catchException` instead.\n","title":"assertThrows","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["assert",{"tag":"TypeConstructor","contents":[["Test","Assert"],"ASSERT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-assert/src/Test/Assert.purs","end":[32,1]}},{"children":[],"comments":"Throws a runtime exception with the specified message, unless the argument\nthrows an exception when evaluated.\n\nThis function is specifically for testing unsafe pure code; for example,\nto make sure that an exception is thrown if a precondition is not\nsatisfied. Functions which use `Eff (err :: EXCEPTION | eff) a` can be\ntested with `catchException` instead.\n","title":"assertThrows'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["assert",{"tag":"TypeConstructor","contents":[["Test","Assert"],"ASSERT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"bower_components/purescript-assert/src/Test/Assert.purs","end":[42,1]}}]},{"moduleName":["Type","Proxy"],"declarations":[{"children":[{"comments":null,"title":"Proxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Value proxy for kind `*` types.\n","title":"Proxy","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[52,1],"name":"bower_components/purescript-proxy/src/Type/Proxy.purs","end":[55,1]}},{"children":[{"comments":null,"title":"Proxy2","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Value proxy for kind `* -> *` types.\n","title":"Proxy2","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]]},"sourceSpan":{"start":[55,1],"name":"bower_components/purescript-proxy/src/Type/Proxy.purs","end":[58,1]}},{"children":[{"comments":null,"title":"Proxy3","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Value proxy for kind `* -> * -> *` types.\n","title":"Proxy3","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]}]]},"sourceSpan":{"start":[58,1],"name":"bower_components/purescript-proxy/src/Type/Proxy.purs","end":[58,34]}}]},{"moduleName":["Unsafe","Coerce"],"declarations":[{"children":[],"comments":"A _highly unsafe_ function, which can be used to persuade the type system that\nany type is the same as any other type. When using this function, it is your\n(that is, the caller's) responsibility to ensure that the underlying\nrepresentation for both types is the same.\n\nOne application for this function is to avoid doing work that you know is a\nno-op because of newtypes. For example, if you have an `Array (Conj a)` and you\nwant an `Array (Disj a)`, you could do `Data.Array.map (runConj >>> Disj)`, but\nthis performs an unnecessary traversal. `unsafeCoerce` accomplishes the same\nfor free.\n\nIt is highly recommended to define specializations of this function rather than\nusing it as-is. For example:\n\n```\nmapConjToDisp :: forall a. Array (Conj a) -> Array (Disj a)\nmapConjToDisp = unsafeCoerce\n```\n\nThis way, you won't have any nasty surprises due to the inferred type being\ndifferent to what you expected.\n","title":"unsafeCoerce","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs","end":[27,49]}}]}],"name":"Batteries","comments":"🔋 A PureScript prelude with more features.\n","declarations":[]}],"resolvedDependencies":{"purescript-coproducts":"0.4.1","purescript-free":"0.9.1","purescript-proxy":"1.0.0","purescript-exceptions":"0.3.4","purescript-these":"0.3.3","purescript-maps":"0.5.7","purescript-control":"0.3.2","purescript-console":"0.1.1","purescript-either":"0.2.3","purescript-profunctor":"0.3.2","purescript-arrows":"0.6.2","purescript-arrays":"0.4.5","purescript-maybe":"0.3.5","purescript-exists":"0.2.0","purescript-distributive":"0.5.1","purescript-unfoldable":"0.4.1","purescript-invariant":"0.3.0","purescript-lazy":"0.4.1","purescript-monoid":"0.3.2","purescript-aff":"0.16.1","purescript-foldable-traversable":"0.4.2","purescript-tailrec":"0.3.1","purescript-lens":"0.9.1","purescript-sequences":"0.6.0","purescript-prelude":"0.1.5","purescript-inject":"0.3.0","purescript-st":"0.1.1","purescript-bifunctors":"0.4.0","purescript-contravariant":"0.2.3","purescript-assert":"0.1.1","purescript-generics":"0.7.2","purescript-unsafe-coerce":"0.1.0","purescript-refs":"0.2.0","purescript-integers":"0.2.1","purescript-eff":"0.1.2","purescript-orders":"0.1.1","purescript-const":"0.5.0","purescript-transformers":"0.8.4","purescript-globals":"0.2.2","purescript-math":"1.0.0","purescript-enums":"0.7.0","purescript-catenable-lists":"0.1.1","purescript-validation":"0.2.1","purescript-random":"0.2.3","purescript-parallel":"0.5.1","purescript-tuples":"0.4.0","purescript-semirings":"0.2.0","purescript-strings":"0.7.1","purescript-identity":"0.4.1","purescript-foreign":"0.7.2","purescript-sets":"0.5.7","purescript-lists":"0.7.10","purescript-nullable":"0.2.1","purescript-datetime":"0.9.2","purescript-functions":"0.1.0"},"bookmarks":[{"package":"purescript-aff","item":["Control.Monad.Aff","Aff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","PureAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","Canceler"]},{"package":"purescript-aff","item":["Control.Monad.Aff","cancel"]},{"package":"purescript-aff","item":["Control.Monad.Aff","cancelWith"]},{"package":"purescript-aff","item":["Control.Monad.Aff","launchAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","runAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","makeAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","makeAff'"]},{"package":"purescript-aff","item":["Control.Monad.Aff","later"]},{"package":"purescript-aff","item":["Control.Monad.Aff","later'"]},{"package":"purescript-aff","item":["Control.Monad.Aff","finally"]},{"package":"purescript-aff","item":["Control.Monad.Aff","forkAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","forkAll"]},{"package":"purescript-aff","item":["Control.Monad.Aff","attempt"]},{"package":"purescript-aff","item":["Control.Monad.Aff","apathize"]},{"package":"purescript-aff","item":["Control.Monad.Aff","liftEff'"]},{"package":"purescript-aff","item":["Control.Monad.Aff","nonCanceler"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Unsafe","unsafeTrace"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Unsafe","unsafeInterleaveAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","Par"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","runPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Console","log"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Console","print"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","MonadAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffContT"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffExceptT"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffListT"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffMaybe"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffReader"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffRWS"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffState"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffWriter"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","AVAR"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","AVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","AffAVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","makeVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","makeVar'"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","takeVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","putVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","modifyVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","killVar"]},{"package":"purescript-arrays","item":["Data.Array","singleton"]},{"package":"purescript-arrays","item":["Data.Array","range"]},{"package":"purescript-arrays","item":["Data.Array","(..)"]},{"package":"purescript-arrays","item":["Data.Array","replicate"]},{"package":"purescript-arrays","item":["Data.Array","replicateM"]},{"package":"purescript-arrays","item":["Data.Array","some"]},{"package":"purescript-arrays","item":["Data.Array","many"]},{"package":"purescript-arrays","item":["Data.Array","null"]},{"package":"purescript-arrays","item":["Data.Array","length"]},{"package":"purescript-arrays","item":["Data.Array","cons"]},{"package":"purescript-arrays","item":["Data.Array","(:)"]},{"package":"purescript-arrays","item":["Data.Array","snoc"]},{"package":"purescript-arrays","item":["Data.Array","insert"]},{"package":"purescript-arrays","item":["Data.Array","insertBy"]},{"package":"purescript-arrays","item":["Data.Array","head"]},{"package":"purescript-arrays","item":["Data.Array","last"]},{"package":"purescript-arrays","item":["Data.Array","tail"]},{"package":"purescript-arrays","item":["Data.Array","init"]},{"package":"purescript-arrays","item":["Data.Array","uncons"]},{"package":"purescript-arrays","item":["Data.Array","index"]},{"package":"purescript-arrays","item":["Data.Array","(!!)"]},{"package":"purescript-arrays","item":["Data.Array","elemIndex"]},{"package":"purescript-arrays","item":["Data.Array","elemLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","findIndex"]},{"package":"purescript-arrays","item":["Data.Array","findLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","insertAt"]},{"package":"purescript-arrays","item":["Data.Array","deleteAt"]},{"package":"purescript-arrays","item":["Data.Array","updateAt"]},{"package":"purescript-arrays","item":["Data.Array","modifyAt"]},{"package":"purescript-arrays","item":["Data.Array","alterAt"]},{"package":"purescript-arrays","item":["Data.Array","reverse"]},{"package":"purescript-arrays","item":["Data.Array","concat"]},{"package":"purescript-arrays","item":["Data.Array","concatMap"]},{"package":"purescript-arrays","item":["Data.Array","filter"]},{"package":"purescript-arrays","item":["Data.Array","partition"]},{"package":"purescript-arrays","item":["Data.Array","filterM"]},{"package":"purescript-arrays","item":["Data.Array","mapMaybe"]},{"package":"purescript-arrays","item":["Data.Array","catMaybes"]},{"package":"purescript-arrays","item":["Data.Array","sort"]},{"package":"purescript-arrays","item":["Data.Array","sortBy"]},{"package":"purescript-arrays","item":["Data.Array","slice"]},{"package":"purescript-arrays","item":["Data.Array","take"]},{"package":"purescript-arrays","item":["Data.Array","takeWhile"]},{"package":"purescript-arrays","item":["Data.Array","drop"]},{"package":"purescript-arrays","item":["Data.Array","dropWhile"]},{"package":"purescript-arrays","item":["Data.Array","span"]},{"package":"purescript-arrays","item":["Data.Array","group"]},{"package":"purescript-arrays","item":["Data.Array","group'"]},{"package":"purescript-arrays","item":["Data.Array","groupBy"]},{"package":"purescript-arrays","item":["Data.Array","nub"]},{"package":"purescript-arrays","item":["Data.Array","nubBy"]},{"package":"purescript-arrays","item":["Data.Array","union"]},{"package":"purescript-arrays","item":["Data.Array","unionBy"]},{"package":"purescript-arrays","item":["Data.Array","delete"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","(\\\\)"]},{"package":"purescript-arrays","item":["Data.Array","intersect"]},{"package":"purescript-arrays","item":["Data.Array","intersectBy"]},{"package":"purescript-arrays","item":["Data.Array","zipWith"]},{"package":"purescript-arrays","item":["Data.Array","zipWithA"]},{"package":"purescript-arrays","item":["Data.Array","zip"]},{"package":"purescript-arrays","item":["Data.Array","unzip"]},{"package":"purescript-arrays","item":["Data.Array","foldM"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","unsafeIndex"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","head"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","tail"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","last"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","init"]},{"package":"purescript-arrays","item":["Data.Array.ST","STArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","Assoc"]},{"package":"purescript-arrays","item":["Data.Array.ST","runSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","emptySTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","thaw"]},{"package":"purescript-arrays","item":["Data.Array.ST","freeze"]},{"package":"purescript-arrays","item":["Data.Array.ST","peekSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pokeSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushAllSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","spliceSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","toAssocArray"]},{"package":"purescript-arrows","item":["Control.Arrow","Arrow"]},{"package":"purescript-arrows","item":["Control.Arrow","arrowFunction"]},{"package":"purescript-arrows","item":["Control.Arrow","ArrowZero"]},{"package":"purescript-arrows","item":["Control.Arrow","(<+>)"]},{"package":"purescript-arrows","item":["Control.Arrow","ArrowPlus"]},{"package":"purescript-arrows","item":["Control.Arrow","(<+>)"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","Static"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","runStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","semigroupoidStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","categoryStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","profunctorStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","strongStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","choiceStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","arrowStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","Kleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","runKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","semigroupoidKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","categoryKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","profunctorKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","strongKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","arrowKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","arrowZeroKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","arrowPlusKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","Cokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","runCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","semigroupoidCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","categoryCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","profunctorCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","strongCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","arrowCokleisli"]},{"package":"purescript-assert","item":["Test.Assert","ASSERT"]},{"package":"purescript-assert","item":["Test.Assert","assert"]},{"package":"purescript-assert","item":["Test.Assert","assert'"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows'"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","Biapply"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift2"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift3"]},{"package":"purescript-bifunctors","item":["Control.Biapplicative","Biapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","Bifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","lmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","rmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","Wrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","unwrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","Product"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","Joker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","runJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","Join"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","runJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","Flip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","runFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","Clown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","runClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapplicative"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","CatQueue"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","empty"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","null"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","null"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","snoc"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","uncons"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","uncons"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","uncons"]},{"package":"purescript-catenable-lists","item":["Data.CatList","CatList"]},{"package":"purescript-catenable-lists","item":["Data.CatList","empty"]},{"package":"purescript-catenable-lists","item":["Data.CatList","null"]},{"package":"purescript-catenable-lists","item":["Data.CatList","null"]},{"package":"purescript-catenable-lists","item":["Data.CatList","append"]},{"package":"purescript-catenable-lists","item":["Data.CatList","append"]},{"package":"purescript-catenable-lists","item":["Data.CatList","append"]},{"package":"purescript-catenable-lists","item":["Data.CatList","cons"]},{"package":"purescript-catenable-lists","item":["Data.CatList","snoc"]},{"package":"purescript-catenable-lists","item":["Data.CatList","uncons"]},{"package":"purescript-catenable-lists","item":["Data.CatList","uncons"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","print"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","logAny"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","errorAny"]},{"package":"purescript-const","item":["Data.Const","Const"]},{"package":"purescript-const","item":["Data.Const","getConst"]},{"package":"purescript-const","item":["Data.Const","eqConst"]},{"package":"purescript-const","item":["Data.Const","ordConst"]},{"package":"purescript-const","item":["Data.Const","boundedConst"]},{"package":"purescript-const","item":["Data.Const","showConst"]},{"package":"purescript-const","item":["Data.Const","semigroupoidConst"]},{"package":"purescript-const","item":["Data.Const","semigroupConst"]},{"package":"purescript-const","item":["Data.Const","monoidConst"]},{"package":"purescript-const","item":["Data.Const","functorConst"]},{"package":"purescript-const","item":["Data.Const","invariantConst"]},{"package":"purescript-const","item":["Data.Const","applyConst"]},{"package":"purescript-const","item":["Data.Const","bindConst"]},{"package":"purescript-const","item":["Data.Const","applicativeConst"]},{"package":"purescript-const","item":["Data.Const","contravariantConst"]},{"package":"purescript-const","item":["Data.Const","foldableConst"]},{"package":"purescript-const","item":["Data.Const","traversableConst"]},{"package":"purescript-contravariant","item":["Data.Predicate","Predicate"]},{"package":"purescript-contravariant","item":["Data.Predicate","runPredicate"]},{"package":"purescript-contravariant","item":["Data.Predicate","contravariantPredicate"]},{"package":"purescript-contravariant","item":["Data.Op","Op"]},{"package":"purescript-contravariant","item":["Data.Op","runOp"]},{"package":"purescript-contravariant","item":["Data.Equivalence","Equivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","runEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","contravariantEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","semigroupEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","monoidEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","defaultEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","comparisonEquivalence"]},{"package":"purescript-contravariant","item":["Data.Comparison","Comparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","runComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","contravariantComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","semigroupComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","monoidComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","defaultComparison"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant","Contravariant"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant","(>$<)"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant","(>#<)"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Divide"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Divisible"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divided"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Decide"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Decidable"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decided"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.Plus","plusArray"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.MonadPlus","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","monadPlusArray"]},{"package":"purescript-control","item":["Control.Monad","when"]},{"package":"purescript-control","item":["Control.Monad","when"]},{"package":"purescript-control","item":["Control.Monad","unless"]},{"package":"purescript-control","item":["Control.Monad","unless"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","extendFn"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","join"]},{"package":"purescript-control","item":["Control.Bind","ifM"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","lift2"]},{"package":"purescript-control","item":["Control.Apply","lift3"]},{"package":"purescript-control","item":["Control.Apply","lift4"]},{"package":"purescript-control","item":["Control.Apply","lift5"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alternative","alternativeArray"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","altArray"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","Coproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","runCoproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","left"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","right"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","coproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","functorCoproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","foldableCoproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","traversableCoproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct2"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct3"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct4"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct5"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","Coproduct10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of2"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of2"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of3"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of3"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of3"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of4"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of4"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of4"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4of4"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of5"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of5"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of5"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4of5"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct5of5"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4of6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct5of6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct6of6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4of7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct5of7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct6of7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct7of7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct5of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct6of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct7of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct8of8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct5of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct6of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct7of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct8of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct9of9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct1of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct5of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct6of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct7of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct8of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct9of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct10of10"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct2"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct3"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct4"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct5"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct6"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct7"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct8"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct9"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct.Nested","coproduct10"]},{"package":"purescript-datetime","item":["Data.Time","HourOfDay"]},{"package":"purescript-datetime","item":["Data.Time","eqHourOfDay"]},{"package":"purescript-datetime","item":["Data.Time","ordHourOfDay"]},{"package":"purescript-datetime","item":["Data.Time","Hours"]},{"package":"purescript-datetime","item":["Data.Time","eqHours"]},{"package":"purescript-datetime","item":["Data.Time","ordHours"]},{"package":"purescript-datetime","item":["Data.Time","semiringHours"]},{"package":"purescript-datetime","item":["Data.Time","ringHours"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringHours"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingHours"]},{"package":"purescript-datetime","item":["Data.Time","numHours"]},{"package":"purescript-datetime","item":["Data.Time","showHours"]},{"package":"purescript-datetime","item":["Data.Time","MinuteOfHour"]},{"package":"purescript-datetime","item":["Data.Time","eqMinuteOfHour"]},{"package":"purescript-datetime","item":["Data.Time","ordMinuteOfHour"]},{"package":"purescript-datetime","item":["Data.Time","Minutes"]},{"package":"purescript-datetime","item":["Data.Time","eqMinutes"]},{"package":"purescript-datetime","item":["Data.Time","ordMinutes"]},{"package":"purescript-datetime","item":["Data.Time","semiringMinutes"]},{"package":"purescript-datetime","item":["Data.Time","ringMinutes"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringMinutes"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingMinutes"]},{"package":"purescript-datetime","item":["Data.Time","numMinutes"]},{"package":"purescript-datetime","item":["Data.Time","showMinutes"]},{"package":"purescript-datetime","item":["Data.Time","SecondOfMinute"]},{"package":"purescript-datetime","item":["Data.Time","eqSecondOfMinute"]},{"package":"purescript-datetime","item":["Data.Time","ordSecondOfMinute"]},{"package":"purescript-datetime","item":["Data.Time","Seconds"]},{"package":"purescript-datetime","item":["Data.Time","eqSeconds"]},{"package":"purescript-datetime","item":["Data.Time","ordSeconds"]},{"package":"purescript-datetime","item":["Data.Time","semiringSeconds"]},{"package":"purescript-datetime","item":["Data.Time","ringSeconds"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringSeconds"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingSeconds"]},{"package":"purescript-datetime","item":["Data.Time","numSeconds"]},{"package":"purescript-datetime","item":["Data.Time","showSeconds"]},{"package":"purescript-datetime","item":["Data.Time","MillisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Time","eqMillisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Time","ordMillisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Time","Milliseconds"]},{"package":"purescript-datetime","item":["Data.Time","eqMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","ordMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","semiringMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","ringMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","numMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","showMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","TimeValue"]},{"package":"purescript-datetime","item":["Data.Time","timeValueHours"]},{"package":"purescript-datetime","item":["Data.Time","timeValueMinutes"]},{"package":"purescript-datetime","item":["Data.Time","timeValueSeconds"]},{"package":"purescript-datetime","item":["Data.Time","timeValueMilliseconds"]},{"package":"purescript-datetime","item":["Data.Date","JSDate"]},{"package":"purescript-datetime","item":["Data.Date","Date"]},{"package":"purescript-datetime","item":["Data.Date","fromJSDate"]},{"package":"purescript-datetime","item":["Data.Date","toJSDate"]},{"package":"purescript-datetime","item":["Data.Date","fromEpochMilliseconds"]},{"package":"purescript-datetime","item":["Data.Date","toEpochMilliseconds"]},{"package":"purescript-datetime","item":["Data.Date","fromString"]},{"package":"purescript-datetime","item":["Data.Date","fromStringStrict"]},{"package":"purescript-datetime","item":["Data.Date","Now"]},{"package":"purescript-datetime","item":["Data.Date","now"]},{"package":"purescript-datetime","item":["Data.Date","nowEpochMilliseconds"]},{"package":"purescript-datetime","item":["Data.Date","LocaleOffset"]},{"package":"purescript-datetime","item":["Data.Date","timezoneOffset"]},{"package":"purescript-datetime","item":["Data.Date","toISOString"]},{"package":"purescript-datetime","item":["Data.Date","Year"]},{"package":"purescript-datetime","item":["Data.Date","Month"]},{"package":"purescript-datetime","item":["Data.Date","DayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date","DayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date.UTC","dateTime"]},{"package":"purescript-datetime","item":["Data.Date.UTC","date"]},{"package":"purescript-datetime","item":["Data.Date.UTC","year"]},{"package":"purescript-datetime","item":["Data.Date.UTC","month"]},{"package":"purescript-datetime","item":["Data.Date.UTC","dayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date.UTC","dayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date.UTC","hourOfDay"]},{"package":"purescript-datetime","item":["Data.Date.UTC","minuteOfHour"]},{"package":"purescript-datetime","item":["Data.Date.UTC","secondOfMinute"]},{"package":"purescript-datetime","item":["Data.Date.UTC","millisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Date.Locale","Locale"]},{"package":"purescript-datetime","item":["Data.Date.Locale","dateTime"]},{"package":"purescript-datetime","item":["Data.Date.Locale","date"]},{"package":"purescript-datetime","item":["Data.Date.Locale","year"]},{"package":"purescript-datetime","item":["Data.Date.Locale","month"]},{"package":"purescript-datetime","item":["Data.Date.Locale","dayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date.Locale","dayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date.Locale","hourOfDay"]},{"package":"purescript-datetime","item":["Data.Date.Locale","minuteOfHour"]},{"package":"purescript-datetime","item":["Data.Date.Locale","secondOfMinute"]},{"package":"purescript-datetime","item":["Data.Date.Locale","millisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Date.Locale","toLocaleString"]},{"package":"purescript-datetime","item":["Data.Date.Locale","toLocaleTimeString"]},{"package":"purescript-datetime","item":["Data.Date.Locale","toLocaleDateString"]},{"package":"purescript-distributive","item":["Data.Distributive","Distributive"]},{"package":"purescript-distributive","item":["Data.Distributive","cotraverse"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveIdentity"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveFunction"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeInterleaveEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafePerformEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-either","item":["Data.Either","Either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","isLeft"]},{"package":"purescript-either","item":["Data.Either","isRight"]},{"package":"purescript-either","item":["Data.Either","functorEither"]},{"package":"purescript-either","item":["Data.Either","bifunctorEither"]},{"package":"purescript-either","item":["Data.Either","applyEither"]},{"package":"purescript-either","item":["Data.Either","applicativeEither"]},{"package":"purescript-either","item":["Data.Either","altEither"]},{"package":"purescript-either","item":["Data.Either","bindEither"]},{"package":"purescript-either","item":["Data.Either","monadEither"]},{"package":"purescript-either","item":["Data.Either","extendEither"]},{"package":"purescript-either","item":["Data.Either","showEither"]},{"package":"purescript-either","item":["Data.Either","eqEither"]},{"package":"purescript-either","item":["Data.Either","ordEither"]},{"package":"purescript-either","item":["Data.Either","boundedEither"]},{"package":"purescript-either","item":["Data.Either","foldableEither"]},{"package":"purescript-either","item":["Data.Either","bifoldableEither"]},{"package":"purescript-either","item":["Data.Either","traversableEither"]},{"package":"purescript-either","item":["Data.Either","bitraversableEither"]},{"package":"purescript-either","item":["Data.Either","semiringEither"]},{"package":"purescript-either","item":["Data.Either","semigroupEither"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromLeft"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromLeft"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromRight"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromRight"]},{"package":"purescript-either","item":["Data.Either.Nested","Either2"]},{"package":"purescript-either","item":["Data.Either.Nested","Either3"]},{"package":"purescript-either","item":["Data.Either.Nested","Either4"]},{"package":"purescript-either","item":["Data.Either.Nested","Either5"]},{"package":"purescript-either","item":["Data.Either.Nested","Either6"]},{"package":"purescript-either","item":["Data.Either.Nested","Either7"]},{"package":"purescript-either","item":["Data.Either.Nested","Either8"]},{"package":"purescript-either","item":["Data.Either.Nested","Either9"]},{"package":"purescript-either","item":["Data.Either.Nested","Either10"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either10of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2"]},{"package":"purescript-either","item":["Data.Either.Nested","either3"]},{"package":"purescript-either","item":["Data.Either.Nested","either4"]},{"package":"purescript-either","item":["Data.Either.Nested","either5"]},{"package":"purescript-either","item":["Data.Either.Nested","either6"]},{"package":"purescript-either","item":["Data.Either.Nested","either7"]},{"package":"purescript-either","item":["Data.Either.Nested","either8"]},{"package":"purescript-either","item":["Data.Either.Nested","either9"]},{"package":"purescript-either","item":["Data.Either.Nested","either10"]},{"package":"purescript-enums","item":["Data.Enum","Cardinality"]},{"package":"purescript-enums","item":["Data.Enum","runCardinality"]},{"package":"purescript-enums","item":["Data.Enum","Enum"]},{"package":"purescript-enums","item":["Data.Enum","defaultSucc"]},{"package":"purescript-enums","item":["Data.Enum","defaultPred"]},{"package":"purescript-enums","item":["Data.Enum","defaultToEnum"]},{"package":"purescript-enums","item":["Data.Enum","defaultFromEnum"]},{"package":"purescript-enums","item":["Data.Enum","enumFromTo"]},{"package":"purescript-enums","item":["Data.Enum","enumFromThenTo"]},{"package":"purescript-enums","item":["Data.Enum","intFromTo"]},{"package":"purescript-enums","item":["Data.Enum","intStepFromTo"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","EXCEPTION"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","Error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","message"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","stack"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","throwException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","catchException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","throw"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrowException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrow"]},{"package":"purescript-exists","item":["Data.Exists","Exists"]},{"package":"purescript-exists","item":["Data.Exists","mkExists"]},{"package":"purescript-exists","item":["Data.Exists","runExists"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Traversable"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","sequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","for"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Accum"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanl"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanr"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","Foldable"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","fold"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","traverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","for_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","mconcat"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","intercalate"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","and"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","or"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","any"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","all"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","product"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","elem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","notElem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","find"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","Bitraversable"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bitraverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bisequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bifor"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","Bifoldable"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifold"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bitraverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifor_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bisequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biany"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biall"]},{"package":"purescript-foreign","item":["Data.Foreign","Foreign"]},{"package":"purescript-foreign","item":["Data.Foreign","ForeignError"]},{"package":"purescript-foreign","item":["Data.Foreign","F"]},{"package":"purescript-foreign","item":["Data.Foreign","parseJSON"]},{"package":"purescript-foreign","item":["Data.Foreign","toForeign"]},{"package":"purescript-foreign","item":["Data.Foreign","unsafeFromForeign"]},{"package":"purescript-foreign","item":["Data.Foreign","typeOf"]},{"package":"purescript-foreign","item":["Data.Foreign","tagOf"]},{"package":"purescript-foreign","item":["Data.Foreign","unsafeReadTagged"]},{"package":"purescript-foreign","item":["Data.Foreign","unsafeReadTagged"]},{"package":"purescript-foreign","item":["Data.Foreign","isNull"]},{"package":"purescript-foreign","item":["Data.Foreign","isUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign","isArray"]},{"package":"purescript-foreign","item":["Data.Foreign","readString"]},{"package":"purescript-foreign","item":["Data.Foreign","readChar"]},{"package":"purescript-foreign","item":["Data.Foreign","readBoolean"]},{"package":"purescript-foreign","item":["Data.Foreign","readNumber"]},{"package":"purescript-foreign","item":["Data.Foreign","readInt"]},{"package":"purescript-foreign","item":["Data.Foreign","readArray"]},{"package":"purescript-foreign","item":["Data.Foreign","readArray"]},{"package":"purescript-foreign","item":["Data.Foreign.Undefined","Undefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Undefined","runUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Undefined","readUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Undefined","readUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.NullOrUndefined","NullOrUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.NullOrUndefined","runNullOrUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.NullOrUndefined","readNullOrUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.NullOrUndefined","readNullOrUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Null","Null"]},{"package":"purescript-foreign","item":["Data.Foreign.Null","runNull"]},{"package":"purescript-foreign","item":["Data.Foreign.Null","readNull"]},{"package":"purescript-foreign","item":["Data.Foreign.Null","readNull"]},{"package":"purescript-foreign","item":["Data.Foreign.Keys","keys"]},{"package":"purescript-foreign","item":["Data.Foreign.Keys","keys"]},{"package":"purescript-foreign","item":["Data.Foreign.Keys","keys"]},{"package":"purescript-foreign","item":["Data.Foreign.Keys","keys"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","Index"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","(!)"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","prop"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","index"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","IsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","readJSON"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","readWith"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","readProp"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","Trampoline"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","done"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","suspend"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","delay'"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","delay"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","runTrampoline"]},{"package":"purescript-free","item":["Control.Monad.Free","Free"]},{"package":"purescript-free","item":["Control.Monad.Free","liftF"]},{"package":"purescript-free","item":["Control.Monad.Free","liftFI"]},{"package":"purescript-free","item":["Control.Monad.Free","suspendF"]},{"package":"purescript-free","item":["Control.Monad.Free","mapF"]},{"package":"purescript-free","item":["Control.Monad.Free","injF"]},{"package":"purescript-free","item":["Control.Monad.Free","foldFree"]},{"package":"purescript-free","item":["Control.Monad.Free","runFree"]},{"package":"purescript-free","item":["Control.Monad.Free","runFreeM"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","Cofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","mkCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","head"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","tail"]},{"package":"purescript-free","item":["Data.Yoneda","Yoneda"]},{"package":"purescript-free","item":["Data.Yoneda","runYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","liftYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","lowerYoneda"]},{"package":"purescript-free","item":["Data.NaturalTransformation","NaturalTransformation"]},{"package":"purescript-free","item":["Data.NaturalTransformation","Natural"]},{"package":"purescript-free","item":["Data.Coyoneda","CoyonedaF"]},{"package":"purescript-free","item":["Data.Coyoneda","Coyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","coyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","liftCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","lowerCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","liftCoyonedaT"]},{"package":"purescript-free","item":["Data.Coyoneda","liftCoyonedaTF"]},{"package":"purescript-functions","item":["Data.Function","on"]},{"package":"purescript-functions","item":["Data.Function","Fn0"]},{"package":"purescript-functions","item":["Data.Function","Fn1"]},{"package":"purescript-functions","item":["Data.Function","Fn2"]},{"package":"purescript-functions","item":["Data.Function","Fn3"]},{"package":"purescript-functions","item":["Data.Function","Fn4"]},{"package":"purescript-functions","item":["Data.Function","Fn5"]},{"package":"purescript-functions","item":["Data.Function","Fn6"]},{"package":"purescript-functions","item":["Data.Function","Fn7"]},{"package":"purescript-functions","item":["Data.Function","Fn8"]},{"package":"purescript-functions","item":["Data.Function","Fn9"]},{"package":"purescript-functions","item":["Data.Function","Fn10"]},{"package":"purescript-functions","item":["Data.Function","mkFn0"]},{"package":"purescript-functions","item":["Data.Function","mkFn1"]},{"package":"purescript-functions","item":["Data.Function","mkFn2"]},{"package":"purescript-functions","item":["Data.Function","mkFn3"]},{"package":"purescript-functions","item":["Data.Function","mkFn4"]},{"package":"purescript-functions","item":["Data.Function","mkFn5"]},{"package":"purescript-functions","item":["Data.Function","mkFn6"]},{"package":"purescript-functions","item":["Data.Function","mkFn7"]},{"package":"purescript-functions","item":["Data.Function","mkFn8"]},{"package":"purescript-functions","item":["Data.Function","mkFn9"]},{"package":"purescript-functions","item":["Data.Function","mkFn10"]},{"package":"purescript-functions","item":["Data.Function","runFn0"]},{"package":"purescript-functions","item":["Data.Function","runFn1"]},{"package":"purescript-functions","item":["Data.Function","runFn2"]},{"package":"purescript-functions","item":["Data.Function","runFn3"]},{"package":"purescript-functions","item":["Data.Function","runFn4"]},{"package":"purescript-functions","item":["Data.Function","runFn5"]},{"package":"purescript-functions","item":["Data.Function","runFn6"]},{"package":"purescript-functions","item":["Data.Function","runFn7"]},{"package":"purescript-functions","item":["Data.Function","runFn8"]},{"package":"purescript-functions","item":["Data.Function","runFn9"]},{"package":"purescript-functions","item":["Data.Function","runFn10"]},{"package":"purescript-generics","item":["Data.Generic","GenericSpine"]},{"package":"purescript-generics","item":["Data.Generic","DataConstructor"]},{"package":"purescript-generics","item":["Data.Generic","GenericSignature"]},{"package":"purescript-generics","item":["Data.Generic","showSignature"]},{"package":"purescript-generics","item":["Data.Generic","showDataConstructor"]},{"package":"purescript-generics","item":["Data.Generic","Generic"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","gShow"]},{"package":"purescript-generics","item":["Data.Generic","gEq"]},{"package":"purescript-generics","item":["Data.Generic","gCompare"]},{"package":"purescript-globals","item":["Global.Unsafe","unsafeStringify"]},{"package":"purescript-globals","item":["Global","nan"]},{"package":"purescript-globals","item":["Global","isNaN"]},{"package":"purescript-globals","item":["Global","infinity"]},{"package":"purescript-globals","item":["Global","isFinite"]},{"package":"purescript-globals","item":["Global","readInt"]},{"package":"purescript-globals","item":["Global","readFloat"]},{"package":"purescript-globals","item":["Global","decodeURI"]},{"package":"purescript-globals","item":["Global","encodeURI"]},{"package":"purescript-globals","item":["Global","decodeURIComponent"]},{"package":"purescript-globals","item":["Global","encodeURIComponent"]},{"package":"purescript-identity","item":["Data.Identity","Identity"]},{"package":"purescript-identity","item":["Data.Identity","runIdentity"]},{"package":"purescript-identity","item":["Data.Identity","eqIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ordIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedOrdIdentity"]},{"package":"purescript-identity","item":["Data.Identity","booleanAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semigroupIdenity"]},{"package":"purescript-identity","item":["Data.Identity","monoidIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","moduloSemiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","divisionRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","numIdentity"]},{"package":"purescript-identity","item":["Data.Identity","showIdentity"]},{"package":"purescript-identity","item":["Data.Identity","functorIdentity"]},{"package":"purescript-identity","item":["Data.Identity","invariantIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applyIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applicativeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","bindIdentity"]},{"package":"purescript-identity","item":["Data.Identity","monadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","extendIdentity"]},{"package":"purescript-identity","item":["Data.Identity","comonadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","foldableIdentity"]},{"package":"purescript-identity","item":["Data.Identity","traversableIdentity"]},{"package":"purescript-inject","item":["Data.Inject","Inject"]},{"package":"purescript-integers","item":["Data.Int","fromNumber"]},{"package":"purescript-integers","item":["Data.Int","floor"]},{"package":"purescript-integers","item":["Data.Int","ceil"]},{"package":"purescript-integers","item":["Data.Int","round"]},{"package":"purescript-integers","item":["Data.Int","toNumber"]},{"package":"purescript-integers","item":["Data.Int","fromString"]},{"package":"purescript-integers","item":["Data.Int","even"]},{"package":"purescript-integers","item":["Data.Int","odd"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.&.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.|.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.^.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","shl"]},{"package":"purescript-integers","item":["Data.Int.Bits","shr"]},{"package":"purescript-integers","item":["Data.Int.Bits","zshr"]},{"package":"purescript-integers","item":["Data.Int.Bits","complement"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-lazy","item":["Data.Lazy","Lazy"]},{"package":"purescript-lazy","item":["Data.Lazy","defer"]},{"package":"purescript-lazy","item":["Data.Lazy","force"]},{"package":"purescript-lazy","item":["Data.Lazy","semiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","moduloSemiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","divisionRingLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","numLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","eqLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ordLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedOrdLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","semigroupLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monoidLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","booleanAlgebraLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","functorLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applyLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applicativeLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","bindLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","extendLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","comonadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","showLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","lazyLazy"]},{"package":"purescript-lens","item":["Optic.Types","Accessing"]},{"package":"purescript-lens","item":["Optic.Types","APrism"]},{"package":"purescript-lens","item":["Optic.Types","APrismP"]},{"package":"purescript-lens","item":["Optic.Types","ASetter"]},{"package":"purescript-lens","item":["Optic.Types","ASetterP"]},{"package":"purescript-lens","item":["Optic.Types","Getting"]},{"package":"purescript-lens","item":["Optic.Types","Getter"]},{"package":"purescript-lens","item":["Optic.Types","Lens"]},{"package":"purescript-lens","item":["Optic.Types","LensP"]},{"package":"purescript-lens","item":["Optic.Types","Optical"]},{"package":"purescript-lens","item":["Optic.Types","OpticalP"]},{"package":"purescript-lens","item":["Optic.Types","Prism"]},{"package":"purescript-lens","item":["Optic.Types","PrismP"]},{"package":"purescript-lens","item":["Optic.Types","Setter"]},{"package":"purescript-lens","item":["Optic.Types","SetterP"]},{"package":"purescript-lens","item":["Optic.Types","Setting"]},{"package":"purescript-lens","item":["Optic.Types","SettingP"]},{"package":"purescript-lens","item":["Optic.Setter","argument"]},{"package":"purescript-lens","item":["Optic.Setter","contramapped"]},{"package":"purescript-lens","item":["Optic.Setter","mapped"]},{"package":"purescript-lens","item":["Optic.Setter","over"]},{"package":"purescript-lens","item":["Optic.Setter","set"]},{"package":"purescript-lens","item":["Optic.Setter","set'"]},{"package":"purescript-lens","item":["Optic.Setter","sets"]},{"package":"purescript-lens","item":["Optic.Setter","(%~)"]},{"package":"purescript-lens","item":["Optic.Setter","(.~)"]},{"package":"purescript-lens","item":["Optic.Setter","(+~)"]},{"package":"purescript-lens","item":["Optic.Setter","(-~)"]},{"package":"purescript-lens","item":["Optic.Setter","(*~)"]},{"package":"purescript-lens","item":["Optic.Setter","(//~)"]},{"package":"purescript-lens","item":["Optic.Setter","(||~)"]},{"package":"purescript-lens","item":["Optic.Setter","(&&~)"]},{"package":"purescript-lens","item":["Optic.Setter","(<>~)"]},{"package":"purescript-lens","item":["Optic.Setter","(++~)"]},{"package":"purescript-lens","item":["Optic.Setter","(?~)"]},{"package":"purescript-lens","item":["Optic.Prism","clonePrism"]},{"package":"purescript-lens","item":["Optic.Prism","is"]},{"package":"purescript-lens","item":["Optic.Prism","isn't"]},{"package":"purescript-lens","item":["Optic.Prism","matching"]},{"package":"purescript-lens","item":["Optic.Prism","nearly"]},{"package":"purescript-lens","item":["Optic.Prism","only"]},{"package":"purescript-lens","item":["Optic.Prism","prism"]},{"package":"purescript-lens","item":["Optic.Prism","prism'"]},{"package":"purescript-lens","item":["Optic.Prism","withPrism"]},{"package":"purescript-lens","item":["Optic.Lens","lens"]},{"package":"purescript-lens","item":["Optic.Lens","(??)"]},{"package":"purescript-lens","item":["Optic.Getter","to"]},{"package":"purescript-lens","item":["Optic.Getter","view"]},{"package":"purescript-lens","item":["Optic.Getter","(^.)"]},{"package":"purescript-lens","item":["Optic.Core","(..)"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","validLens"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","getSet"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","setGet"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","setSet"]},{"package":"purescript-lens","item":["Optic.Internal.Setter","Settable"]},{"package":"purescript-lens","item":["Optic.Internal.Setter","settableIdentity"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","Market"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","MarketP"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","functorMarket"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","profunctorMarket"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","choiceMarket"]},{"package":"purescript-lists","item":["Data.List","List"]},{"package":"purescript-lists","item":["Data.List","toUnfoldable"]},{"package":"purescript-lists","item":["Data.List","fromFoldable"]},{"package":"purescript-lists","item":["Data.List","singleton"]},{"package":"purescript-lists","item":["Data.List","(..)"]},{"package":"purescript-lists","item":["Data.List","range"]},{"package":"purescript-lists","item":["Data.List","replicate"]},{"package":"purescript-lists","item":["Data.List","replicateM"]},{"package":"purescript-lists","item":["Data.List","some"]},{"package":"purescript-lists","item":["Data.List","many"]},{"package":"purescript-lists","item":["Data.List","null"]},{"package":"purescript-lists","item":["Data.List","null"]},{"package":"purescript-lists","item":["Data.List","length"]},{"package":"purescript-lists","item":["Data.List","(:)"]},{"package":"purescript-lists","item":["Data.List","snoc"]},{"package":"purescript-lists","item":["Data.List","insert"]},{"package":"purescript-lists","item":["Data.List","insertBy"]},{"package":"purescript-lists","item":["Data.List","insertBy"]},{"package":"purescript-lists","item":["Data.List","head"]},{"package":"purescript-lists","item":["Data.List","head"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","tail"]},{"package":"purescript-lists","item":["Data.List","tail"]},{"package":"purescript-lists","item":["Data.List","init"]},{"package":"purescript-lists","item":["Data.List","init"]},{"package":"purescript-lists","item":["Data.List","uncons"]},{"package":"purescript-lists","item":["Data.List","uncons"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","(!!)"]},{"package":"purescript-lists","item":["Data.List","elemIndex"]},{"package":"purescript-lists","item":["Data.List","elemLastIndex"]},{"package":"purescript-lists","item":["Data.List","findIndex"]},{"package":"purescript-lists","item":["Data.List","findLastIndex"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","modifyAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","reverse"]},{"package":"purescript-lists","item":["Data.List","concat"]},{"package":"purescript-lists","item":["Data.List","concatMap"]},{"package":"purescript-lists","item":["Data.List","concatMap"]},{"package":"purescript-lists","item":["Data.List","filter"]},{"package":"purescript-lists","item":["Data.List","filterM"]},{"package":"purescript-lists","item":["Data.List","filterM"]},{"package":"purescript-lists","item":["Data.List","mapMaybe"]},{"package":"purescript-lists","item":["Data.List","catMaybes"]},{"package":"purescript-lists","item":["Data.List","sort"]},{"package":"purescript-lists","item":["Data.List","sortBy"]},{"package":"purescript-lists","item":["Data.List","slice"]},{"package":"purescript-lists","item":["Data.List","take"]},{"package":"purescript-lists","item":["Data.List","takeWhile"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","dropWhile"]},{"package":"purescript-lists","item":["Data.List","span"]},{"package":"purescript-lists","item":["Data.List","span"]},{"package":"purescript-lists","item":["Data.List","group"]},{"package":"purescript-lists","item":["Data.List","group'"]},{"package":"purescript-lists","item":["Data.List","groupBy"]},{"package":"purescript-lists","item":["Data.List","groupBy"]},{"package":"purescript-lists","item":["Data.List","nub"]},{"package":"purescript-lists","item":["Data.List","nubBy"]},{"package":"purescript-lists","item":["Data.List","nubBy"]},{"package":"purescript-lists","item":["Data.List","union"]},{"package":"purescript-lists","item":["Data.List","unionBy"]},{"package":"purescript-lists","item":["Data.List","delete"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","(\\\\)"]},{"package":"purescript-lists","item":["Data.List","intersect"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","zipWith"]},{"package":"purescript-lists","item":["Data.List","zipWithA"]},{"package":"purescript-lists","item":["Data.List","zip"]},{"package":"purescript-lists","item":["Data.List","unzip"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","foldM"]},{"package":"purescript-lists","item":["Data.List","foldM"]},{"package":"purescript-lists","item":["Data.List","toList"]},{"package":"purescript-lists","item":["Data.List","fromList"]},{"package":"purescript-lists","item":["Data.List.ZipList","ZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","runZipList"]},{"package":"purescript-lists","item":["Data.List.Unsafe","head"]},{"package":"purescript-lists","item":["Data.List.Unsafe","head"]},{"package":"purescript-lists","item":["Data.List.Unsafe","tail"]},{"package":"purescript-lists","item":["Data.List.Unsafe","tail"]},{"package":"purescript-lists","item":["Data.List.Unsafe","last"]},{"package":"purescript-lists","item":["Data.List.Unsafe","last"]},{"package":"purescript-lists","item":["Data.List.Unsafe","last"]},{"package":"purescript-lists","item":["Data.List.Unsafe","init"]},{"package":"purescript-lists","item":["Data.List.Unsafe","init"]},{"package":"purescript-lists","item":["Data.List.Unsafe","init"]},{"package":"purescript-lists","item":["Data.List.Lazy","List"]},{"package":"purescript-lists","item":["Data.List.Lazy","runList"]},{"package":"purescript-lists","item":["Data.List.Lazy","toUnfoldable"]},{"package":"purescript-lists","item":["Data.List.Lazy","fromFoldable"]},{"package":"purescript-lists","item":["Data.List.Lazy","Step"]},{"package":"purescript-lists","item":["Data.List.Lazy","step"]},{"package":"purescript-lists","item":["Data.List.Lazy","nil"]},{"package":"purescript-lists","item":["Data.List.Lazy","singleton"]},{"package":"purescript-lists","item":["Data.List.Lazy","(..)"]},{"package":"purescript-lists","item":["Data.List.Lazy","range"]},{"package":"purescript-lists","item":["Data.List.Lazy","repeat"]},{"package":"purescript-lists","item":["Data.List.Lazy","iterate"]},{"package":"purescript-lists","item":["Data.List.Lazy","cycle"]},{"package":"purescript-lists","item":["Data.List.Lazy","null"]},{"package":"purescript-lists","item":["Data.List.Lazy","length"]},{"package":"purescript-lists","item":["Data.List.Lazy","cons"]},{"package":"purescript-lists","item":["Data.List.Lazy","(:)"]},{"package":"purescript-lists","item":["Data.List.Lazy","insert"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","head"]},{"package":"purescript-lists","item":["Data.List.Lazy","last"]},{"package":"purescript-lists","item":["Data.List.Lazy","tail"]},{"package":"purescript-lists","item":["Data.List.Lazy","init"]},{"package":"purescript-lists","item":["Data.List.Lazy","uncons"]},{"package":"purescript-lists","item":["Data.List.Lazy","index"]},{"package":"purescript-lists","item":["Data.List.Lazy","(!!)"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","updateAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","modifyAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","alterAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","reverse"]},{"package":"purescript-lists","item":["Data.List.Lazy","concat"]},{"package":"purescript-lists","item":["Data.List.Lazy","concatMap"]},{"package":"purescript-lists","item":["Data.List.Lazy","filter"]},{"package":"purescript-lists","item":["Data.List.Lazy","mapMaybe"]},{"package":"purescript-lists","item":["Data.List.Lazy","catMaybes"]},{"package":"purescript-lists","item":["Data.List.Lazy","take"]},{"package":"purescript-lists","item":["Data.List.Lazy","takeWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","drop"]},{"package":"purescript-lists","item":["Data.List.Lazy","dropWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","span"]},{"package":"purescript-lists","item":["Data.List.Lazy","group"]},{"package":"purescript-lists","item":["Data.List.Lazy","groupBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","nub"]},{"package":"purescript-lists","item":["Data.List.Lazy","nubBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","union"]},{"package":"purescript-lists","item":["Data.List.Lazy","unionBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","delete"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","(\\\\)"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersect"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersectBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","zipWith"]},{"package":"purescript-lists","item":["Data.List.Lazy","zip"]},{"package":"purescript-lists","item":["Data.List.Lazy","transpose"]},{"package":"purescript-lists","item":["Data.List.Lazy","toList"]},{"package":"purescript-lists","item":["Data.List.Lazy","fromList"]},{"package":"purescript-lists","item":["Data.List.Lazy","lazyList"]},{"package":"purescript-maps","item":["Data.StrMap","StrMap"]},{"package":"purescript-maps","item":["Data.StrMap","thawST"]},{"package":"purescript-maps","item":["Data.StrMap","freezeST"]},{"package":"purescript-maps","item":["Data.StrMap","runST"]},{"package":"purescript-maps","item":["Data.StrMap","fold"]},{"package":"purescript-maps","item":["Data.StrMap","foldMap"]},{"package":"purescript-maps","item":["Data.StrMap","foldM"]},{"package":"purescript-maps","item":["Data.StrMap","foldMaybe"]},{"package":"purescript-maps","item":["Data.StrMap","all"]},{"package":"purescript-maps","item":["Data.StrMap","empty"]},{"package":"purescript-maps","item":["Data.StrMap","isSubmap"]},{"package":"purescript-maps","item":["Data.StrMap","isEmpty"]},{"package":"purescript-maps","item":["Data.StrMap","size"]},{"package":"purescript-maps","item":["Data.StrMap","singleton"]},{"package":"purescript-maps","item":["Data.StrMap","lookup"]},{"package":"purescript-maps","item":["Data.StrMap","member"]},{"package":"purescript-maps","item":["Data.StrMap","insert"]},{"package":"purescript-maps","item":["Data.StrMap","delete"]},{"package":"purescript-maps","item":["Data.StrMap","alter"]},{"package":"purescript-maps","item":["Data.StrMap","update"]},{"package":"purescript-maps","item":["Data.StrMap","fromFoldable"]},{"package":"purescript-maps","item":["Data.StrMap","fromFoldableWith"]},{"package":"purescript-maps","item":["Data.StrMap","fromList"]},{"package":"purescript-maps","item":["Data.StrMap","fromListWith"]},{"package":"purescript-maps","item":["Data.StrMap","toList"]},{"package":"purescript-maps","item":["Data.StrMap","keys"]},{"package":"purescript-maps","item":["Data.StrMap","values"]},{"package":"purescript-maps","item":["Data.StrMap","union"]},{"package":"purescript-maps","item":["Data.StrMap","unions"]},{"package":"purescript-maps","item":["Data.Map","Map"]},{"package":"purescript-maps","item":["Data.Map","showTree"]},{"package":"purescript-maps","item":["Data.Map","showTree"]},{"package":"purescript-maps","item":["Data.Map","showTree"]},{"package":"purescript-maps","item":["Data.Map","empty"]},{"package":"purescript-maps","item":["Data.Map","isEmpty"]},{"package":"purescript-maps","item":["Data.Map","isEmpty"]},{"package":"purescript-maps","item":["Data.Map","singleton"]},{"package":"purescript-maps","item":["Data.Map","checkValid"]},{"package":"purescript-maps","item":["Data.Map","lookup"]},{"package":"purescript-maps","item":["Data.Map","member"]},{"package":"purescript-maps","item":["Data.Map","insert"]},{"package":"purescript-maps","item":["Data.Map","delete"]},{"package":"purescript-maps","item":["Data.Map","alter"]},{"package":"purescript-maps","item":["Data.Map","update"]},{"package":"purescript-maps","item":["Data.Map","fromFoldable"]},{"package":"purescript-maps","item":["Data.Map","fromFoldableWith"]},{"package":"purescript-maps","item":["Data.Map","toList"]},{"package":"purescript-maps","item":["Data.Map","toList"]},{"package":"purescript-maps","item":["Data.Map","toList"]},{"package":"purescript-maps","item":["Data.Map","fromList"]},{"package":"purescript-maps","item":["Data.Map","fromListWith"]},{"package":"purescript-maps","item":["Data.Map","keys"]},{"package":"purescript-maps","item":["Data.Map","keys"]},{"package":"purescript-maps","item":["Data.Map","keys"]},{"package":"purescript-maps","item":["Data.Map","values"]},{"package":"purescript-maps","item":["Data.Map","values"]},{"package":"purescript-maps","item":["Data.Map","values"]},{"package":"purescript-maps","item":["Data.Map","unionWith"]},{"package":"purescript-maps","item":["Data.Map","union"]},{"package":"purescript-maps","item":["Data.Map","unions"]},{"package":"purescript-maps","item":["Data.Map","size"]},{"package":"purescript-maps","item":["Data.StrMap.Unsafe","unsafeIndex"]},{"package":"purescript-maps","item":["Data.StrMap.ST","STStrMap"]},{"package":"purescript-maps","item":["Data.StrMap.ST","new"]},{"package":"purescript-maps","item":["Data.StrMap.ST","peek"]},{"package":"purescript-maps","item":["Data.StrMap.ST","poke"]},{"package":"purescript-maps","item":["Data.StrMap.ST","delete"]},{"package":"purescript-maps","item":["Data.StrMap.ST.Unsafe","unsafeGet"]},{"package":"purescript-math","item":["Math","Radians"]},{"package":"purescript-math","item":["Math","abs"]},{"package":"purescript-math","item":["Math","acos"]},{"package":"purescript-math","item":["Math","asin"]},{"package":"purescript-math","item":["Math","atan"]},{"package":"purescript-math","item":["Math","atan2"]},{"package":"purescript-math","item":["Math","ceil"]},{"package":"purescript-math","item":["Math","cos"]},{"package":"purescript-math","item":["Math","exp"]},{"package":"purescript-math","item":["Math","floor"]},{"package":"purescript-math","item":["Math","log"]},{"package":"purescript-math","item":["Math","max"]},{"package":"purescript-math","item":["Math","min"]},{"package":"purescript-math","item":["Math","pow"]},{"package":"purescript-math","item":["Math","round"]},{"package":"purescript-math","item":["Math","sin"]},{"package":"purescript-math","item":["Math","sqrt"]},{"package":"purescript-math","item":["Math","tan"]},{"package":"purescript-math","item":["Math","trunc"]},{"package":"purescript-math","item":["Math","(%)"]},{"package":"purescript-math","item":["Math","(%)"]},{"package":"purescript-math","item":["Math","e"]},{"package":"purescript-math","item":["Math","ln2"]},{"package":"purescript-math","item":["Math","ln10"]},{"package":"purescript-math","item":["Math","log2e"]},{"package":"purescript-math","item":["Math","log10e"]},{"package":"purescript-math","item":["Math","pi"]},{"package":"purescript-math","item":["Math","sqrt1_2"]},{"package":"purescript-math","item":["Math","sqrt2"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadPlusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","moduloSemiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","divisionRingMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","numMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedOrdMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","booleanAlgebraMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","unsafeThrow"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","runLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","runFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidUnit"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidString"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidArray"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","runMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","runEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","runDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","runDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semiringDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","runConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semiringConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","runAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-nullable","item":["Data.Nullable","Nullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toNullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toMaybe"]},{"package":"purescript-orders","item":["Data.Ord","invert"]},{"package":"purescript-orders","item":["Data.Ord","invert"]},{"package":"purescript-orders","item":["Data.Ord","invert"]},{"package":"purescript-orders","item":["Data.Ord","comparing"]},{"package":"purescript-orders","item":["Data.Ord","Down"]},{"package":"purescript-orders","item":["Data.Ord","eqDown"]},{"package":"purescript-orders","item":["Data.Ord","showDown"]},{"package":"purescript-orders","item":["Data.Ord","ordDown"]},{"package":"purescript-orders","item":["Data.Ord","clamp"]},{"package":"purescript-orders","item":["Data.Ord","between"]},{"package":"purescript-orders","item":["Data.Ord","min"]},{"package":"purescript-orders","item":["Data.Ord","max"]},{"package":"purescript-orders","item":["Data.Ord","Min"]},{"package":"purescript-orders","item":["Data.Ord","runMin"]},{"package":"purescript-orders","item":["Data.Ord","eqMin"]},{"package":"purescript-orders","item":["Data.Ord","showMin"]},{"package":"purescript-orders","item":["Data.Ord","ordMin"]},{"package":"purescript-orders","item":["Data.Ord","semigroupMin"]},{"package":"purescript-orders","item":["Data.Ord","monoidMin"]},{"package":"purescript-orders","item":["Data.Ord","Max"]},{"package":"purescript-orders","item":["Data.Ord","runMax"]},{"package":"purescript-orders","item":["Data.Ord","eqMax"]},{"package":"purescript-orders","item":["Data.Ord","showMax"]},{"package":"purescript-orders","item":["Data.Ord","ordMax"]},{"package":"purescript-orders","item":["Data.Ord","semigroupMax"]},{"package":"purescript-orders","item":["Data.Ord","monoidMax"]},{"package":"purescript-parallel","item":["Control.Parallel","par"]},{"package":"purescript-parallel","item":["Control.Parallel","race"]},{"package":"purescript-parallel","item":["Control.Parallel","Parallel"]},{"package":"purescript-parallel","item":["Control.Parallel","inParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","withCallback"]},{"package":"purescript-parallel","item":["Control.Parallel","runParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","runParallelWith"]},{"package":"purescript-prelude","item":["Prelude","Unit"]},{"package":"purescript-prelude","item":["Prelude","unit"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","flip"]},{"package":"purescript-prelude","item":["Prelude","const"]},{"package":"purescript-prelude","item":["Prelude","asTypeOf"]},{"package":"purescript-prelude","item":["Prelude","otherwise"]},{"package":"purescript-prelude","item":["Prelude","Semigroupoid"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","Category"]},{"package":"purescript-prelude","item":["Prelude","Functor"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","void"]},{"package":"purescript-prelude","item":["Prelude","Apply"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","Applicative"]},{"package":"purescript-prelude","item":["Prelude","return"]},{"package":"purescript-prelude","item":["Prelude","liftA1"]},{"package":"purescript-prelude","item":["Prelude","Bind"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","Monad"]},{"package":"purescript-prelude","item":["Prelude","liftM1"]},{"package":"purescript-prelude","item":["Prelude","ap"]},{"package":"purescript-prelude","item":["Prelude","Semigroup"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","Semiring"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","Ring"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","negate"]},{"package":"purescript-prelude","item":["Prelude","ModuloSemiring"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","DivisionRing"]},{"package":"purescript-prelude","item":["Prelude","Num"]},{"package":"purescript-prelude","item":["Prelude","Eq"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","Ordering"]},{"package":"purescript-prelude","item":["Prelude","Ord"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","unsafeCompare"]},{"package":"purescript-prelude","item":["Prelude","Bounded"]},{"package":"purescript-prelude","item":["Prelude","BoundedOrd"]},{"package":"purescript-prelude","item":["Prelude","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","Show"]},{"package":"purescript-profunctor","item":["Data.Profunctor","Profunctor"]},{"package":"purescript-profunctor","item":["Data.Profunctor","lmap"]},{"package":"purescript-profunctor","item":["Data.Profunctor","rmap"]},{"package":"purescript-profunctor","item":["Data.Profunctor","arr"]},{"package":"purescript-profunctor","item":["Data.Profunctor","profunctorFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","Strong"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","strongFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(***)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(&&&)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(***)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(&&&)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","Star"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","runStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","profunctorStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","strongStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","choiceStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costrong","Costrong"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Cochoice","Cochoice"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Closed","Closed"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Closed","closedFunction"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","Choice"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","choiceFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(+++)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(|||)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(+++)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(|||)"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy2"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy3"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","RANDOM"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","random"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomInt"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomRange"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomBool"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","REF"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","Ref"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","newRef"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","readRef"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","modifyRef'"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","modifyRef"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","writeRef"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref.Unsafe","unsafeRunRef"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","Free"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","runFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","free"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","liftFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","lowerFree"]},{"package":"purescript-sequences","item":["Data.Sequence","Seq"]},{"package":"purescript-sequences","item":["Data.Sequence","empty"]},{"package":"purescript-sequences","item":["Data.Sequence","singleton"]},{"package":"purescript-sequences","item":["Data.Sequence","cons"]},{"package":"purescript-sequences","item":["Data.Sequence","snoc"]},{"package":"purescript-sequences","item":["Data.Sequence","append"]},{"package":"purescript-sequences","item":["Data.Sequence","concat"]},{"package":"purescript-sequences","item":["Data.Sequence","concatMap"]},{"package":"purescript-sequences","item":["Data.Sequence","length"]},{"package":"purescript-sequences","item":["Data.Sequence","null"]},{"package":"purescript-sequences","item":["Data.Sequence","null"]},{"package":"purescript-sequences","item":["Data.Sequence","uncons"]},{"package":"purescript-sequences","item":["Data.Sequence","unsnoc"]},{"package":"purescript-sequences","item":["Data.Sequence","splitAt"]},{"package":"purescript-sequences","item":["Data.Sequence","take"]},{"package":"purescript-sequences","item":["Data.Sequence","drop"]},{"package":"purescript-sequences","item":["Data.Sequence","inBounds"]},{"package":"purescript-sequences","item":["Data.Sequence","index"]},{"package":"purescript-sequences","item":["Data.Sequence","adjust"]},{"package":"purescript-sequences","item":["Data.Sequence","replace"]},{"package":"purescript-sequences","item":["Data.Sequence","map"]},{"package":"purescript-sequences","item":["Data.Sequence","head"]},{"package":"purescript-sequences","item":["Data.Sequence","tail"]},{"package":"purescript-sequences","item":["Data.Sequence","init"]},{"package":"purescript-sequences","item":["Data.Sequence","last"]},{"package":"purescript-sequences","item":["Data.Sequence","fromFoldable"]},{"package":"purescript-sequences","item":["Data.Sequence","toUnfoldable"]},{"package":"purescript-sequences","item":["Data.Sequence","filter"]},{"package":"purescript-sequences","item":["Data.Sequence","sort"]},{"package":"purescript-sequences","item":["Data.Sequence","fullyForce"]},{"package":"purescript-sequences","item":["Data.FingerTree","Node"]},{"package":"purescript-sequences","item":["Data.FingerTree","node2"]},{"package":"purescript-sequences","item":["Data.FingerTree","node3"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodeToDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodeToDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","FingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","lazyEmpty"]},{"package":"purescript-sequences","item":["Data.FingerTree","deep"]},{"package":"purescript-sequences","item":["Data.FingerTree","Digit"]},{"package":"purescript-sequences","item":["Data.FingerTree","eqFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","compareFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","cons"]},{"package":"purescript-sequences","item":["Data.FingerTree","cons"]},{"package":"purescript-sequences","item":["Data.FingerTree","cons"]},{"package":"purescript-sequences","item":["Data.FingerTree","cons"]},{"package":"purescript-sequences","item":["Data.FingerTree","snoc"]},{"package":"purescript-sequences","item":["Data.FingerTree","snoc"]},{"package":"purescript-sequences","item":["Data.FingerTree","snoc"]},{"package":"purescript-sequences","item":["Data.FingerTree","snoc"]},{"package":"purescript-sequences","item":["Data.FingerTree","consAll"]},{"package":"purescript-sequences","item":["Data.FingerTree","snocAll"]},{"package":"purescript-sequences","item":["Data.FingerTree","toFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","ViewL"]},{"package":"purescript-sequences","item":["Data.FingerTree","headDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","tailDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewL"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewL"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewL"]},{"package":"purescript-sequences","item":["Data.FingerTree","deepL"]},{"package":"purescript-sequences","item":["Data.FingerTree","deepL"]},{"package":"purescript-sequences","item":["Data.FingerTree","isEmpty"]},{"package":"purescript-sequences","item":["Data.FingerTree","head"]},{"package":"purescript-sequences","item":["Data.FingerTree","tail"]},{"package":"purescript-sequences","item":["Data.FingerTree","lastDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","initDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","ViewR"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewR"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewR"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewR"]},{"package":"purescript-sequences","item":["Data.FingerTree","deepR"]},{"package":"purescript-sequences","item":["Data.FingerTree","deepR"]},{"package":"purescript-sequences","item":["Data.FingerTree","last"]},{"package":"purescript-sequences","item":["Data.FingerTree","init"]},{"package":"purescript-sequences","item":["Data.FingerTree","app3"]},{"package":"purescript-sequences","item":["Data.FingerTree","app3"]},{"package":"purescript-sequences","item":["Data.FingerTree","app3"]},{"package":"purescript-sequences","item":["Data.FingerTree","app3"]},{"package":"purescript-sequences","item":["Data.FingerTree","app3"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodes"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodes"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodes"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodes"]},{"package":"purescript-sequences","item":["Data.FingerTree","append"]},{"package":"purescript-sequences","item":["Data.FingerTree","Split"]},{"package":"purescript-sequences","item":["Data.FingerTree","LazySplit"]},{"package":"purescript-sequences","item":["Data.FingerTree","unsafeSplitDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","unsafeSplitTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","unsafeSplitTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","unsafeSplitTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","split"]},{"package":"purescript-sequences","item":["Data.FingerTree","split"]},{"package":"purescript-sequences","item":["Data.FingerTree","filter"]},{"package":"purescript-sequences","item":["Data.FingerTree","unfoldLeft"]},{"package":"purescript-sequences","item":["Data.FingerTree","unfoldRight"]},{"package":"purescript-sequences","item":["Data.FingerTree","fullyForce"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","OrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","empty"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","null"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","null"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","length"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","partition"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","insert"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","deleteAll"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","merge"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","intersection"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","least"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","popLeast"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","greatest"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","popGreatest"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","fromFoldable"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","toUnfoldable"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","toUnfoldableDescending"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","sort"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","Seq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","singleton"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","cons"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","snoc"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","append"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","length"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","inBounds"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","inBounds"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","uncons"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","unsnoc"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","head"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","tail"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","init"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","last"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","toPlain"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","splitAt"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","take"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","drop"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","filter"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","index"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","index"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","adjust"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","adjust"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","replace"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","toUnfoldable"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","(!)"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","mapmap"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","(<$$>)"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","mapmapmap"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","(<$$$>)"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","strJoin"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","Measured"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","Elem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","getElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","mapElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","mapGetElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","lift2Elem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","liftElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","Key"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","measuredElemKey"]},{"package":"purescript-sets","item":["Data.Set","Set"]},{"package":"purescript-sets","item":["Data.Set","empty"]},{"package":"purescript-sets","item":["Data.Set","isEmpty"]},{"package":"purescript-sets","item":["Data.Set","singleton"]},{"package":"purescript-sets","item":["Data.Set","checkValid"]},{"package":"purescript-sets","item":["Data.Set","member"]},{"package":"purescript-sets","item":["Data.Set","insert"]},{"package":"purescript-sets","item":["Data.Set","delete"]},{"package":"purescript-sets","item":["Data.Set","fromFoldable"]},{"package":"purescript-sets","item":["Data.Set","toList"]},{"package":"purescript-sets","item":["Data.Set","fromList"]},{"package":"purescript-sets","item":["Data.Set","size"]},{"package":"purescript-sets","item":["Data.Set","union"]},{"package":"purescript-sets","item":["Data.Set","unions"]},{"package":"purescript-sets","item":["Data.Set","difference"]},{"package":"purescript-sets","item":["Data.Set","subset"]},{"package":"purescript-sets","item":["Data.Set","properSubset"]},{"package":"purescript-sets","item":["Data.Set","intersection"]},{"package":"purescript-st","item":["Control.Monad.ST","ST"]},{"package":"purescript-st","item":["Control.Monad.ST","STRef"]},{"package":"purescript-st","item":["Control.Monad.ST","newSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","readSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","modifySTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","writeSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","runST"]},{"package":"purescript-st","item":["Control.Monad.ST","pureST"]},{"package":"purescript-strings","item":["Data.String","charAt"]},{"package":"purescript-strings","item":["Data.String","fromChar"]},{"package":"purescript-strings","item":["Data.String","singleton"]},{"package":"purescript-strings","item":["Data.String","charCodeAt"]},{"package":"purescript-strings","item":["Data.String","toChar"]},{"package":"purescript-strings","item":["Data.String","null"]},{"package":"purescript-strings","item":["Data.String","uncons"]},{"package":"purescript-strings","item":["Data.String","uncons"]},{"package":"purescript-strings","item":["Data.String","takeWhile"]},{"package":"purescript-strings","item":["Data.String","dropWhile"]},{"package":"purescript-strings","item":["Data.String","stripPrefix"]},{"package":"purescript-strings","item":["Data.String","stripSuffix"]},{"package":"purescript-strings","item":["Data.String","fromCharArray"]},{"package":"purescript-strings","item":["Data.String","contains"]},{"package":"purescript-strings","item":["Data.String","indexOf"]},{"package":"purescript-strings","item":["Data.String","indexOf'"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf'"]},{"package":"purescript-strings","item":["Data.String","length"]},{"package":"purescript-strings","item":["Data.String","localeCompare"]},{"package":"purescript-strings","item":["Data.String","replace"]},{"package":"purescript-strings","item":["Data.String","take"]},{"package":"purescript-strings","item":["Data.String","drop"]},{"package":"purescript-strings","item":["Data.String","count"]},{"package":"purescript-strings","item":["Data.String","split"]},{"package":"purescript-strings","item":["Data.String","toCharArray"]},{"package":"purescript-strings","item":["Data.String","toLower"]},{"package":"purescript-strings","item":["Data.String","toUpper"]},{"package":"purescript-strings","item":["Data.String","trim"]},{"package":"purescript-strings","item":["Data.String","joinWith"]},{"package":"purescript-strings","item":["Data.Char","toString"]},{"package":"purescript-strings","item":["Data.Char","toCharCode"]},{"package":"purescript-strings","item":["Data.Char","fromCharCode"]},{"package":"purescript-strings","item":["Data.Char","toLower"]},{"package":"purescript-strings","item":["Data.Char","toUpper"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charCodeAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","char"]},{"package":"purescript-strings","item":["Data.String.Regex","Regex"]},{"package":"purescript-strings","item":["Data.String.Regex","RegexFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","noFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","regex"]},{"package":"purescript-strings","item":["Data.String.Regex","source"]},{"package":"purescript-strings","item":["Data.String.Regex","flags"]},{"package":"purescript-strings","item":["Data.String.Regex","renderFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","parseFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","test"]},{"package":"purescript-strings","item":["Data.String.Regex","match"]},{"package":"purescript-strings","item":["Data.String.Regex","replace"]},{"package":"purescript-strings","item":["Data.String.Regex","replace'"]},{"package":"purescript-strings","item":["Data.String.Regex","search"]},{"package":"purescript-strings","item":["Data.String.Regex","split"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","MonadRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM2"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM3"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","forever"]},{"package":"purescript-these","item":["Data.These","These"]},{"package":"purescript-these","item":["Data.These","semigroupThese"]},{"package":"purescript-these","item":["Data.These","functorThese"]},{"package":"purescript-these","item":["Data.These","foldableThese"]},{"package":"purescript-these","item":["Data.These","traversableThese"]},{"package":"purescript-these","item":["Data.These","bifunctorThese"]},{"package":"purescript-these","item":["Data.These","bifoldableThese"]},{"package":"purescript-these","item":["Data.These","bitraversableThese"]},{"package":"purescript-these","item":["Data.These","applyThese"]},{"package":"purescript-these","item":["Data.These","applicativeThese"]},{"package":"purescript-these","item":["Data.These","bindThese"]},{"package":"purescript-these","item":["Data.These","monadThese"]},{"package":"purescript-these","item":["Data.These","these"]},{"package":"purescript-these","item":["Data.These","these"]},{"package":"purescript-these","item":["Data.These","these"]},{"package":"purescript-these","item":["Data.These","thisOrBoth"]},{"package":"purescript-these","item":["Data.These","thisOrBoth"]},{"package":"purescript-these","item":["Data.These","thatOrBoth"]},{"package":"purescript-these","item":["Data.These","thatOrBoth"]},{"package":"purescript-these","item":["Data.These","fromThese"]},{"package":"purescript-these","item":["Data.These","fromThese"]},{"package":"purescript-these","item":["Data.These","fromThese"]},{"package":"purescript-these","item":["Data.These","theseLeft"]},{"package":"purescript-these","item":["Data.These","theseLeft"]},{"package":"purescript-these","item":["Data.These","theseLeft"]},{"package":"purescript-these","item":["Data.These","theseRight"]},{"package":"purescript-these","item":["Data.These","theseRight"]},{"package":"purescript-these","item":["Data.These","theseRight"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","Writer"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","runWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","execWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","mapWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Trans","MonadTrans"]},{"package":"purescript-transformers","item":["Control.Monad.State","State"]},{"package":"purescript-transformers","item":["Control.Monad.State","runState"]},{"package":"purescript-transformers","item":["Control.Monad.State","evalState"]},{"package":"purescript-transformers","item":["Control.Monad.State","execState"]},{"package":"purescript-transformers","item":["Control.Monad.State","mapState"]},{"package":"purescript-transformers","item":["Control.Monad.State","withState"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","RWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","rws"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","runRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","evalRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","execRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","mapRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","withRWS"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","Reader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","runReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","withReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","mapReader"]},{"package":"purescript-transformers","item":["Control.Monad.Except","Except"]},{"package":"purescript-transformers","item":["Control.Monad.Except","except"]},{"package":"purescript-transformers","item":["Control.Monad.Except","runExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","mapExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","withExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","WriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","runWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","execWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","mapWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","MonadWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","tell"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","listens"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","censor"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","StateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","runStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","evalStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","execStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","mapStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","withStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","MonadState"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","get"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","gets"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","put"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","modify"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","RWSResult"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","RWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","runRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","evalRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","execRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","mapRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","withRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Class","MonadRWS"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","ReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","runReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","mapReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","withReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","MonadReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","reader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","monadReaderFun"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","MaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","runMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","mapMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","ListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","nil"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","cons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","singleton"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","fromEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapLazy"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","unfold"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","iterate"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","repeat"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","take"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","take"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","takeWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","drop"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","drop"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","dropWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","filter"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","mapMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","catMaybes"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","uncons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","head"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","tail"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","scanl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","ExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","runExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","withExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","mapExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","MonadError"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","catchJust"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorEither"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","ContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","runContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","mapContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","withContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Class","MonadCont"]},{"package":"purescript-transformers","item":["Control.Comonad.Trans","ComonadTrans"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","Traced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","runTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","traced"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","Store"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","runStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","store"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","Env"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","runEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","withEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","mapEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","env"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","TracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","runTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","functorTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","extendTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTransTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","ComonadTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","tracks"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listen"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listens"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","censor"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","comonadTracedTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","StoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","runStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","functorStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","extendStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadTransStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","ComonadStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","experiment"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","peeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seek"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","comonadStoreStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","EnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","runEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","withEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","mapEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","functorEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","extendEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadTransEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","ComonadEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","asks"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvTuple"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvEnvT"]},{"package":"purescript-tuples","item":["Data.Tuple","Tuple"]},{"package":"purescript-tuples","item":["Data.Tuple","showTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","eqTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ordTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedOrdTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","moduloSemiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","divisionRingTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","numTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","booleanAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","functorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","invariantTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifunctorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bindTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","extendTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","comonadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","lazyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","foldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifoldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","traversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bitraversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","fst"]},{"package":"purescript-tuples","item":["Data.Tuple","snd"]},{"package":"purescript-tuples","item":["Data.Tuple","curry"]},{"package":"purescript-tuples","item":["Data.Tuple","uncurry"]},{"package":"purescript-tuples","item":["Data.Tuple","swap"]},{"package":"purescript-tuples","item":["Data.Tuple","lookup"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","Unfoldable"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","unfoldableArray"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicate"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicateA"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","none"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","singleton"]},{"package":"purescript-unsafe-coerce","item":["Unsafe.Coerce","unsafeCoerce"]},{"package":"purescript-validation","item":["Data.Validation","V"]},{"package":"purescript-validation","item":["Data.Validation","invalid"]},{"package":"purescript-validation","item":["Data.Validation","runV"]},{"package":"purescript-validation","item":["Data.Validation","runV"]},{"package":"purescript-validation","item":["Data.Validation","isValid"]},{"package":"purescript-validation","item":["Data.Validation","isValid"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","V"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","invalid"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","runV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","runV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","isValid"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","isValid"]}],"version":"0.5.4","github":["tfausak","purescript-batteries"],"versionTag":"v0.5.4","compilerVersion":"0.8.5.0"}