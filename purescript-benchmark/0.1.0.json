{"uploader":"cyrbon","packageMeta":{"homepage":"https://github.com/cyrbon/purescript-benchmark","repository":{"url":"git://github.com/cyrbon/purescript-benchmark","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"dependencies":{"purescript-console":"^3.0.0","purescript-prelude":"^3.0.0","purescript-st":"^3.0.0","purescript-unsafe-coerce":"^3.0.0","purescript-integers":"^3.0.0","purescript-transformers":"^3.0.0","purescript-globals":"^3.0.0","purescript-strings":"^3.0.0"},"name":"purescript-benchmark","license":["Apache-2.0"],"description":"Simple to use, cross-platform benchmarking library based on benchmark.js"},"tagTime":"2017-05-18T20:10:45+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Benchmark","Function"]},"declarations":[{"children":[],"comments":null,"title":"fn1","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[6,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Function.purs","end":[6,60]}}]},{"moduleName":{"package":null,"item":["Benchmark","Output"]},"declarations":[{"children":[],"comments":"Accumulate benchmark results on each cycle, and onComplete print a table\ncontaining all results.\n","title":"printResultTableOnComplete","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},null]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Output.purs","end":[40,24]}},{"children":[],"comments":"Subscribes to Suite's `on(\"cycle\"` event and outputs `String(event.target)`\nto console.\n","title":"printResultOnCycle","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},null]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Output.purs","end":[33,24]}}]},{"moduleName":{"package":null,"item":["Benchmark","Suite"]},"declarations":[{"children":[],"comments":null,"title":"Suite","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[18,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[18,34]}}]},{"moduleName":{"package":null,"item":["Benchmark","Suite","Monad"]},"declarations":[{"children":[{"comments":null,"title":"newtypeT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeWildcard","contents":{"start":[41,53],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[41,54]}}]}},"sourceSpan":{"start":[41,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[41,54]}},{"comments":null,"title":"functorSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[42,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[42,62]}},{"comments":null,"title":"applySuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[43,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[43,58]}},{"comments":null,"title":"applicativeSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[44,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[44,70]}},{"comments":null,"title":"bindSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[45,56]}},{"comments":null,"title":"monadSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[46,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[46,58]}},{"comments":null,"title":"monadReaderSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[48,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[48,82]}},{"comments":null,"title":"monadEffSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[49,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[49,66]}}],"comments":null,"title":"SuiteT","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["e",null],["a",null]]},"sourceSpan":{"start":[36,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[36,62]}},{"children":[],"comments":null,"title":"SuiteM","info":{"arguments":[["s",null],["e",null],["m",null],["a",null]],"declType":"typeSynonym","type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Reader","Class"],"MonadReader"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Eff","Class"],"MonadEff"],"constraintArgs":[{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[33,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[34,67]}},{"children":[],"comments":null,"title":"runSuiteT","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]},null]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[54,67]}},{"children":[],"comments":"Runs SuiteM transformer stack. This is equal to executing `suite.run()`,\nwhere suite is constructed via the monad interface:\n>>> runSuiteM $ do\n>>>   add \"functionOne\" myFunction\n>>>   add \"functionTwo\" myFunctionTwo\n\nThe code above will construct a suite with two functions to benchmark and\nrun those benchmarks.\n","title":"runSuiteM","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[70,67]}},{"children":[],"comments":"Runs the suite. This can be used inside SuiteM. Most often, you want to use\n`runSuiteM` instead, because SuiteM is usually used to construct the suite\nand then once the suite is constructed it's run using `runSuiteM`. Using\n`run` will run the suite during the construction process.\n","title":"run","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},null]},null]},null]}},"sourceSpan":{"start":[119,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[119,43]}},{"children":[],"comments":"Registers a listener for the specified event type(s).\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Event"],"BenchmarkEventName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"BenchmarkEvent"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[103,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[104,89]}},{"children":[],"comments":"Adds a test to the benchmark suite. Takes a name to identify the benchmark,\nand the test to benchmark.\n","title":"add","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[99,78]}},{"children":[],"comments":"Accumulates results of each cycle in an array. `onComplete` calls the\nprovided callback with the array containing accumulated results.\n","title":"accumulateResults","info":{"declType":"value","type":{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"BenchmarkResult"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[112,70]}}]},{"moduleName":{"package":null,"item":["Benchmark","Suite","ST"]},"declarations":[{"children":[],"comments":null,"title":"BenchmarkResult","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["name",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["hz",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["stats",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["rme",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"REmpty"}]}]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[32,4]}}]}],"name":"Benchmark","comments":null,"declarations":[{"children":[],"comments":"Runs the benchmark suite and print results. Use `fn` and `fnEff` inside the \nmonadic interface to add functions to the suite.\n>>> runBench $ do\n>>>   fn    \"function name\"     (_ + 40) 2\n>>>   fnEff \"eff function name\" (log \"eff function executed\")\n","title":"runBench","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark.purs","end":[29,67]}},{"children":[],"comments":null,"title":"fnEff","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark.purs","end":[32,80]}},{"children":[],"comments":null,"title":"fn","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark.purs","end":[35,73]}}]},{"reExports":[],"name":"Benchmark.Event","comments":null,"declarations":[{"children":[{"comments":null,"title":"Abort","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Complete","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cycle","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Error","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Start","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"benchmarkEventNameIsString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Event"],"IsString"]},{"tag":"TypeConstructor","contents":[["Benchmark","Event"],"BenchmarkEventName"]}]}},"sourceSpan":{"start":[15,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Event.purs","end":[21,17]}}],"comments":null,"title":"BenchmarkEventName","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[3,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Event.purs","end":[3,67]}},{"children":[{"comments":null,"title":"toString","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":null},{"comments":null,"title":"benchmarkEventNameIsString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Event"],"IsString"]},{"tag":"TypeConstructor","contents":[["Benchmark","Event"],"BenchmarkEventName"]}]}},"sourceSpan":{"start":[15,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Event.purs","end":[21,17]}}],"comments":"Defines that the underlying type represents a String. In other words, that\n`a` represents a subset of String values. If `Show` is designed to convert a\nto a human-readible representation, `IsString` says that this type is just\nthere to represent a String, in whatever form that String might be.\nIt might be the case that `show a` and `toString a` will return different\nvalues, especially if the Show instance was generated generically.\n","title":"IsString","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[12,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Event.purs","end":[13,26]}}]},{"reExports":[],"name":"Benchmark.Function","comments":null,"declarations":[{"children":[],"comments":null,"title":"fn1","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[6,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Function.purs","end":[6,60]}}]},{"reExports":[],"name":"Benchmark.Output","comments":"This module is responsible for printing the result of a benchmark\n","declarations":[{"children":[],"comments":"Subscribes to Suite's `on(\"cycle\"` event and outputs `String(event.target)`\nto console.\n","title":"printResultOnCycle","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},null]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Output.purs","end":[33,24]}},{"children":[],"comments":"Accumulate benchmark results on each cycle, and onComplete print a table\ncontaining all results.\n","title":"printResultTableOnComplete","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},null]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Output.purs","end":[40,24]}}]},{"reExports":[],"name":"Benchmark.Suite","comments":"Benchmark.Suite wrapper\n","declarations":[{"children":[],"comments":null,"title":"Suite","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[18,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[18,34]}},{"children":[],"comments":"Copy a mutable Suite\n","title":"copy","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}}]}]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[22,69]}},{"children":[],"comments":"Convert an immutable Suite to a mutable Suite\n","title":"thawST","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}}]}]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[26,67]}},{"children":[],"comments":"Convert a mutable Suite to an immutable Suite\n","title":"freezeST","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]}]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[30,67]}},{"children":[],"comments":"Freeze a mutable Suite object, creating an immutable object. Use this\nfunction as you would use `Prelude.runST` to freeze a mutable reference.\n\nThe rank-2 type prevents the map from escaping the scope of `runST`.\n","title":"runST","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]}]},null]}},"sourceSpan":{"start":[37,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[38,65]}},{"children":[],"comments":null,"title":"pureST","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}}]},null]},null]}}]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[40,69]}},{"children":[],"comments":null,"title":"mutate","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]}]},null]}},"sourceSpan":{"start":[43,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite.purs","end":[45,11]}}]},{"reExports":[],"name":"Benchmark.Suite.Immutable","comments":"Contains functions that operate on `Suite`, which is an immutable\nrepresentation of the Benchmark.js' suite object.\n\nCurrently, there are no plans to add functions that modify the immutable\n`Suite` as that would require cloning the Suite on each operation.\nFor this reason, typically you want to use `SuiteM` and\n`Benchmark.Suite.Monad`, which provide a monadic interface to a mutable\nrepresentation of the suite object (`SuiteST s`).\n","declarations":[{"children":[],"comments":"Executes all benchmarks within the suite.\n","title":"runSuite","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Immutable.purs","end":[21,62]}}]},{"reExports":[],"name":"Benchmark.Suite.Monad","comments":null,"declarations":[{"children":[],"comments":null,"title":"SuiteM","info":{"arguments":[["s",null],["e",null],["m",null],["a",null]],"declType":"typeSynonym","type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Reader","Class"],"MonadReader"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Eff","Class"],"MonadEff"],"constraintArgs":[{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[33,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[34,67]}},{"children":[{"comments":null,"title":"newtypeT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeWildcard","contents":{"start":[41,53],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[41,54]}}]}},"sourceSpan":{"start":[41,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[41,54]}},{"comments":null,"title":"functorSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[42,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[42,62]}},{"comments":null,"title":"applySuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[43,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[43,58]}},{"comments":null,"title":"applicativeSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[44,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[44,70]}},{"comments":null,"title":"bindSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[45,56]}},{"comments":null,"title":"monadSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[46,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[46,58]}},{"comments":null,"title":"monadReaderSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Class"],"MonadReader"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[48,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[48,82]}},{"comments":null,"title":"monadEffSuiteT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[49,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[49,66]}}],"comments":null,"title":"SuiteT","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["e",null],["a",null]]},"sourceSpan":{"start":[36,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[36,62]}},{"children":[],"comments":null,"title":"runSuiteT","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite"],"Suite"]}]},null]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[54,67]}},{"children":[],"comments":"Runs SuiteM transformer stack. This is equal to executing `suite.run()`,\nwhere suite is constructed via the monad interface:\n>>> runSuiteM $ do\n>>>   add \"functionOne\" myFunction\n>>>   add \"functionTwo\" myFunctionTwo\n\nThe code above will construct a suite with two functions to benchmark and\nrun those benchmarks.\n","title":"runSuiteM","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[70,67]}},{"children":[],"comments":"Adds a test to the benchmark suite. Takes a name to identify the benchmark,\nand the test to benchmark.\n","title":"add","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[99,78]}},{"children":[],"comments":"Registers a listener for the specified event type(s).\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Event"],"BenchmarkEventName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"BenchmarkEvent"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[103,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[104,89]}},{"children":[],"comments":"Accumulates results of each cycle in an array. `onComplete` calls the\nprovided callback with the array containing accumulated results.\n","title":"accumulateResults","info":{"declType":"value","type":{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"BenchmarkResult"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[112,70]}},{"children":[],"comments":"Runs the suite. This can be used inside SuiteM. Most often, you want to use\n`runSuiteM` instead, because SuiteM is usually used to construct the suite\nand then once the suite is constructed it's run using `runSuiteM`. Using\n`run` will run the suite during the construction process.\n","title":"run","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","Monad"],"SuiteM"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},null]},null]},null]}},"sourceSpan":{"start":[119,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/Monad.purs","end":[119,43]}}]},{"reExports":[],"name":"Benchmark.Suite.ST","comments":null,"declarations":[{"children":[],"comments":null,"title":"STSuite","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[7,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[7,44]}},{"children":[],"comments":null,"title":"BenchmarkEvent","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[8,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[8,43]}},{"children":[],"comments":null,"title":"new","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}}]},null]},null]}},"sourceSpan":{"start":[13,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[13,67]}},{"children":[],"comments":null,"title":"add","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[16,69]}},{"children":[],"comments":null,"title":"run","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[18,73]}},{"children":[],"comments":null,"title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"h"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"BenchmarkEvent"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[21,90]}},{"children":[],"comments":null,"title":"BenchmarkResult","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["name",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["hz",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["stats",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["rme",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"REmpty"}]}]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[32,4]}},{"children":[],"comments":null,"title":"accumulateResults","info":{"declType":"value","type":{"tag":"ForAll","contents":["anyEff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"STSuite"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Benchmark","Suite","ST"],"BenchmarkResult"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"anyEff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"/home/jon/newlibrary/projects/personal/purescript-benchmark/src/Benchmark/Suite/ST.purs","end":[35,83]}}]}],"resolvedDependencies":{"purescript-newtype":"2.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.1.0","purescript-gen":"1.1.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-strings":"3.1.0","purescript-identity":"3.1.0"},"version":"0.1.0","github":["cyrbon","purescript-benchmark"],"versionTag":"v0.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Char.Gen":"purescript-strings","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}