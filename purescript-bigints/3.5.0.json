{"uploader":"sharkdp","packageMeta":{"homepage":"https://github.com/sharkdp/purescript-bigints","repository":{"url":"git://github.com/sharkdp/purescript-bigints.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","test","gulpfile.js","package.json"],"devDependencies":{"purescript-quickcheck-laws":"^3.0.0","purescript-console":"^3.0.0","purescript-assert":"^3.0.0","purescript-integers":"^3.0.0","purescript-quickcheck":"^4.0.0"},"authors":[{"email":"mail@david-peter.de","name":"David Peter"}],"dependencies":{"purescript-maybe":"^3.0.0","purescript-integers":"^3.0.0","purescript-strings":"^3.5.0"},"name":"purescript-bigints","license":["MIT"],"description":"Arbitrary length integers"},"tagTime":"2018-03-19T06:43:51+0000","modules":[{"reExports":[],"name":"Data.BigInt","comments":"This module defines a `BigInt` data type for arbitrary length integers.\n","declarations":[{"children":[{"comments":null,"title":"eqBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[121,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[121,31]}},{"comments":null,"title":"ordBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[126,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[126,33]}},{"comments":null,"title":"showBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[150,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[150,35]}},{"comments":null,"title":"semiringBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[156,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[156,43]}},{"comments":null,"title":"ringBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[164,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[164,35]}},{"comments":null,"title":"commutativeRingBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[170,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[170,57]}},{"comments":null,"title":"euclideanRingBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[172,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[172,53]}}],"comments":"An arbitrary length integer.\n","title":"BigInt","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[38,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[38,35]}},{"children":[],"comments":null,"title":"BaseDigits","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty"],"NonEmptyArray"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["isNegative",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[40,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[43,2]}},{"children":[],"comments":"Convert an integer to a BigInt.\n","title":"fromInt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[53,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[53,40]}},{"children":[],"comments":"Convert a Number to a BigInt. The fractional part is truncated.\n","title":"fromNumber","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[56,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[56,46]}},{"children":[],"comments":"Converts a BigInt to a Number. Loses precision for numbers which are too\nlarge.\n","title":"toNumber","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[60,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[60,44]}},{"children":[],"comments":"Exponentiation for `BigInt`. If the exponent is less than 0, `pow`\nreturns 0. Also, `pow zero zero == one`.\n","title":"pow","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[64,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[64,49]}},{"children":[],"comments":"The absolute value.\n","title":"abs","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[67,39]}},{"children":[],"comments":"Returns `true` if the number is even, `false` otherwise.\n","title":"even","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[70,41]}},{"children":[],"comments":"Returns `true` if the number is odd, `false` otherwise.\n","title":"odd","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[73,40]}},{"children":[],"comments":"Returns `true` if the number is prime, `false` otherwise.\n","title":"prime","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[76,42]}},{"children":[],"comments":"Invert the bits.\n","title":"not","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[79,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[79,39]}},{"children":[],"comments":"or the bits.\n","title":"or","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[82,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[82,48]}},{"children":[],"comments":"Exlusive or the bits.\n","title":"xor","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[85,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[85,49]}},{"children":[],"comments":"and the bits.\n","title":"and","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[88,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[88,49]}},{"children":[],"comments":"shift the bits left and zero fill.\n","title":"shl","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[91,49]}},{"children":[],"comments":"Shift the bits right and maintain pos/neg.\n","title":"shr","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[94,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[94,49]}},{"children":[],"comments":"Parse a string into a `BigInt`, assuming a decimal representation. Returns\n`Nothing` if the parse fails.\n\nExamples:\n```purescript\nfromString \"42\"\nfromString \"857981209301293808359384092830482\"\nfromString \"1e100\"\n```\n","title":"fromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[105,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[105,37]}},{"children":[],"comments":"Parse a string into a `BigInt`, assuming a representation in the given base.\nThe letters \"a-z\" and \"A-Z\" will be interpreted as the digits `10` to\n`36`. Returns `Nothing` if the parse fails.\n\n```purescript\nfromBase 2 \"100\" == fromString \"4\"\nfromBase 16 \"ff\" == fromString \"255\"\n```\n","title":"fromBase","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}]}},"sourceSpan":{"start":[116,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[116,42]}},{"children":[],"comments":"A decimal representation of the `BigInt` as a `String`.\n","title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[133,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[133,29]}},{"children":[],"comments":"A decimal representation of the `BigInt` as a `NonEmptyString`.\n","title":"toNonEmptyString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[137,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[137,45]}},{"children":[],"comments":"A base N representation of the `BigInt` as an array of digits.\n","title":"digitsInBase","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BaseDigits"]}]}]}},"sourceSpan":{"start":[141,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[141,59]}},{"children":[],"comments":"A base N representation of the `BigInt` as a `String`.\n","title":"toBase","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[144,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[144,49]}},{"children":[],"comments":"A base N representation of the `BigInt` as a `NonEmptyString`.\n","title":"toBase'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}]}},"sourceSpan":{"start":[147,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-bigints/src/Data/BigInt.purs","end":[147,43]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-quickcheck-laws":"3.0.1","purescript-control":"3.3.1","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-arrays":"4.3.0","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.1.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.3.0","purescript-foldable-traversable":"3.7.1","purescript-tailrec":"3.3.0","purescript-gen":"1.3.1","purescript-typelevel-prelude":"2.6.0","purescript-prelude":"3.1.1","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.2.0","purescript-assert":"3.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.2.0","purescript-eff":"3.2.0","purescript-record":"0.2.6","purescript-transformers":"3.5.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.4.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-random":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-quickcheck":"4.6.2","purescript-strings":"3.5.0","purescript-identity":"3.1.0","purescript-lists":"4.12.0","purescript-functions":"3.0.0"},"version":"3.5.0","github":["sharkdp","purescript-bigints"],"versionTag":"v3.5.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Test.QuickCheck.Laws.Control.Semigroupoid":"purescript-quickcheck-laws","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Test.QuickCheck.Laws.Data.Foldable":"purescript-quickcheck-laws","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Test.QuickCheck.Laws.Data.Bounded":"purescript-quickcheck-laws","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.Record.Unsafe":"purescript-record","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Test.QuickCheck.Laws.Control.Apply":"purescript-quickcheck-laws","Control.Monad.Gen":"purescript-gen","Test.QuickCheck.Laws.Control.Alt":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Monoid":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.HeytingAlgebra":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data":"purescript-quickcheck-laws","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Test.QuickCheck.Laws.Control.Bind":"purescript-quickcheck-laws","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Test.QuickCheck.Laws.Control.Monad":"purescript-quickcheck-laws","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Test.QuickCheck.Laws.Data.Ord":"purescript-quickcheck-laws","Data.Bounded":"purescript-prelude","Test.QuickCheck.Laws.Control":"purescript-quickcheck-laws","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Test.QuickCheck.Laws.Data.Functor":"purescript-quickcheck-laws","Data.Record":"purescript-record","Test.QuickCheck.Laws.Control.Category":"purescript-quickcheck-laws","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Test.QuickCheck.Laws.Data.EuclideanRing":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Field":"purescript-quickcheck-laws","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Test.QuickCheck.Laws.Control.Comonad":"purescript-quickcheck-laws","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Test.QuickCheck.Laws.Data.Semigroup":"purescript-quickcheck-laws","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Laws":"purescript-quickcheck-laws","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Test.QuickCheck.Laws.Data.CommutativeRing":"purescript-quickcheck-laws","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Control.Alternative":"purescript-quickcheck-laws","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Record.Builder":"purescript-record","Test.QuickCheck.Laws.Data.Semiring":"purescript-quickcheck-laws","Data.Field":"purescript-prelude","Test.QuickCheck.Laws.Data.BoundedEnum":"purescript-quickcheck-laws","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Data.Record.ST":"purescript-record","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Extend":"purescript-quickcheck-laws","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Test.QuickCheck.Laws.Control.MonadPlus":"purescript-quickcheck-laws","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Test.QuickCheck.Laws.Control.MonadZero":"purescript-quickcheck-laws","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Test.QuickCheck.Laws.Data.Eq":"purescript-quickcheck-laws","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Applicative":"purescript-quickcheck-laws","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Test.QuickCheck.Laws.Data.BooleanAlgebra":"purescript-quickcheck-laws","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Test.QuickCheck.Laws.Data.Ring":"purescript-quickcheck-laws","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Test.QuickCheck.Laws.Control.Plus":"purescript-quickcheck-laws","Data.Either":"purescript-either","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}