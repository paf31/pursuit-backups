{"uploader":"grmble","packageMeta":{"homepage":"https://github.com/grmble/purescript-bonsai","repository":{"url":"git://github.com/grmble/purescript-bonsai.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-psci-support":"^3.0.0"},"dependencies":{"purescript-console":"^3.0.0","purescript-either":"^3.1.0","purescript-foreign-generic":"^5.0.0","purescript-dom":"^4.8.2","purescript-sequences":"^1.0.3","purescript-prelude":"^3.1.0","purescript-bifunctors":"^3.0.0","purescript-refs":"^3.0.0","purescript-transformers":"^3.4.0","purescript-tuples":"^4.1.0","purescript-foreign":"^4.0.1","purescript-functions":"^3.0.0"},"name":"purescript-bonsai","license":["BSD-3-Clause"],"description":"Mini-Elm in purescript"},"tagTime":"2017-09-10T18:40:06+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Bonsai","Core"]},"declarations":[{"children":[],"comments":"An update functions returns a new model and a possibly empty command\n","title":"UpdateResult","info":{"arguments":[["model",null],["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["model",{"tag":"TypeVar","contents":"model"},{"tag":"RCons","contents":["cmd",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[50,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[53,4]}},{"children":[],"comments":"ProgramState tracks the current state of the model, vnode and\ndom element.\n\nThese are needed to advance the state in reaction to a Cmd message.\n","title":"ProgramState","info":{"arguments":[["model",null],["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["model",{"tag":"TypeVar","contents":"model"},{"tag":"RCons","contents":["vnode",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"RCons","contents":["dnode",{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[81,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[85,4]}},{"children":[],"comments":"Program describes the Bonsai program.\n\nIt is passed around in a ReaderT and stores\ncallbacks and a ref to the pending commands.\nEvent callbacks append to the list of pending\ncommands, they will then be applied\nin the main event loop.\n","title":"Program","info":{"arguments":[["model",null],["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["dbgTiming",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["dbgEvents",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["updater",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]}]},{"tag":"RCons","contents":["renderer",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"RCons","contents":["pending",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"ProgramState"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"REmpty"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[40,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[47,4]}},{"children":[],"comments":"Create initial environment for the Bonsai program.\n","title":"program","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["model",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"eff"}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"Program"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[88,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[94,70]}},{"children":[],"comments":"Creates an update result with empty command.\n","title":"plainResult","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["model",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[56,65]}},{"children":[],"comments":"Helper to map update results from sub-components\n","title":"mapResult","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg2",{"tag":"ForAll","contents":["model2",{"tag":"ForAll","contents":["msg1",{"tag":"ForAll","contents":["model1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model1"}]},{"tag":"TypeVar","contents":"model2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg1"}]},{"tag":"TypeVar","contents":"msg2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model1"}]},{"tag":"TypeVar","contents":"msg1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model2"}]},{"tag":"TypeVar","contents":"msg2"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[68,30]}},{"children":[],"comments":null,"title":"debugProgram","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["model",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"eff"}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"Program"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}}]}]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[107,70]}}]},{"moduleName":{"package":null,"item":["Bonsai","DOM"]},"declarations":[{"children":[],"comments":"Gets a DOM Element by its ID\n","title":"domElementById","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"ElementId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]}}]}]},null]}},"sourceSpan":{"start":[18,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/DOM.purs","end":[18,82]}}]},{"moduleName":{"package":null,"item":["Bonsai","Types"]},"declarations":[{"children":[{"comments":null,"title":"NoCmd","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cmd","info":{"arguments":[{"tag":"TypeVar","contents":"msg"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"cmdFunctor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[18,35]}},{"comments":null,"title":"cmdApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[24,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[24,31]}},{"comments":null,"title":"cmdApplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[29,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[29,43]}},{"comments":null,"title":"cmdBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[32,29]}},{"comments":null,"title":"cmdAlt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[36,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[36,27]}},{"comments":null,"title":"cmdPlus","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[40,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[40,29]}}],"comments":"A Command represents messages that should be applied to the Bonsai model\n\nIt is a functor so event results can be mapped.\n","title":"Cmd","info":{"declType":"data","dataDeclType":"data","typeArguments":[["msg",null]]},"sourceSpan":{"start":[14,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[16,12]}}]},{"moduleName":{"package":null,"item":["Bonsai","VirtualDom"]},"declarations":[{"children":[{"comments":null,"title":"functorVNode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]}]}},"sourceSpan":{"start":[44,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[44,39]}}],"comments":"An immutable chunk of data representing a DOM node. This can be HTML or SVG.\n\nIt's a functor that maps the Cmds that are emitted by event handlers.\n","title":"VNode","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["msg",null]]},"sourceSpan":{"start":[41,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[42,16]}},{"children":[{"comments":null,"title":"propertyFunctor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]}]}},"sourceSpan":{"start":[205,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[205,45]}}],"comments":"When using HTML and JS, there are two ways to specify parts of a DOM node.\n\n 1. Attributes &mdash; You can set things in HTML itself. So the `class`\n    in `<div class=\"greeting\"></div>` is called an *attribute*.\n\n 2. Properties &mdash; You can also set things in JS. So the `className`\n    in `div.className = 'greeting'` is called a *property*.\n\nSo the `class` attribute corresponds to the `className` property. At first\nglance, perhaps this distinction is defensible, but it gets much crazier.\n*There is not always a one-to-one mapping between attributes and properties!*\nYes, that is a true fact. Sometimes an attribute exists, but there is no\ncorresponding property. Sometimes changing an attribute does not change the\nunderlying property. For example, as of this writing, the `webkit-playsinline`\nattribute can be used in HTML, but there is no corresponding property!\n","title":"Property","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["msg",null]]},"sourceSpan":{"start":[124,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[125,19]}},{"children":[],"comments":"A Patch for efficient updates.\n","title":"Patch","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["msg",null]]},"sourceSpan":{"start":[349,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[350,16]}},{"children":[],"comments":"Options for an event listener. If `stopPropagation` is true, it means the\nevent stops traveling through the DOM so it will not trigger any other event\nlisteners. If `preventDefault` is true, any built-in browser behavior related\nto the event is prevented. For example, this is used with touch events when you\nwant to treat them as gestures of your own, not as scrolls.\n","title":"Options","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["stopPropagation",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["preventDefault",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[245,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[248,4]}},{"children":[],"comments":"A EventDecoder turns DOM events into messages.\n","title":"EventDecoder","info":{"arguments":[["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]},{"tag":"TypeVar","contents":"msg"}]}}]}]}},"sourceSpan":{"start":[195,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[196,25]}},{"children":[],"comments":"Just put plain text in the DOM. It will escape the string so that it appears\nexactly as you specify.\n\n   text \"Hello World!\"\n","title":"text","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},null]}},"sourceSpan":{"start":[73,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[73,55]}},{"children":[],"comments":"Specify a list of styles.\n\n    myStyle : Property msg\n    myStyle =\n      style\n        [ (\"backgroundColor\", \"red\")\n        , (\"height\", \"90px\")\n        , (\"width\", \"100%\")\n        ]\n\n    greeting : Node msg\n    greeting =\n      node \"div\" [ myStyle ] [ text \"Hello!\" ]\n","title":"style","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]},null]}},"sourceSpan":{"start":[189,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[189,80]}},{"children":[],"comments":"Render a virtual dom node to a DOM Element.\n\nInitial step - the whole point in a VDom is the diffing\nand patching.  So after rendering once, diff and applyPatches\nshould be used.\n","title":"render","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Emitter"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]}]},null]},null]}},"sourceSpan":{"start":[332,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[336,13]}},{"children":[],"comments":"Create arbitrary *properties*.\n\n   import JavaScript.Encode as Json\n\n   greeting : Html\n   greeting =\n       node \"div\" [ property \"className\" (Json.string \"greeting\") ] [\n         text \"Hello!\"\n       ]\n\nNotice that you must give the *property* name, so we use `className` as it\nwould be in JavaScript, not `class` as it would appear in HTML.\n","title":"property","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]},null]}},"sourceSpan":{"start":[139,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[139,54]}},{"children":[],"comments":"Same as `on` but you can set a few options.\n","title":"onWithOptions","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[234,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[234,83]}},{"children":[],"comments":"Create a custom event listener.\n\n    import Json.Decode as Json\n\n    onClick : msg -> Property msg\n    onClick msg =\n      on \"click\" (Json.succeed msg)\n\nYou first specify the name of the event in the same format as with JavaScript’s\n`addEventListener`. Next you give a JSON decoder, which lets you pull\ninformation out of the event object. If the decoder succeeds, it will produce\na message and route it to your `update` function.\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]}},"sourceSpan":{"start":[224,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[224,63]}},{"children":[],"comments":"Create a DOM node with a tag name, a list of HTML properties that can\ninclude styles and event listeners, a list of CSS properties like `color`, and\na list of child nodes.\n\n   import Json.Encode as Json\n\n   hello : Node msg\n   hello =\n     node \"div\" [] [ text \"Hello!\" ]\n\n   greeting : Node msg\n   greeting =\n     node \"div\"\n       [ property \"id\" (Json.string \"greeting\") ]\n       [ text \"Hello!\" ]\n","title":"node","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[62,85]}},{"children":[],"comments":"Works just like `node`, but you add a unique identifier to each child\nnode. You want this when you have a list of nodes that is changing: adding\nnodes, removing nodes, etc. In these cases, the unique identifiers help make\nthe DOM modifications more efficient.\n","title":"keyedNode","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[305,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[310,15]}},{"children":[],"comments":"Compute a patch between the old vnode representation and the new one.\n","title":"diff","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Patch"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]}},"sourceSpan":{"start":[353,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[353,56]}},{"children":[],"comments":"Would you believe that there is another way to do this?! This corresponds\nto JavaScript's `setAttributeNS` function under the hood. It is doing pretty\nmuch the same thing as `attribute` but you are able to have \"namespaced\"\nattributes. This is used in some SVG stuff at least.\n","title":"attributeNS","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[170,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[170,70]}},{"children":[],"comments":"Create arbitrary HTML *attributes*. Maps onto JavaScript’s `setAttribute`\nfunction under the hood.\n\n    greeting : Html\n    greeting =\n        node \"div\" [ attribute \"class\" \"greeting\" ] [\n          text \"Hello!\"\n        ]\n\nNotice that you must give the *attribute* name, so we use `class` as it would\nbe in HTML, not `className` as it would appear in JS.\n","title":"attribute","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]}},"sourceSpan":{"start":[159,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[159,58]}},{"children":[],"comments":"Apply a diff between VDoms to the DOM element.\n\nThe DOM element should be the one from the last\ndiff/applyPatches pass, or the initially rendered one.\n","title":"applyPatches","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Emitter"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Patch"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[364,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[370,32]}}]}],"name":"Bonsai","comments":"Bonsai main module for imports\n\nView code will also want Bonsai.Html and Bonsai.Event\n","declarations":[]},{"reExports":[],"name":"Bonsai.Core","comments":null,"declarations":[{"children":[],"comments":"Program describes the Bonsai program.\n\nIt is passed around in a ReaderT and stores\ncallbacks and a ref to the pending commands.\nEvent callbacks append to the list of pending\ncommands, they will then be applied\nin the main event loop.\n","title":"Program","info":{"arguments":[["model",null],["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["dbgTiming",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["dbgEvents",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["updater",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]}]},{"tag":"RCons","contents":["renderer",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"RCons","contents":["pending",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"Ref"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"ProgramState"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"REmpty"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[40,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[47,4]}},{"children":[],"comments":"An update functions returns a new model and a possibly empty command\n","title":"UpdateResult","info":{"arguments":[["model",null],["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["model",{"tag":"TypeVar","contents":"model"},{"tag":"RCons","contents":["cmd",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[50,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[53,4]}},{"children":[],"comments":"Creates an update result with empty command.\n","title":"plainResult","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["model",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[56,65]}},{"children":[],"comments":"Helper to map update results from sub-components\n","title":"mapResult","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg2",{"tag":"ForAll","contents":["model2",{"tag":"ForAll","contents":["msg1",{"tag":"ForAll","contents":["model1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model1"}]},{"tag":"TypeVar","contents":"model2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg1"}]},{"tag":"TypeVar","contents":"msg2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model1"}]},{"tag":"TypeVar","contents":"msg1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model2"}]},{"tag":"TypeVar","contents":"msg2"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[68,30]}},{"children":[],"comments":"ProgramState tracks the current state of the model, vnode and\ndom element.\n\nThese are needed to advance the state in reaction to a Cmd message.\n","title":"ProgramState","info":{"arguments":[["model",null],["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["model",{"tag":"TypeVar","contents":"model"},{"tag":"RCons","contents":["vnode",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"RCons","contents":["dnode",{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[81,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[85,4]}},{"children":[],"comments":"Create initial environment for the Bonsai program.\n","title":"program","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["model",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"eff"}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"Program"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[88,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[94,70]}},{"children":[],"comments":null,"title":"debugProgram","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["model",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"UpdateResult"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"RCons","contents":["ref",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Ref"],"REF"]},{"tag":"TypeVar","contents":"eff"}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Core"],"Program"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"msg"}]}}]}]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Core.purs","end":[107,70]}}]},{"reExports":[],"name":"Bonsai.DOM","comments":"Bonsai DOM Helpers\n","declarations":[{"children":[],"comments":"Gets a DOM Element by its ID\n","title":"domElementById","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"ElementId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]}}]}]},null]}},"sourceSpan":{"start":[18,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/DOM.purs","end":[18,82]}}]},{"reExports":[],"name":"Bonsai.Debug","comments":"Heaviliy inspirec by purescript-debug\n\nThese should have CONSOLE effect really.\n","declarations":[{"children":[],"comments":"Log a message and object to the console.\n","title":"logObj","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[19,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[21,52]}},{"children":[],"comments":"Log a message and JSON.stringify of object to the console.\n","title":"logJson","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[26,52]}},{"children":[],"comments":"Log a message, JSON.stringify and the object to the console.\n","title":"logJsonObj","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[32,52]}},{"children":[],"comments":null,"title":"StartTiming","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[34,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[35,22]}},{"children":[],"comments":"Obtain a start time for timing function execution\n","title":"startTiming","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Bonsai","Debug"],"StartTiming"]}]},null]}},"sourceSpan":{"start":[38,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[40,44]}},{"children":[],"comments":"Log timing information\n","title":"logTiming","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Bonsai","Debug"],"StartTiming"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[43,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[45,62]}},{"children":[],"comments":"Log timing if in debug mode\n","title":"debugTiming","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Bonsai","Debug"],"StartTiming"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[50,73]}},{"children":[],"comments":"Log json obj if in debug mode\n","title":"debugJsonObj","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[57,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Debug.purs","end":[59,63]}}]},{"reExports":[],"name":"Bonsai.Event","comments":" Event listener utilities\n\n For maximum performance, event handlers attached to the\n virtual DOM should be comparable by object identity.\n For this, you have call on with a top level function\n event decoder.\n\n So for top VDOM diff/patching performance, instead of\n using onInput, you would make a top level function\n\n   decodeXxx event = eventDecoder Xxx targetValue\n\n   -- use it like\n   on \"input\" decodeXxx\n\n Or you might just have a single event handler on a\n parent element and look at the event target.\n","declarations":[{"children":[],"comments":"Event listener property for the input event.\n\nShould be defined on an input. Will call\nthe message constructor with the current value\nof the input element.\n","title":"onInput","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[53,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[53,27]}},{"children":[],"comments":null,"title":"onInputWithOptions","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[57,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[57,49]}},{"children":[],"comments":"Event listener property for the click event.\n","title":"onClick","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[62,43]}},{"children":[],"comments":null,"title":"onClickWithOptions","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]}},"sourceSpan":{"start":[66,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[66,65]}},{"children":[],"comments":"Event listener property for the submit event.\n\nShould be defined on the form. Will prevent default\nand stop propagation and will call the constructor\nwith a map of the current form values.\n","title":"onSubmit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}},"sourceSpan":{"start":[75,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[75,37]}},{"children":[],"comments":"Emit commands on enter key presses\n","title":"onEnter","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]},null]}},"sourceSpan":{"start":[80,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[80,43]}},{"children":[],"comments":null,"title":"preventDefaultStopPropagation","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Options"]}},"sourceSpan":{"start":[90,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[90,41]}},{"children":[],"comments":"Read the value of the target input element\n","title":"targetValue","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[97,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[97,35]}},{"children":[],"comments":null,"title":"targetFormValues","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}},"sourceSpan":{"start":[102,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[102,49]}},{"children":[],"comments":"Read the names and values of target form, for form events.\n","title":"targetValues","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}},"sourceSpan":{"start":[107,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[107,45]}},{"children":[],"comments":"Event decoder returns unit or fails\n\nhack or no hack?\n","title":"ignoreEscape","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[135,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Event.purs","end":[135,34]}}]},{"reExports":[],"name":"Bonsai.Types","comments":"Bonsai Types\n","declarations":[{"children":[{"comments":null,"title":"NoCmd","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cmd","info":{"arguments":[{"tag":"TypeVar","contents":"msg"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"cmdFunctor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[18,35]}},{"comments":null,"title":"cmdApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[24,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[24,31]}},{"comments":null,"title":"cmdApplicative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[29,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[29,43]}},{"comments":null,"title":"cmdBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[32,29]}},{"comments":null,"title":"cmdAlt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[36,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[36,27]}},{"comments":null,"title":"cmdPlus","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]}]}},"sourceSpan":{"start":[40,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[40,29]}}],"comments":"A Command represents messages that should be applied to the Bonsai model\n\nIt is a functor so event results can be mapped.\n","title":"Cmd","info":{"declType":"data","dataDeclType":"data","typeArguments":[["msg",null]]},"sourceSpan":{"start":[14,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/Types.purs","end":[16,12]}}]},{"reExports":[],"name":"Bonsai.VirtualDom","comments":"Purescript interface to Elm Virtual DOM\n","declarations":[{"children":[{"comments":null,"title":"functorVNode","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]}]}},"sourceSpan":{"start":[44,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[44,39]}}],"comments":"An immutable chunk of data representing a DOM node. This can be HTML or SVG.\n\nIt's a functor that maps the Cmds that are emitted by event handlers.\n","title":"VNode","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["msg",null]]},"sourceSpan":{"start":[41,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[42,16]}},{"children":[],"comments":"Create a DOM node with a tag name, a list of HTML properties that can\ninclude styles and event listeners, a list of CSS properties like `color`, and\na list of child nodes.\n\n   import Json.Encode as Json\n\n   hello : Node msg\n   hello =\n     node \"div\" [] [ text \"Hello!\" ]\n\n   greeting : Node msg\n   greeting =\n     node \"div\"\n       [ property \"id\" (Json.string \"greeting\") ]\n       [ text \"Hello!\" ]\n","title":"node","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[62,85]}},{"children":[],"comments":"Just put plain text in the DOM. It will escape the string so that it appears\nexactly as you specify.\n\n   text \"Hello World!\"\n","title":"text","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},null]}},"sourceSpan":{"start":[73,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[73,55]}},{"children":[{"comments":null,"title":"propertyFunctor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]}]}},"sourceSpan":{"start":[205,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[205,45]}}],"comments":"When using HTML and JS, there are two ways to specify parts of a DOM node.\n\n 1. Attributes &mdash; You can set things in HTML itself. So the `class`\n    in `<div class=\"greeting\"></div>` is called an *attribute*.\n\n 2. Properties &mdash; You can also set things in JS. So the `className`\n    in `div.className = 'greeting'` is called a *property*.\n\nSo the `class` attribute corresponds to the `className` property. At first\nglance, perhaps this distinction is defensible, but it gets much crazier.\n*There is not always a one-to-one mapping between attributes and properties!*\nYes, that is a true fact. Sometimes an attribute exists, but there is no\ncorresponding property. Sometimes changing an attribute does not change the\nunderlying property. For example, as of this writing, the `webkit-playsinline`\nattribute can be used in HTML, but there is no corresponding property!\n","title":"Property","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["msg",null]]},"sourceSpan":{"start":[124,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[125,19]}},{"children":[],"comments":"Create arbitrary *properties*.\n\n   import JavaScript.Encode as Json\n\n   greeting : Html\n   greeting =\n       node \"div\" [ property \"className\" (Json.string \"greeting\") ] [\n         text \"Hello!\"\n       ]\n\nNotice that you must give the *property* name, so we use `className` as it\nwould be in JavaScript, not `class` as it would appear in HTML.\n","title":"property","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]},null]}},"sourceSpan":{"start":[139,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[139,54]}},{"children":[],"comments":"Create arbitrary HTML *attributes*. Maps onto JavaScript’s `setAttribute`\nfunction under the hood.\n\n    greeting : Html\n    greeting =\n        node \"div\" [ attribute \"class\" \"greeting\" ] [\n          text \"Hello!\"\n        ]\n\nNotice that you must give the *attribute* name, so we use `class` as it would\nbe in HTML, not `className` as it would appear in JS.\n","title":"attribute","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]}},"sourceSpan":{"start":[159,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[159,58]}},{"children":[],"comments":"Would you believe that there is another way to do this?! This corresponds\nto JavaScript's `setAttributeNS` function under the hood. It is doing pretty\nmuch the same thing as `attribute` but you are able to have \"namespaced\"\nattributes. This is used in some SVG stuff at least.\n","title":"attributeNS","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[170,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[170,70]}},{"children":[],"comments":"Specify a list of styles.\n\n    myStyle : Property msg\n    myStyle =\n      style\n        [ (\"backgroundColor\", \"red\")\n        , (\"height\", \"90px\")\n        , (\"width\", \"100%\")\n        ]\n\n    greeting : Node msg\n    greeting =\n      node \"div\" [ myStyle ] [ text \"Hello!\" ]\n","title":"style","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]},null]}},"sourceSpan":{"start":[189,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[189,80]}},{"children":[],"comments":"A EventDecoder turns DOM events into messages.\n","title":"EventDecoder","info":{"arguments":[["msg",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foreign"],"F"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","Types"],"Cmd"]},{"tag":"TypeVar","contents":"msg"}]}}]}]}},"sourceSpan":{"start":[195,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[196,25]}},{"children":[],"comments":"Create a custom event listener.\n\n    import Json.Decode as Json\n\n    onClick : msg -> Property msg\n    onClick msg =\n      on \"click\" (Json.succeed msg)\n\nYou first specify the name of the event in the same format as with JavaScript’s\n`addEventListener`. Next you give a JSON decoder, which lets you pull\ninformation out of the event object. If the decoder succeeds, it will produce\na message and route it to your `update` function.\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]}},"sourceSpan":{"start":[224,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[224,63]}},{"children":[],"comments":"Same as `on` but you can set a few options.\n","title":"onWithOptions","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"EventDecoder"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[234,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[234,83]}},{"children":[],"comments":"Options for an event listener. If `stopPropagation` is true, it means the\nevent stops traveling through the DOM so it will not trigger any other event\nlisteners. If `preventDefault` is true, any built-in browser behavior related\nto the event is prevented. For example, this is used with touch events when you\nwant to treat them as gestures of your own, not as scrolls.\n","title":"Options","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["stopPropagation",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["preventDefault",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[245,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[248,4]}},{"children":[],"comments":"A performance optimization that delays the building of virtual DOM nodes.\n\nCalling `(view model)` will definitely build some virtual DOM, perhaps a lot of\nit. Calling `(lazy view model)` delays the call until later. During diffing, we\ncan check to see if `model` is referentially equal to the previous value used,\nand if so, we just stop. No need to build up the tree structure and diff it,\nwe know if the input to `view` is the same, the output must be the same!\n","title":"lazy","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]},null]}},"sourceSpan":{"start":[274,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[274,57]}},{"children":[],"comments":"Same as `lazy` but checks on two arguments.\n","title":"lazy2","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[283,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[283,70]}},{"children":[],"comments":"Same as `lazy` but checks on three arguments.\n","title":"lazy3","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[292,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[292,82]}},{"children":[],"comments":"Works just like `node`, but you add a unique identifier to each child\nnode. You want this when you have a list of nodes that is changing: adding\nnodes, removing nodes, etc. In these cases, the unique identifiers help make\nthe DOM modifications more efficient.\n","title":"keyedNode","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Property"]},{"tag":"TypeVar","contents":"msg"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]}]}]},null]}},"sourceSpan":{"start":[305,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[310,15]}},{"children":[],"comments":"Render a virtual dom node to a DOM Element.\n\nInitial step - the whole point in a VDom is the diffing\nand patching.  So after rendering once, diff and applyPatches\nshould be used.\n","title":"render","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Emitter"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]}]},null]},null]}},"sourceSpan":{"start":[332,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[336,13]}},{"children":[],"comments":"A Patch for efficient updates.\n","title":"Patch","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["msg",null]]},"sourceSpan":{"start":[349,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[350,16]}},{"children":[],"comments":"Compute a patch between the old vnode representation and the new one.\n","title":"diff","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Patch"]},{"tag":"TypeVar","contents":"msg"}]}]}]},null]}},"sourceSpan":{"start":[353,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[353,56]}},{"children":[],"comments":"Apply a diff between VDoms to the DOM element.\n\nThe DOM element should be the one from the last\ndiff/applyPatches pass, or the initially rendered one.\n","title":"applyPatches","info":{"declType":"value","type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Emitter"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"VNode"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Bonsai","VirtualDom"],"Patch"]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["DOM","Node","Types"],"Element"]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[364,1],"name":"/Users/gj/src/purescript/purescript-bonsai/src/Bonsai/VirtualDom.purs","end":[370,32]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-maps":"3.5.2","purescript-control":"3.3.0","purescript-arraybuffer-types":"1.0.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-profunctor":"3.2.0","purescript-media-types":"3.0.0","purescript-foreign-generic":"5.0.0","purescript-arrays":"4.1.2","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-dom":"4.8.2","purescript-monoid":"3.1.0","purescript-foldable-traversable":"3.6.0","purescript-tailrec":"3.3.0","purescript-gen":"1.1.0","purescript-sequences":"1.0.3","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.1.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.2.0","purescript-js-date":"4.0.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-psci-support":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.3.1","purescript-identity":"3.1.0","purescript-foreign":"4.0.1","purescript-lists":"4.9.0","purescript-nullable":"3.0.0","purescript-datetime":"3.3.0","purescript-functions":"3.0.0"},"version":"0.1.0","github":["grmble","purescript-bonsai"],"versionTag":"v0.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","DOM.HTML.Document":"purescript-dom","Control.Monad.Eff.Ref":"purescript-refs","DOM.CSS.Event.Types":"purescript-dom","Data.Char.Gen":"purescript-strings","DOM.WebStorage.Types":"purescript-dom","DOM.XHR.Types":"purescript-dom","DOM.HTML.HTMLParamElement":"purescript-dom","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","DOM.Event.MouseEvent":"purescript-dom","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","DOM.HTML.HTMLTableSectionElement":"purescript-dom","Control.Comonad.Traced.Class":"purescript-transformers","Data.Foreign.Generic.Class":"purescript-foreign-generic","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","DOM.HTML.HTMLOutputElement":"purescript-dom","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","DOM.Event.EventTarget":"purescript-dom","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Data.Foreign.NullOrUndefined":"purescript-foreign-generic","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","DOM.HTML.HTMLMediaElement.CanPlayType":"purescript-dom","DOM.HTML.HTMLDataListElement":"purescript-dom","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Data.Foreign.Generic.Types":"purescript-foreign-generic","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","DOM.XHR.FormData":"purescript-dom","Control.Biapplicative":"purescript-bifunctors","DOM.HTML.HTMLTextAreaElement":"purescript-dom","DOM.Event.ClipboardEvent":"purescript-dom","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Bounded":"purescript-prelude","DOM.HTML.HTMLOListElement":"purescript-dom","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","DOM.Event.WheelEvent":"purescript-dom","DOM.HTML.Event.ErrorEvent":"purescript-dom","DOM.HTML.HTMLObjectElement":"purescript-dom","DOM.HTML.HTMLLIElement":"purescript-dom","Control.Apply":"purescript-prelude","DOM.HTML.Event.DragEvent":"purescript-dom","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","DOM.HTML.HTMLSourceElement":"purescript-dom","DOM.HTML.HTMLMetaElement":"purescript-dom","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.FingerTree.Digit":"purescript-sequences","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Data.Sequence.Ordered":"purescript-sequences","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Data.Sequence.Internal":"purescript-sequences","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Foreign.Index":"purescript-foreign","DOM.HTML.HTMLFieldSetElement":"purescript-dom","DOM.HTML.URL":"purescript-dom","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","DOM.Websocket.Types":"purescript-dom","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Data.Foreign.Class":"purescript-foreign-generic","Control.Monad.Cont":"purescript-transformers","DOM.HTML.Types":"purescript-dom","DOM.HTML.HTMLElement":"purescript-dom","DOM.HTML.HTMLDataElement":"purescript-dom","Data.Time.Component.Gen":"purescript-datetime","DOM.HTML.HTMLLinkElement":"purescript-dom","Data.List.ZipList":"purescript-lists","DOM.HTML.HTMLOptionElement":"purescript-dom","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","DOM.HTML.HTMLKeygenElement":"purescript-dom","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","DOM.Node.NonElementParentNode":"purescript-dom","DOM.File.FileReader":"purescript-dom","Data.Generic.Rep.Show":"purescript-generics-rep","Data.Profunctor.Clown":"purescript-profunctor","DOM.HTML.HTMLButtonElement":"purescript-dom","DOM.HTML.HTMLTableColElement":"purescript-dom","DOM.Node.Node":"purescript-dom","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","DOM.HTML.HTMLInputElement":"purescript-dom","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","DOM.HTML.HTMLModElement":"purescript-dom","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","DOM.Event.CompositionEvent":"purescript-dom","DOM.Websocket.WebSocket":"purescript-dom","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","DOM.Event.Event":"purescript-dom","DOM.File.File":"purescript-dom","DOM.HTML.Location":"purescript-dom","DOM.WebStorage.Event.Types":"purescript-dom","DOM":"purescript-dom","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","DOM.HTML.HTMLLegendElement":"purescript-dom","DOM.File.FileReader.ReadyState":"purescript-dom","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","DOM.Node.Document":"purescript-dom","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","DOM.HTML.History":"purescript-dom","Data.Profunctor.Strong":"purescript-profunctor","DOM.HTML.Event.HashChangeEvent":"purescript-dom","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Data.Sequence":"purescript-sequences","Data.Interval.Duration":"purescript-datetime","Data.Foreign.Internal":"purescript-foreign-generic","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","DOM.Node.ChildNode":"purescript-dom","DOM.Websocket.BinaryType":"purescript-dom","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","DOM.HTML.HTMLOptGroupElement":"purescript-dom","Data.String.Regex.Unsafe":"purescript-strings","DOM.HTML.HTMLIFrameElement":"purescript-dom","DOM.Node.NodeList":"purescript-dom","DOM.HTML.HTMLTableRowElement":"purescript-dom","DOM.HTML.HTMLMediaElement":"purescript-dom","DOM.HTML.HTMLMapElement":"purescript-dom","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","DOM.HTML.Navigator":"purescript-dom","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","DOM.Node.NonDocumentTypeChildNode":"purescript-dom","Data.EuclideanRing":"purescript-prelude","DOM.File.FileList":"purescript-dom","Data.Functor.Invariant":"purescript-invariant","DOM.HTML.Window":"purescript-dom","Data.Foreign.Generic":"purescript-foreign-generic","DOM.HTML.HTMLAreaElement":"purescript-dom","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","DOM.HTML.HTMLTrackElement":"purescript-dom","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","DOM.HTML.HTMLTableHeaderCellElement":"purescript-dom","Prelude":"purescript-prelude","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","DOM.HTML.HTMLScriptElement":"purescript-dom","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","DOM.HTML.HTMLImageElement":"purescript-dom","DOM.HTML.HTMLStyleElement":"purescript-dom","Control.Comonad.Env.Class":"purescript-transformers","DOM.Websocket.ReadyState":"purescript-dom","Data.Interval.Duration.Iso":"purescript-datetime","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","DOM.Node.ClassList":"purescript-dom","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","DOM.HTML.Event.Types":"purescript-dom","Data.Bifunctor":"purescript-bifunctors","DOM.HTML.Event.DataTransfer":"purescript-dom","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Data.MediaType":"purescript-media-types","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","DOM.HTML.HTMLQuoteElement":"purescript-dom","DOM.Event.FocusEvent":"purescript-dom","DOM.Node.ParentNode":"purescript-dom","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","DOM.Websocket.Event.Types":"purescript-dom","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","DOM.Node.HTMLCollection":"purescript-dom","DOM.HTML.HTMLTimeElement":"purescript-dom","Control.Monad.Except.Trans":"purescript-transformers","DOM.HTML.HTMLProgressElement":"purescript-dom","Data.Sequence.NonEmpty":"purescript-sequences","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","DOM.HTML.HTMLBaseElement":"purescript-dom","DOM.HTML":"purescript-dom","DOM.Node.Types":"purescript-dom","DOM.HTML.HTMLTrackElement.ReadyState":"purescript-dom","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","DOM.HTML.HTMLCanvasElement":"purescript-dom","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","DOM.WebStorage.Event.StorageEvent":"purescript-dom","DOM.HTML.HTMLTitleElement":"purescript-dom","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","DOM.HTML.Event.DragEvent.DataTransfer":"purescript-dom","Data.List.NonEmpty":"purescript-lists","DOM.Node.Element":"purescript-dom","DOM.HTML.HTMLTableCellElement":"purescript-dom","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","DOM.HTML.HTMLSelectElement":"purescript-dom","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","DOM.HTML.SelectionMode":"purescript-dom","DOM.HTML.HTMLTemplateElement":"purescript-dom","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","DOM.HTML.HTMLEmbedElement":"purescript-dom","Control.Monad.Eff.Class":"purescript-eff","DOM.Util.FFI":"purescript-dom","DOM.File.Types":"purescript-dom","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","DOM.Event.TouchEvent":"purescript-dom","DOM.HTML.HTMLMediaElement.NetworkState":"purescript-dom","Partial":"purescript-partial","DOM.Websocket.Event.CloseEvent":"purescript-dom","Control.Comonad.Env.Trans":"purescript-transformers","DOM.HTML.HTMLMeterElement":"purescript-dom","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","DOM.File.Blob":"purescript-dom","DOM.Event.KeyboardEvent":"purescript-dom","DOM.Websocket.Event.EventTypes":"purescript-dom","DOM.HTML.HTMLLabelElement":"purescript-dom","Data.Monoid.Multiplicative":"purescript-monoid","DOM.WebStorage.Storage":"purescript-dom","Data.Foreign.JSON":"purescript-foreign-generic","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","DOM.Websocket.Event.MessageEvent":"purescript-dom","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","DOM.HTML.HTMLFormElement":"purescript-dom","DOM.HTML.Event.EventTypes":"purescript-dom","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","DOM.Node.NodeType":"purescript-dom","Data.Generic.Rep":"purescript-generics-rep","Data.Bifunctor.Join":"purescript-bifunctors","DOM.HTML.HTMLTableElement":"purescript-dom","DOM.HTML.HTMLMediaElement.ReadyState":"purescript-dom","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","DOM.HTML.HTMLAnchorElement":"purescript-dom","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","DOM.HTML.HTMLVideoElement":"purescript-dom","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Data.Foreign.Generic.EnumEncoding":"purescript-foreign-generic","Data.MediaType.Common":"purescript-media-types","Control.Monad.Writer":"purescript-transformers","DOM.Node.DocumentType":"purescript-dom","Data.Profunctor.Choice":"purescript-profunctor","DOM.Event.EventPhase":"purescript-dom","Data.FingerTree":"purescript-sequences","Data.Time.Gen":"purescript-datetime","DOM.Event.Types":"purescript-dom","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}