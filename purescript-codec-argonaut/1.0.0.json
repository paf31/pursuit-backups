{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/garyb/purescript-codec-argonaut","repository":{"url":"git://github.com/garyb/purescript-codec-argonaut.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-argonaut-codecs":"^3.1.0","purescript-quickcheck":"^4.4.0"},"dependencies":{"purescript-argonaut-core":"^3.1.0","purescript-codec":"^1.0.0","purescript-generics-rep":"^5.1.0"},"name":"purescript-codec-argonaut","license":["MIT"]},"tagTime":"2017-06-18T15:29:16+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-codec","item":["Control","Monad","Codec"]},"declarations":[{"children":[],"comments":null,"title":"encode","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[96,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[96,46]}},{"children":[],"comments":null,"title":"decode","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"d"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[93,48]}},{"children":[],"comments":"`GCodec` is defined as a `Profunctor` so that `lmap` can be used to target\nspecific fields when defining a codec for a product type. This operator\nis a convenience for that:\n\n``` purescript\ntupleCodec =\n  Tuple\n    <$> fst ~ fstCodec\n    <*> snd ~ sndCodec\n```\n","title":"(~)","info":{"declType":"alias","alias":[["Data","Profunctor"],{"Right":{"Left":{"Ident":"lmap"}}}],"fixity":{"associativity":"infixl","precedence":5}},"sourceSpan":{"start":[89,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[89,19]}},{"children":[],"comments":null,"title":"(<~<)","info":{"declType":"alias","alias":[["Control","Monad","Codec"],{"Right":{"Left":{"Ident":"composeCodec"}}}],"fixity":{"associativity":"infixr","precedence":8}},"sourceSpan":{"start":[126,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[126,29]}}]}],"name":"Control.Monad.Codec.Argonaut","comments":null,"declarations":[{"children":[],"comments":"Codec type for `Json` values.\n","title":"JsonCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"BasicCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[46,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[46,64]}},{"children":[{"comments":null,"title":"TypeMismatch","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnexpectedValue","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AtIndex","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AtKey","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Named","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MissingValue","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[57,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[57,55]}},{"comments":null,"title":"ordJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[58,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[58,57]}},{"comments":null,"title":"genericJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]},{"tag":"TypeWildcard","contents":{"start":[59,66],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[59,67]}}]}},"sourceSpan":{"start":[59,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[59,67]}},{"comments":null,"title":"showJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[61,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[62,29]}}],"comments":"Error type for failures while decoding.\n","title":"JsonDecodeError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[49,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[55,17]}},{"children":[],"comments":"Prints a `JsonDecodeError` as a somewhat readable error message.\n","title":"printJsonDecodeError","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[65,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[65,48]}},{"children":[],"comments":"The \"identity codec\" for `Json` values.\n","title":"json","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}},"sourceSpan":{"start":[78,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[78,24]}},{"children":[],"comments":"A codec for `null` values in `Json`.\n","title":"null","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JNull"]}]}},"sourceSpan":{"start":[82,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[82,25]}},{"children":[],"comments":"A codec for `Boolean` values in `Json`.\n","title":"boolean","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[86,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[86,28]}},{"children":[],"comments":"A codec for `Number` values in `Json`.\n","title":"number","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[90,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[90,26]}},{"children":[],"comments":"A codec for `Int` values in `Json`.\n","title":"int","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[94,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[94,20]}},{"children":[],"comments":"A codec for `String` values in `Json`.\n","title":"string","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[98,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[98,26]}},{"children":[],"comments":"A codec for `Char` values in `Json`.\n","title":"char","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[102,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[102,22]}},{"children":[],"comments":"A codec for a `JArray` values in `Json`. This does not decode the values\nof the array, for that use `array` for a general array decoder, or\n`indexedArray` with `index` to decode fixed length array encodings.\n","title":"jarray","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JArray"]}]}},"sourceSpan":{"start":[112,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[112,28]}},{"children":[],"comments":"A codec for `JObject` values in `Json`.\n","title":"jobject","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JObject"]}]}},"sourceSpan":{"start":[116,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[116,30]}},{"children":[],"comments":"A codec for `Array` values.\n","title":"array","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[120,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[120,47]}},{"children":[],"comments":"Codec type for specifically indexed `JArray` elements.\n","title":"JIndexedCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JArray"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[130,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[135,8]}},{"children":[],"comments":"A codec for types that are encoded as an array with a specific layout.\n","title":"indexedArray","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JIndexedCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[138,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[138,59]}},{"children":[],"comments":"A codec for an item in an `indexedArray`.\n","title":"index","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JIndexedCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[145,49]}},{"children":[],"comments":"Codec type for `JObject` prop/value pairs.\n","title":"JPropCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JObject"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JAssoc"]}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[155,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[160,8]}},{"children":[],"comments":"A codec for objects that are encoded with specific properties.\n","title":"object","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JPropCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[163,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[163,50]}},{"children":[],"comments":"A codec for a property of an object.\n","title":"prop","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JPropCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[170,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[170,48]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Control","Monad","Codec","Argonaut"]},"declarations":[{"children":[{"comments":null,"title":"TypeMismatch","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnexpectedValue","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AtIndex","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AtKey","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Named","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MissingValue","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[57,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[57,55]}},{"comments":null,"title":"ordJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[58,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[58,57]}},{"comments":null,"title":"genericJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]},{"tag":"TypeWildcard","contents":{"start":[59,66],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[59,67]}}]}},"sourceSpan":{"start":[59,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[59,67]}},{"comments":null,"title":"showJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[61,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[62,29]}}],"comments":"Error type for failures while decoding.\n","title":"JsonDecodeError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[49,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[55,17]}},{"children":[],"comments":"Codec type for `Json` values.\n","title":"JsonCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"BasicCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[46,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[46,64]}},{"children":[],"comments":"Codec type for `JObject` prop/value pairs.\n","title":"JPropCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JObject"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JAssoc"]}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[155,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[160,8]}},{"children":[],"comments":"Codec type for specifically indexed `JArray` elements.\n","title":"JIndexedCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JArray"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[130,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[135,8]}},{"children":[],"comments":"A codec for `String` values in `Json`.\n","title":"string","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[98,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[98,26]}},{"children":[],"comments":"A codec for a property of an object.\n","title":"prop","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JPropCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[170,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[170,48]}},{"children":[],"comments":"Prints a `JsonDecodeError` as a somewhat readable error message.\n","title":"printJsonDecodeError","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[65,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[65,48]}},{"children":[],"comments":"A codec for objects that are encoded with specific properties.\n","title":"object","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JPropCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[163,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[163,50]}},{"children":[],"comments":"A codec for `Number` values in `Json`.\n","title":"number","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[90,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[90,26]}},{"children":[],"comments":"A codec for `null` values in `Json`.\n","title":"null","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JNull"]}]}},"sourceSpan":{"start":[82,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[82,25]}},{"children":[],"comments":"The \"identity codec\" for `Json` values.\n","title":"json","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}},"sourceSpan":{"start":[78,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[78,24]}},{"children":[],"comments":"A codec for `JObject` values in `Json`.\n","title":"jobject","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JObject"]}]}},"sourceSpan":{"start":[116,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[116,30]}},{"children":[],"comments":"A codec for a `JArray` values in `Json`. This does not decode the values\nof the array, for that use `array` for a general array decoder, or\n`indexedArray` with `index` to decode fixed length array encodings.\n","title":"jarray","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JArray"]}]}},"sourceSpan":{"start":[112,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[112,28]}},{"children":[],"comments":"A codec for `Int` values in `Json`.\n","title":"int","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[94,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[94,20]}},{"children":[],"comments":"A codec for types that are encoded as an array with a specific layout.\n","title":"indexedArray","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JIndexedCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[138,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[138,59]}},{"children":[],"comments":"A codec for an item in an `indexedArray`.\n","title":"index","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JIndexedCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[145,49]}},{"children":[],"comments":null,"title":"encode","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[96,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[96,46]}},{"children":[],"comments":null,"title":"decode","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"d"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[93,48]}},{"children":[],"comments":"A codec for `Char` values in `Json`.\n","title":"char","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[102,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[102,22]}},{"children":[],"comments":"A codec for `Boolean` values in `Json`.\n","title":"boolean","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[86,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[86,28]}},{"children":[],"comments":"A codec for `Array` values.\n","title":"array","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[120,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[120,47]}},{"children":[],"comments":"`GCodec` is defined as a `Profunctor` so that `lmap` can be used to target\nspecific fields when defining a codec for a product type. This operator\nis a convenience for that:\n\n``` purescript\ntupleCodec =\n  Tuple\n    <$> fst ~ fstCodec\n    <*> snd ~ sndCodec\n```\n","title":"(~)","info":{"declType":"alias","alias":[["Data","Profunctor"],{"Right":{"Left":{"Ident":"lmap"}}}],"fixity":{"associativity":"infixl","precedence":5}},"sourceSpan":{"start":[89,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[89,19]}},{"children":[],"comments":null,"title":"(<~<)","info":{"declType":"alias","alias":[["Control","Monad","Codec"],{"Right":{"Left":{"Ident":"composeCodec"}}}],"fixity":{"associativity":"infixr","precedence":8}},"sourceSpan":{"start":[126,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[126,29]}}]}],"name":"Control.Monad.Codec.Argonaut.Common","comments":null,"declarations":[{"children":[],"comments":"A codec for `Maybe` values.\n","title":"maybe","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[24,47]}},{"children":[],"comments":"A codec for `Tuple` values.\n\nEncodes as a two-element array in JSON.\n","title":"tuple","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[46,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[46,65]}},{"children":[],"comments":"A codec for `Either` values.\n","title":"either","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[53,67]}},{"children":[],"comments":"A codec for `List` values.\n\nEncodes as an array in JSON.\n","title":"list","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[67,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[67,47]}},{"children":[],"comments":"A codec for `Map` values.\n\nEncodes as an array of two-element key/value arrays in JSON.\n","title":"map","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[73,71]}},{"children":[],"comments":"A codec for `StrMap` values.\n\nEncodes as an array of two-element key/value arrays in JSON.\n","title":"strMap","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[79,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[79,52]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Control","Monad","Codec","Argonaut"]},"declarations":[{"children":[{"comments":null,"title":"TypeMismatch","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnexpectedValue","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AtIndex","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AtKey","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Named","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MissingValue","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[57,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[57,55]}},{"comments":null,"title":"ordJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[58,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[58,57]}},{"comments":null,"title":"genericJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]},{"tag":"TypeWildcard","contents":{"start":[59,66],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[59,67]}}]}},"sourceSpan":{"start":[59,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[59,67]}},{"comments":null,"title":"showJsonDecodeError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}},"sourceSpan":{"start":[61,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[62,29]}}],"comments":"Error type for failures while decoding.\n","title":"JsonDecodeError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[49,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[55,17]}},{"children":[],"comments":"Codec type for `Json` values.\n","title":"JsonCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"BasicCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[46,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[46,64]}},{"children":[],"comments":"Codec type for `JObject` prop/value pairs.\n","title":"JPropCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JObject"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JAssoc"]}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[155,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[160,8]}},{"children":[],"comments":"Codec type for specifically indexed `JArray` elements.\n","title":"JIndexedCodec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JArray"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[130,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[135,8]}},{"children":[],"comments":"A codec for `String` values in `Json`.\n","title":"string","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[98,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[98,26]}},{"children":[],"comments":"A codec for a property of an object.\n","title":"prop","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JPropCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[170,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[170,48]}},{"children":[],"comments":"Prints a `JsonDecodeError` as a somewhat readable error message.\n","title":"printJsonDecodeError","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[65,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[65,48]}},{"children":[],"comments":"A codec for objects that are encoded with specific properties.\n","title":"object","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JPropCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[163,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[163,50]}},{"children":[],"comments":"A codec for `Number` values in `Json`.\n","title":"number","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[90,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[90,26]}},{"children":[],"comments":"A codec for `null` values in `Json`.\n","title":"null","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JNull"]}]}},"sourceSpan":{"start":[82,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[82,25]}},{"children":[],"comments":"The \"identity codec\" for `Json` values.\n","title":"json","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}},"sourceSpan":{"start":[78,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[78,24]}},{"children":[],"comments":"A codec for `JObject` values in `Json`.\n","title":"jobject","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JObject"]}]}},"sourceSpan":{"start":[116,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[116,30]}},{"children":[],"comments":"A codec for a `JArray` values in `Json`. This does not decode the values\nof the array, for that use `array` for a general array decoder, or\n`indexedArray` with `index` to decode fixed length array encodings.\n","title":"jarray","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"JArray"]}]}},"sourceSpan":{"start":[112,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[112,28]}},{"children":[],"comments":"A codec for `Int` values in `Json`.\n","title":"int","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[94,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[94,20]}},{"children":[],"comments":"A codec for types that are encoded as an array with a specific layout.\n","title":"indexedArray","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JIndexedCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[138,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[138,59]}},{"children":[],"comments":"A codec for an item in an `indexedArray`.\n","title":"index","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JIndexedCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[145,49]}},{"children":[],"comments":null,"title":"encode","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[96,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[96,46]}},{"children":[],"comments":null,"title":"decode","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec"],"Codec"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"d"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[93,48]}},{"children":[],"comments":"A codec for `Char` values in `Json`.\n","title":"char","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[102,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[102,22]}},{"children":[],"comments":"A codec for `Boolean` values in `Json`.\n","title":"boolean","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[86,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[86,28]}},{"children":[],"comments":"A codec for `Array` values.\n","title":"array","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[120,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut.purs","end":[120,47]}},{"children":[],"comments":"`GCodec` is defined as a `Profunctor` so that `lmap` can be used to target\nspecific fields when defining a codec for a product type. This operator\nis a convenience for that:\n\n``` purescript\ntupleCodec =\n  Tuple\n    <$> fst ~ fstCodec\n    <*> snd ~ sndCodec\n```\n","title":"(~)","info":{"declType":"alias","alias":[["Data","Profunctor"],{"Right":{"Left":{"Ident":"lmap"}}}],"fixity":{"associativity":"infixl","precedence":5}},"sourceSpan":{"start":[89,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[89,19]}},{"children":[],"comments":null,"title":"(<~<)","info":{"declType":"alias","alias":[["Control","Monad","Codec"],{"Right":{"Left":{"Ident":"composeCodec"}}}],"fixity":{"associativity":"infixr","precedence":8}},"sourceSpan":{"start":[126,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\bower_components\\purescript-codec\\src\\Control\\Monad\\Codec.purs","end":[126,29]}}]},{"moduleName":{"package":null,"item":["Control","Monad","Codec","Argonaut","Common"]},"declarations":[{"children":[],"comments":"A codec for `Tuple` values.\n\nEncodes as a two-element array in JSON.\n","title":"tuple","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[46,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[46,65]}},{"children":[],"comments":"A codec for `Map` values.\n\nEncodes as an array of two-element key/value arrays in JSON.\n","title":"map","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[73,71]}},{"children":[],"comments":"A codec for `List` values.\n\nEncodes as an array in JSON.\n","title":"list","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[67,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[67,47]}},{"children":[],"comments":"A codec for `Either` values.\n","title":"either","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Common.purs","end":[53,67]}}]}],"name":"Control.Monad.Codec.Argonaut.Compat","comments":"Codecs that are compatible with `purescript-argonaut-codecs`.\n","declarations":[{"children":[],"comments":"A codec for `Maybe` values.\n\nNote: this codec cannot represent nested `Maybe` values in a lossless\nmanner.\n","title":"maybe","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[26,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Compat.purs","end":[26,47]}},{"children":[],"comments":"A codec for `StrMap` values.\n\nEncodes as a JSON object with the keys as properties.\n","title":"strMap","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[41,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Compat.purs","end":[41,52]}}]},{"reExports":[],"name":"Control.Monad.Codec.Argonaut.Sum","comments":null,"declarations":[{"children":[{"comments":null,"title":"Tag","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqTag","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut","Sum"],"Tag"]}]}},"sourceSpan":{"start":[23,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Sum.purs","end":[23,39]}},{"comments":null,"title":"ordTag","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut","Sum"],"Tag"]}]}},"sourceSpan":{"start":[24,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Sum.purs","end":[24,41]}},{"comments":null,"title":"newtypeTag","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut","Sum"],"Tag"]}]},{"tag":"TypeWildcard","contents":{"start":[25,42],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Sum.purs","end":[25,43]}}]}},"sourceSpan":{"start":[25,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Sum.purs","end":[25,43]}}],"comments":"A tag value for a case in a sum type.\n","title":"Tag","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[21,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Sum.purs","end":[21,25]}},{"children":[],"comments":"A helper for defining JSON codecs for sum types.\n\n- The first function attempts to decode a case, using the specified tag.\n- The second function encodes a case, returning an appropriate tag and\n  encoded value.\n","title":"taggedSum","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut","Sum"],"Tag"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonDecodeError"]}]},{"tag":"TypeVar","contents":"a"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut","Sum"],"Tag"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Codec","Argonaut"],"JsonCodec"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"D:\\Home\\GitHub\\purescript-codec-argonaut\\src\\Control\\Codec\\Argonaut\\Sum.purs","end":[36,16]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-maps":"3.3.1","purescript-control":"3.3.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-profunctor":"3.1.0","purescript-arrays":"4.1.0","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-argonaut-core":"3.1.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-codec":"1.0.0","purescript-foldable-traversable":"3.3.0","purescript-tailrec":"3.3.0","purescript-gen":"1.1.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.0.0","purescript-argonaut-codecs":"3.1.0","purescript-eff":"3.1.0","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.1.0","purescript-math":"2.0.0","purescript-enums":"3.2.0","purescript-random":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-quickcheck":"4.4.0","purescript-strings":"3.2.1","purescript-identity":"3.1.0","purescript-lists":"4.7.0","purescript-functions":"3.0.0"},"version":"1.0.0","github":["garyb","purescript-codec-argonaut"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Char.Gen":"purescript-strings","Data.Generic":"purescript-generics","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Argonaut.Parser":"purescript-argonaut-core","Data.Argonaut.Encode.Combinators":"purescript-argonaut-codecs","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.Codec":"purescript-codec","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Argonaut.Encode.Class":"purescript-argonaut-codecs","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Generic.Rep.Show":"purescript-generics-rep","Data.Profunctor.Clown":"purescript-profunctor","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Argonaut.Decode":"purescript-argonaut-codecs","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.Profunctor.Strong":"purescript-profunctor","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Argonaut.Decode.Combinators":"purescript-argonaut-codecs","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Data.Argonaut.Encode":"purescript-argonaut-codecs","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Argonaut.Core":"purescript-argonaut-core","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Argonaut.Decode.Class":"purescript-argonaut-codecs","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Argonaut.Gen":"purescript-argonaut-core","Data.Profunctor.Choice":"purescript-profunctor","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}