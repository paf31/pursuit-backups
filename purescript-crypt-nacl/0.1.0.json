{"uploader":"throughnothing","packageMeta":{"homepage":"https://github.com/throughnothing/purescript-crypt-nacl","repository":{"url":"git://github.com/throughnothing/purescript-crypt-nacl.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","package.json","bower.json"],"devDependencies":{"purescript-assert":"^2.0.0","purescript-psci-support":"^2.0.0"},"dependencies":{"purescript-maybe":"^2.0.1","purescript-prelude":"^2.1.0","purescript-unsafe-coerce":"^2.0.0","purescript-eff":"^2.0.0","purescript-nullable":"^2.0.0"},"name":"purescript-crypt-nacl","keywords":["purescript","nacl","crypto"],"license":["CC0-1.0"],"description":"A wrapper of tweetnacl-js for Purescript"},"modules":[{"reExports":[{"moduleName":["Crypt","NaCl","Box"],"declarations":[{"children":[],"comments":"Get a `BoxSecretKey` from the given `BoxKeyPair`\n","title":"getBoxSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Box.purs","end":[40,61]}},{"children":[],"comments":"Get a `BoxPublicKey` from the given `BoxKeyPair`\n","title":"getBoxPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]}},"sourceSpan":{"start":[37,1],"name":"src/Crypt/NaCl/Box.purs","end":[37,61]}},{"children":[],"comments":"Get a `BoxKeyPair` from the given `BoxSecretKey`\n","title":"getBoxKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]}},"sourceSpan":{"start":[34,1],"name":"src/Crypt/NaCl/Box.purs","end":[34,59]}},{"children":[],"comments":"Generate a `BoxKeyPair` for NaCl Box operations\n","title":"generateBoxKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Box.purs","end":[31,94]}},{"children":[],"comments":"Similar to `boxOpen`, but opens a box with a `BoxSharedKey` that has been\ngenerated with `boxBefore` instead of a `BoxPublicKey` and `BoxSecretKey`\n","title":"boxOpenAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Crypt/NaCl/Box.purs","end":[64,65]}},{"children":[],"comments":"Opening a box decrypts and authenticates the message.\nThis will return the `MessageRaw` plaintext if decryption and SignatureB64\nvalidation succeeds, and `Nothing` if authentication or decryption fails.\n","title":"boxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Crypt/NaCl/Box.purs","end":[59,76]}},{"children":[],"comments":"Create a `BoxSharedKey` from one user's `BoxPublicKey` and a separate\nuser's `BoxSecretKey`\n","title":"boxBefore","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Crypt/NaCl/Box.purs","end":[50,73]}},{"children":[],"comments":"Create a `Box` with a `BoxSharedKey`\n","title":"boxAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}},"sourceSpan":{"start":[46,1],"name":"src/Crypt/NaCl/Box.purs","end":[46,70]}},{"children":[],"comments":"Create a `Box`, which is an encrypted, authenticated message\n","title":"box","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}]}},"sourceSpan":{"start":[43,1],"name":"src/Crypt/NaCl/Box.purs","end":[43,81]}}]},{"moduleName":["Crypt","NaCl","Hash"],"declarations":[{"children":[],"comments":"Compute the SHA-512 hash of a `MessageRaw`\n","title":"hash","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}]}},"sourceSpan":{"start":[6,1],"name":"src/Crypt/NaCl/Hash.purs","end":[6,38]}}]},{"moduleName":["Crypt","NaCl","Random"],"declarations":[{"children":[],"comments":"Generate a cryptographically secure, random Nonce for NaCl operations\n","title":"generateNonce","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},null]}},"sourceSpan":{"start":[8,1],"name":"src/Crypt/NaCl/Random.purs","end":[8,78]}}]},{"moduleName":["Crypt","NaCl","SecretBox"],"declarations":[{"children":[],"comments":"Open a SecretBox, returning `Maybe MessageRaw`\nIf decryption and authentication succeed, `Just MessageRaw` will be\nreturned.  If decryption or authentication fail, `Nothing` will be returned\n","title":"secretBoxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[30,72]}},{"children":[],"comments":"Create a SecretBox, which is an encrypted and authenticated message\n","title":"secretBox","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]}]}]}},"sourceSpan":{"start":[23,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[23,77]}},{"children":[],"comments":"Generate a key for use with a `SecretBox`\n","title":"generateSecretBoxKey","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},null]}},"sourceSpan":{"start":[20,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[20,98]}}]},{"moduleName":["Crypt","NaCl","Sign"],"declarations":[{"children":[],"comments":"Verifies a `Signature`, given the `MessageRaw`\n","title":"verifyDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Sign.purs","end":[48,68]}},{"children":[],"comments":"Varifies the signature contained in a `SignedMessageRaw` against a given\n`SignPublicKey`.  Returns `Just MessageRaw` if the signature verifies,\nor `Nothing` otherwise.\n","title":"signOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Crypt/NaCl/Sign.purs","end":[53,66]}},{"children":[],"comments":"Like `sign`, but only returns the `Signature`, not the message contents\n","title":"signDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Sign.purs","end":[45,72]}},{"children":[],"comments":"Sign a `MessageRaw` using the given `SignSecretKey`.\nReturns the contents of the message, signed, as a `SignedMessageRaw`\n","title":"sign","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessageRaw"]}]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Sign.purs","end":[40,71]}},{"children":[],"comments":"Get the `SignSecretKey` for a given `SignKeyPair`\n","title":"getSignSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]}},"sourceSpan":{"start":[36,1],"name":"src/Crypt/NaCl/Sign.purs","end":[36,64]}},{"children":[],"comments":"Get the `SignPublicKey` for a given `SignKeyPair`\n","title":"getSignPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]}},"sourceSpan":{"start":[33,1],"name":"src/Crypt/NaCl/Sign.purs","end":[33,64]}},{"children":[],"comments":"Get the signing keypair for a given `SignSecretKey`\n","title":"getSignKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/Sign.purs","end":[30,62]}},{"children":[],"comments":"Generate a random key pair for signing messages\n","title":"generateSignKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},null]}},"sourceSpan":{"start":[27,1],"name":"src/Crypt/NaCl/Sign.purs","end":[27,96]}}]},{"moduleName":["Crypt","NaCl","Types"],"declarations":[{"children":[],"comments":"A Javascript Uint8Array\n","title":"Uint8Array","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[37,1],"name":"src/Crypt/NaCl/Types.purs","end":[37,36]}},{"children":[],"comments":"A NaCl SignedMessageRaw, which is represented as a Uint8Array in JS\n","title":"SignedMessageRaw","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[82,1],"name":"src/Crypt/NaCl/Types.purs","end":[82,41]}},{"children":[],"comments":"A NaCl Signature\n","title":"Signature","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[70,1],"name":"src/Crypt/NaCl/Types.purs","end":[70,35]}},{"children":[],"comments":"A NaCl SignSecretKey\n","title":"SignSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[79,1],"name":"src/Crypt/NaCl/Types.purs","end":[79,39]}},{"children":[],"comments":"A NaCl SignPublicKey\n","title":"SignPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[76,1],"name":"src/Crypt/NaCl/Types.purs","end":[76,39]}},{"children":[{"comments":null,"title":"SignKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `SignKeyPair` containing a `SignPublicKey` and a `SignSecretKey`\n","title":"SignKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[73,1],"name":"src/Crypt/NaCl/Types.purs","end":[73,93]}},{"children":[],"comments":"a NaCL SecretBoxKey\n","title":"SecretBoxKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[66,1],"name":"src/Crypt/NaCl/Types.purs","end":[66,38]}},{"children":[],"comments":"a NaCL SecretBox\n","title":"SecretBox","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[63,1],"name":"src/Crypt/NaCl/Types.purs","end":[63,35]}},{"children":[],"comments":"A NaCl Nonce\n","title":"Nonce","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Types.purs","end":[31,31]}},{"children":[{"comments":null,"title":"MessageRawStr","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Denotes NaCl types which can be converted to a human-readable String\n","title":"NaClStringAble","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"src/Crypt/NaCl/Types.purs","end":[20,47]}},{"children":[{"comments":null,"title":"HashSha512B64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NonceB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MessageRawB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxPublicKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxSecretKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxSharedKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SecretBoxB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SecretBoxKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignatureB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignPublicKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignSecretKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignedMessageRawB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessageRaw"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Denotes NaCl types which are convertable to Base64 strings\n","title":"NaClBase64Able","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[4,1],"name":"src/Crypt/NaCl/Types.purs","end":[17,41]}},{"children":[],"comments":"NACL_RANDOM Effect, which signifies that this computation can carry out\na cryptographic random number generation effect\n","title":"NACL_RANDOM","info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[24,1],"name":"src/Crypt/NaCl/Types.purs","end":[24,37]}},{"children":[],"comments":"A NaCl MessageRaw, which is represented as a Uint8Array in JS\n","title":"MessageRaw","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[34,1],"name":"src/Crypt/NaCl/Types.purs","end":[34,36]}},{"children":[],"comments":"An NaCl plaintext Message\n","title":"Message","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Types.purs","end":[40,22]}},{"children":[],"comments":"A NaCl SHA-512 Hash\n","title":"HashSha512","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[28,1],"name":"src/Crypt/NaCl/Types.purs","end":[28,36]}},{"children":[],"comments":"A NaCl BoxSharedKey\n","title":"BoxSharedKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[59,1],"name":"src/Crypt/NaCl/Types.purs","end":[59,38]}},{"children":[],"comments":"A NaCl BoxSecretKey\n","title":"BoxSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[56,1],"name":"src/Crypt/NaCl/Types.purs","end":[56,38]}},{"children":[],"comments":"A NaCl BoxPublicKey\n","title":"BoxPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[53,1],"name":"src/Crypt/NaCl/Types.purs","end":[53,38]}},{"children":[{"comments":null,"title":"BoxKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `BoxKeyPair` containing a `BoxPublicKey` and a `BoxSecretKey`\n","title":"BoxKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[50,1],"name":"src/Crypt/NaCl/Types.purs","end":[50,89]}},{"children":[],"comments":"A NaCl Box, which is an encrypted, authenticated message\n","title":"Box","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[47,1],"name":"src/Crypt/NaCl/Types.purs","end":[47,29]}},{"children":[],"comments":"A Base64 String\n","title":"Base64","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[43,1],"name":"src/Crypt/NaCl/Types.purs","end":[43,22]}}]},{"moduleName":["Crypt","NaCl","Util"],"declarations":[{"children":[],"comments":null,"title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NaClStringAble"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[14,1],"name":"src/Crypt/NaCl/Util.purs","end":[14,37]}},{"children":[],"comments":"Converts any `Message` string into a `MessageRaw`\n","title":"toMessageRaw","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}},"sourceSpan":{"start":[18,1],"name":"src/Crypt/NaCl/Util.purs","end":[18,38]}},{"children":[],"comments":"Converts any `Base64Able` NaCl type to a Base64 String\n","title":"toBase64","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NaClBase64Able"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Base64"]}]}},"sourceSpan":{"start":[23,1],"name":"src/Crypt/NaCl/Util.purs","end":[23,37]}}]}],"name":"Crypt.NaCl","comments":null,"declarations":[]},{"reExports":[],"name":"Crypt.NaCl.Box","comments":null,"declarations":[{"children":[],"comments":"Generate a `BoxKeyPair` for NaCl Box operations\n","title":"generateBoxKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Box.purs","end":[31,94]}},{"children":[],"comments":"Get a `BoxKeyPair` from the given `BoxSecretKey`\n","title":"getBoxKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]}},"sourceSpan":{"start":[34,1],"name":"src/Crypt/NaCl/Box.purs","end":[34,59]}},{"children":[],"comments":"Get a `BoxPublicKey` from the given `BoxKeyPair`\n","title":"getBoxPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]}},"sourceSpan":{"start":[37,1],"name":"src/Crypt/NaCl/Box.purs","end":[37,61]}},{"children":[],"comments":"Get a `BoxSecretKey` from the given `BoxKeyPair`\n","title":"getBoxSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Box.purs","end":[40,61]}},{"children":[],"comments":"Create a `Box`, which is an encrypted, authenticated message\n","title":"box","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}]}},"sourceSpan":{"start":[43,1],"name":"src/Crypt/NaCl/Box.purs","end":[43,81]}},{"children":[],"comments":"Create a `Box` with a `BoxSharedKey`\n","title":"boxAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}},"sourceSpan":{"start":[46,1],"name":"src/Crypt/NaCl/Box.purs","end":[46,70]}},{"children":[],"comments":"Create a `BoxSharedKey` from one user's `BoxPublicKey` and a separate\nuser's `BoxSecretKey`\n","title":"boxBefore","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Crypt/NaCl/Box.purs","end":[50,73]}},{"children":[],"comments":"Opening a box decrypts and authenticates the message.\nThis will return the `MessageRaw` plaintext if decryption and SignatureB64\nvalidation succeeds, and `Nothing` if authentication or decryption fails.\n","title":"boxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Crypt/NaCl/Box.purs","end":[59,76]}},{"children":[],"comments":"Similar to `boxOpen`, but opens a box with a `BoxSharedKey` that has been\ngenerated with `boxBefore` instead of a `BoxPublicKey` and `BoxSecretKey`\n","title":"boxOpenAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Crypt/NaCl/Box.purs","end":[64,65]}}]},{"reExports":[],"name":"Crypt.NaCl.Hash","comments":null,"declarations":[{"children":[],"comments":"Compute the SHA-512 hash of a `MessageRaw`\n","title":"hash","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}]}},"sourceSpan":{"start":[6,1],"name":"src/Crypt/NaCl/Hash.purs","end":[6,38]}}]},{"reExports":[],"name":"Crypt.NaCl.Random","comments":null,"declarations":[{"children":[],"comments":"Generate a cryptographically secure, random Nonce for NaCl operations\n","title":"generateNonce","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},null]}},"sourceSpan":{"start":[8,1],"name":"src/Crypt/NaCl/Random.purs","end":[8,78]}}]},{"reExports":[],"name":"Crypt.NaCl.SecretBox","comments":null,"declarations":[{"children":[],"comments":"Generate a key for use with a `SecretBox`\n","title":"generateSecretBoxKey","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},null]}},"sourceSpan":{"start":[20,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[20,98]}},{"children":[],"comments":"Create a SecretBox, which is an encrypted and authenticated message\n","title":"secretBox","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]}]}]}},"sourceSpan":{"start":[23,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[23,77]}},{"children":[],"comments":"Open a SecretBox, returning `Maybe MessageRaw`\nIf decryption and authentication succeed, `Just MessageRaw` will be\nreturned.  If decryption or authentication fail, `Nothing` will be returned\n","title":"secretBoxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[30,72]}}]},{"reExports":[],"name":"Crypt.NaCl.Sign","comments":null,"declarations":[{"children":[],"comments":"Generate a random key pair for signing messages\n","title":"generateSignKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},null]}},"sourceSpan":{"start":[27,1],"name":"src/Crypt/NaCl/Sign.purs","end":[27,96]}},{"children":[],"comments":"Get the signing keypair for a given `SignSecretKey`\n","title":"getSignKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/Sign.purs","end":[30,62]}},{"children":[],"comments":"Get the `SignPublicKey` for a given `SignKeyPair`\n","title":"getSignPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]}},"sourceSpan":{"start":[33,1],"name":"src/Crypt/NaCl/Sign.purs","end":[33,64]}},{"children":[],"comments":"Get the `SignSecretKey` for a given `SignKeyPair`\n","title":"getSignSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]}},"sourceSpan":{"start":[36,1],"name":"src/Crypt/NaCl/Sign.purs","end":[36,64]}},{"children":[],"comments":"Sign a `MessageRaw` using the given `SignSecretKey`.\nReturns the contents of the message, signed, as a `SignedMessageRaw`\n","title":"sign","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessageRaw"]}]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Sign.purs","end":[40,71]}},{"children":[],"comments":"Like `sign`, but only returns the `Signature`, not the message contents\n","title":"signDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Sign.purs","end":[45,72]}},{"children":[],"comments":"Verifies a `Signature`, given the `MessageRaw`\n","title":"verifyDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Sign.purs","end":[48,68]}},{"children":[],"comments":"Varifies the signature contained in a `SignedMessageRaw` against a given\n`SignPublicKey`.  Returns `Just MessageRaw` if the signature verifies,\nor `Nothing` otherwise.\n","title":"signOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessageRaw"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Crypt/NaCl/Sign.purs","end":[53,66]}}]},{"reExports":[],"name":"Crypt.NaCl.Types","comments":null,"declarations":[{"children":[{"comments":null,"title":"HashSha512B64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NonceB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MessageRawB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxPublicKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxSecretKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BoxSharedKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SecretBoxB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SecretBoxKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignatureB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignPublicKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignSecretKeyB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SignedMessageRawB64","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessageRaw"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Denotes NaCl types which are convertable to Base64 strings\n","title":"NaClBase64Able","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[4,1],"name":"src/Crypt/NaCl/Types.purs","end":[17,41]}},{"children":[{"comments":null,"title":"MessageRawStr","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Denotes NaCl types which can be converted to a human-readable String\n","title":"NaClStringAble","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"src/Crypt/NaCl/Types.purs","end":[20,47]}},{"children":[],"comments":"NACL_RANDOM Effect, which signifies that this computation can carry out\na cryptographic random number generation effect\n","title":"NACL_RANDOM","info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[24,1],"name":"src/Crypt/NaCl/Types.purs","end":[24,37]}},{"children":[],"comments":"A NaCl SHA-512 Hash\n","title":"HashSha512","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[28,1],"name":"src/Crypt/NaCl/Types.purs","end":[28,36]}},{"children":[],"comments":"A NaCl Nonce\n","title":"Nonce","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Types.purs","end":[31,31]}},{"children":[],"comments":"A NaCl MessageRaw, which is represented as a Uint8Array in JS\n","title":"MessageRaw","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[34,1],"name":"src/Crypt/NaCl/Types.purs","end":[34,36]}},{"children":[],"comments":"A Javascript Uint8Array\n","title":"Uint8Array","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[37,1],"name":"src/Crypt/NaCl/Types.purs","end":[37,36]}},{"children":[],"comments":"An NaCl plaintext Message\n","title":"Message","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Types.purs","end":[40,22]}},{"children":[],"comments":"A Base64 String\n","title":"Base64","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[43,1],"name":"src/Crypt/NaCl/Types.purs","end":[43,22]}},{"children":[],"comments":"A NaCl Box, which is an encrypted, authenticated message\n","title":"Box","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[47,1],"name":"src/Crypt/NaCl/Types.purs","end":[47,29]}},{"children":[{"comments":null,"title":"BoxKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `BoxKeyPair` containing a `BoxPublicKey` and a `BoxSecretKey`\n","title":"BoxKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[50,1],"name":"src/Crypt/NaCl/Types.purs","end":[50,89]}},{"children":[],"comments":"A NaCl BoxPublicKey\n","title":"BoxPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[53,1],"name":"src/Crypt/NaCl/Types.purs","end":[53,38]}},{"children":[],"comments":"A NaCl BoxSecretKey\n","title":"BoxSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[56,1],"name":"src/Crypt/NaCl/Types.purs","end":[56,38]}},{"children":[],"comments":"A NaCl BoxSharedKey\n","title":"BoxSharedKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[59,1],"name":"src/Crypt/NaCl/Types.purs","end":[59,38]}},{"children":[],"comments":"a NaCL SecretBox\n","title":"SecretBox","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[63,1],"name":"src/Crypt/NaCl/Types.purs","end":[63,35]}},{"children":[],"comments":"a NaCL SecretBoxKey\n","title":"SecretBoxKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[66,1],"name":"src/Crypt/NaCl/Types.purs","end":[66,38]}},{"children":[],"comments":"A NaCl Signature\n","title":"Signature","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[70,1],"name":"src/Crypt/NaCl/Types.purs","end":[70,35]}},{"children":[{"comments":null,"title":"SignKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `SignKeyPair` containing a `SignPublicKey` and a `SignSecretKey`\n","title":"SignKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[73,1],"name":"src/Crypt/NaCl/Types.purs","end":[73,93]}},{"children":[],"comments":"A NaCl SignPublicKey\n","title":"SignPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[76,1],"name":"src/Crypt/NaCl/Types.purs","end":[76,39]}},{"children":[],"comments":"A NaCl SignSecretKey\n","title":"SignSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[79,1],"name":"src/Crypt/NaCl/Types.purs","end":[79,39]}},{"children":[],"comments":"A NaCl SignedMessageRaw, which is represented as a Uint8Array in JS\n","title":"SignedMessageRaw","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[82,1],"name":"src/Crypt/NaCl/Types.purs","end":[82,41]}}]},{"reExports":[],"name":"Crypt.NaCl.Util","comments":null,"declarations":[{"children":[],"comments":null,"title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NaClStringAble"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[14,1],"name":"src/Crypt/NaCl/Util.purs","end":[14,37]}},{"children":[],"comments":"Converts any `Message` string into a `MessageRaw`\n","title":"toMessageRaw","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"MessageRaw"]}]}},"sourceSpan":{"start":[18,1],"name":"src/Crypt/NaCl/Util.purs","end":[18,38]}},{"children":[],"comments":"Converts any `Base64Able` NaCl type to a Base64 String\n","title":"toBase64","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NaClBase64Able"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Base64"]}]}},"sourceSpan":{"start":[23,1],"name":"src/Crypt/NaCl/Util.purs","end":[23,37]}}]}],"resolvedDependencies":{"purescript-newtype":"1.1.0","purescript-control":"2.0.0","purescript-console":"2.0.0","purescript-maybe":"2.0.1","purescript-invariant":"2.0.0","purescript-monoid":"2.0.0","purescript-prelude":"2.1.0","purescript-assert":"2.0.0","purescript-unsafe-coerce":"2.0.0","purescript-eff":"2.0.0","purescript-psci-support":"2.0.0","purescript-nullable":"2.0.0","purescript-functions":"2.0.0"},"bookmarks":[{"package":null,"item":["Crypt.NaCl.Util","toString"]},{"package":null,"item":["Crypt.NaCl.Util","toMessageRaw"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Util","toBase64"]},{"package":null,"item":["Crypt.NaCl.Types","NaClBase64Able"]},{"package":null,"item":["Crypt.NaCl.Types","NaClStringAble"]},{"package":null,"item":["Crypt.NaCl.Types","NACL_RANDOM"]},{"package":null,"item":["Crypt.NaCl.Types","HashSha512"]},{"package":null,"item":["Crypt.NaCl.Types","Nonce"]},{"package":null,"item":["Crypt.NaCl.Types","MessageRaw"]},{"package":null,"item":["Crypt.NaCl.Types","Uint8Array"]},{"package":null,"item":["Crypt.NaCl.Types","Message"]},{"package":null,"item":["Crypt.NaCl.Types","Base64"]},{"package":null,"item":["Crypt.NaCl.Types","Box"]},{"package":null,"item":["Crypt.NaCl.Types","BoxKeyPair"]},{"package":null,"item":["Crypt.NaCl.Types","BoxPublicKey"]},{"package":null,"item":["Crypt.NaCl.Types","BoxSecretKey"]},{"package":null,"item":["Crypt.NaCl.Types","BoxSharedKey"]},{"package":null,"item":["Crypt.NaCl.Types","SecretBox"]},{"package":null,"item":["Crypt.NaCl.Types","SecretBoxKey"]},{"package":null,"item":["Crypt.NaCl.Types","Signature"]},{"package":null,"item":["Crypt.NaCl.Types","SignKeyPair"]},{"package":null,"item":["Crypt.NaCl.Types","SignPublicKey"]},{"package":null,"item":["Crypt.NaCl.Types","SignSecretKey"]},{"package":null,"item":["Crypt.NaCl.Types","SignedMessageRaw"]},{"package":null,"item":["Crypt.NaCl.Sign","generateSignKeyPair"]},{"package":null,"item":["Crypt.NaCl.Sign","getSignKeyPair"]},{"package":null,"item":["Crypt.NaCl.Sign","getSignPublicKey"]},{"package":null,"item":["Crypt.NaCl.Sign","getSignSecretKey"]},{"package":null,"item":["Crypt.NaCl.Sign","sign"]},{"package":null,"item":["Crypt.NaCl.Sign","signDetached"]},{"package":null,"item":["Crypt.NaCl.Sign","verifyDetached"]},{"package":null,"item":["Crypt.NaCl.Sign","signOpen"]},{"package":null,"item":["Crypt.NaCl.SecretBox","generateSecretBoxKey"]},{"package":null,"item":["Crypt.NaCl.SecretBox","secretBox"]},{"package":null,"item":["Crypt.NaCl.SecretBox","secretBoxOpen"]},{"package":null,"item":["Crypt.NaCl.Random","generateNonce"]},{"package":null,"item":["Crypt.NaCl.Hash","hash"]},{"package":null,"item":["Crypt.NaCl.Box","generateBoxKeyPair"]},{"package":null,"item":["Crypt.NaCl.Box","getBoxKeyPair"]},{"package":null,"item":["Crypt.NaCl.Box","getBoxPublicKey"]},{"package":null,"item":["Crypt.NaCl.Box","getBoxSecretKey"]},{"package":null,"item":["Crypt.NaCl.Box","box"]},{"package":null,"item":["Crypt.NaCl.Box","boxAfter"]},{"package":null,"item":["Crypt.NaCl.Box","boxBefore"]},{"package":null,"item":["Crypt.NaCl.Box","boxOpen"]},{"package":null,"item":["Crypt.NaCl.Box","boxOpenAfter"]},{"package":"purescript-assert","item":["Test.Assert","ASSERT"]},{"package":"purescript-assert","item":["Test.Assert","assert"]},{"package":"purescript-assert","item":["Test.Assert","assert'"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows'"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","logShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warn"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warnShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","errorShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","info"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","infoShow"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.MonadZero","MonadZero"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","extendFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisli"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisliFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeCoerceEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafePerformEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","monadEffEff"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn0"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn1"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn2"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn3"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn4"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn5"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn6"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn7"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn8"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn9"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn10"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn0"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn1"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn2"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn3"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn4"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn5"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn6"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn7"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn8"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn9"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn10"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn0"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn1"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn2"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn3"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn4"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn5"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn6"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn7"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn8"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn9"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn10"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadZeroMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","newtypeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","newtypeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","newtypeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","boundedMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","newtypeEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","newtypeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","boundedDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","newtypeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","invariantDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semiringDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","newtypeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","invariantConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semiringConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","newtypeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","boundedAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-newtype","item":["Data.Newtype","Newtype"]},{"package":"purescript-newtype","item":["Data.Newtype","un"]},{"package":"purescript-newtype","item":["Data.Newtype","op"]},{"package":"purescript-newtype","item":["Data.Newtype","ala"]},{"package":"purescript-newtype","item":["Data.Newtype","alaF"]},{"package":"purescript-newtype","item":["Data.Newtype","over"]},{"package":"purescript-newtype","item":["Data.Newtype","overF"]},{"package":"purescript-newtype","item":["Data.Newtype","under"]},{"package":"purescript-newtype","item":["Data.Newtype","underF"]},{"package":"purescript-nullable","item":["Data.Nullable","Nullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toNullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toMaybe"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","Semigroupoid"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","semigroupoidFn"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(<<<)"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","composeFlipped"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(>>>)"]},{"package":"purescript-prelude","item":["Control.Monad","Monad"]},{"package":"purescript-prelude","item":["Control.Monad","monadFn"]},{"package":"purescript-prelude","item":["Control.Monad","liftM1"]},{"package":"purescript-prelude","item":["Control.Monad","ap"]},{"package":"purescript-prelude","item":["Control.Monad","whenM"]},{"package":"purescript-prelude","item":["Control.Monad","unlessM"]},{"package":"purescript-prelude","item":["Control.Category","Category"]},{"package":"purescript-prelude","item":["Control.Category","categoryFn"]},{"package":"purescript-prelude","item":["Control.Bind","Bind"]},{"package":"purescript-prelude","item":["Control.Bind","(>>=)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(=<<)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFn"]},{"package":"purescript-prelude","item":["Control.Bind","join"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisli"]},{"package":"purescript-prelude","item":["Control.Bind","(>=>)"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisliFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(<=<)"]},{"package":"purescript-prelude","item":["Control.Bind","ifM"]},{"package":"purescript-prelude","item":["Control.Apply","Apply"]},{"package":"purescript-prelude","item":["Control.Apply","(<*>)"]},{"package":"purescript-prelude","item":["Control.Apply","applyFn"]},{"package":"purescript-prelude","item":["Control.Apply","applyFirst"]},{"package":"purescript-prelude","item":["Control.Apply","(<*)"]},{"package":"purescript-prelude","item":["Control.Apply","applySecond"]},{"package":"purescript-prelude","item":["Control.Apply","(*>)"]},{"package":"purescript-prelude","item":["Control.Apply","lift2"]},{"package":"purescript-prelude","item":["Control.Apply","lift3"]},{"package":"purescript-prelude","item":["Control.Apply","lift4"]},{"package":"purescript-prelude","item":["Control.Apply","lift5"]},{"package":"purescript-prelude","item":["Control.Applicative","Applicative"]},{"package":"purescript-prelude","item":["Control.Applicative","applicativeFn"]},{"package":"purescript-prelude","item":["Control.Applicative","liftA1"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Data.Void","Void"]},{"package":"purescript-prelude","item":["Data.Void","absurd"]},{"package":"purescript-prelude","item":["Data.Unit","Unit"]},{"package":"purescript-prelude","item":["Data.Unit","unit"]},{"package":"purescript-prelude","item":["Data.Unit","showUnit"]},{"package":"purescript-prelude","item":["Data.Show","Show"]},{"package":"purescript-prelude","item":["Data.Semiring","Semiring"]},{"package":"purescript-prelude","item":["Data.Semiring","(+)"]},{"package":"purescript-prelude","item":["Data.Semiring","(*)"]},{"package":"purescript-prelude","item":["Data.Semigroup","Semigroup"]},{"package":"purescript-prelude","item":["Data.Semigroup","(<>)"]},{"package":"purescript-prelude","item":["Data.Semigroup","semigroupFn"]},{"package":"purescript-prelude","item":["Data.Ring","Ring"]},{"package":"purescript-prelude","item":["Data.Ring","(-)"]},{"package":"purescript-prelude","item":["Data.Ring","negate"]},{"package":"purescript-prelude","item":["Data.Ordering","Ordering"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ord","Ord"]},{"package":"purescript-prelude","item":["Data.Ord","lessThan"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThan"]},{"package":"purescript-prelude","item":["Data.Ord","lessThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","(<)"]},{"package":"purescript-prelude","item":["Data.Ord","(<=)"]},{"package":"purescript-prelude","item":["Data.Ord","(>)"]},{"package":"purescript-prelude","item":["Data.Ord","(>=)"]},{"package":"purescript-prelude","item":["Data.Ord","comparing"]},{"package":"purescript-prelude","item":["Data.Ord","min"]},{"package":"purescript-prelude","item":["Data.Ord","max"]},{"package":"purescript-prelude","item":["Data.Ord","clamp"]},{"package":"purescript-prelude","item":["Data.Ord","between"]},{"package":"purescript-prelude","item":["Data.Ord","abs"]},{"package":"purescript-prelude","item":["Data.Ord","signum"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","NaturalTransformation"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","type (~>)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","HeytingAlgebra"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(&&)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(||)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","heytingAlgebraFunction"]},{"package":"purescript-prelude","item":["Data.Functor","Functor"]},{"package":"purescript-prelude","item":["Data.Functor","(<$>)"]},{"package":"purescript-prelude","item":["Data.Functor","mapFlipped"]},{"package":"purescript-prelude","item":["Data.Functor","(<#>)"]},{"package":"purescript-prelude","item":["Data.Functor","functorFn"]},{"package":"purescript-prelude","item":["Data.Functor","void"]},{"package":"purescript-prelude","item":["Data.Functor","voidRight"]},{"package":"purescript-prelude","item":["Data.Functor","(<$)"]},{"package":"purescript-prelude","item":["Data.Functor","voidLeft"]},{"package":"purescript-prelude","item":["Data.Functor","($>)"]},{"package":"purescript-prelude","item":["Data.Functor","flap"]},{"package":"purescript-prelude","item":["Data.Functor","(<@>)"]},{"package":"purescript-prelude","item":["Data.Function","flip"]},{"package":"purescript-prelude","item":["Data.Function","const"]},{"package":"purescript-prelude","item":["Data.Function","apply"]},{"package":"purescript-prelude","item":["Data.Function","($)"]},{"package":"purescript-prelude","item":["Data.Function","applyFlipped"]},{"package":"purescript-prelude","item":["Data.Function","(#)"]},{"package":"purescript-prelude","item":["Data.Function","on"]},{"package":"purescript-prelude","item":["Data.Field","Field"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","EuclideanRing"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","(/)"]},{"package":"purescript-prelude","item":["Data.Eq","Eq"]},{"package":"purescript-prelude","item":["Data.Eq","(==)"]},{"package":"purescript-prelude","item":["Data.Eq","notEq"]},{"package":"purescript-prelude","item":["Data.Eq","(/=)"]},{"package":"purescript-prelude","item":["Data.CommutativeRing","CommutativeRing"]},{"package":"purescript-prelude","item":["Data.Bounded","Bounded"]},{"package":"purescript-prelude","item":["Data.BooleanAlgebra","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Data.Boolean","otherwise"]},{"package":"purescript-prelude","item":["Data.Ord.Unsafe","unsafeCompare"]},{"package":"purescript-psci-support","item":["PSCI.Support","Eval"]},{"package":"purescript-psci-support","item":["PSCI.Support","evalShow"]},{"package":"purescript-psci-support","item":["PSCI.Support","evalEff"]},{"package":"purescript-unsafe-coerce","item":["Unsafe.Coerce","unsafeCoerce"]}],"version":"0.1.0","github":["throughnothing","purescript-crypt-nacl"],"versionTag":"v0.1.0","compilerVersion":"0.9.1"}