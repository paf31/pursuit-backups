{"uploader":"throughnothing","packageMeta":{"homepage":"https://github.com/throughnothing/purescript-crypt-nacl","repository":{"url":"git://github.com/throughnothing/purescript-crypt-nacl.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","package.json","bower.json"],"devDependencies":{"purescript-assert":"^2.0.0","purescript-psci-support":"^2.0.0"},"dependencies":{"purescript-arraybuffer-types":"^0.2.0","purescript-either":"^2.0.0","purescript-maybe":"^2.0.1","purescript-prelude":"^2.1.0","purescript-unsafe-coerce":"^2.0.0","purescript-eff":"^2.0.0","purescript-encoding":"^0.0.3","purescript-nullable":"^2.0.0"},"name":"purescript-crypt-nacl","keywords":["purescript","nacl","crypto"],"license":["CC0-1.0"],"description":"A wrapper of tweetnacl-js for Purescript"},"modules":[{"reExports":[{"moduleName":["Crypt","NaCl","Box"],"declarations":[{"children":[],"comments":"Get a `BoxSecretKey` from the given `BoxKeyPair`\n","title":"getBoxSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Box.purs","end":[40,61]}},{"children":[],"comments":"Get a `BoxPublicKey` from the given `BoxKeyPair`\n","title":"getBoxPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]}},"sourceSpan":{"start":[37,1],"name":"src/Crypt/NaCl/Box.purs","end":[37,61]}},{"children":[],"comments":"Get a `BoxKeyPair` from the given `BoxSecretKey`\n","title":"getBoxKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]}},"sourceSpan":{"start":[34,1],"name":"src/Crypt/NaCl/Box.purs","end":[34,59]}},{"children":[],"comments":"Generate a `BoxKeyPair` for NaCl Box operations\n","title":"generateBoxKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Box.purs","end":[31,94]}},{"children":[],"comments":"Similar to `boxOpen`, but opens a box with a `BoxSharedKey` that has been\ngenerated with `boxBefore` instead of a `BoxPublicKey` and `BoxSecretKey`\n","title":"boxOpenAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Crypt/NaCl/Box.purs","end":[64,62]}},{"children":[],"comments":"Opening a box decrypts and authenticates the message.\nThis will return the `Message` plaintext if decryption and SignatureB64\nvalidation succeeds, and `Nothing` if authentication or decryption fails.\n","title":"boxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Crypt/NaCl/Box.purs","end":[59,73]}},{"children":[],"comments":"Create a `BoxSharedKey` from one user's `BoxPublicKey` and a separate\nuser's `BoxSecretKey`\n","title":"boxBefore","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Crypt/NaCl/Box.purs","end":[50,73]}},{"children":[],"comments":"Create a `Box` with a `BoxSharedKey`\n","title":"boxAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}},"sourceSpan":{"start":[46,1],"name":"src/Crypt/NaCl/Box.purs","end":[46,67]}},{"children":[],"comments":"Create a `Box`, which is an encrypted, authenticated message\n","title":"box","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}]}},"sourceSpan":{"start":[43,1],"name":"src/Crypt/NaCl/Box.purs","end":[43,78]}}]},{"moduleName":["Crypt","NaCl","Class"],"declarations":[{"children":[{"comments":null,"title":"toUint8Array","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]}},"sourceSpan":null},{"comments":null,"title":"hashSha512Uint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}]}},"sourceSpan":{"start":[42,1],"name":"src/Crypt/NaCl/Class.purs","end":[43,30]}},{"comments":null,"title":"nonceUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]}},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Class.purs","end":[46,30]}},{"comments":null,"title":"messageUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Class.purs","end":[49,30]}},{"comments":null,"title":"boxUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}},"sourceSpan":{"start":[51,1],"name":"src/Crypt/NaCl/Class.purs","end":[52,30]}},{"comments":null,"title":"boxPublicKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]}},"sourceSpan":{"start":[54,1],"name":"src/Crypt/NaCl/Class.purs","end":[55,30]}},{"comments":null,"title":"boxSecretKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]}},"sourceSpan":{"start":[57,1],"name":"src/Crypt/NaCl/Class.purs","end":[58,30]}},{"comments":null,"title":"boxSharedKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]}},"sourceSpan":{"start":[60,1],"name":"src/Crypt/NaCl/Class.purs","end":[61,30]}},{"comments":null,"title":"secretBoxUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]}},"sourceSpan":{"start":[63,1],"name":"src/Crypt/NaCl/Class.purs","end":[64,30]}},{"comments":null,"title":"secretBoxKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]}},"sourceSpan":{"start":[66,1],"name":"src/Crypt/NaCl/Class.purs","end":[67,30]}},{"comments":null,"title":"signPublicKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]}},"sourceSpan":{"start":[69,1],"name":"src/Crypt/NaCl/Class.purs","end":[70,30]}},{"comments":null,"title":"signSecretKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]}},"sourceSpan":{"start":[72,1],"name":"src/Crypt/NaCl/Class.purs","end":[73,30]}},{"comments":null,"title":"signedMessageUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessage"]}]}},"sourceSpan":{"start":[75,1],"name":"src/Crypt/NaCl/Class.purs","end":[76,18]}}],"comments":"Denotes a class of NaCl types which are convertable to `Uint8Array`s.\nInstances of this typeclass will `unsafeCoerce` their values to `Uint8Array`\nbecause we know that everything in/out of the underlying library are,\nin fact, `Uint8Array`s.\n","title":"Uint8ArrayAble","info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[17,1],"name":"src/Crypt/NaCl/Class.purs","end":[18,34]}},{"children":[{"comments":null,"title":"toString","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":null},{"comments":null,"title":"messageUtf8Decodable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Utf8Decodable"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}},"sourceSpan":{"start":[36,1],"name":"src/Crypt/NaCl/Class.purs","end":[37,64]}}],"comments":"This type class denotes types that can be decoded to a UTF8 String.\n\nThe `toString` function returns `Either Error String` to handle errors\nduring the decode.  We will generally `unsafeCoerce` because we know the\nunderlying type is already of Uint8Array from the wrapped library.\n","title":"Utf8Decodable","info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[25,1],"name":"src/Crypt/NaCl/Class.purs","end":[26,39]}},{"children":[{"comments":null,"title":"fromString","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"messageUtf8Encodable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Utf8Encodable"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}},"sourceSpan":{"start":[39,1],"name":"src/Crypt/NaCl/Class.purs","end":[40,39]}}],"comments":"This type class denotes types that can be encoded to a UTF8 String.\nThe `fromString` function returns the type of the type class instance.\nWe will generally `unsafeCoerce` from the `Uint8Array` type to the\nNaCl type we want because all underlying types are `Uint8Array`\n","title":"Utf8Encodable","info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[32,1],"name":"src/Crypt/NaCl/Class.purs","end":[33,28]}}]},{"moduleName":["Crypt","NaCl","Hash"],"declarations":[{"children":[],"comments":"Compute the SHA-512 hash of any `Uint8Array`\n","title":"hash","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}]}},"sourceSpan":{"start":[8,1],"name":"src/Crypt/NaCl/Hash.purs","end":[8,38]}}]},{"moduleName":["Crypt","NaCl","Random"],"declarations":[{"children":[],"comments":"Generate a cryptographically secure, random Nonce for NaCl operations\n","title":"generateNonce","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},null]}},"sourceSpan":{"start":[8,1],"name":"src/Crypt/NaCl/Random.purs","end":[8,78]}}]},{"moduleName":["Crypt","NaCl","SecretBox"],"declarations":[{"children":[],"comments":"Open a SecretBox, returning `Maybe Message`\nIf decryption and authentication succeed, `Just Message` will be\nreturned.  If decryption or authentication fail, `Nothing` will be returned\n","title":"secretBoxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[30,69]}},{"children":[],"comments":"Create a SecretBox, which is an encrypted and authenticated message\n","title":"secretBox","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]}]}]}},"sourceSpan":{"start":[23,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[23,74]}},{"children":[],"comments":"Generate a key for use with a `SecretBox`\n","title":"generateSecretBoxKey","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},null]}},"sourceSpan":{"start":[20,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[20,98]}}]},{"moduleName":["Crypt","NaCl","Sign"],"declarations":[{"children":[],"comments":"Verifies a `Signature`, given the `Message`\n","title":"verifyDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Sign.purs","end":[48,65]}},{"children":[],"comments":"Varifies the signature contained in a `SignedMessage` against a given\n`SignPublicKey`.  Returns `Just Message` if the signature verifies,\nor `Nothing` otherwise.\n","title":"signOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessage"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Crypt/NaCl/Sign.purs","end":[53,60]}},{"children":[],"comments":"Like `sign`, but only returns the `Signature`, not the message contents\n","title":"signDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Sign.purs","end":[45,69]}},{"children":[],"comments":"Sign a `Message` using the given `SignSecretKey`.\nReturns the contents of the message, signed, as a `SignedMessage`\n","title":"sign","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessage"]}]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Sign.purs","end":[40,65]}},{"children":[],"comments":"Get the `SignSecretKey` for a given `SignKeyPair`\n","title":"getSignSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]}},"sourceSpan":{"start":[36,1],"name":"src/Crypt/NaCl/Sign.purs","end":[36,64]}},{"children":[],"comments":"Get the `SignPublicKey` for a given `SignKeyPair`\n","title":"getSignPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]}},"sourceSpan":{"start":[33,1],"name":"src/Crypt/NaCl/Sign.purs","end":[33,64]}},{"children":[],"comments":"Get the signing keypair for a given `SignSecretKey`\n","title":"getSignKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/Sign.purs","end":[30,62]}},{"children":[],"comments":"Generate a random key pair for signing messages\n","title":"generateSignKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},null]}},"sourceSpan":{"start":[27,1],"name":"src/Crypt/NaCl/Sign.purs","end":[27,96]}}]},{"moduleName":["Crypt","NaCl","Types"],"declarations":[{"children":[],"comments":"A NaCl SignedMessage, which is represented as a Uint8Array in JS\n","title":"SignedMessage","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[54,1],"name":"src/Crypt/NaCl/Types.purs","end":[54,38]}},{"children":[],"comments":"A NaCl Signature\n","title":"Signature","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[42,1],"name":"src/Crypt/NaCl/Types.purs","end":[42,35]}},{"children":[],"comments":"A NaCl SignSecretKey\n","title":"SignSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[51,1],"name":"src/Crypt/NaCl/Types.purs","end":[51,39]}},{"children":[],"comments":"A NaCl SignPublicKey\n","title":"SignPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Types.purs","end":[48,39]}},{"children":[{"comments":null,"title":"SignKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `SignKeyPair` containing a `SignPublicKey` and a `SignSecretKey`\n","title":"SignKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Types.purs","end":[45,93]}},{"children":[],"comments":"a NaCL SecretBoxKey\n","title":"SecretBoxKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[38,1],"name":"src/Crypt/NaCl/Types.purs","end":[38,38]}},{"children":[],"comments":"a NaCL SecretBox\n","title":"SecretBox","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[35,1],"name":"src/Crypt/NaCl/Types.purs","end":[35,35]}},{"children":[],"comments":"A NaCl Nonce\n","title":"Nonce","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[12,1],"name":"src/Crypt/NaCl/Types.purs","end":[12,31]}},{"children":[],"comments":"NACL_RANDOM Effect, which signifies that this computation can carry out\na cryptographic random number generation effect\n","title":"NACL_RANDOM","info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[5,1],"name":"src/Crypt/NaCl/Types.purs","end":[5,37]}},{"children":[],"comments":"A NaCl Message, which is represented as a Uint8Array in JS\n","title":"Message","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"src/Crypt/NaCl/Types.purs","end":[15,33]}},{"children":[],"comments":"A NaCl SHA-512 Hash\n","title":"HashSha512","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[9,1],"name":"src/Crypt/NaCl/Types.purs","end":[9,36]}},{"children":[],"comments":"A NaCl BoxSharedKey\n","title":"BoxSharedKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Types.purs","end":[31,38]}},{"children":[],"comments":"A NaCl BoxSecretKey\n","title":"BoxSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[28,1],"name":"src/Crypt/NaCl/Types.purs","end":[28,38]}},{"children":[],"comments":"A NaCl BoxPublicKey\n","title":"BoxPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[25,1],"name":"src/Crypt/NaCl/Types.purs","end":[25,38]}},{"children":[{"comments":null,"title":"BoxKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `BoxKeyPair` containing a `BoxPublicKey` and a `BoxSecretKey`\n","title":"BoxKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[22,1],"name":"src/Crypt/NaCl/Types.purs","end":[22,89]}},{"children":[],"comments":"A NaCl Box, which is an encrypted, authenticated message\n","title":"Box","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"src/Crypt/NaCl/Types.purs","end":[19,29]}}]}],"name":"Crypt.NaCl","comments":null,"declarations":[]},{"reExports":[],"name":"Crypt.NaCl.Box","comments":null,"declarations":[{"children":[],"comments":"Generate a `BoxKeyPair` for NaCl Box operations\n","title":"generateBoxKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Box.purs","end":[31,94]}},{"children":[],"comments":"Get a `BoxKeyPair` from the given `BoxSecretKey`\n","title":"getBoxKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]}},"sourceSpan":{"start":[34,1],"name":"src/Crypt/NaCl/Box.purs","end":[34,59]}},{"children":[],"comments":"Get a `BoxPublicKey` from the given `BoxKeyPair`\n","title":"getBoxPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]}},"sourceSpan":{"start":[37,1],"name":"src/Crypt/NaCl/Box.purs","end":[37,61]}},{"children":[],"comments":"Get a `BoxSecretKey` from the given `BoxKeyPair`\n","title":"getBoxSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Box.purs","end":[40,61]}},{"children":[],"comments":"Create a `Box`, which is an encrypted, authenticated message\n","title":"box","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}]}},"sourceSpan":{"start":[43,1],"name":"src/Crypt/NaCl/Box.purs","end":[43,78]}},{"children":[],"comments":"Create a `Box` with a `BoxSharedKey`\n","title":"boxAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}]}]}},"sourceSpan":{"start":[46,1],"name":"src/Crypt/NaCl/Box.purs","end":[46,67]}},{"children":[],"comments":"Create a `BoxSharedKey` from one user's `BoxPublicKey` and a separate\nuser's `BoxSecretKey`\n","title":"boxBefore","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Crypt/NaCl/Box.purs","end":[50,73]}},{"children":[],"comments":"Opening a box decrypts and authenticates the message.\nThis will return the `Message` plaintext if decryption and SignatureB64\nvalidation succeeds, and `Nothing` if authentication or decryption fails.\n","title":"boxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Crypt/NaCl/Box.purs","end":[59,73]}},{"children":[],"comments":"Similar to `boxOpen`, but opens a box with a `BoxSharedKey` that has been\ngenerated with `boxBefore` instead of a `BoxPublicKey` and `BoxSecretKey`\n","title":"boxOpenAfter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Crypt/NaCl/Box.purs","end":[64,62]}}]},{"reExports":[],"name":"Crypt.NaCl.Class","comments":null,"declarations":[{"children":[{"comments":null,"title":"toUint8Array","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]}},"sourceSpan":null},{"comments":null,"title":"hashSha512Uint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}]}},"sourceSpan":{"start":[42,1],"name":"src/Crypt/NaCl/Class.purs","end":[43,30]}},{"comments":null,"title":"nonceUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]}},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Class.purs","end":[46,30]}},{"comments":null,"title":"messageUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Class.purs","end":[49,30]}},{"comments":null,"title":"boxUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Box"]}]}},"sourceSpan":{"start":[51,1],"name":"src/Crypt/NaCl/Class.purs","end":[52,30]}},{"comments":null,"title":"boxPublicKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]}]}},"sourceSpan":{"start":[54,1],"name":"src/Crypt/NaCl/Class.purs","end":[55,30]}},{"comments":null,"title":"boxSecretKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]}]}},"sourceSpan":{"start":[57,1],"name":"src/Crypt/NaCl/Class.purs","end":[58,30]}},{"comments":null,"title":"boxSharedKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSharedKey"]}]}},"sourceSpan":{"start":[60,1],"name":"src/Crypt/NaCl/Class.purs","end":[61,30]}},{"comments":null,"title":"secretBoxUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]}},"sourceSpan":{"start":[63,1],"name":"src/Crypt/NaCl/Class.purs","end":[64,30]}},{"comments":null,"title":"secretBoxKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]}},"sourceSpan":{"start":[66,1],"name":"src/Crypt/NaCl/Class.purs","end":[67,30]}},{"comments":null,"title":"signPublicKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]}},"sourceSpan":{"start":[69,1],"name":"src/Crypt/NaCl/Class.purs","end":[70,30]}},{"comments":null,"title":"signSecretKeyUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]}},"sourceSpan":{"start":[72,1],"name":"src/Crypt/NaCl/Class.purs","end":[73,30]}},{"comments":null,"title":"signedMessageUint8ArrayAble","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Uint8ArrayAble"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessage"]}]}},"sourceSpan":{"start":[75,1],"name":"src/Crypt/NaCl/Class.purs","end":[76,18]}}],"comments":"Denotes a class of NaCl types which are convertable to `Uint8Array`s.\nInstances of this typeclass will `unsafeCoerce` their values to `Uint8Array`\nbecause we know that everything in/out of the underlying library are,\nin fact, `Uint8Array`s.\n","title":"Uint8ArrayAble","info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[17,1],"name":"src/Crypt/NaCl/Class.purs","end":[18,34]}},{"children":[{"comments":null,"title":"toString","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":null},{"comments":null,"title":"messageUtf8Decodable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Utf8Decodable"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}},"sourceSpan":{"start":[36,1],"name":"src/Crypt/NaCl/Class.purs","end":[37,64]}}],"comments":"This type class denotes types that can be decoded to a UTF8 String.\n\nThe `toString` function returns `Either Error String` to handle errors\nduring the decode.  We will generally `unsafeCoerce` because we know the\nunderlying type is already of Uint8Array from the wrapped library.\n","title":"Utf8Decodable","info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[25,1],"name":"src/Crypt/NaCl/Class.purs","end":[26,39]}},{"children":[{"comments":null,"title":"fromString","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"messageUtf8Encodable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Class"],"Utf8Encodable"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}},"sourceSpan":{"start":[39,1],"name":"src/Crypt/NaCl/Class.purs","end":[40,39]}}],"comments":"This type class denotes types that can be encoded to a UTF8 String.\nThe `fromString` function returns the type of the type class instance.\nWe will generally `unsafeCoerce` from the `Uint8Array` type to the\nNaCl type we want because all underlying types are `Uint8Array`\n","title":"Utf8Encodable","info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[32,1],"name":"src/Crypt/NaCl/Class.purs","end":[33,28]}}]},{"reExports":[],"name":"Crypt.NaCl.Hash","comments":null,"declarations":[{"children":[],"comments":"Compute the SHA-512 hash of any `Uint8Array`\n","title":"hash","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"HashSha512"]}]}},"sourceSpan":{"start":[8,1],"name":"src/Crypt/NaCl/Hash.purs","end":[8,38]}}]},{"reExports":[],"name":"Crypt.NaCl.Random","comments":null,"declarations":[{"children":[],"comments":"Generate a cryptographically secure, random Nonce for NaCl operations\n","title":"generateNonce","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},null]}},"sourceSpan":{"start":[8,1],"name":"src/Crypt/NaCl/Random.purs","end":[8,78]}}]},{"reExports":[],"name":"Crypt.NaCl.SecretBox","comments":null,"declarations":[{"children":[],"comments":"Generate a key for use with a `SecretBox`\n","title":"generateSecretBoxKey","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},null]}},"sourceSpan":{"start":[20,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[20,98]}},{"children":[],"comments":"Create a SecretBox, which is an encrypted and authenticated message\n","title":"secretBox","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]}]}]}},"sourceSpan":{"start":[23,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[23,74]}},{"children":[],"comments":"Open a SecretBox, returning `Maybe Message`\nIf decryption and authentication succeed, `Just Message` will be\nreturned.  If decryption or authentication fail, `Nothing` will be returned\n","title":"secretBoxOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBox"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Nonce"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SecretBoxKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/SecretBox.purs","end":[30,69]}}]},{"reExports":[],"name":"Crypt.NaCl.Sign","comments":null,"declarations":[{"children":[],"comments":"Generate a random key pair for signing messages\n","title":"generateSignKeyPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["naclRandom",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"NACL_RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},null]}},"sourceSpan":{"start":[27,1],"name":"src/Crypt/NaCl/Sign.purs","end":[27,96]}},{"children":[],"comments":"Get the signing keypair for a given `SignSecretKey`\n","title":"getSignKeyPair","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]}},"sourceSpan":{"start":[30,1],"name":"src/Crypt/NaCl/Sign.purs","end":[30,62]}},{"children":[],"comments":"Get the `SignPublicKey` for a given `SignKeyPair`\n","title":"getSignPublicKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]}},"sourceSpan":{"start":[33,1],"name":"src/Crypt/NaCl/Sign.purs","end":[33,64]}},{"children":[],"comments":"Get the `SignSecretKey` for a given `SignKeyPair`\n","title":"getSignSecretKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignKeyPair"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]}},"sourceSpan":{"start":[36,1],"name":"src/Crypt/NaCl/Sign.purs","end":[36,64]}},{"children":[],"comments":"Sign a `Message` using the given `SignSecretKey`.\nReturns the contents of the message, signed, as a `SignedMessage`\n","title":"sign","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessage"]}]}]}},"sourceSpan":{"start":[40,1],"name":"src/Crypt/NaCl/Sign.purs","end":[40,65]}},{"children":[],"comments":"Like `sign`, but only returns the `Signature`, not the message contents\n","title":"signDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]}]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Sign.purs","end":[45,69]}},{"children":[],"comments":"Verifies a `Signature`, given the `Message`\n","title":"verifyDetached","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Signature"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Sign.purs","end":[48,65]}},{"children":[],"comments":"Varifies the signature contained in a `SignedMessage` against a given\n`SignPublicKey`.  Returns `Just Message` if the signature verifies,\nor `Nothing` otherwise.\n","title":"signOpen","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignedMessage"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"Message"]}]}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Crypt/NaCl/Sign.purs","end":[53,60]}}]},{"reExports":[],"name":"Crypt.NaCl.Types","comments":null,"declarations":[{"children":[],"comments":"NACL_RANDOM Effect, which signifies that this computation can carry out\na cryptographic random number generation effect\n","title":"NACL_RANDOM","info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[5,1],"name":"src/Crypt/NaCl/Types.purs","end":[5,37]}},{"children":[],"comments":"A NaCl SHA-512 Hash\n","title":"HashSha512","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[9,1],"name":"src/Crypt/NaCl/Types.purs","end":[9,36]}},{"children":[],"comments":"A NaCl Nonce\n","title":"Nonce","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[12,1],"name":"src/Crypt/NaCl/Types.purs","end":[12,31]}},{"children":[],"comments":"A NaCl Message, which is represented as a Uint8Array in JS\n","title":"Message","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"src/Crypt/NaCl/Types.purs","end":[15,33]}},{"children":[],"comments":"A NaCl Box, which is an encrypted, authenticated message\n","title":"Box","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"src/Crypt/NaCl/Types.purs","end":[19,29]}},{"children":[{"comments":null,"title":"BoxKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"BoxSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `BoxKeyPair` containing a `BoxPublicKey` and a `BoxSecretKey`\n","title":"BoxKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[22,1],"name":"src/Crypt/NaCl/Types.purs","end":[22,89]}},{"children":[],"comments":"A NaCl BoxPublicKey\n","title":"BoxPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[25,1],"name":"src/Crypt/NaCl/Types.purs","end":[25,38]}},{"children":[],"comments":"A NaCl BoxSecretKey\n","title":"BoxSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[28,1],"name":"src/Crypt/NaCl/Types.purs","end":[28,38]}},{"children":[],"comments":"A NaCl BoxSharedKey\n","title":"BoxSharedKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[31,1],"name":"src/Crypt/NaCl/Types.purs","end":[31,38]}},{"children":[],"comments":"a NaCL SecretBox\n","title":"SecretBox","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[35,1],"name":"src/Crypt/NaCl/Types.purs","end":[35,35]}},{"children":[],"comments":"a NaCL SecretBoxKey\n","title":"SecretBoxKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[38,1],"name":"src/Crypt/NaCl/Types.purs","end":[38,38]}},{"children":[],"comments":"A NaCl Signature\n","title":"Signature","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[42,1],"name":"src/Crypt/NaCl/Types.purs","end":[42,35]}},{"children":[{"comments":null,"title":"SignKeyPair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["publicKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignPublicKey"]},{"tag":"RCons","contents":["secretKey",{"tag":"TypeConstructor","contents":[["Crypt","NaCl","Types"],"SignSecretKey"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A NaCl `SignKeyPair` containing a `SignPublicKey` and a `SignSecretKey`\n","title":"SignKeyPair","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[45,1],"name":"src/Crypt/NaCl/Types.purs","end":[45,93]}},{"children":[],"comments":"A NaCl SignPublicKey\n","title":"SignPublicKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[48,1],"name":"src/Crypt/NaCl/Types.purs","end":[48,39]}},{"children":[],"comments":"A NaCl SignSecretKey\n","title":"SignSecretKey","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[51,1],"name":"src/Crypt/NaCl/Types.purs","end":[51,39]}},{"children":[],"comments":"A NaCl SignedMessage, which is represented as a Uint8Array in JS\n","title":"SignedMessage","info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[54,1],"name":"src/Crypt/NaCl/Types.purs","end":[54,38]}}]}],"resolvedDependencies":{"purescript-exceptions":"2.0.0","purescript-newtype":"1.1.0","purescript-control":"2.0.0","purescript-arraybuffer-types":"0.2.0","purescript-console":"2.0.0","purescript-either":"2.0.0","purescript-maybe":"2.0.1","purescript-invariant":"2.0.0","purescript-monoid":"2.0.0","purescript-foldable-traversable":"2.0.0","purescript-prelude":"2.1.0","purescript-bifunctors":"2.0.0","purescript-assert":"2.0.0","purescript-unsafe-coerce":"2.0.0","purescript-eff":"2.0.0","purescript-encoding":"0.0.3","purescript-psci-support":"2.0.0","purescript-nullable":"2.0.0","purescript-functions":"2.0.0"},"bookmarks":[{"package":null,"item":["Crypt.NaCl.Types","NACL_RANDOM"]},{"package":null,"item":["Crypt.NaCl.Types","HashSha512"]},{"package":null,"item":["Crypt.NaCl.Types","Nonce"]},{"package":null,"item":["Crypt.NaCl.Types","Message"]},{"package":null,"item":["Crypt.NaCl.Types","Box"]},{"package":null,"item":["Crypt.NaCl.Types","BoxKeyPair"]},{"package":null,"item":["Crypt.NaCl.Types","BoxPublicKey"]},{"package":null,"item":["Crypt.NaCl.Types","BoxSecretKey"]},{"package":null,"item":["Crypt.NaCl.Types","BoxSharedKey"]},{"package":null,"item":["Crypt.NaCl.Types","SecretBox"]},{"package":null,"item":["Crypt.NaCl.Types","SecretBoxKey"]},{"package":null,"item":["Crypt.NaCl.Types","Signature"]},{"package":null,"item":["Crypt.NaCl.Types","SignKeyPair"]},{"package":null,"item":["Crypt.NaCl.Types","SignPublicKey"]},{"package":null,"item":["Crypt.NaCl.Types","SignSecretKey"]},{"package":null,"item":["Crypt.NaCl.Types","SignedMessage"]},{"package":null,"item":["Crypt.NaCl.Sign","generateSignKeyPair"]},{"package":null,"item":["Crypt.NaCl.Sign","getSignKeyPair"]},{"package":null,"item":["Crypt.NaCl.Sign","getSignPublicKey"]},{"package":null,"item":["Crypt.NaCl.Sign","getSignSecretKey"]},{"package":null,"item":["Crypt.NaCl.Sign","sign"]},{"package":null,"item":["Crypt.NaCl.Sign","signDetached"]},{"package":null,"item":["Crypt.NaCl.Sign","verifyDetached"]},{"package":null,"item":["Crypt.NaCl.Sign","signOpen"]},{"package":null,"item":["Crypt.NaCl.SecretBox","generateSecretBoxKey"]},{"package":null,"item":["Crypt.NaCl.SecretBox","secretBox"]},{"package":null,"item":["Crypt.NaCl.SecretBox","secretBoxOpen"]},{"package":null,"item":["Crypt.NaCl.Random","generateNonce"]},{"package":null,"item":["Crypt.NaCl.Hash","hash"]},{"package":null,"item":["Crypt.NaCl.Class","Uint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","Utf8Decodable"]},{"package":null,"item":["Crypt.NaCl.Class","Utf8Encodable"]},{"package":null,"item":["Crypt.NaCl.Class","messageUtf8Decodable"]},{"package":null,"item":["Crypt.NaCl.Class","messageUtf8Encodable"]},{"package":null,"item":["Crypt.NaCl.Class","hashSha512Uint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","nonceUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","messageUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","boxUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","boxPublicKeyUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","boxSecretKeyUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","boxSharedKeyUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","secretBoxUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","secretBoxKeyUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","signPublicKeyUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","signSecretKeyUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Class","signedMessageUint8ArrayAble"]},{"package":null,"item":["Crypt.NaCl.Box","generateBoxKeyPair"]},{"package":null,"item":["Crypt.NaCl.Box","getBoxKeyPair"]},{"package":null,"item":["Crypt.NaCl.Box","getBoxPublicKey"]},{"package":null,"item":["Crypt.NaCl.Box","getBoxSecretKey"]},{"package":null,"item":["Crypt.NaCl.Box","box"]},{"package":null,"item":["Crypt.NaCl.Box","boxAfter"]},{"package":null,"item":["Crypt.NaCl.Box","boxBefore"]},{"package":null,"item":["Crypt.NaCl.Box","boxOpen"]},{"package":null,"item":["Crypt.NaCl.Box","boxOpenAfter"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","ArrayBuffer"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","DataView"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","ArrayView"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","ByteOffset"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","ByteLength"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Int8"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Int16"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Int32"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint8"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint16"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint32"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint8Clamped"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Float32"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Float64"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Int8Array"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Int16Array"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Int32Array"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint8Array"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint16Array"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint32Array"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Uint8ClampedArray"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Float32Array"]},{"package":"purescript-arraybuffer-types","item":["Data.ArrayBuffer.Types","Float64Array"]},{"package":"purescript-assert","item":["Test.Assert","ASSERT"]},{"package":"purescript-assert","item":["Test.Assert","assert"]},{"package":"purescript-assert","item":["Test.Assert","assert'"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows'"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","Biapply"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","biapplyFirst"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","biapplySecond"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift2"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift3"]},{"package":"purescript-bifunctors","item":["Control.Biapplicative","Biapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","Bifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","lmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","rmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","Wrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","newtypeWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","eqWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","ordWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","showWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","functorWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","bifunctorWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","biapplyWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","biapplicativeWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","Product"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","eqProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","ordProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","showProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","bifunctorProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","biapplyProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","biapplicativeProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","Joker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","newtypeJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","eqJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","ordJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","showJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","functorJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","bifunctorJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","biapplyJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","biapplicativeJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","Join"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","newtypeJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","eqJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","ordJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","showJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","bifunctorJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","biapplyJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","biapplicativeJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","Flip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","newtypeFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","eqFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","ordFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","showFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","functorFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","bifunctorFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","biapplyFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","biapplicativeFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","Clown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","newtypeClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","eqClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","ordClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","showClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","functorClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","bifunctorClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","biapplyClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","biapplicativeClown"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","logShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warn"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warnShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","errorShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","info"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","infoShow"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.MonadZero","MonadZero"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","extendFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisli"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisliFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeCoerceEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafePerformEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","monadEffEff"]},{"package":"purescript-either","item":["Data.Either","Either"]},{"package":"purescript-either","item":["Data.Either","functorEither"]},{"package":"purescript-either","item":["Data.Either","invariantEither"]},{"package":"purescript-either","item":["Data.Either","bifunctorEither"]},{"package":"purescript-either","item":["Data.Either","applyEither"]},{"package":"purescript-either","item":["Data.Either","applicativeEither"]},{"package":"purescript-either","item":["Data.Either","altEither"]},{"package":"purescript-either","item":["Data.Either","bindEither"]},{"package":"purescript-either","item":["Data.Either","monadEither"]},{"package":"purescript-either","item":["Data.Either","extendEither"]},{"package":"purescript-either","item":["Data.Either","showEither"]},{"package":"purescript-either","item":["Data.Either","eqEither"]},{"package":"purescript-either","item":["Data.Either","ordEither"]},{"package":"purescript-either","item":["Data.Either","boundedEither"]},{"package":"purescript-either","item":["Data.Either","foldableEither"]},{"package":"purescript-either","item":["Data.Either","bifoldableEither"]},{"package":"purescript-either","item":["Data.Either","traversableEither"]},{"package":"purescript-either","item":["Data.Either","bitraversableEither"]},{"package":"purescript-either","item":["Data.Either","semiringEither"]},{"package":"purescript-either","item":["Data.Either","semigroupEither"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","isLeft"]},{"package":"purescript-either","item":["Data.Either","isRight"]},{"package":"purescript-either","item":["Data.Either","fromLeft"]},{"package":"purescript-either","item":["Data.Either","fromRight"]},{"package":"purescript-either","item":["Data.Either.Nested","Either1"]},{"package":"purescript-either","item":["Data.Either.Nested","Either2"]},{"package":"purescript-either","item":["Data.Either.Nested","Either3"]},{"package":"purescript-either","item":["Data.Either.Nested","Either4"]},{"package":"purescript-either","item":["Data.Either.Nested","Either5"]},{"package":"purescript-either","item":["Data.Either.Nested","Either6"]},{"package":"purescript-either","item":["Data.Either.Nested","Either7"]},{"package":"purescript-either","item":["Data.Either.Nested","Either8"]},{"package":"purescript-either","item":["Data.Either.Nested","Either9"]},{"package":"purescript-either","item":["Data.Either.Nested","Either10"]},{"package":"purescript-either","item":["Data.Either.Nested","E2"]},{"package":"purescript-either","item":["Data.Either.Nested","E3"]},{"package":"purescript-either","item":["Data.Either.Nested","E4"]},{"package":"purescript-either","item":["Data.Either.Nested","E5"]},{"package":"purescript-either","item":["Data.Either.Nested","E6"]},{"package":"purescript-either","item":["Data.Either.Nested","E7"]},{"package":"purescript-either","item":["Data.Either.Nested","E8"]},{"package":"purescript-either","item":["Data.Either.Nested","E9"]},{"package":"purescript-either","item":["Data.Either.Nested","E10"]},{"package":"purescript-either","item":["Data.Either.Nested","E11"]},{"package":"purescript-either","item":["Data.Either.Nested","in1"]},{"package":"purescript-either","item":["Data.Either.Nested","in2"]},{"package":"purescript-either","item":["Data.Either.Nested","in3"]},{"package":"purescript-either","item":["Data.Either.Nested","in4"]},{"package":"purescript-either","item":["Data.Either.Nested","in5"]},{"package":"purescript-either","item":["Data.Either.Nested","in6"]},{"package":"purescript-either","item":["Data.Either.Nested","in7"]},{"package":"purescript-either","item":["Data.Either.Nested","in8"]},{"package":"purescript-either","item":["Data.Either.Nested","in9"]},{"package":"purescript-either","item":["Data.Either.Nested","in10"]},{"package":"purescript-either","item":["Data.Either.Nested","at1"]},{"package":"purescript-either","item":["Data.Either.Nested","at2"]},{"package":"purescript-either","item":["Data.Either.Nested","at3"]},{"package":"purescript-either","item":["Data.Either.Nested","at4"]},{"package":"purescript-either","item":["Data.Either.Nested","at5"]},{"package":"purescript-either","item":["Data.Either.Nested","at6"]},{"package":"purescript-either","item":["Data.Either.Nested","at7"]},{"package":"purescript-either","item":["Data.Either.Nested","at8"]},{"package":"purescript-either","item":["Data.Either.Nested","at9"]},{"package":"purescript-either","item":["Data.Either.Nested","at10"]},{"package":"purescript-either","item":["Data.Either.Nested","either1"]},{"package":"purescript-either","item":["Data.Either.Nested","either2"]},{"package":"purescript-either","item":["Data.Either.Nested","either3"]},{"package":"purescript-either","item":["Data.Either.Nested","either4"]},{"package":"purescript-either","item":["Data.Either.Nested","either5"]},{"package":"purescript-either","item":["Data.Either.Nested","either6"]},{"package":"purescript-either","item":["Data.Either.Nested","either7"]},{"package":"purescript-either","item":["Data.Either.Nested","either8"]},{"package":"purescript-either","item":["Data.Either.Nested","either9"]},{"package":"purescript-either","item":["Data.Either.Nested","either10"]},{"package":"purescript-encoding","item":["Data.TextEncoder","encode"]},{"package":"purescript-encoding","item":["Data.TextEncoder","encodeUtf8"]},{"package":"purescript-encoding","item":["Data.TextEncoder","Encoding"]},{"package":"purescript-encoding","item":["Data.TextDecoder","decode"]},{"package":"purescript-encoding","item":["Data.TextDecoder","decodeUtf8"]},{"package":"purescript-encoding","item":["Data.TextDecoder","Encoding"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","EXCEPTION"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","Error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","message"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","stack"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","throwException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","catchException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","throw"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","try"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrowException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrow"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Traversable"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","sequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","for"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Accum"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanl"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanr"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","Foldable"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","fold"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","traverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","for_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","oneOf"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","intercalate"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","and"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","or"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","all"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","any"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","product"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","elem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","notElem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","find"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","findMap"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","Bitraversable"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bitraverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bisequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bifor"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","Bifoldable"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifold"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bitraverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifor_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bisequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biany"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biall"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn0"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn1"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn2"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn3"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn4"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn5"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn6"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn7"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn8"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn9"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","Fn10"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn0"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn1"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn2"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn3"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn4"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn5"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn6"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn7"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn8"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn9"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","mkFn10"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn0"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn1"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn2"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn3"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn4"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn5"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn6"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn7"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn8"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn9"]},{"package":"purescript-functions","item":["Data.Function.Uncurried","runFn10"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadZeroMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","newtypeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","newtypeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","newtypeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","boundedMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","newtypeEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","newtypeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","boundedDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","newtypeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","invariantDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semiringDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","newtypeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","invariantConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semiringConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","newtypeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","boundedAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-newtype","item":["Data.Newtype","Newtype"]},{"package":"purescript-newtype","item":["Data.Newtype","un"]},{"package":"purescript-newtype","item":["Data.Newtype","op"]},{"package":"purescript-newtype","item":["Data.Newtype","ala"]},{"package":"purescript-newtype","item":["Data.Newtype","alaF"]},{"package":"purescript-newtype","item":["Data.Newtype","over"]},{"package":"purescript-newtype","item":["Data.Newtype","overF"]},{"package":"purescript-newtype","item":["Data.Newtype","under"]},{"package":"purescript-newtype","item":["Data.Newtype","underF"]},{"package":"purescript-nullable","item":["Data.Nullable","Nullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toNullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toMaybe"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","Semigroupoid"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","semigroupoidFn"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(<<<)"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","composeFlipped"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(>>>)"]},{"package":"purescript-prelude","item":["Control.Monad","Monad"]},{"package":"purescript-prelude","item":["Control.Monad","monadFn"]},{"package":"purescript-prelude","item":["Control.Monad","liftM1"]},{"package":"purescript-prelude","item":["Control.Monad","ap"]},{"package":"purescript-prelude","item":["Control.Monad","whenM"]},{"package":"purescript-prelude","item":["Control.Monad","unlessM"]},{"package":"purescript-prelude","item":["Control.Category","Category"]},{"package":"purescript-prelude","item":["Control.Category","categoryFn"]},{"package":"purescript-prelude","item":["Control.Bind","Bind"]},{"package":"purescript-prelude","item":["Control.Bind","(>>=)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(=<<)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFn"]},{"package":"purescript-prelude","item":["Control.Bind","join"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisli"]},{"package":"purescript-prelude","item":["Control.Bind","(>=>)"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisliFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(<=<)"]},{"package":"purescript-prelude","item":["Control.Bind","ifM"]},{"package":"purescript-prelude","item":["Control.Apply","Apply"]},{"package":"purescript-prelude","item":["Control.Apply","(<*>)"]},{"package":"purescript-prelude","item":["Control.Apply","applyFn"]},{"package":"purescript-prelude","item":["Control.Apply","applyFirst"]},{"package":"purescript-prelude","item":["Control.Apply","(<*)"]},{"package":"purescript-prelude","item":["Control.Apply","applySecond"]},{"package":"purescript-prelude","item":["Control.Apply","(*>)"]},{"package":"purescript-prelude","item":["Control.Apply","lift2"]},{"package":"purescript-prelude","item":["Control.Apply","lift3"]},{"package":"purescript-prelude","item":["Control.Apply","lift4"]},{"package":"purescript-prelude","item":["Control.Apply","lift5"]},{"package":"purescript-prelude","item":["Control.Applicative","Applicative"]},{"package":"purescript-prelude","item":["Control.Applicative","applicativeFn"]},{"package":"purescript-prelude","item":["Control.Applicative","liftA1"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Data.Void","Void"]},{"package":"purescript-prelude","item":["Data.Void","absurd"]},{"package":"purescript-prelude","item":["Data.Unit","Unit"]},{"package":"purescript-prelude","item":["Data.Unit","unit"]},{"package":"purescript-prelude","item":["Data.Unit","showUnit"]},{"package":"purescript-prelude","item":["Data.Show","Show"]},{"package":"purescript-prelude","item":["Data.Semiring","Semiring"]},{"package":"purescript-prelude","item":["Data.Semiring","(+)"]},{"package":"purescript-prelude","item":["Data.Semiring","(*)"]},{"package":"purescript-prelude","item":["Data.Semigroup","Semigroup"]},{"package":"purescript-prelude","item":["Data.Semigroup","(<>)"]},{"package":"purescript-prelude","item":["Data.Semigroup","semigroupFn"]},{"package":"purescript-prelude","item":["Data.Ring","Ring"]},{"package":"purescript-prelude","item":["Data.Ring","(-)"]},{"package":"purescript-prelude","item":["Data.Ring","negate"]},{"package":"purescript-prelude","item":["Data.Ordering","Ordering"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ord","Ord"]},{"package":"purescript-prelude","item":["Data.Ord","lessThan"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThan"]},{"package":"purescript-prelude","item":["Data.Ord","lessThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","(<)"]},{"package":"purescript-prelude","item":["Data.Ord","(<=)"]},{"package":"purescript-prelude","item":["Data.Ord","(>)"]},{"package":"purescript-prelude","item":["Data.Ord","(>=)"]},{"package":"purescript-prelude","item":["Data.Ord","comparing"]},{"package":"purescript-prelude","item":["Data.Ord","min"]},{"package":"purescript-prelude","item":["Data.Ord","max"]},{"package":"purescript-prelude","item":["Data.Ord","clamp"]},{"package":"purescript-prelude","item":["Data.Ord","between"]},{"package":"purescript-prelude","item":["Data.Ord","abs"]},{"package":"purescript-prelude","item":["Data.Ord","signum"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","NaturalTransformation"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","type (~>)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","HeytingAlgebra"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(&&)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(||)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","heytingAlgebraFunction"]},{"package":"purescript-prelude","item":["Data.Functor","Functor"]},{"package":"purescript-prelude","item":["Data.Functor","(<$>)"]},{"package":"purescript-prelude","item":["Data.Functor","mapFlipped"]},{"package":"purescript-prelude","item":["Data.Functor","(<#>)"]},{"package":"purescript-prelude","item":["Data.Functor","functorFn"]},{"package":"purescript-prelude","item":["Data.Functor","void"]},{"package":"purescript-prelude","item":["Data.Functor","voidRight"]},{"package":"purescript-prelude","item":["Data.Functor","(<$)"]},{"package":"purescript-prelude","item":["Data.Functor","voidLeft"]},{"package":"purescript-prelude","item":["Data.Functor","($>)"]},{"package":"purescript-prelude","item":["Data.Functor","flap"]},{"package":"purescript-prelude","item":["Data.Functor","(<@>)"]},{"package":"purescript-prelude","item":["Data.Function","flip"]},{"package":"purescript-prelude","item":["Data.Function","const"]},{"package":"purescript-prelude","item":["Data.Function","apply"]},{"package":"purescript-prelude","item":["Data.Function","($)"]},{"package":"purescript-prelude","item":["Data.Function","applyFlipped"]},{"package":"purescript-prelude","item":["Data.Function","(#)"]},{"package":"purescript-prelude","item":["Data.Function","on"]},{"package":"purescript-prelude","item":["Data.Field","Field"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","EuclideanRing"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","(/)"]},{"package":"purescript-prelude","item":["Data.Eq","Eq"]},{"package":"purescript-prelude","item":["Data.Eq","(==)"]},{"package":"purescript-prelude","item":["Data.Eq","notEq"]},{"package":"purescript-prelude","item":["Data.Eq","(/=)"]},{"package":"purescript-prelude","item":["Data.CommutativeRing","CommutativeRing"]},{"package":"purescript-prelude","item":["Data.Bounded","Bounded"]},{"package":"purescript-prelude","item":["Data.BooleanAlgebra","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Data.Boolean","otherwise"]},{"package":"purescript-prelude","item":["Data.Ord.Unsafe","unsafeCompare"]},{"package":"purescript-psci-support","item":["PSCI.Support","Eval"]},{"package":"purescript-psci-support","item":["PSCI.Support","evalShow"]},{"package":"purescript-psci-support","item":["PSCI.Support","evalEff"]},{"package":"purescript-unsafe-coerce","item":["Unsafe.Coerce","unsafeCoerce"]}],"version":"0.2.0","github":["throughnothing","purescript-crypt-nacl"],"versionTag":"v0.2.0","compilerVersion":"0.9.1"}