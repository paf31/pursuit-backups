{"uploader":"gabysbrain","packageMeta":{"repository":{"url":"git@github.com:gabysbrain/purescript-dataframe.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-benchotron":"^6.0.0","purescript-psci-support":"^3.0.0","purescript-quickcheck":"^4.0.0"},"dependencies":{"purescript-maps":"^3.0.0","purescript-console":"^3.0.0","purescript-prelude":"^3.0.0","purescript-transformers":"^3.2.0"},"name":"purescript-dataframe","license":["MIT"]},"tagTime":"2017-05-21T15:11:43+0000","modules":[{"reExports":[],"name":"Data.DataFrame","comments":null,"declarations":[{"children":[{"comments":null,"title":"DataFrame","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"r"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupDataFrame","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[28,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[29,62]}},{"comments":null,"title":"monoidDataFrame","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[31,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[32,24]}},{"comments":null,"title":"foldableDataFrame","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]}]}},"sourceSpan":{"start":[34,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[37,44]}},{"comments":null,"title":"functorDataFrame","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]}]}},"sourceSpan":{"start":[39,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[40,46]}},{"comments":null,"title":"applyDataFrame","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]}]}},"sourceSpan":{"start":[42,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[43,62]}}],"comments":"A DataFrame is an ordered set of rows of type `r`.\n","title":"DataFrame","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null]]},"sourceSpan":{"start":[16,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[16,42]}},{"children":[],"comments":"A query result gives both the original input and the query result.\nQueries can be chained together.\n\nThe idea of the query result is that maintaining the original input\nis helpful for things like histograms and graphs you want the original \nframe for computing ranges for axes and bin widths\n\nThe idea of the query result is to maintain the orignal data frame:\n","title":"Query","info":{"arguments":[["df",null],["r",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader"],"Reader"]},{"tag":"TypeVar","contents":"df"}]},{"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[26,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[26,30]}},{"children":[],"comments":"Create a data frame from an arbitrary Foldable. Each item of the Foldable\nwill become a \"row\" of the DataFrame.\n","title":"init","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[47,53]}},{"children":[],"comments":"Evaluate the query given the starting input. Returns the result \nof the Query.\n","title":"runQuery","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[52,44]}},{"children":[],"comments":"The number of \"rows\" in the DataFrame.\n","title":"rows","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[56,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[56,37]}},{"children":[],"comments":"Get back the original input so that it can be chained into \nannother query.\n","title":"reset","info":{"declType":"value","type":{"tag":"ForAll","contents":["df",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"TypeVar","contents":"df"}]},{"tag":"TypeVar","contents":"df"}]},null]}},"sourceSpan":{"start":[61,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[61,32]}},{"children":[],"comments":"Create a query that will filter a dataframe so that it only contains\nrows where the filter function returns true.\n","title":"filter","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]}]},null]}},"sourceSpan":{"start":[66,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[66,72]}},{"children":[],"comments":"Group the rows of the DataFrame based on the grouping function.\n","title":"group","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"g"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["group",{"tag":"TypeVar","contents":"g"},{"tag":"RCons","contents":["data",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"REmpty"}]}]}]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[74,75]}},{"children":[],"comments":"Count the size of each group of rows in the dataframe.\n","title":"count","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"g"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["group",{"tag":"TypeVar","contents":"g"},{"tag":"RCons","contents":["count",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[82,68]}},{"children":[],"comments":"Reduce each row to another value and then get an array of that\nvalue. Useful for feeding to functions like maximum, average, etc.\n","title":"summarize","info":{"declType":"value","type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"x"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"x"}]}}]}]},null]},null]}},"sourceSpan":{"start":[89,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[89,67]}},{"children":[],"comments":"Change each row of the DataFrame using the conversion function.\n\nCan be used, e.g., to do column filtering\n","title":"mutate","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[97,68]}},{"children":[],"comments":"Sort the rows of the dataframe by the given sorting function.\n","title":"sort","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]}]},null]}},"sourceSpan":{"start":[103,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[103,76]}},{"children":[],"comments":"Only keep all but the first n rows of the DataFrame.\n","title":"trim","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"r"}]}}]}]},null]}},"sourceSpan":{"start":[109,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[109,59]}},{"children":[],"comments":"Run 2 queries and return the first input as the context.\n","title":"chain","info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"Query"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"t"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[115,59]}},{"children":[],"comments":null,"title":"_groups","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"g"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map"],"Map"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[123,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[123,73]}},{"children":[],"comments":null,"title":"_toGroupInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["group",{"tag":"TypeVar","contents":"g"},{"tag":"RCons","contents":["data",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DataFrame"],"DataFrame"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[132,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[134,56]}},{"children":[],"comments":null,"title":"_toCountInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["group",{"tag":"TypeVar","contents":"g"},{"tag":"RCons","contents":["count",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[137,1],"name":"/Users/tom/Projects/purescript-dataframe/src/DataFrame.purs","end":[139,49]}}]}],"resolvedDependencies":{"purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-maps":"3.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-node-streams":"3.1.0","purescript-profunctor":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-exists":"3.0.0","purescript-node-path":"2.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-now":"3.0.0","purescript-node-process":"4.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.1.0","purescript-gen":"1.1.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-benchotron":"6.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-node-buffer":"3.0.0","purescript-node-fs":"4.0.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-js-date":"4.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-options":"3.0.0","purescript-psci-support":"3.0.0","purescript-random":"3.0.0","purescript-posix-types":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-quickcheck":"4.0.0","purescript-strings":"3.1.0","purescript-identity":"3.1.0","purescript-foreign":"4.0.0","purescript-lists":"4.1.1","purescript-nullable":"3.0.0","purescript-datetime":"3.0.0","purescript-node-readline":"3.0.0","purescript-functions":"3.0.0"},"version":"0.1.4","github":["gabysbrain","purescript-dataframe"],"versionTag":"v0.1.4","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Data.Char.Gen":"purescript-strings","Data.Generic":"purescript-generics","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Node.ReadLine":"purescript-node-readline","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Benchotron.BenchmarkJS":"purescript-benchotron","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Foreign.Index":"purescript-foreign","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Node.FS":"purescript-node-fs","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Monad.Eff.Now":"purescript-now","Benchotron.Utils":"purescript-benchotron","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Node.FS.Async":"purescript-node-fs","Data.StrMap.Unsafe":"purescript-maps","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Benchotron.StdIO":"purescript-benchotron","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Benchotron.UI.Console":"purescript-benchotron","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Benchotron.Core":"purescript-benchotron","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Node.Buffer.Unsafe":"purescript-node-buffer","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","Node.Process":"purescript-node-process","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Posix":"purescript-posix-types","Control.Monad.Eff.Class":"purescript-eff","Data.Posix.Signal":"purescript-posix-types","Test.QuickCheck":"purescript-quickcheck","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Data.Options":"purescript-options","Node.Globals":"purescript-node-process","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Node.Platform":"purescript-node-process","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Profunctor.Choice":"purescript-profunctor","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}