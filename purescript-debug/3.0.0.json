{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/garyb/purescript-debug","repository":{"url":"git://github.com/garyb/purescript-debug.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","bower.json","package.json"],"devDependencies":{"purescript-eff":"^3.1.0"},"dependencies":{"purescript-prelude":"^3.0.0"},"name":"purescript-debug","license":["MIT"],"description":"Console based debugging functions"},"tagTime":"2017-04-07T00:31:42+0000","modules":[{"reExports":[],"name":"Debug.Trace","comments":null,"declarations":[{"children":[{"comments":null,"title":"warn","info":{"declType":"instance","dependencies":[{"constraintClass":[["Prim"],"Warn"],"constraintArgs":[{"tag":"TypeLevelString","contents":"Debug.Trace usage"}],"constraintData":null}],"type":{"tag":"TypeConstructor","contents":[["Debug","Trace"],"DebugWarning"]}},"sourceSpan":{"start":[8,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[8,58]}}],"comments":"Nullary class used to raise a custom warning for the debug functions.\n","title":"DebugWarning","info":{"fundeps":[],"arguments":[],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[6,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[6,19]}},{"children":[],"comments":"Log a message to the console for debugging purposes and then return a\nvalue. The return value is thunked so it is not evaluated until after the\nmessage has been printed, to preserve a predictable console output.\n\nFor example:\n``` purescript\ndoSomething = trace \"Hello\" \\_ -> ... some value or computation ...\n```\n","title":"trace","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[18,62]}},{"children":[],"comments":"Log a `Show`able value to the console for debugging purposes and then\nreturn a value.\n","title":"traceShow","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[23,73]}},{"children":[],"comments":"Log any PureScript value to the console for debugging purposes and then\nreturn a value. This will log the value's underlying representation for\nlow-level debugging.\n","title":"traceAny","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[29,77]}},{"children":[],"comments":"Log any value and return it\n","title":"spy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[32,40]}},{"children":[],"comments":"Log any PureScript value to the console and return the unit value of the\nApplicative `a`.\n","title":"traceAnyA","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[37,70]}},{"children":[],"comments":"Log a message to the console for debugging purposes and then return the\nunit value of the Applicative `a`.\n\nFor example:\n``` purescript\ndoSomething = do\n  traceA \"Hello\"\n  ... some value or computation ...\n```\n","title":"traceA","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[49,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[49,70]}},{"children":[],"comments":"Log a `Show`able value to the console for debugging purposes and then\nreturn the unit value of the Applicative `a`.\n","title":"traceShowA","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[54,81]}},{"children":[],"comments":"Log any PureScript value to the console and return it in `Monad`\nuseful when one has monadic chains\n```purescript\nmbArray :: Maybe (Array Int)\nfoo :: Int\nfoo = fromMaybe zero\n  $ mbArray\n  >>= traceAnyM\n  >>= head\n  >>= traceAnyM\n```\n","title":"traceAnyM","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[68,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[68,61]}},{"children":[],"comments":"Same as `traceAnyM` but only for `Show`able values\n","title":"traceShowM","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"/home/travis/build/garyb/purescript-debug/src/Debug/Trace.purs","end":[72,72]}}]}],"resolvedDependencies":{"purescript-prelude":"3.0.0","purescript-eff":"3.1.0"},"version":"3.0.0","github":["garyb","purescript-debug"],"versionTag":"v3.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Ord":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Bind":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Prelude":"purescript-prelude","Data.Eq":"purescript-prelude","Data.Void":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Monad.Eff.Class":"purescript-eff","Control.Semigroupoid":"purescript-prelude","Control.Applicative":"purescript-prelude"},"compilerVersion":"0.11.4"}