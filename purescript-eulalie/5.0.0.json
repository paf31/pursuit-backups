{"uploader":"bodil","packageMeta":{"repository":{"url":"git://github.com/bodil/purescript-eulalie.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-test-unit":"~11.0.0","purescript-quickcheck":"~4.0.0"},"dependencies":{"purescript-control":"~3.0.0","purescript-maybe":"~3.0.0","purescript-monoid":"~3.0.0","purescript-foldable-traversable":"~3.0.0","purescript-integers":"~3.0.0","purescript-globals":"~3.0.0","purescript-tuples":"~4.0.0","purescript-strings":"~3.0.0","purescript-sets":"~3.0.0"},"name":"purescript-eulalie","license":["LGPL-3.0+"],"description":"Fast string parser combinators"},"tagTime":"2017-04-09T17:55:58+0000","modules":[{"reExports":[],"name":"Data.Eulalie.Char","comments":null,"declarations":[{"children":[],"comments":"Takes a `Parser Char Char` and matches it zero or more times, returning\na `String` of what was matched.\n","title":"many","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[13,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[13,47]}},{"children":[],"comments":"Takes a `Parser Char Char` and matches it one or more times, returning\na `String` of what was matched.\n","title":"many1","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[18,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[18,48]}},{"children":[],"comments":"The `char` parser constructor returns a parser which matches only the\nspecified single character.\n","title":"char","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[26,33]}},{"children":[],"comments":"The `notChar` parser constructor makes a parser which will match any\nsingle character other than the one provided.\n","title":"notChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[31,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[31,36]}},{"children":[],"comments":"Matches any one character from the provided string.\n","title":"oneOf","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[36,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[36,36]}},{"children":[],"comments":"Matches a single digit.\n","title":"digit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[41,26]}},{"children":[],"comments":"Matches a single whitespace character.\n","title":"space","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[45,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[45,26]}},{"children":[],"comments":"Matches a single letter, digit or underscore character.\n","title":"alphanum","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[49,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[49,29]}},{"children":[],"comments":"Matches a single ASCII letter.\n","title":"letter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[53,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[53,27]}},{"children":[],"comments":"Matches a single upper case ASCII letter.\n","title":"upper","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[57,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[57,26]}},{"children":[],"comments":"Matches a single lower case ASCII letter.\n","title":"lower","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[61,26]}},{"children":[],"comments":"Matches a single character which isn't a digit.\n","title":"notDigit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[65,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[65,29]}},{"children":[],"comments":"Matches a single character which isn't whitespace.\n","title":"notSpace","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[69,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[69,29]}},{"children":[],"comments":"Matches a single character which isn't a letter, digit or underscore.\n","title":"notAlphanum","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[73,32]}},{"children":[],"comments":"Matches a single character which isn't an ASCII letter.\n","title":"notLetter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[77,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[77,30]}},{"children":[],"comments":"Matches a single character which isn't an upper case ASCII letter.\n","title":"notUpper","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[81,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[81,29]}},{"children":[],"comments":"Matches a single character which isn't a lower case ASCII letter.\n","title":"notLower","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char.purs","end":[85,29]}}]},{"reExports":[],"name":"Data.Eulalie.Char.Predicates","comments":null,"declarations":[{"children":[],"comments":null,"title":"notP","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},null]}},"sourceSpan":{"start":[11,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[11,51]}},{"children":[],"comments":null,"title":"digitRe","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}},"sourceSpan":{"start":[14,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[14,20]}},{"children":[],"comments":null,"title":"spaceRe","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}},"sourceSpan":{"start":[17,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[17,20]}},{"children":[],"comments":null,"title":"alphanumRe","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}},"sourceSpan":{"start":[20,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[20,23]}},{"children":[],"comments":null,"title":"letterRe","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}},"sourceSpan":{"start":[23,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[23,21]}},{"children":[],"comments":null,"title":"isDigit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[26,27]}},{"children":[],"comments":null,"title":"isSpace","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[29,27]}},{"children":[],"comments":null,"title":"isAlphanum","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[32,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[32,30]}},{"children":[],"comments":null,"title":"isLetter","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[35,28]}},{"children":[],"comments":null,"title":"isUpper","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[38,27]}},{"children":[],"comments":null,"title":"isLower","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[41,27]}},{"children":[],"comments":null,"title":"unless","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}},"sourceSpan":{"start":[44,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[44,70]}},{"children":[],"comments":null,"title":"and","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}},"sourceSpan":{"start":[47,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[47,67]}},{"children":[],"comments":null,"title":"or","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}},"sourceSpan":{"start":[50,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Char/Predicates.purs","end":[50,66]}}]},{"reExports":[],"name":"Data.Eulalie.Error","comments":null,"declarations":[{"children":[],"comments":null,"title":"ParseError","info":{"arguments":[["i",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["input",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"RCons","contents":["expected",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["fatal",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[11,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Error.purs","end":[15,4]}},{"children":[],"comments":null,"title":"withExpected","info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}]}]},null]}},"sourceSpan":{"start":[17,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Error.purs","end":[17,69]}},{"children":[],"comments":null,"title":"escalate","info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}]},null]}},"sourceSpan":{"start":[20,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Error.purs","end":[20,50]}},{"children":[],"comments":null,"title":"extend","info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}]}]},null]}},"sourceSpan":{"start":[23,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Error.purs","end":[23,65]}},{"children":[],"comments":null,"title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Error.purs","end":[30,35]}}]},{"reExports":[],"name":"Data.Eulalie.Parser","comments":null,"declarations":[{"children":[{"comments":null,"title":"Parser","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Result"],"ParseResult"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[182,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[183,15]}},{"comments":null,"title":"applyParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[185,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[186,13]}},{"comments":null,"title":"applicativeParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[188,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[189,17]}},{"comments":null,"title":"bindParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[191,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[192,13]}},{"comments":null,"title":"monadParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[194,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[194,41]}},{"comments":null,"title":"altParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[196,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[197,15]}},{"comments":null,"title":"plusParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[199,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[200,15]}},{"comments":null,"title":"alternativeParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[202,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[202,53]}},{"comments":null,"title":"monadZeroParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadZero"],"MonadZero"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[204,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[204,49]}},{"comments":null,"title":"monadPlusParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]}}]}},"sourceSpan":{"start":[206,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[206,49]}},{"comments":null,"title":"semigroupParser","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}}]}},"sourceSpan":{"start":[208,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[209,34]}},{"comments":null,"title":"monoidParser","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}}]}},"sourceSpan":{"start":[211,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[212,23]}},{"comments":null,"title":"lazyParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}}]}},"sourceSpan":{"start":[214,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[215,40]}}],"comments":null,"title":"Parser","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["i",null],["o",null]]},"sourceSpan":{"start":[21,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[21,58]}},{"children":[],"comments":"Run a parse operation on a stream.\n","title":"parse","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Result"],"ParseResult"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[24,63]}},{"children":[],"comments":"The `succeed` parser constructor creates a parser which will simply\nreturn the value provided as its argument, without consuming any input.\n\nThis is equivalent to the monadic `pure`.\n","title":"succeed","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[31,39]}},{"children":[],"comments":"The `fail` parser will just fail immediately without consuming any input.\n","title":"fail","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[35,31]}},{"children":[],"comments":"The `failAt` parser will fail immediately without consuming any input,\nbut will report the failure at the provided input position.\n","title":"failAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[40,45]}},{"children":[],"comments":"A parser combinator which returns the provided parser unchanged, except\nthat if it fails, the provided error message will be returned in the\n`ParseError`.\n","title":"expected","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]}},"sourceSpan":{"start":[46,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[46,59]}},{"children":[],"comments":"The `item` parser consumes a single value, regardless of what it is,\nand returns it as its result.\n","title":"item","info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"i"}]},null]}},"sourceSpan":{"start":[53,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[53,29]}},{"children":[],"comments":"The `cut` parser combinator takes a parser and produces a new parser for\nwhich all errors are fatal, causing `either` to stop trying further\nparsers and return immediately with a fatal error.\n","title":"cut","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[62,44]}},{"children":[],"comments":"Takes two parsers `p1` and `p2`, returning a parser which will match\n`p1` first, discard the result, then either match `p2` or produce a fatal\nerror.\n","title":"cutWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[70,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[70,64]}},{"children":[],"comments":"The `seq` combinator takes a parser, and a function which will receive\nthe result of that parser if it succeeds, and which should return another\nparser, which will be run immediately after the initial parser. In this\nway, you can join parsers together in a sequence, producing more complex\nparsers.\n\nThis is equivalent to the monadic `bind` operation.\n","title":"seq","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[80,67]}},{"children":[],"comments":"The `either` combinator takes two parsers, runs the first on the input\nstream, and if that fails, it will backtrack and attempt the second\nparser on the same input. Basically, try parser 1, then try parser 2.\n\nIf the first parser fails with an error flagged as fatal (see `cut`),\nthe second parser will not be attempted.\n\nThis is equivalent to the `alt` operation of `MonadPlus`/`Alt`.\n","title":"either","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[97,61]}},{"children":[],"comments":"Converts a parser into one which will return the point in the stream where\nit started parsing in addition to its parsed value.\n\nUseful if you want to keep track of where in the input stream a parsed\ntoken came from.\n","title":"withStart","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}}]}}]}]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[111,69]}},{"children":[],"comments":"The `sat` parser constructor takes a predicate function, and will consume\na single character if calling that predicate function with the character\nas its argument returns `true`. If it returns `false`, the parser will\nfail.\n","title":"sat","info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"i"}]}]},null]}},"sourceSpan":{"start":[120,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[120,46]}},{"children":[],"comments":"The `maybe` parser combinator creates a parser which will run the provided\nparser on the input, and if it fails, it will returns the empty value (as\ndefined by `mempty`) as a result, without consuming any input.\n","title":"maybe","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"o"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]}},"sourceSpan":{"start":[128,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[128,61]}},{"children":[],"comments":"Matches the end of the stream.\n","title":"eof","info":{"declType":"value","type":{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[132,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[132,31]}},{"children":[],"comments":"The `many` combinator takes a parser, and returns a new parser which will\nrun the parser repeatedly on the input stream until it fails, returning\na list of the result values of each parse operation as its result, or the\nempty list if the parser never succeeded.\n\nRead that as \"match this parser zero or more times and give me a list of\nthe results.\"\n","title":"many","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"o"}]}}]}]},null]},null]}},"sourceSpan":{"start":[147,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[147,52]}},{"children":[],"comments":"The `many1` combinator is just like the `many` combinator, except it\nrequires its wrapped parser to match at least once. The resulting list is\nthus guaranteed to contain at least one value.\n","title":"many1","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"o"}]}}]}]},null]},null]}},"sourceSpan":{"start":[153,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[153,53]}},{"children":[],"comments":"Matches the provided parser `p` zero or more times, but requires the\nparser `sep` to match once in between each match of `p`. In other words,\nuse `sep` to match separator characters in between matches of `p`.\n","title":"sepBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[162,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[162,69]}},{"children":[],"comments":"Matches the provided parser `p` one or more times, but requires the\nparser `sep` to match once in between each match of `p`. In other words,\nuse `sep` to match separator characters in between matches of `p`.\n","title":"sepBy1","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[168,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[168,70]}},{"children":[],"comments":"Like `sepBy`, but cut on the separator, so that matching a `sep` not\nfollowed by a `p` will cause a fatal error.\n","title":"sepByCut","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[176,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Parser.purs","end":[176,72]}}]},{"reExports":[],"name":"Data.Eulalie.Result","comments":null,"declarations":[{"children":[{"comments":null,"title":"Success","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Success"],"ParseSuccess"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Error","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Error"],"ParseError"]},{"tag":"TypeVar","contents":"i"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"ParseResult","info":{"declType":"data","dataDeclType":"data","typeArguments":[["i",null],["o",null]]},"sourceSpan":{"start":[10,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Result.purs","end":[11,44]}},{"children":[],"comments":null,"title":"success","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Result"],"ParseResult"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[13,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Result.purs","end":[13,79]}},{"children":[],"comments":null,"title":"error","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Result"],"ParseResult"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Result.purs","end":[16,49]}},{"children":[],"comments":null,"title":"error'","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Result"],"ParseResult"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[19,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Result.purs","end":[19,75]}}]},{"reExports":[],"name":"Data.Eulalie.Stream","comments":null,"declarations":[{"children":[{"comments":null,"title":"Stream","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["buffer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["cursor",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqStream","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[27,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[29,25]}},{"comments":null,"title":"showStream","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[31,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[32,76]}}],"comments":null,"title":"Stream","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[7,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[7,63]}},{"children":[],"comments":null,"title":"stream","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[9,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[9,40]}},{"children":[],"comments":null,"title":"get","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[12,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[12,37]}},{"children":[],"comments":null,"title":"atEnd","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[15,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[15,39]}},{"children":[],"comments":null,"title":"next","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[18,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[18,47]}},{"children":[],"comments":null,"title":"getAndNext","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["next",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[22,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Stream.purs","end":[22,75]}}]},{"reExports":[],"name":"Data.Eulalie.String","comments":null,"declarations":[{"children":[],"comments":"Matches the given parser zero or more times, returning a string of the\nentire match.\n","title":"many","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[15,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[15,49]}},{"children":[],"comments":"Matches the given parser one or more times, returning a string of the\nentire match.\n","title":"many1","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[20,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[20,50]}},{"children":[],"comments":"Turns a parser of `Char` into a parser of `String`.\n","title":"fromChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[27,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[27,51]}},{"children":[],"comments":"Matches the exact `Char` provided, returning it as a string.\n","title":"char","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[31,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[31,35]}},{"children":[],"comments":"Matches any one character except the one provided, returning a string.\n","title":"notChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[35,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[35,38]}},{"children":[],"comments":"Matches the exact string provided.\n","title":"string","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[39,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[39,39]}},{"children":[],"comments":"Matches one of a list of strings.\n","title":"oneOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}]},null]}},"sourceSpan":{"start":[50,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[50,77]}},{"children":[],"comments":"Matches zero or more whitespace characters.\n","title":"spaces","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[54,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[54,29]}},{"children":[],"comments":"Matches one or more whitespace characters.\n","title":"spaces1","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[58,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[58,30]}},{"children":[],"comments":"Matches zero or more non-whitespace characters.\n","title":"notSpaces","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[62,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[62,32]}},{"children":[],"comments":"Matches one or more non-whitespace characters.\n","title":"notSpaces1","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[66,33]}},{"children":[],"comments":"Parses a positive or negative integer.\n","title":"int","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[71,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[71,23]}},{"children":[],"comments":"Parses a positive or negative floating point number.\n","title":"float","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[80,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[80,28]}},{"children":[],"comments":"Parses a double quoted string, with support for escaping double quotes\ninside it, and returns the inner string. Does not perform any other form\nof string escaping.\n","title":"quotedString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[94,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/String.purs","end":[94,35]}}]},{"reExports":[],"name":"Data.Eulalie.Success","comments":null,"declarations":[{"children":[],"comments":null,"title":"ParseSuccess","info":{"arguments":[["i",null],["o",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"o"},{"tag":"RCons","contents":["next",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"RCons","contents":["start",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eulalie","Stream"],"Stream"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"RCons","contents":["matched",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[5,1],"name":"/home/bodil/Sync/Workspace/purescript-eulalie/src/Data/Eulalie/Success.purs","end":[10,3]}}]}],"resolvedDependencies":{"purescript-free":"4.0.0","purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-maps":"3.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-js-timers":"3.0.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-aff":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.0.0","purescript-functors":"2.0.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-test-unit":"11.0.0","purescript-const":"3.0.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-parallel":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-quickcheck":"4.0.0","purescript-strings":"3.0.0","purescript-identity":"3.0.0","purescript-sets":"3.0.0","purescript-lists":"4.0.1","purescript-datetime":"3.0.0","purescript-functions":"3.0.0"},"version":"5.0.0","github":["bodil","purescript-eulalie"],"versionTag":"v5.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Ref":"purescript-refs","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Test.Unit.Assert":"purescript-test-unit","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Test.Unit.Output.Fancy":"purescript-test-unit","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Test.Unit.QuickCheck":"purescript-test-unit","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.StrMap.Unsafe":"purescript-maps","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-sets","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Test.Unit.Output.TAP":"purescript-test-unit","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Test.Unit.Console":"purescript-test-unit","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.Unit.Output.Simple":"purescript-test-unit","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Test.Unit.Main":"purescript-test-unit","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Test.Unit":"purescript-test-unit","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.3"}