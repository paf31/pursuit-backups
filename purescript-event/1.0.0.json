{"uploader":"paf31","packageMeta":{"repository":{"url":"git://github.com/paf31/purescript-event.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-psci-support":"^4.0.0"},"dependencies":{"purescript-effect":"^2.0.0","purescript-console":"^4.1.0","purescript-filterable":"^3.0.0","purescript-prelude":"^4.0.1","purescript-nullable":"^4.0.0"},"name":"purescript-event","license":["BSD-3-Clause"]},"tagTime":"2018-06-19T01:50:43+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-filterable","item":["Data","Filterable"]},"declarations":[{"children":[{"comments":null,"title":"filterMap","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[76,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[77,33]}},{"comments":null,"title":"filterableArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[147,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[147,45]}},{"comments":null,"title":"filterableMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[159,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[159,45]}},{"comments":null,"title":"filterableEither","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[171,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[171,63]}},{"comments":null,"title":"filterableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]}]}},"sourceSpan":{"start":[186,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[186,48]}},{"comments":null,"title":"filterableMap","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[208,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[208,58]}}],"comments":"`Filterable` represents data structures which can be _partitioned_/_filtered_.\n\n- `partitionMap` - partition a data structure based on an either predicate.\n- `partition` - partition a data structure based on boolean predicate.\n- `filterMap` - map over a data structure and filter based on a maybe.\n- `filter` - filter a data structure based on a boolean.\n\nLaws:\n- Functor Relation: `filterMap identity ≡ compact`\n- Functor Identity: `filterMap Just ≡ identity`\n- Kleisli Composition: `filterMap (l <=< r) ≡ filterMap l <<< filterMap r`\n\n- `filter ≡ filterMap <<< maybeBool`\n- `filterMap p ≡ filter (isJust <<< p)`\n\n- Functor Relation: `partitionMap identity ≡ separate`\n- Functor Identity 1: `_.right <<< partitionMap Right ≡ identity`\n- Functor Identity 2: `_.left <<< partitionMap Left ≡ identity`\n\n- `f <<< partition ≡ partitionMap <<< eitherBool` where `f = \\{ no, yes } -> { left: no, right: yes }`\n- `f <<< partitionMap p ≡ partition (isRight <<< p)` where `f = \\{ left, right } -> { no: left, yes: right}`\n\nDefault implementations are provided by the following functions:\n\n- `partitionDefault`\n- `partitionDefaultFilter`\n- `partitionDefaultFilterMap`\n- `partitionMapDefault`\n- `filterDefault`\n- `filterDefaultPartition`\n- `filterDefaultPartitionMap`\n- `filterMapDefault`\n","title":"Filterable","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Compactable"],"Compactable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}]},"sourceSpan":{"start":[69,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[80,33]}}]},{"moduleName":{"package":null,"item":["FRP","Event","Class"]},"declarations":[{"children":[{"comments":null,"title":"fold","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[35,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[35,63]}},{"comments":null,"title":"keepLatest","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[36,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[36,53]}},{"comments":null,"title":"sampleOn","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[37,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[37,63]}},{"comments":null,"title":"fix","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["input",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"i"}]},{"tag":"RCons","contents":["output",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"o"}]},{"tag":"REmpty"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[38,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[38,85]}}],"comments":"Functions which an `Event` type should implement:\n\n- `fold`: combines incoming values using the specified function,\nstarting with the specific initial value.\n- `keepLatest` flattens a nested event, reporting values only from the\nmost recent inner event.\n- `sampleOn`: samples an event at the times when a second event fires.\n- `fix`: compute a fixed point, by feeding output events back in as\ninputs.\n","title":"IsEvent","info":{"fundeps":[],"arguments":[["event",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null}]},"sourceSpan":{"start":[34,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[38,85]}},{"children":[],"comments":"Compute differences between successive event values.\n","title":"withLast","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["now",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["last",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[49,92]}},{"children":[],"comments":"Create an `Event` which samples the latest values from the first event\nat the times when the second event fires, ignoring the values produced by\nthe second event.\n","title":"sampleOn_","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[69,78]}},{"children":[],"comments":"Map over an event with an accumulator.\n\nFor example, to keep the index of the current event:\n\n```purescript\nmapAccum (\\x i -> Tuple (i + 1) (Tuple x i)) 0`.\n```\n","title":"mapAccum","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[61,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[61,98]}},{"children":[],"comments":"Generalised form of `gateBy`, allowing for any predicate between the two\nevents. Until a value from the first event is received, `Nothing` will be\npassed to the predicate.\n","title":"gateBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["event",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[87,13]}},{"children":[],"comments":"Sample the events that are fired while a boolean event is true. Note that,\nuntil the boolean event fires, it will be assumed to be `false`, and events\nwill be blocked.\n","title":"gate","info":{"declType":"value","type":{"tag":"ForAll","contents":["event",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[75,77]}},{"children":[],"comments":"Combine subsequent events using a `Monoid`.\n","title":"folded","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[45,74]}},{"children":[],"comments":"Count the number of events received.\n","title":"count","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[41,63]}}]}],"name":"FRP.Event","comments":null,"declarations":[{"children":[],"comments":"Compute a fixed point\n","title":"fix","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["input",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"RCons","contents":["output",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"REmpty"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[109,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[109,98]}},{"children":[],"comments":"Fold over values received from some `Event`, creating a new `Event`.\n","title":"fold","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[95,76]}},{"children":[],"comments":"Flatten a nested `Event`, reporting values only from the most recent\ninner `Event`.\n","title":"keepLatest","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[106,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[106,66]}},{"children":[],"comments":"Create an `Event` which samples the latest values from the first event\nat the times when the second event fires.\n","title":"sampleOn","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[102,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[102,76]}},{"children":[{"comments":null,"title":"functorEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[43,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[43,39]}},{"comments":null,"title":"compactableEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Compactable"],"Compactable"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[46,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[46,47]}},{"comments":null,"title":"filterableEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[53,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[53,45]}},{"comments":null,"title":"applyEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[65,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[65,35]}},{"comments":null,"title":"applicativeEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[68,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[68,47]}},{"comments":null,"title":"altEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[71,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[71,31]}},{"comments":null,"title":"plusEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[74,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[74,33]}},{"comments":null,"title":"alternativeEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[77,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[77,47]}},{"comments":null,"title":"semigroupEvent","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[79,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[79,62]}},{"comments":null,"title":"monoidEvent","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[82,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[82,53]}},{"comments":null,"title":"eventIsEvent","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event","Class"],"IsEvent"]},{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]}]}},"sourceSpan":{"start":[85,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[85,45]}}],"comments":"An `Event` represents a collection of discrete occurrences with associated\ntimes. Conceptually, an `Event` is a (possibly-infinite) list of values-and-times:\n\n```purescript\ntype Event a = List { value :: a, time :: Time }\n```\n\nEvents are created from real events like timers or mouse clicks, and then\ncombined using the various functions and instances provided in this module.\n\nEvents are consumed by providing a callback using the `subscribe` function.\n","title":"Event","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[33,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[33,13]}},{"children":[],"comments":"Create an event and a function which supplies a value to that event.\n","title":"create","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["event",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["push",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"REmpty"}]}]}]}]},null]}},"sourceSpan":{"start":[121,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[126,8]}},{"children":[],"comments":"Subscribe to an `Event` by providing a callback.\n\n`subscribe` returns a canceller function.\n","title":"subscribe","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["FRP","Event"],"Event"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[114,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event.purs","end":[118,26]}}]},{"reExports":[{"moduleName":{"package":"purescript-filterable","item":["Data","Filterable"]},"declarations":[{"children":[{"comments":null,"title":"filterMap","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[76,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[77,33]}},{"comments":null,"title":"filterableArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[147,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[147,45]}},{"comments":null,"title":"filterableMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[159,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[159,45]}},{"comments":null,"title":"filterableEither","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[171,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[171,63]}},{"comments":null,"title":"filterableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]}]}},"sourceSpan":{"start":[186,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[186,48]}},{"comments":null,"title":"filterableMap","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Filterable"],"Filterable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[208,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[208,58]}}],"comments":"`Filterable` represents data structures which can be _partitioned_/_filtered_.\n\n- `partitionMap` - partition a data structure based on an either predicate.\n- `partition` - partition a data structure based on boolean predicate.\n- `filterMap` - map over a data structure and filter based on a maybe.\n- `filter` - filter a data structure based on a boolean.\n\nLaws:\n- Functor Relation: `filterMap identity ≡ compact`\n- Functor Identity: `filterMap Just ≡ identity`\n- Kleisli Composition: `filterMap (l <=< r) ≡ filterMap l <<< filterMap r`\n\n- `filter ≡ filterMap <<< maybeBool`\n- `filterMap p ≡ filter (isJust <<< p)`\n\n- Functor Relation: `partitionMap identity ≡ separate`\n- Functor Identity 1: `_.right <<< partitionMap Right ≡ identity`\n- Functor Identity 2: `_.left <<< partitionMap Left ≡ identity`\n\n- `f <<< partition ≡ partitionMap <<< eitherBool` where `f = \\{ no, yes } -> { left: no, right: yes }`\n- `f <<< partitionMap p ≡ partition (isRight <<< p)` where `f = \\{ left, right } -> { no: left, yes: right}`\n\nDefault implementations are provided by the following functions:\n\n- `partitionDefault`\n- `partitionDefaultFilter`\n- `partitionDefaultFilterMap`\n- `partitionMapDefault`\n- `filterDefault`\n- `filterDefaultPartition`\n- `filterDefaultPartitionMap`\n- `filterMapDefault`\n","title":"Filterable","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Compactable"],"Compactable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}]},"sourceSpan":{"start":[69,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/bower_components/purescript-filterable/src/Data/Filterable.purs","end":[80,33]}}]}],"name":"FRP.Event.Class","comments":null,"declarations":[{"children":[{"comments":null,"title":"fold","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[35,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[35,63]}},{"comments":null,"title":"keepLatest","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[36,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[36,53]}},{"comments":null,"title":"sampleOn","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[37,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[37,63]}},{"comments":null,"title":"fix","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["input",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"i"}]},{"tag":"RCons","contents":["output",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"o"}]},{"tag":"REmpty"}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[38,3],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[38,85]}}],"comments":"Functions which an `Event` type should implement:\n\n- `fold`: combines incoming values using the specified function,\nstarting with the specific initial value.\n- `keepLatest` flattens a nested event, reporting values only from the\nmost recent inner event.\n- `sampleOn`: samples an event at the times when a second event fires.\n- `fix`: compute a fixed point, by feeding output events back in as\ninputs.\n","title":"IsEvent","info":{"fundeps":[],"arguments":[["event",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null}]},"sourceSpan":{"start":[34,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[38,85]}},{"children":[],"comments":"Combine subsequent events using a `Monoid`.\n","title":"folded","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[45,74]}},{"children":[],"comments":"Count the number of events received.\n","title":"count","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[41,63]}},{"children":[],"comments":"Map over an event with an accumulator.\n\nFor example, to keep the index of the current event:\n\n```purescript\nmapAccum (\\x i -> Tuple (i + 1) (Tuple x i)) 0`.\n```\n","title":"mapAccum","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[61,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[61,98]}},{"children":[],"comments":"Compute differences between successive event values.\n","title":"withLast","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["now",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["last",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[49,92]}},{"children":[],"comments":"Create an `Event` which samples the latest values from the first event\nat the times when the second event fires, ignoring the values produced by\nthe second event.\n","title":"sampleOn_","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["event",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[69,78]}},{"children":[],"comments":"Sample the events that are fired while a boolean event is true. Note that,\nuntil the boolean event fires, it will be assumed to be `false`, and events\nwill be blocked.\n","title":"gate","info":{"declType":"value","type":{"tag":"ForAll","contents":["event",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[75,77]}},{"children":[],"comments":"Generalised form of `gateBy`, allowing for any predicate between the two\nevents. Until a value from the first event is received, `Nothing` will be\npassed to the predicate.\n","title":"gateBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["event",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["FRP","Event","Class"],"IsEvent"],"constraintArgs":[{"tag":"TypeVar","contents":"event"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"event"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"/Users/phil/Documents/Code/purescript/purescript-event/src/FRP/Event/Class.purs","end":[87,13]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-ordered-collections":"1.0.0","purescript-control":"4.0.0","purescript-console":"4.1.0","purescript-either":"4.0.0","purescript-filterable":"3.0.0","purescript-arrays":"5.0.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lazy":"4.0.0","purescript-foldable-traversable":"4.0.0","purescript-tailrec":"4.0.0","purescript-gen":"2.0.0","purescript-prelude":"4.0.1","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-orders":"4.0.0","purescript-psci-support":"4.0.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-identity":"4.0.0","purescript-lists":"5.0.0","purescript-nullable":"4.0.0","purescript-functions":"4.0.0"},"version":"1.0.0","github":["paf31","purescript-event"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Nullable":"purescript-nullable","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Data.Compactable":"purescript-filterable","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Data.Maybe":"purescript-maybe","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Filterable":"purescript-filterable","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Control.Plus":"purescript-control","Data.Map.Internal":"purescript-ordered-collections","Partial":"purescript-partial","Data.Monoid.Multiplicative":"purescript-prelude","Data.Array.ST":"purescript-arrays","Control.Semigroupoid":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Data.List.Partial":"purescript-lists","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Data.Witherable":"purescript-filterable","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.7"}