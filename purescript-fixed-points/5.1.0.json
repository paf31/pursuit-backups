{"uploader":"garyb","packageMeta":{"repository":{"url":"git://github.com/slamdata/purescript-fixed-points.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"authors":[{"email":"jon@jonmsterling.com","name":"Jon Sterling"}],"dependencies":{"purescript-newtype":"^3.0.0","purescript-exists":"^4.0.0","purescript-prelude":"^4.0.0","purescript-transformers":"^4.0.0"},"name":"purescript-fixed-points","license":["Apache-2.0"]},"tagTime":"2018-06-19T13:48:28+0000","modules":[{"reExports":[],"name":"Data.Functor.Mu","comments":null,"declarations":[{"children":[{"comments":null,"title":"In","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeMu","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeWildcard","contents":{"start":[39,45],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[39,46]}}]}},"sourceSpan":{"start":[39,8],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[39,46]}},{"comments":"To implement `Eq`, we require `f` to have higher-kinded equality.\n","title":"eqMu","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[42,36]}},{"comments":"To implement `Ord`, we require `f` to have higher-kinded comparison.\n","title":"ordMu","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[46,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[46,48]}},{"comments":"`Show` is compositional, so we only `f` to be able to show a single layer of structure.\n","title":"showMu","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","TacitString"],"TacitString"]}]}],"constraintData":null},{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[52,71]}},{"comments":null,"title":"semigroupMu","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Alt"],"Alt"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[55,50]}},{"comments":null,"title":"monoidMu","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[58,45]}}],"comments":"`Mu f` is the least fixed point of a functor `f`, when it exists.\n","title":"Mu","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null]]},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[18,29]}},{"children":[],"comments":null,"title":"roll","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[33,35]}},{"children":[],"comments":null,"title":"unroll","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}}]}]},null]}},"sourceSpan":{"start":[36,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[36,37]}},{"children":[],"comments":"Rewrites a tree along a natural transformation.\n","title":"transMu","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"g"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Mu"],"Mu"]},{"tag":"TypeVar","contents":"g"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Mu.purs","end":[26,9]}}]},{"reExports":[],"name":"Data.Functor.Nu","comments":null,"declarations":[{"children":[{"comments":null,"title":"Nu","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Nu"],"NuF"]},{"tag":"TypeVar","contents":"f"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeNu","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Nu"],"Nu"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeWildcard","contents":{"start":[19,45],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Nu.purs","end":[19,46]}}]}},"sourceSpan":{"start":[19,8],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Nu.purs","end":[19,46]}}],"comments":"`Nu f` is the greatest fixed point of the functor `f`, when it exists.\n","title":"Nu","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null]]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Nu.purs","end":[17,35]}},{"children":[{"comments":null,"title":"NuF","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store"],"Store"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"NuF","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[14,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Nu.purs","end":[14,38]}},{"children":[],"comments":null,"title":"unfold","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Nu"],"Nu"]},{"tag":"TypeVar","contents":"f"}]}]}]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Nu.purs","end":[21,46]}},{"children":[],"comments":null,"title":"observe","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Nu"],"Nu"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Nu"],"Nu"]},{"tag":"TypeVar","contents":"f"}]}}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/Functor/Nu.purs","end":[24,51]}}]},{"reExports":[],"name":"Data.TacitString","comments":null,"declarations":[{"children":[{"comments":null,"title":"newtypeTacitString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Data","TacitString"],"TacitString"]}]},{"tag":"TypeWildcard","contents":{"start":[11,59],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/TacitString.purs","end":[11,60]}}]}},"sourceSpan":{"start":[11,8],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/TacitString.purs","end":[11,60]}},{"comments":null,"title":"eqTacitString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","TacitString"],"TacitString"]}]}},"sourceSpan":{"start":[12,8],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/TacitString.purs","end":[12,48]}},{"comments":null,"title":"ordTacitString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","TacitString"],"TacitString"]}]}},"sourceSpan":{"start":[13,8],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/TacitString.purs","end":[13,50]}},{"comments":null,"title":"showTacitString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","TacitString"],"TacitString"]}]}},"sourceSpan":{"start":[15,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/TacitString.purs","end":[15,45]}}],"comments":null,"title":"TacitString","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[9,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/TacitString.purs","end":[9,41]}},{"children":[],"comments":null,"title":"hush","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","TacitString"],"TacitString"]}]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/slamdata/purescript-fixed-points/src/Data/TacitString.purs","end":[18,30]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-control":"4.0.0","purescript-either":"4.0.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lazy":"4.0.0","purescript-foldable-traversable":"4.0.0","purescript-tailrec":"4.0.0","purescript-prelude":"4.0.1","purescript-bifunctors":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-orders":"4.0.0","purescript-transformers":"4.1.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-identity":"4.0.0"},"version":"5.1.0","github":["slamdata","purescript-fixed-points"],"versionTag":"v5.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.State.Class":"purescript-transformers","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Category":"purescript-prelude","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Control.Comonad.Trans.Class":"purescript-transformers","Control.Plus":"purescript-control","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.Monoid.Multiplicative":"purescript-prelude","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.7"}