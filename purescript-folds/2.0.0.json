{"uploader":"paf31","packageMeta":{"repository":{"url":"git://github.com/paf31/purescript-folds.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-console":"^2.0.0","purescript-psci-support":"^2.0.0"},"dependencies":{"purescript-control":"^2.0.0","purescript-profunctor":"^2.0.0"},"name":"purescript-folds","license":["MIT"]},"modules":[{"reExports":[],"name":"Control.Fold","comments":"This module provides a type `Fold` for lefts folds, which can be combined\nusing the `Applicative` class:\n\n```purescript\naverage :: Fold Number Number\naverage = (/) <$> sum <*> length\n```\n\n`Fold` can be used to fold a `Foldable` structure (`foldl`), or scan a\n`Traversable` structure (`scanl`):\n\n```purescript\nfinalAverage = foldl average [1.0, 2.0, 3.0] :: Number\nmovingAverage = scanl average [1.0, 2.0, 3.0] :: Array Number\n```\n\nThis library is based on the `foldl` library by Gabriel Gonzalez:\n<http://hackage.haskell.org/package/foldl>\n","declarations":[{"children":[{"comments":null,"title":"profunctorFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor"],"Profunctor"]},{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]}]}},"sourceSpan":{"start":[161,1],"name":"src/Control/Fold.purs","end":[165,30]}},{"comments":null,"title":"functorFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[167,1],"name":"src/Control/Fold.purs","end":[171,30]}},{"comments":null,"title":"applyFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[173,1],"name":"src/Control/Fold.purs","end":[177,43]}},{"comments":null,"title":"applicativeFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[179,1],"name":"src/Control/Fold.purs","end":[182,56]}},{"comments":null,"title":"extendFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[184,1],"name":"src/Control/Fold.purs","end":[190,26]}},{"comments":null,"title":"comonadFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad"],"Comonad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[192,1],"name":"src/Control/Fold.purs","end":[193,35]}},{"comments":null,"title":"semigroupFold","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[195,1],"name":"src/Control/Fold.purs","end":[196,24]}},{"comments":null,"title":"monoidFold","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[198,1],"name":"src/Control/Fold.purs","end":[199,17]}}],"comments":"A left fold, which takes zero or more values of type `a` as input\nand produces output of type `b`.\n","title":"Fold","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[61,1],"name":"src/Control/Fold.purs","end":[61,71]}},{"children":[],"comments":"Step a fold by providing a single input.\n","title":"stepFold","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"src/Control/Fold.purs","end":[64,50]}},{"children":[],"comments":"Create a `Fold` by providing an initial state, a function which updates\nthat state, and a function which produces output from a state.\n","title":"unfoldFold","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[69,1],"name":"src/Control/Fold.purs","end":[69,71]}},{"children":[],"comments":"Create a `Fold` by providing an initial state and a function which updates\nthat state. This is a variant of `unfoldFold` where the output is the state\nitself.\n","title":"unfoldFold_","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"src/Control/Fold.purs","end":[78,58]}},{"children":[],"comments":"Run a `Fold` by providing a `Foldable` container of inputs, and then\ngenerating a single output. This is analogous to the `foldl` function from\n`Data.Foldable`.\n","title":"foldl","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"src/Control/Fold.purs","end":[84,58]}},{"children":[],"comments":"Run a `Fold` by providing a `Traversable` container of inputs, and\ngenerating an output for each input. This is analogous to the `scanl` function from\n`Data.Traversable`.\n","title":"scanl","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[90,1],"name":"src/Control/Fold.purs","end":[90,63]}},{"children":[],"comments":"`Fold` values in some `Monoid`.\n","title":"mconcat","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]},null]}},"sourceSpan":{"start":[94,1],"name":"src/Control/Fold.purs","end":[94,42]}},{"children":[],"comments":"A `Fold` which remembers the first input.\n","title":"head","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]},null]}},"sourceSpan":{"start":[98,1],"name":"src/Control/Fold.purs","end":[98,35]}},{"children":[],"comments":"A `Fold` which keeps the last input.\n","title":"last","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]},null]}},"sourceSpan":{"start":[102,1],"name":"src/Control/Fold.purs","end":[102,35]}},{"children":[],"comments":"A `Fold` which tests whether any inputs were seen.\n","title":"null","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[106,1],"name":"src/Control/Fold.purs","end":[106,33]}},{"children":[],"comments":"A `Fold` which counts its inputs.\n","title":"length","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[110,1],"name":"src/Control/Fold.purs","end":[110,45]}},{"children":[],"comments":"A `Fold` which tests if _all_ of its inputs were true\n(generalized to work with an arbitrary `HeytingAlgebra`).\n","title":"and","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]},null]}},"sourceSpan":{"start":[115,1],"name":"src/Control/Fold.purs","end":[115,46]}},{"children":[],"comments":"A `Fold` which tests if _any_ of its inputs were true\n(generalized to work with an arbitrary `HeytingAlgebra`).\n","title":"or","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]},null]}},"sourceSpan":{"start":[120,1],"name":"src/Control/Fold.purs","end":[120,45]}},{"children":[],"comments":"A `Fold` which tests if _all_ of its inputs satisfy some predicate\n(generalized to work with an arbitrary `HeytingAlgebra`).\n","title":"all","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[125,1],"name":"src/Control/Fold.purs","end":[125,60]}},{"children":[],"comments":"A `Fold` which tests if _any_ of its inputs satisfy some predicate\n(generalized to work with an arbitrary `HeytingAlgebra`).\n","title":"any","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[130,1],"name":"src/Control/Fold.purs","end":[130,60]}},{"children":[],"comments":"A `Fold` which computes the sum of its inputs\n(generalized to work with an arbitrary `Semiring`).\n","title":"sum","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},null]}},"sourceSpan":{"start":[135,1],"name":"src/Control/Fold.purs","end":[135,40]}},{"children":[],"comments":"A `Fold` which computes the product of its inputs\n(generalized to work with an arbitrary `Semiring`).\n","title":"product","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},null]}},"sourceSpan":{"start":[140,1],"name":"src/Control/Fold.purs","end":[140,44]}},{"children":[],"comments":"A `Fold` which computes the maximum of its inputs\n(generalized to work with an arbitrary `Bounded` type).\n","title":"maximum","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"src/Control/Fold.purs","end":[145,43]}},{"children":[],"comments":"A `Fold` which computes the minimum of its inputs\n(generalized to work with an arbitrary `Bounded` type).\n","title":"minimum","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[150,1],"name":"src/Control/Fold.purs","end":[150,43]}},{"children":[],"comments":"A `Fold` which tests if a specific value appeared as an input.\n","title":"elem","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[154,1],"name":"src/Control/Fold.purs","end":[154,46]}},{"children":[],"comments":"A `Fold` which tests if a specific value did not appear as an input.\n","title":"notElem","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Fold"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[158,1],"name":"src/Control/Fold.purs","end":[158,49]}}]}],"resolvedDependencies":{"purescript-newtype":"1.0.0","purescript-control":"2.0.0","purescript-console":"2.0.0","purescript-either":"2.0.0","purescript-profunctor":"2.0.0","purescript-maybe":"2.0.0","purescript-distributive":"2.0.0","purescript-invariant":"2.0.0","purescript-monoid":"2.0.0","purescript-foldable-traversable":"2.0.0","purescript-prelude":"2.1.0","purescript-bifunctors":"2.0.0","purescript-eff":"2.0.0","purescript-psci-support":"2.0.0","purescript-tuples":"3.0.0","purescript-identity":"2.0.0"},"bookmarks":[{"package":null,"item":["Control.Fold","Fold"]},{"package":null,"item":["Control.Fold","stepFold"]},{"package":null,"item":["Control.Fold","unfoldFold"]},{"package":null,"item":["Control.Fold","unfoldFold_"]},{"package":null,"item":["Control.Fold","foldl"]},{"package":null,"item":["Control.Fold","scanl"]},{"package":null,"item":["Control.Fold","mconcat"]},{"package":null,"item":["Control.Fold","head"]},{"package":null,"item":["Control.Fold","last"]},{"package":null,"item":["Control.Fold","null"]},{"package":null,"item":["Control.Fold","length"]},{"package":null,"item":["Control.Fold","and"]},{"package":null,"item":["Control.Fold","or"]},{"package":null,"item":["Control.Fold","all"]},{"package":null,"item":["Control.Fold","any"]},{"package":null,"item":["Control.Fold","sum"]},{"package":null,"item":["Control.Fold","product"]},{"package":null,"item":["Control.Fold","maximum"]},{"package":null,"item":["Control.Fold","minimum"]},{"package":null,"item":["Control.Fold","elem"]},{"package":null,"item":["Control.Fold","notElem"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","Biapply"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","biapplyFirst"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","biapplySecond"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift2"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift3"]},{"package":"purescript-bifunctors","item":["Control.Biapplicative","Biapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","Bifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","lmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","rmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","Wrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","newtypeWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","eqWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","ordWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","showWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","functorWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","bifunctorWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","biapplyWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","biapplicativeWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","Product"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","eqProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","ordProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","showProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","bifunctorProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","biapplyProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","biapplicativeProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","Joker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","newtypeJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","eqJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","ordJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","showJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","functorJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","bifunctorJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","biapplyJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","biapplicativeJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","Join"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","newtypeJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","eqJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","ordJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","showJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","bifunctorJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","biapplyJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","biapplicativeJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","Flip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","newtypeFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","eqFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","ordFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","showFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","functorFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","bifunctorFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","biapplyFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","biapplicativeFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","Clown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","newtypeClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","eqClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","ordClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","showClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","functorClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","bifunctorClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","biapplyClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","biapplicativeClown"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","logShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warn"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warnShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","errorShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","info"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","infoShow"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.MonadZero","MonadZero"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","extendFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisli"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisliFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-distributive","item":["Data.Distributive","Distributive"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveIdentity"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveFunction"]},{"package":"purescript-distributive","item":["Data.Distributive","distributeDefault"]},{"package":"purescript-distributive","item":["Data.Distributive","collectDefault"]},{"package":"purescript-distributive","item":["Data.Distributive","cotraverse"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeCoerceEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafePerformEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","monadEffEff"]},{"package":"purescript-either","item":["Data.Either","Either"]},{"package":"purescript-either","item":["Data.Either","functorEither"]},{"package":"purescript-either","item":["Data.Either","invariantEither"]},{"package":"purescript-either","item":["Data.Either","bifunctorEither"]},{"package":"purescript-either","item":["Data.Either","applyEither"]},{"package":"purescript-either","item":["Data.Either","applicativeEither"]},{"package":"purescript-either","item":["Data.Either","altEither"]},{"package":"purescript-either","item":["Data.Either","bindEither"]},{"package":"purescript-either","item":["Data.Either","monadEither"]},{"package":"purescript-either","item":["Data.Either","extendEither"]},{"package":"purescript-either","item":["Data.Either","showEither"]},{"package":"purescript-either","item":["Data.Either","eqEither"]},{"package":"purescript-either","item":["Data.Either","ordEither"]},{"package":"purescript-either","item":["Data.Either","boundedEither"]},{"package":"purescript-either","item":["Data.Either","foldableEither"]},{"package":"purescript-either","item":["Data.Either","bifoldableEither"]},{"package":"purescript-either","item":["Data.Either","traversableEither"]},{"package":"purescript-either","item":["Data.Either","bitraversableEither"]},{"package":"purescript-either","item":["Data.Either","semiringEither"]},{"package":"purescript-either","item":["Data.Either","semigroupEither"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","isLeft"]},{"package":"purescript-either","item":["Data.Either","isRight"]},{"package":"purescript-either","item":["Data.Either","fromLeft"]},{"package":"purescript-either","item":["Data.Either","fromRight"]},{"package":"purescript-either","item":["Data.Either.Nested","Either1"]},{"package":"purescript-either","item":["Data.Either.Nested","Either2"]},{"package":"purescript-either","item":["Data.Either.Nested","Either3"]},{"package":"purescript-either","item":["Data.Either.Nested","Either4"]},{"package":"purescript-either","item":["Data.Either.Nested","Either5"]},{"package":"purescript-either","item":["Data.Either.Nested","Either6"]},{"package":"purescript-either","item":["Data.Either.Nested","Either7"]},{"package":"purescript-either","item":["Data.Either.Nested","Either8"]},{"package":"purescript-either","item":["Data.Either.Nested","Either9"]},{"package":"purescript-either","item":["Data.Either.Nested","Either10"]},{"package":"purescript-either","item":["Data.Either.Nested","E2"]},{"package":"purescript-either","item":["Data.Either.Nested","E3"]},{"package":"purescript-either","item":["Data.Either.Nested","E4"]},{"package":"purescript-either","item":["Data.Either.Nested","E5"]},{"package":"purescript-either","item":["Data.Either.Nested","E6"]},{"package":"purescript-either","item":["Data.Either.Nested","E7"]},{"package":"purescript-either","item":["Data.Either.Nested","E8"]},{"package":"purescript-either","item":["Data.Either.Nested","E9"]},{"package":"purescript-either","item":["Data.Either.Nested","E10"]},{"package":"purescript-either","item":["Data.Either.Nested","E11"]},{"package":"purescript-either","item":["Data.Either.Nested","in1"]},{"package":"purescript-either","item":["Data.Either.Nested","in2"]},{"package":"purescript-either","item":["Data.Either.Nested","in3"]},{"package":"purescript-either","item":["Data.Either.Nested","in4"]},{"package":"purescript-either","item":["Data.Either.Nested","in5"]},{"package":"purescript-either","item":["Data.Either.Nested","in6"]},{"package":"purescript-either","item":["Data.Either.Nested","in7"]},{"package":"purescript-either","item":["Data.Either.Nested","in8"]},{"package":"purescript-either","item":["Data.Either.Nested","in9"]},{"package":"purescript-either","item":["Data.Either.Nested","in10"]},{"package":"purescript-either","item":["Data.Either.Nested","at1"]},{"package":"purescript-either","item":["Data.Either.Nested","at2"]},{"package":"purescript-either","item":["Data.Either.Nested","at3"]},{"package":"purescript-either","item":["Data.Either.Nested","at4"]},{"package":"purescript-either","item":["Data.Either.Nested","at5"]},{"package":"purescript-either","item":["Data.Either.Nested","at6"]},{"package":"purescript-either","item":["Data.Either.Nested","at7"]},{"package":"purescript-either","item":["Data.Either.Nested","at8"]},{"package":"purescript-either","item":["Data.Either.Nested","at9"]},{"package":"purescript-either","item":["Data.Either.Nested","at10"]},{"package":"purescript-either","item":["Data.Either.Nested","either1"]},{"package":"purescript-either","item":["Data.Either.Nested","either2"]},{"package":"purescript-either","item":["Data.Either.Nested","either3"]},{"package":"purescript-either","item":["Data.Either.Nested","either4"]},{"package":"purescript-either","item":["Data.Either.Nested","either5"]},{"package":"purescript-either","item":["Data.Either.Nested","either6"]},{"package":"purescript-either","item":["Data.Either.Nested","either7"]},{"package":"purescript-either","item":["Data.Either.Nested","either8"]},{"package":"purescript-either","item":["Data.Either.Nested","either9"]},{"package":"purescript-either","item":["Data.Either.Nested","either10"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Traversable"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","sequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","for"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Accum"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanl"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanr"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","Foldable"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","fold"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","traverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","for_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","oneOf"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","intercalate"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","and"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","or"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","all"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","any"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","product"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","elem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","notElem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","find"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","findMap"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","Bitraversable"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bitraverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bisequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bifor"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","Bifoldable"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifold"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bitraverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifor_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bisequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biany"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biall"]},{"package":"purescript-identity","item":["Data.Identity","Identity"]},{"package":"purescript-identity","item":["Data.Identity","newtypeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","eqIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ordIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedIdentity"]},{"package":"purescript-identity","item":["Data.Identity","heytingAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","booleanAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semigroupIdenity"]},{"package":"purescript-identity","item":["Data.Identity","monoidIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","euclideanRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","commutativeRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","fieldIdentity"]},{"package":"purescript-identity","item":["Data.Identity","showIdentity"]},{"package":"purescript-identity","item":["Data.Identity","functorIdentity"]},{"package":"purescript-identity","item":["Data.Identity","invariantIdentity"]},{"package":"purescript-identity","item":["Data.Identity","altIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applyIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applicativeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","bindIdentity"]},{"package":"purescript-identity","item":["Data.Identity","monadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","extendIdentity"]},{"package":"purescript-identity","item":["Data.Identity","comonadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","foldableIdentity"]},{"package":"purescript-identity","item":["Data.Identity","traversableIdentity"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadZeroMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","newtypeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","newtypeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","newtypeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","boundedMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","newtypeEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","newtypeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","boundedDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","newtypeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","invariantDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semiringDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","newtypeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","invariantConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semiringConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","newtypeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","boundedAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-newtype","item":["Data.Newtype","Newtype"]},{"package":"purescript-newtype","item":["Data.Newtype","op"]},{"package":"purescript-newtype","item":["Data.Newtype","ala"]},{"package":"purescript-newtype","item":["Data.Newtype","alaF"]},{"package":"purescript-newtype","item":["Data.Newtype","over"]},{"package":"purescript-newtype","item":["Data.Newtype","overF"]},{"package":"purescript-newtype","item":["Data.Newtype","under"]},{"package":"purescript-newtype","item":["Data.Newtype","underF"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","Semigroupoid"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","semigroupoidFn"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(<<<)"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","composeFlipped"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(>>>)"]},{"package":"purescript-prelude","item":["Control.Monad","Monad"]},{"package":"purescript-prelude","item":["Control.Monad","monadFn"]},{"package":"purescript-prelude","item":["Control.Monad","liftM1"]},{"package":"purescript-prelude","item":["Control.Monad","ap"]},{"package":"purescript-prelude","item":["Control.Monad","whenM"]},{"package":"purescript-prelude","item":["Control.Monad","unlessM"]},{"package":"purescript-prelude","item":["Control.Category","Category"]},{"package":"purescript-prelude","item":["Control.Category","categoryFn"]},{"package":"purescript-prelude","item":["Control.Bind","Bind"]},{"package":"purescript-prelude","item":["Control.Bind","(>>=)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(=<<)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFn"]},{"package":"purescript-prelude","item":["Control.Bind","join"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisli"]},{"package":"purescript-prelude","item":["Control.Bind","(>=>)"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisliFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(<=<)"]},{"package":"purescript-prelude","item":["Control.Bind","ifM"]},{"package":"purescript-prelude","item":["Control.Apply","Apply"]},{"package":"purescript-prelude","item":["Control.Apply","(<*>)"]},{"package":"purescript-prelude","item":["Control.Apply","applyFn"]},{"package":"purescript-prelude","item":["Control.Apply","applyFirst"]},{"package":"purescript-prelude","item":["Control.Apply","(<*)"]},{"package":"purescript-prelude","item":["Control.Apply","applySecond"]},{"package":"purescript-prelude","item":["Control.Apply","(*>)"]},{"package":"purescript-prelude","item":["Control.Apply","lift2"]},{"package":"purescript-prelude","item":["Control.Apply","lift3"]},{"package":"purescript-prelude","item":["Control.Apply","lift4"]},{"package":"purescript-prelude","item":["Control.Apply","lift5"]},{"package":"purescript-prelude","item":["Control.Applicative","Applicative"]},{"package":"purescript-prelude","item":["Control.Applicative","applicativeFn"]},{"package":"purescript-prelude","item":["Control.Applicative","liftA1"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Data.Void","Void"]},{"package":"purescript-prelude","item":["Data.Void","absurd"]},{"package":"purescript-prelude","item":["Data.Unit","Unit"]},{"package":"purescript-prelude","item":["Data.Unit","unit"]},{"package":"purescript-prelude","item":["Data.Unit","showUnit"]},{"package":"purescript-prelude","item":["Data.Show","Show"]},{"package":"purescript-prelude","item":["Data.Semiring","Semiring"]},{"package":"purescript-prelude","item":["Data.Semiring","(+)"]},{"package":"purescript-prelude","item":["Data.Semiring","(*)"]},{"package":"purescript-prelude","item":["Data.Semigroup","Semigroup"]},{"package":"purescript-prelude","item":["Data.Semigroup","(<>)"]},{"package":"purescript-prelude","item":["Data.Semigroup","semigroupFn"]},{"package":"purescript-prelude","item":["Data.Ring","Ring"]},{"package":"purescript-prelude","item":["Data.Ring","(-)"]},{"package":"purescript-prelude","item":["Data.Ring","negate"]},{"package":"purescript-prelude","item":["Data.Ordering","Ordering"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ord","Ord"]},{"package":"purescript-prelude","item":["Data.Ord","lessThan"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThan"]},{"package":"purescript-prelude","item":["Data.Ord","lessThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","(<)"]},{"package":"purescript-prelude","item":["Data.Ord","(<=)"]},{"package":"purescript-prelude","item":["Data.Ord","(>)"]},{"package":"purescript-prelude","item":["Data.Ord","(>=)"]},{"package":"purescript-prelude","item":["Data.Ord","comparing"]},{"package":"purescript-prelude","item":["Data.Ord","min"]},{"package":"purescript-prelude","item":["Data.Ord","max"]},{"package":"purescript-prelude","item":["Data.Ord","clamp"]},{"package":"purescript-prelude","item":["Data.Ord","between"]},{"package":"purescript-prelude","item":["Data.Ord","abs"]},{"package":"purescript-prelude","item":["Data.Ord","signum"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","NaturalTransformation"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","type (~>)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","HeytingAlgebra"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(&&)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(||)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","heytingAlgebraFunction"]},{"package":"purescript-prelude","item":["Data.Functor","Functor"]},{"package":"purescript-prelude","item":["Data.Functor","(<$>)"]},{"package":"purescript-prelude","item":["Data.Functor","mapFlipped"]},{"package":"purescript-prelude","item":["Data.Functor","(<#>)"]},{"package":"purescript-prelude","item":["Data.Functor","functorFn"]},{"package":"purescript-prelude","item":["Data.Functor","void"]},{"package":"purescript-prelude","item":["Data.Functor","voidRight"]},{"package":"purescript-prelude","item":["Data.Functor","(<$)"]},{"package":"purescript-prelude","item":["Data.Functor","voidLeft"]},{"package":"purescript-prelude","item":["Data.Functor","($>)"]},{"package":"purescript-prelude","item":["Data.Functor","flap"]},{"package":"purescript-prelude","item":["Data.Functor","(<@>)"]},{"package":"purescript-prelude","item":["Data.Function","flip"]},{"package":"purescript-prelude","item":["Data.Function","const"]},{"package":"purescript-prelude","item":["Data.Function","apply"]},{"package":"purescript-prelude","item":["Data.Function","($)"]},{"package":"purescript-prelude","item":["Data.Function","applyFlipped"]},{"package":"purescript-prelude","item":["Data.Function","(#)"]},{"package":"purescript-prelude","item":["Data.Function","on"]},{"package":"purescript-prelude","item":["Data.Field","Field"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","EuclideanRing"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","(/)"]},{"package":"purescript-prelude","item":["Data.Eq","Eq"]},{"package":"purescript-prelude","item":["Data.Eq","(==)"]},{"package":"purescript-prelude","item":["Data.Eq","notEq"]},{"package":"purescript-prelude","item":["Data.Eq","(/=)"]},{"package":"purescript-prelude","item":["Data.CommutativeRing","CommutativeRing"]},{"package":"purescript-prelude","item":["Data.Bounded","Bounded"]},{"package":"purescript-prelude","item":["Data.BooleanAlgebra","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Data.Boolean","otherwise"]},{"package":"purescript-prelude","item":["Data.Ord.Unsafe","unsafeCompare"]},{"package":"purescript-profunctor","item":["Data.Profunctor","Profunctor"]},{"package":"purescript-profunctor","item":["Data.Profunctor","lmap"]},{"package":"purescript-profunctor","item":["Data.Profunctor","rmap"]},{"package":"purescript-profunctor","item":["Data.Profunctor","arr"]},{"package":"purescript-profunctor","item":["Data.Profunctor","unwrapIso"]},{"package":"purescript-profunctor","item":["Data.Profunctor","wrapIso"]},{"package":"purescript-profunctor","item":["Data.Profunctor","profunctorFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","Strong"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","strongFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","splitStrong"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(***)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","fanout"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(&&&)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","Star"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","newtypeStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","semigroupoidStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","categoryStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","functorStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","invariantStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","applyStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","applicativeStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","bindStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","monadStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","altStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","plusStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","alternativeStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","monadZeroStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","monadPlusStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","distributiveStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","profunctorStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","strongStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","choiceStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","closedStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costrong","Costrong"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","Costar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","newtypeCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","semigroupoidCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","categoryCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","functorCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","invariantCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","applyCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","applicativeCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","bindCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","monadCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","distributiveCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","profunctorCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","strongCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","costrongCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","cochoiceCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Costar","closedCostar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Cochoice","Cochoice"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Closed","Closed"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Closed","closedFunction"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","Choice"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","choiceFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","splitChoice"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(+++)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","fanin"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(|||)"]},{"package":"purescript-psci-support","item":["PSCI.Support","Eval"]},{"package":"purescript-psci-support","item":["PSCI.Support","evalShow"]},{"package":"purescript-psci-support","item":["PSCI.Support","evalEff"]},{"package":"purescript-tuples","item":["Data.Tuple","Tuple"]},{"package":"purescript-tuples","item":["Data.Tuple","showTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","eqTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ordTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","commutativeRingTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","heytingAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","booleanAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","functorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","invariantTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifunctorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bindTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","extendTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","comonadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","lazyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","foldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifoldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","traversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bitraversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","fst"]},{"package":"purescript-tuples","item":["Data.Tuple","snd"]},{"package":"purescript-tuples","item":["Data.Tuple","curry"]},{"package":"purescript-tuples","item":["Data.Tuple","uncurry"]},{"package":"purescript-tuples","item":["Data.Tuple","swap"]},{"package":"purescript-tuples","item":["Data.Tuple","lookup"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T11"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry10"]}],"version":"2.0.0","github":["paf31","purescript-folds"],"versionTag":"v2.0.0","compilerVersion":"0.9.1"}