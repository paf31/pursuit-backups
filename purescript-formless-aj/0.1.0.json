{"uploader":"ajnsit","packageMeta":{"homepage":"https://github.com/ajnsit/purescript-formless-independent","repository":{"url":"https://github.com/ajnsit/purescript-formless-independent.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","test","tests"],"authors":[{"email":"ajnsit@gmail.com","name":"Anupam Jain"},{"email":"admin@thomashoneyman.com","name":"Thomas R. Honeyman"}],"dependencies":{"purescript-effect":"^2.0.1","purescript-variant":"^6.0.1","purescript-profunctor-lenses":"^6.2.0","purescript-aff":"^5.1.1","purescript-heterogeneous":"^0.4.1","purescript-generics-rep":"^6.1.1","purescript-datetime":"^4.1.1"},"name":"purescript-formless-aj","license":["MIT"]},"tagTime":"2019-07-08T05:13:05+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Formless","Class","Initial"]},"declarations":[{"children":[{"comments":null,"title":"initial","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeVar","contents":"v"}},"sourceSpan":{"start":[20,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[20,15]}},{"comments":null,"title":"initialUnit","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[23,19]}},{"comments":null,"title":"initialBoolean","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[25,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[26,18]}},{"comments":null,"title":"initialInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[28,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[29,14]}},{"comments":null,"title":"initialNumber","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[31,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[32,16]}},{"comments":null,"title":"initialString","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[34,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[35,19]}},{"comments":null,"title":"initialOrdering","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}},"sourceSpan":{"start":[37,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[38,19]}},{"comments":null,"title":"initialMaybe","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[41,20]}},{"comments":null,"title":"initialArray","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[43,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[44,19]}},{"comments":null,"title":"initialList","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[46,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[47,19]}},{"comments":null,"title":"initialMap","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"k"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"annotation":[],"tag":"TypeVar","contents":"k"}]},{"annotation":[],"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[49,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[50,19]}},{"comments":null,"title":"initialFn","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[52,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[53,19]}},{"comments":null,"title":"initialTuple","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[55,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[56,34]}},{"comments":null,"title":"initialRecord","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"list"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"MonoidRecord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"list"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[59,19]}}],"comments":"A type class that provides initial values for form fields. While superficially similar to\nHaskell's `Default` type class, this class is only meant for the purposes of defining\ninitial form values. If you need a default value for a field in your form, you are better\noff defining it as a `Maybe` field and providing a default as part of validation.\n\nIn general, if you find yourself reaching for this type class without defining your form\nas a row and generating your form spec from it, then you are probably not doing what you intend.\n","title":"Initial","info":{"fundeps":[],"arguments":[["v",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[20,15]}}]},{"moduleName":{"package":null,"item":["Formless","Component"]},"declarations":[{"children":[],"comments":null,"title":"eval","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ivfs",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["os",{"annotation":[],"tag":"ForAll","contents":["vs",{"annotation":[],"tag":"ForAll","contents":["us",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["ivs",{"annotation":[],"tag":"ForAll","contents":["ixs",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"ixs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"EqRecord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ixs"},{"annotation":[],"tag":"TypeVar","contents":"is"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"InputFieldsToFormFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ixs"},{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldsToInputFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"is"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"CountErrors"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"AllTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"SetFormFieldsTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ReplaceFormFieldInputs"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ModifyAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ifs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ValidateAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"vs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldToMaybeOutput"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"os"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"ivs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"ivfs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"us"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"State"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"State"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}}]}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Component.purs","end":[43,57]}}]},{"moduleName":{"package":null,"item":["Formless","Data","FormFieldResult"]},"declarations":[{"children":[{"comments":null,"title":"NotValidated","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Validating","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Error","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"error"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Success","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"output"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[19,74]}},{"comments":null,"title":"eqFormFieldResult","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[20,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[20,78]}},{"comments":null,"title":"functorFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[21,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[21,70]}},{"comments":null,"title":"applyFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[23,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[27,38]}},{"comments":null,"title":"applicativeFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[29,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[30,17]}},{"comments":null,"title":"bindFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[32,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[36,37]}},{"comments":null,"title":"monadFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[38,59]}},{"comments":null,"title":"showFormFieldResult","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[41,21]}}],"comments":"A data type which represents the possible output states of the field. Use\nthe helpers in `Retrieve` to easily manipulate this type.\n","title":"FormFieldResult","info":{"declType":"data","dataDeclType":"data","typeArguments":[["error",null],["output",null]]},"sourceSpan":{"start":[13,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[17,19]}},{"children":[],"comments":null,"title":"toMaybe","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[48,54]}},{"children":[],"comments":null,"title":"fromEither","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[43,60]}},{"children":[],"comments":null,"title":"_Success","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[58,55]}},{"children":[],"comments":null,"title":"_Error","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[53,53]}}]},{"moduleName":{"package":null,"item":["Formless","Query"]},"declarations":[{"children":[],"comments":"Validate all fields in the form, collecting errors\n","title":"validateAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},null]}},"sourceSpan":{"start":[183,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[183,34]}},{"children":[],"comments":"A helper to create the correct `Validate` query for Formless, given\na label\n","title":"validate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["us",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"us"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"us"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[152,16]}},{"children":[],"comments":"Submit the form, which will trigger a `Submitted` result if the\nform validates successfully.\n","title":"submit","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},null]}},"sourceSpan":{"start":[24,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[24,29]}},{"children":[],"comments":"Provide a record of inputs to overwrite all current inputs without\nresetting the form (as `initialize` does), and then validate the\nentire new set of fields. Similar to calling `setValidate` on every\nfield in the form.\n","title":"setValidateAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is'",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[190,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[195,16]}},{"children":[],"comments":"Set the input value of a form field at the specified label, also triggering\nvalidation to run on the field.\n","title":"setValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[68,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[75,16]}},{"children":[],"comments":"Provide a record of input fields to overwrite all current\ninputs. Unlike `initialize`, this does not otherwise reset\nthe form as if it were new. Similar to calling `set` on every\nfield in the form.\n","title":"setAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is'",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[159,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[164,16]}},{"children":[],"comments":"Set the input value of a form field at the specified label\n","title":"set","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[63,16]}},{"children":[],"comments":"Reset all fields to their initial values, and reset the form\nto its initial pristine state, no touched fields.\n","title":"resetAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},null]}},"sourceSpan":{"start":[179,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[179,31]}},{"children":[],"comments":"Reset the value of the specified form field to its default value\naccording to the `Initial` type class.\n","title":"reset","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[134,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[141,16]}},{"children":[],"comments":"Provide a record of input functions to modify all current\ninputs, and then validate all fields.  Similar to calling\n`modifyValidate` on every field in the form.\n","title":"modifyValidateAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ifs'",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[201,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[206,16]}},{"children":[],"comments":"Modify the input value of a form field at the specified label, also triggering\nvalidation to run on the field, with the provided function.\n","title":"modifyValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[114,16]}},{"children":[],"comments":"Provide a record of input functions to modify all current\ninputs. Similar to calling `modify` on every field in the form.\n","title":"modifyAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ifs'",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[169,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[174,16]}},{"children":[],"comments":"Modify the input value of a form field at the specified label with the\nprovided function.\n","title":"modify","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[102,16]}},{"children":[],"comments":"`initialize` as an action, so you don't need to specify a `Unit`\nresult. Use to skip a use of `Halogen.action`.\n","title":"loadForm_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},null]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[41,16]}},{"children":[],"comments":"Replace all form inputs with a new set of inputs, and re-initialize\nthe form to a new state. Useful to set a new \"initial state\" for a form,\nespecially when filling a form with data loaded asynchronously.\n","title":"loadForm","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},null]}},"sourceSpan":{"start":[30,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[33,16]}},{"children":[],"comments":"Set the input value of a form field at the specified label, while debouncing\nvalidation so that it only runs after the specified amount of time has elapsed\nsince the last modification. Useful when you need to avoid expensive validation\nbut do not want to wait for a blur event to validate.\n","title":"asyncSetValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[90,16]}},{"children":[],"comments":"Modify the input value of a form field at the specified label, while debouncing\nvalidation so that it only runs after the specified amount of time has elapsed\nsince the last modification. Useful when you need to avoid expensive validation\nbut do not want to wait for a blur event to validate.\n","title":"asyncModifyValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[121,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[129,16]}},{"children":[],"comments":"Perform two Formless actions in sequence. Can be chained arbitrarily.\nUseful when a field needs to modify itself on change and also trigger\nvalidation on one or more other fields, or when a modification on one\nfield should also modify another field.\n","title":"andThen","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[52,16]}}]},{"moduleName":{"package":null,"item":["Formless","Retrieve"]},"declarations":[{"children":[{"comments":null,"title":"GetTouchedField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getTouchedField function\n","title":"getTouchedField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetTouchedField"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[153,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[154,60]}}],"comments":"Data constructor for the getTouchedField function\n","title":"GetTouchedField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[150,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[150,39]}},{"children":[{"comments":null,"title":"GetResultField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getResultField function\n","title":"getResultField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetResultField"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[160,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[161,57]}}],"comments":"Data constructor for the getResultField function\n","title":"GetResultField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[157,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[157,37]}},{"children":[{"comments":null,"title":"GetOutput","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getOutput function\n","title":"getOutput'","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetOutput"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[176,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[177,60]}}],"comments":"Data constructor for the getOutput function\n","title":"GetOutput","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[173,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[173,27]}},{"children":[{"comments":null,"title":"GetInputField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getInputField function\n","title":"getInputField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetInputField"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}},"sourceSpan":{"start":[146,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[147,54]}}],"comments":"Data constructor for the getInputField function\n","title":"GetInputField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[143,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[143,35]}},{"children":[{"comments":null,"title":"GetError","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getError function\n","title":"getErrorResult'","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[167,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[170,17]}}],"comments":"Data constructor for the getError function\n","title":"GetError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[164,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[164,25]}},{"children":[],"comments":"A type representing retrieving all of a particular field with the field's\nconstructor name. For internal use.\n","title":"GetAll","info":{"arguments":[["f",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["r1",{"annotation":[],"tag":"ForAll","contents":["r0",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"r0"},{"annotation":[],"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeVar","contents":"r0"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeVar","contents":"r1"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[140,8]}},{"children":[],"comments":"A type representing a lens onto part of a form field\n","title":"FormFieldLens","info":{"arguments":[["e",null],["i",null],["o",null],["x",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[125,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[131,37]}},{"children":[],"comments":"A type representing a function to produce a value from a record of\nform fields given a particular symbol. The result of `view` from\nData.Lens applied with a particular lens to the form.\n","title":"FormFieldGet","info":{"arguments":[["e",null],["i",null],["o",null],["x",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[122,7]}},{"children":[],"comments":"Get the form as a record where all fields are only the touched value\n","title":"getTouchedAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetTouchedField"]}]}},"sourceSpan":{"start":[53,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[53,40]}},{"children":[],"comments":"Given a form, get the touched field at the specified symbol\n","title":"getTouched","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[30,50]}},{"children":[],"comments":"Get the form as a record where all fields are only the result value\n","title":"getResultAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetResultField"]}]}},"sourceSpan":{"start":[57,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[57,38]}},{"children":[],"comments":"Given a form, get the result at the specified symbol\n","title":"getResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[34,63]}},{"children":[],"comments":"Get the form as a record where all fields are only the output value\n","title":"getOutputAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetOutput"]}]}},"sourceSpan":{"start":[65,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[65,33]}},{"children":[],"comments":"Given a form, get the output (if it exists) at the specified symbol\n","title":"getOutput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[42,51]}},{"children":[],"comments":"Get the form as a record where all fields are only the input value\n","title":"getInputAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetInputField"]}]}},"sourceSpan":{"start":[49,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[49,36]}},{"children":[],"comments":"Given a form, get the input at the specified symbol\n","title":"getInput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},null]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[26,42]}},{"children":[],"comments":"Given a form, get the field at the specified symbol\n","title":"getField","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}}]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[22,70]}},{"children":[],"comments":"Get the form as a record where all fields are only the error value\n","title":"getErrorAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetError"]}]}},"sourceSpan":{"start":[61,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[61,31]}},{"children":[],"comments":"Given a form, get the error (if it exists) at the specified symbol\n","title":"getError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[38,50]}},{"children":[],"comments":"A lens to operate on the 'touched' field at a given symbol in your form\n","title":"_FieldTouched","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[80,54]}},{"children":[],"comments":"A lens to operate on the 'result' field at a given symbol in your form\n","title":"_FieldResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[84,67]}},{"children":[],"comments":"A traversal to operate on the possible output inside the 'result' field at\na given symbol in your form\n","title":"_FieldOutput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[100,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[106,42]}},{"children":[],"comments":"A lens to operate on the input at a given symbol in your form\n","title":"_FieldInput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},null]},null]},null]}},"sourceSpan":{"start":[76,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[76,46]}},{"children":[],"comments":"A traversal to operate on the possible error inside the 'result' field at\na given symbol in your form\n","title":"_FieldError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[89,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[95,42]}},{"children":[],"comments":"A lens to operate on the field at a given symbol in your form\n","title":"_Field","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}}]},null]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[72,69]}}]},{"moduleName":{"package":null,"item":["Formless","Transform","Record"]},"declarations":[{"children":[{"comments":null,"title":"WrapField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"wrapField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"wrapper"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeVar","contents":"wrapper"}]}},"sourceSpan":{"start":[21,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[22,27]}}],"comments":"Wrap every field in a record with a particular newtype\n","title":"WrapField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[19,27]}},{"children":[{"comments":null,"title":"UnwrapField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"unwrapField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"wrapper"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"UnwrapField"]}]},{"annotation":[],"tag":"TypeVar","contents":"wrapper"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[12,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[13,31]}}],"comments":"Unwrap every newtype in a record filled with newtypes\n","title":"UnwrapField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[10,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[10,31]}},{"children":[],"comments":null,"title":"wrapRecord","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r1",{"annotation":[],"tag":"ForAll","contents":["r0",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeVar","contents":"r0"},{"annotation":[],"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"r0"}]},{"annotation":[],"tag":"TypeVar","contents":"r1"}]}]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[24,59]}},{"children":[],"comments":"Provided a record, where each field in the record contains\na function from `input -> input`, wraps each function in\nthe InputField type for compatibility with Formless\n","title":"wrapInputFunctions","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ifs'",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[57,31]}},{"children":[],"comments":"Provided a record, where each field in the record contains\na value of type `input`, wraps each value in the InputField\ntype for compatibility with Formless\n","title":"wrapInputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is'",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[46,28]}},{"children":[],"comments":null,"title":"unwrapRecord","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r1",{"annotation":[],"tag":"ForAll","contents":["r0",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"UnwrapField"]},{"annotation":[],"tag":"TypeVar","contents":"r0"},{"annotation":[],"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"r0"}]},{"annotation":[],"tag":"TypeVar","contents":"r1"}]}]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[15,63]}},{"children":[],"comments":"Provided your form type containing a record of only valid outputs\nfrom the result of validation, unwraps the form and every value\nin the record to provide a record of only the output values.\n","title":"unwrapOutputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["os'",{"annotation":[],"tag":"ForAll","contents":["os",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"UnwrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os'"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[35,15]}}]},{"moduleName":{"package":null,"item":["Formless","Transform","Row"]},"declarations":[{"children":[],"comments":"A type to collect constraints necessary to apply to prove that a record of\nSProxies is compatible with your form type.\n","title":"SProxies","info":{"arguments":[["form",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["row",{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeSProxies"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[69,17]}},{"children":[{"comments":null,"title":"mkInputFieldsFromRowBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","Row"],"RProxy"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}]}},"sourceSpan":{"start":[41,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[41,76]}},{"comments":null,"title":"mkInputFieldsFromRowNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[43,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[44,45]}},{"comments":null,"title":"mkInputFieldsFromRowCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[46,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[60,39]}}],"comments":"The class that provides the Builder implementation to efficiently\ntransform a row into a proper InputFields by wrapping it in newtypes and\nsupplying initial values\n","title":"MakeInputFieldsFromRow","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[41,76]}},{"children":[{"comments":null,"title":"makeSProxiesBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}},"sourceSpan":{"start":[87,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[87,54]}},{"comments":null,"title":"makeSProxiesNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeSProxies"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[89,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[90,35]}},{"comments":null,"title":"makeSProxiesCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeSProxies"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeSProxies"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[92,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[101,77]}}],"comments":"The class used to build up a new record of symbol proxies from an\ninput row list.\n","title":"MakeSProxies","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[86,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[87,54]}},{"children":[],"comments":"A helper function to produce a record of SProxies given a form spec, to save\nyou the boilerplate of writing them all out.\n","title":"mkSProxies","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["row",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeSProxies"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormProxy"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[79,16]}},{"children":[],"comments":"A function to transform a row of labels into a InputFields. This allows you\nto go directly from a custom form newtype to an inputs record without having to\nfill in any values. Requires that all members have an instance of the\n`Initial` type class (all monoidal values do by default, along with some\nother primitives).\n","title":"mkInputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormProxy"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[30,28]}}]},{"moduleName":{"package":null,"item":["Formless","Types","Form"]},"declarations":[{"children":[{"comments":null,"title":"U","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Represents a unit value with the correct number of arguments; largely for internal use.\n","title":"U","info":{"declType":"data","dataDeclType":"data","typeArguments":[["e",null],["i",null],["o",null]]},"sourceSpan":{"start":[25,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[25,17]}},{"children":[],"comments":"A type synonym that lets you pick out just the output type from\nyour form row.\n","title":"OutputType","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeVar","contents":"output"}},"sourceSpan":{"start":[56,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[56,44]}},{"children":[{"comments":null,"title":"OutputField","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"output"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeOutputField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[21,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[21,68]}},{"comments":null,"title":"eqOutputField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[22,72]}}],"comments":"A wrapper to represent only the output type. Used to represent\nform results at the end of validation.\n","title":"OutputField","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[20,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[20,60]}},{"children":[],"comments":"A type synonym that lets you pick out just the input type from\nyour form row.\n","title":"InputType","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeVar","contents":"input"}},"sourceSpan":{"start":[52,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[52,42]}},{"children":[{"comments":null,"title":"InputFunction","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"input"}]},{"annotation":[],"tag":"TypeVar","contents":"input"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeInputFunction","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[29,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[29,72]}}],"comments":"Represents modifications to input fields\n","title":"InputFunction","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[28,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[28,74]}},{"children":[{"comments":null,"title":"InputField","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"input"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeInputField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[15,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[15,66]}},{"comments":null,"title":"eqInputField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[16,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[16,70]}}],"comments":"A wrapper to represent only the input type. Requires that `eq` is defined for the input\ntype in order to track dirty states.\n","title":"InputField","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[14,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[14,57]}},{"children":[{"comments":null,"title":"FormProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Create a proxy for your form type, for use with functions that generate records from\nform proxies.\n","title":"FormProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["form",{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]}]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]}]]},"sourceSpan":{"start":[10,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[10,96]}},{"children":[],"comments":"The row used for the FormField newtype and in lens type signatures\n","title":"FormFieldRow","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"RCons","contents":["input",{"annotation":[],"tag":"TypeVar","contents":"input"},{"annotation":[],"tag":"RCons","contents":["touched",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["result",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"error"}]},{"annotation":[],"tag":"TypeVar","contents":"output"}]},{"annotation":[],"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[37,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[41,4]}},{"children":[{"comments":null,"title":"FormField","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeFormField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[33,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[33,64]}},{"comments":null,"title":"eqFormField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[34,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[34,74]}}],"comments":"The type that we need to record state across the form\n","title":"FormField","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["i",null],["o",null]]},"sourceSpan":{"start":[32,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[32,66]}},{"children":[],"comments":"A type synonym that lets you pick out just the error type from\nyour form row.\n","title":"ErrorType","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeVar","contents":"error"}},"sourceSpan":{"start":[48,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[48,42]}}]},{"moduleName":{"package":null,"item":["Formless","Types","Query"]},"declarations":[{"children":[{"comments":null,"title":"Invalid","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Incomplete","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Valid","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[73,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[73,60]}},{"comments":null,"title":"eqValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]}},"sourceSpan":{"start":[74,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[74,48]}},{"comments":null,"title":"ordValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]}},"sourceSpan":{"start":[75,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[75,50]}},{"comments":null,"title":"showValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]}},"sourceSpan":{"start":[77,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[78,21]}}],"comments":"A type to represent a running debouncer\nA type to represent validation status\n","title":"ValidStatus","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[68,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[71,10]}},{"children":[],"comments":"The component's public state\n","title":"StateRow","info":{"arguments":[["form",null],["r",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"RCons","contents":["validity",{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]},{"annotation":[],"tag":"RCons","contents":["dirty",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["submitting",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["errors",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"RCons","contents":["submitAttempts",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"RCons","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[46,4]}},{"children":[],"comments":"The component local state\n","title":"State","info":{"arguments":[["form",null],["m",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"StateRow"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"RCons","contents":["internal",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"InternalState"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"REmpty"}]}]}}]}},"sourceSpan":{"start":[32,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[32,78]}},{"children":[{"comments":null,"title":"Modify","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Validate","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ModifyValidate","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Reset","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SetAll","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ModifyAll","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ResetAll","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ValidateAll","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Submit","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LoadForm","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AndThen","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"The component query type. See Formless.Query for helpers related\nto constructing and using these queries.\n","title":"Query","info":{"declType":"data","dataDeclType":"data","typeArguments":[["form",null]]},"sourceSpan":{"start":[18,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[29,38]}},{"children":[],"comments":"The component's public state\n","title":"PublicState","info":{"arguments":[["form",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"StateRow"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[35,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[35,50]}},{"children":[{"comments":null,"title":"InternalState","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["initialInputs",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]},{"annotation":[],"tag":"RCons","contents":["validators",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]},{"annotation":[],"tag":"RCons","contents":["allTouched",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeInternalState","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"InternalState"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[58,73]}}],"comments":"A newtype to make easier type errors for end users to\nread by hiding internal fields\n","title":"InternalState","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["form",null],["m",null]]},"sourceSpan":{"start":[50,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[57,4]}}]},{"moduleName":{"package":null,"item":["Formless","Validation"]},"declarations":[{"children":[{"comments":null,"title":"Validation","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"input"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"error"}]},{"annotation":[],"tag":"TypeVar","contents":"output"}]}}]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeValidation","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[19,73]}},{"comments":null,"title":"functorValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[20,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[20,82]}},{"comments":null,"title":"applyValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[26,23]}},{"comments":null,"title":"applicativeValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[28,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[29,58]}},{"comments":null,"title":"altValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[31,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[35,23]}},{"comments":null,"title":"semigroupValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[37,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[38,88]}},{"comments":null,"title":"monoidValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[43,50]}},{"comments":null,"title":"semigroupoidValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Semigroupoid"],"Semigroupoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[45,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[48,47]}},{"comments":null,"title":"categoryValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Category"],"Category"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[50,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[51,46]}},{"comments":"The heterogeneous instance the noValidation function\n","title":"emptyValidators","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"EmptyValidators"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[106,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[107,54]}}],"comments":"A wrapper to represent the validation function on a form field, which can itself take\nthe form state as its first argument. Inspired in some parts by the Validation type\nfrom purescript-polyform by @paluh.\n","title":"Validation","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["form",null],["m",null],["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[18,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[18,118]}},{"children":[{"comments":null,"title":"EmptyValidators","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"The heterogeneous instance the noValidation function\n","title":"emptyValidators","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"EmptyValidators"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[106,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[107,54]}}],"comments":"The data type used for the noValidation function's heterogenous instance\n","title":"EmptyValidators","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[103,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[103,39]}},{"children":[],"comments":"A more verbose but clearer function for running a validation function on its inputs\n","title":"runValidation","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[58,116]}},{"children":[],"comments":"A function to create a record of validators that simply pass through all inputs\nfor when no validation is needed. Provide this as your `validators` function.\n","title":"noValidation","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ForAll","contents":["vs",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fields"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"MapRecordWithIndex"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"ConstMapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"EmptyValidators"]}]}},{"annotation":[],"tag":"TypeVar","contents":"fields"},{"annotation":[],"tag":"TypeVar","contents":"vs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[71,37]}},{"children":[],"comments":"Turn a function from (i -> o) into a proper Validation\n","title":"hoistFn_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[79,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[79,75]}},{"children":[],"comments":"Turn a function from (i -> m (Either e o)) into a proper Validation\n","title":"hoistFnME_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[95,90]}},{"children":[],"comments":"Turn a function from (form Record FormField -> i -> m (Either e o)) into a proper Validation\n","title":"hoistFnME","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[91,114]}},{"children":[],"comments":"Turn a function from (i -> Either e o) into a proper Validation\n","title":"hoistFnE_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[87,85]}},{"children":[],"comments":"Turn a function from (form Record FormField -> i -> Either e o) into a proper Validation\n","title":"hoistFnE","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[83,109]}},{"children":[],"comments":"Turn a function from (form Record FormField -> i -> o) into a proper Validation\n","title":"hoistFn","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[75,99]}}]}],"name":"Formless","comments":"Formless is a renderless component to help you build forms\nin a UI independent way. This module re-exports all public\nfunctions and types from the library, and can be used as\nthe single import for most use cases.\n\n```purescript\nimport Formless as F\n```\n","declarations":[]},{"reExports":[],"name":"Formless.Class.Initial","comments":null,"declarations":[{"children":[{"comments":null,"title":"initial","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeVar","contents":"v"}},"sourceSpan":{"start":[20,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[20,15]}},{"comments":null,"title":"initialUnit","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[23,19]}},{"comments":null,"title":"initialBoolean","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[25,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[26,18]}},{"comments":null,"title":"initialInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[28,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[29,14]}},{"comments":null,"title":"initialNumber","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[31,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[32,16]}},{"comments":null,"title":"initialString","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[34,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[35,19]}},{"comments":null,"title":"initialOrdering","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}},"sourceSpan":{"start":[37,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[38,19]}},{"comments":null,"title":"initialMaybe","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[41,20]}},{"comments":null,"title":"initialArray","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[43,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[44,19]}},{"comments":null,"title":"initialList","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[46,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[47,19]}},{"comments":null,"title":"initialMap","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"k"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"annotation":[],"tag":"TypeVar","contents":"k"}]},{"annotation":[],"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[49,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[50,19]}},{"comments":null,"title":"initialFn","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[52,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[53,19]}},{"comments":null,"title":"initialTuple","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[55,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[56,34]}},{"comments":null,"title":"initialRecord","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"list"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"MonoidRecord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"list"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Class","Initial"],"Initial"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[59,19]}}],"comments":"A type class that provides initial values for form fields. While superficially similar to\nHaskell's `Default` type class, this class is only meant for the purposes of defining\ninitial form values. If you need a default value for a field in your form, you are better\noff defining it as a `Maybe` field and providing a default as part of validation.\n\nIn general, if you find yourself reaching for this type class without defining your form\nas a row and generating your form spec from it, then you are probably not doing what you intend.\n","title":"Initial","info":{"fundeps":[],"arguments":[["v",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Class/Initial.purs","end":[20,15]}}]},{"reExports":[],"name":"Formless.Component","comments":null,"declarations":[{"children":[],"comments":null,"title":"eval","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ivfs",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["os",{"annotation":[],"tag":"ForAll","contents":["vs",{"annotation":[],"tag":"ForAll","contents":["us",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["ivs",{"annotation":[],"tag":"ForAll","contents":["ixs",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"ixs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"EqRecord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ixs"},{"annotation":[],"tag":"TypeVar","contents":"is"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"InputFieldsToFormFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ixs"},{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldsToInputFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"is"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"CountErrors"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"AllTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"SetFormFieldsTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ReplaceFormFieldInputs"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ModifyAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ifs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ValidateAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"vs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldToMaybeOutput"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"os"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"ivs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"ivfs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"us"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"State"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"State"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}}]}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Component.purs","end":[43,57]}}]},{"reExports":[],"name":"Formless.Data.FormFieldResult","comments":null,"declarations":[{"children":[{"comments":null,"title":"NotValidated","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Validating","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Error","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"error"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Success","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"output"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[19,74]}},{"comments":null,"title":"eqFormFieldResult","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[20,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[20,78]}},{"comments":null,"title":"functorFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[21,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[21,70]}},{"comments":null,"title":"applyFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[23,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[27,38]}},{"comments":null,"title":"applicativeFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[29,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[30,17]}},{"comments":null,"title":"bindFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[32,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[36,37]}},{"comments":null,"title":"monadFormFieldResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[38,59]}},{"comments":null,"title":"showFormFieldResult","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[41,21]}}],"comments":"A data type which represents the possible output states of the field. Use\nthe helpers in `Retrieve` to easily manipulate this type.\n","title":"FormFieldResult","info":{"declType":"data","dataDeclType":"data","typeArguments":[["error",null],["output",null]]},"sourceSpan":{"start":[13,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[17,19]}},{"children":[],"comments":null,"title":"fromEither","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[43,60]}},{"children":[],"comments":null,"title":"toMaybe","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[48,54]}},{"children":[],"comments":null,"title":"_Error","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[53,53]}},{"children":[],"comments":null,"title":"_Success","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Data/FormFieldResult.purs","end":[58,55]}}]},{"reExports":[],"name":"Formless.Internal.Transform","comments":null,"declarations":[{"children":[],"comments":"Apply a builder that produces an output record from an empty record\n","title":"fromScratch","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},null]}},"sourceSpan":{"start":[27,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[27,46]}},{"children":[],"comments":"Represents building some output record from an empty record\n","title":"FromScratch","info":{"arguments":[["r",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"REmpty"}]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[31,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[31,43]}},{"children":[{"comments":null,"title":"row1Cons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"},{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"r'"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"Row1Cons"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]},{"annotation":[],"tag":"TypeVar","contents":"r'"}]}},"sourceSpan":{"start":[35,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[35,77]}}],"comments":"A constraint synonym for Row.Cons and Row.Lacks\n","title":"Row1Cons","info":{"fundeps":[[["s","t","r"],["r'"]],[["s","r'"],["t","r"]]],"arguments":[["s",null],["t",null],["r",null],["r'",null]],"declType":"typeClass","superclasses":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"},{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"r'"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null}]},"sourceSpan":{"start":[34,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[34,89]}},{"children":[],"comments":"A helper function that will count all errors in a record\n","title":"allTouched","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"AllTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[47,13]}},{"children":[],"comments":"A helper function that will count all errors in a record\n","title":"countErrors","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"CountErrors"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[51,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[57,9]}},{"children":[],"comments":"A helper function that will automatically transform a record of FormField(s) into\njust the input value\n","title":"setFormFieldsTouched","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"SetFormFieldsTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[68,27]}},{"children":[],"comments":"A helper function that will automatically transform a record of FormField(s) into\njust the input value\n","title":"formFieldsToInputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldsToInputFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"is"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[74,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[81,28]}},{"children":[],"comments":"A helper function that will automatically transform a record of FormSpec(s) into\na record of FormField(s).\n","title":"inputFieldsToFormFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["ixs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"ixs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"InputFieldsToFormFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ixs"},{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[94,27]}},{"children":[],"comments":"An intermediate function that transforms a record of FormField into a record\n","title":"formFieldsToMaybeOutputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["os",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldToMaybeOutput"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"os"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[106,37]}},{"children":[],"comments":null,"title":"replaceFormFieldInputs","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ReplaceFormFieldInputs"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[110,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[118,27]}},{"children":[],"comments":null,"title":"modifyAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ModifyAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ifs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[122,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[130,27]}},{"children":[],"comments":null,"title":"validateAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["fxs",{"annotation":[],"tag":"ForAll","contents":["vs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ValidateAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"vs"},{"annotation":[],"tag":"TypeVar","contents":"fxs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"fs"},{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[134,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[143,31]}},{"children":[],"comments":"Given a variant of InputFunction and a record with the same labels but\nFormField values, replace the input of the form field. In addition, modify\nthe form field result to represent whether async validation is going to\noccur.\n","title":"unsafeModifyInputVariant","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["y",{"annotation":[],"tag":"ForAll","contents":["x",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"y"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},null]},null]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[156,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[163,27]}},{"children":[],"comments":null,"title":"unsafeRunValidationVariant","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["z",{"annotation":[],"tag":"ForAll","contents":["y",{"annotation":[],"tag":"ForAll","contents":["x",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"y"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"z"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[175,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[184,31]}},{"children":[{"comments":null,"title":"setFormFieldsTouchedBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}]}},"sourceSpan":{"start":[203,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[203,76]}},{"comments":null,"title":"setFormFieldsTouchedNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"SetFormFieldsTouched"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[205,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[206,45]}},{"comments":null,"title":"setFormFieldsTouchedCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"SetFormFieldsTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"SetFormFieldsTouched"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[208,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[221,39]}}],"comments":"The class that provides the Builder implementation to set all form fields touched\n","title":"SetFormFieldsTouched","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[202,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[203,76]}},{"children":[{"comments":null,"title":"formFieldsToInputFieldsBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}]}},"sourceSpan":{"start":[229,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[229,79]}},{"comments":null,"title":"inputFieldsToInputNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FormFieldsToInputFields"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[231,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[232,48]}},{"comments":null,"title":"inputFieldsToInputCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldsToInputFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FormFieldsToInputFields"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[234,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[248,53]}}],"comments":"The class that provides the Builder implementation to efficiently transform the record\nof FormField to record of InputField.\n","title":"FormFieldsToInputFields","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[228,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[229,79]}},{"children":[{"comments":null,"title":"inputFieldsToFormFieldsBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}]}},"sourceSpan":{"start":[256,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[256,79]}},{"comments":null,"title":"inputFieldsToFormFieldsNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"InputFieldsToFormFields"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[258,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[259,48]}},{"comments":null,"title":"inputFieldsToFormFieldsCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"InputFieldsToFormFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"InputFieldsToFormFields"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[261,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[275,95]}}],"comments":"The class that provides the Builder implementation to efficiently transform the record\nof InputField to record of FormField.\n","title":"InputFieldsToFormFields","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[255,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[256,79]}},{"children":[{"comments":null,"title":"formFieldsToMaybeOutputBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}}]}]}]}},"sourceSpan":{"start":[284,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[284,87]}},{"comments":null,"title":"formFieldsToMaybeOutputNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FormFieldToMaybeOutput"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[286,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[287,53]}},{"comments":null,"title":"formFieldsToMaybeOutputCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"FormFieldToMaybeOutput"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FormFieldToMaybeOutput"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[289,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[308,65]}}],"comments":"The class that provides the Builder implementation to efficiently transform the record\nof MaybeOutput to a record of OutputField, but only if all fs were successfully\nvalidated.\n","title":"FormFieldToMaybeOutput","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[283,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[284,87]}},{"children":[{"comments":null,"title":"countErrorsImpl","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"rl"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[312,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[312,51]}},{"comments":null,"title":"nilCountErrors","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"CountErrors"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[314,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[315,26]}},{"comments":null,"title":"consCountErrors","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"CountErrors"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"CountErrors"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[317,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[328,56]}}],"comments":"A class to check if all fs in an FormField record have been touched or not\n","title":"CountErrors","info":{"fundeps":[],"arguments":[["rl",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["r",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[311,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[312,51]}},{"children":[{"comments":null,"title":"allTouchedImpl","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"rl"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[335,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[335,54]}},{"comments":null,"title":"nilAllTouched","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"AllTouched"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[337,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[338,28]}},{"comments":null,"title":"consAllTouched","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"AllTouched"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"AllTouched"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[340,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[350,19]}}],"comments":"A class to check if all fs in an FormField record have been touched or not\n","title":"AllTouched","info":{"fundeps":[],"arguments":[["rl",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["r",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[334,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[335,54]}},{"children":[{"comments":null,"title":"validateAllBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}}]}]}]}]}},"sourceSpan":{"start":[357,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[357,84]}},{"comments":null,"title":"applyToValidationNil","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"ValidateAll"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"REmpty"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}},"sourceSpan":{"start":[359,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[360,43]}},{"comments":null,"title":"applyToValidationCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"t1"},{"annotation":[],"tag":"TypeVar","contents":"vs"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ValidateAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"vs"},{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"ValidateAll"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}},"sourceSpan":{"start":[362,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[382,60]}}],"comments":"A class that applies the current state to the unwrapped version of every validator\n","title":"ValidateAll","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["vs",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["m",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[356,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[357,84]}},{"children":[{"comments":null,"title":"modifyAllBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}]}]}},"sourceSpan":{"start":[389,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[389,79]}},{"comments":null,"title":"modifyAllNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"ModifyAll"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[391,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[392,36]}},{"comments":null,"title":"modifyAllCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash0"},{"annotation":[],"tag":"TypeVar","contents":"ifs"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash1"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ModifyAll"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ifs"},{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"ModifyAll"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[394,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[410,90]}}],"comments":null,"title":"ModifyAll","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["ifs",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["fs",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[388,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[389,79]}},{"children":[{"comments":null,"title":"replaceFormFieldInputsBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}]}]}},"sourceSpan":{"start":[416,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[416,91]}},{"comments":null,"title":"replaceFormFieldInputsTouchedNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"ReplaceFormFieldInputs"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[418,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[419,49]}},{"comments":null,"title":"replaceFormFieldInputsTouchedCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash0"},{"annotation":[],"tag":"TypeVar","contents":"is"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash1"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"ReplaceFormFieldInputs"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"ReplaceFormFieldInputs"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[421,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[440,87]}}],"comments":null,"title":"ReplaceFormFieldInputs","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["is",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["fs",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[415,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Internal/Transform.purs","end":[416,91]}}]},{"reExports":[],"name":"Formless.Query","comments":"This module exports helpers for working with Formless queries.\nSince many queries are used as actions and may involve injecting\nvariants, these helpers are provided to remove any associated\nboilerplate. Prefer these over using data constructors from the\nFormless query algebra.\n","declarations":[{"children":[],"comments":"Submit the form, which will trigger a `Submitted` result if the\nform validates successfully.\n","title":"submit","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},null]}},"sourceSpan":{"start":[24,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[24,29]}},{"children":[],"comments":"Replace all form inputs with a new set of inputs, and re-initialize\nthe form to a new state. Useful to set a new \"initial state\" for a form,\nespecially when filling a form with data loaded asynchronously.\n","title":"loadForm","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},null]}},"sourceSpan":{"start":[30,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[33,16]}},{"children":[],"comments":"`initialize` as an action, so you don't need to specify a `Unit`\nresult. Use to skip a use of `Halogen.action`.\n","title":"loadForm_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},null]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[41,16]}},{"children":[],"comments":"Perform two Formless actions in sequence. Can be chained arbitrarily.\nUseful when a field needs to modify itself on change and also trigger\nvalidation on one or more other fields, or when a modification on one\nfield should also modify another field.\n","title":"andThen","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[52,16]}},{"children":[],"comments":"Set the input value of a form field at the specified label\n","title":"set","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[63,16]}},{"children":[],"comments":"Set the input value of a form field at the specified label, also triggering\nvalidation to run on the field.\n","title":"setValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[68,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[75,16]}},{"children":[],"comments":"Set the input value of a form field at the specified label, while debouncing\nvalidation so that it only runs after the specified amount of time has elapsed\nsince the last modification. Useful when you need to avoid expensive validation\nbut do not want to wait for a blur event to validate.\n","title":"asyncSetValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[90,16]}},{"children":[],"comments":"Modify the input value of a form field at the specified label with the\nprovided function.\n","title":"modify","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[102,16]}},{"children":[],"comments":"Modify the input value of a form field at the specified label, also triggering\nvalidation to run on the field, with the provided function.\n","title":"modifyValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[114,16]}},{"children":[],"comments":"Modify the input value of a form field at the specified label, while debouncing\nvalidation so that it only runs after the specified amount of time has elapsed\nsince the last modification. Useful when you need to avoid expensive validation\nbut do not want to wait for a blur event to validate.\n","title":"asyncModifyValidate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[121,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[129,16]}},{"children":[],"comments":"Reset the value of the specified form field to its default value\naccording to the `Initial` type class.\n","title":"reset","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[134,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[141,16]}},{"children":[],"comments":"A helper to create the correct `Validate` query for Formless, given\na label\n","title":"validate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["us",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"us"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"us"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[152,16]}},{"children":[],"comments":"Provide a record of input fields to overwrite all current\ninputs. Unlike `initialize`, this does not otherwise reset\nthe form as if it were new. Similar to calling `set` on every\nfield in the form.\n","title":"setAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is'",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[159,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[164,16]}},{"children":[],"comments":"Provide a record of input functions to modify all current\ninputs. Similar to calling `modify` on every field in the form.\n","title":"modifyAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ifs'",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[169,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[174,16]}},{"children":[],"comments":"Reset all fields to their initial values, and reset the form\nto its initial pristine state, no touched fields.\n","title":"resetAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},null]}},"sourceSpan":{"start":[179,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[179,31]}},{"children":[],"comments":"Validate all fields in the form, collecting errors\n","title":"validateAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},null]}},"sourceSpan":{"start":[183,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[183,34]}},{"children":[],"comments":"Provide a record of inputs to overwrite all current inputs without\nresetting the form (as `initialize` does), and then validate the\nentire new set of fields. Similar to calling `setValidate` on every\nfield in the form.\n","title":"setValidateAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is'",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[190,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[195,16]}},{"children":[],"comments":"Provide a record of input functions to modify all current\ninputs, and then validate all fields.  Similar to calling\n`modifyValidate` on every field in the form.\n","title":"modifyValidateAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ifs'",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[201,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Query.purs","end":[206,16]}}]},{"reExports":[],"name":"Formless.Retrieve","comments":"A module with functions for retriving particular fields from a form\n","declarations":[{"children":[],"comments":"Given a form, get the field at the specified symbol\n","title":"getField","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}}]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[22,70]}},{"children":[],"comments":"Given a form, get the input at the specified symbol\n","title":"getInput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},null]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[26,42]}},{"children":[],"comments":"Given a form, get the touched field at the specified symbol\n","title":"getTouched","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[30,50]}},{"children":[],"comments":"Given a form, get the result at the specified symbol\n","title":"getResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[34,63]}},{"children":[],"comments":"Given a form, get the error (if it exists) at the specified symbol\n","title":"getError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[38,50]}},{"children":[],"comments":"Given a form, get the output (if it exists) at the specified symbol\n","title":"getOutput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldGet"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[42,51]}},{"children":[],"comments":"Get the form as a record where all fields are only the input value\n","title":"getInputAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetInputField"]}]}},"sourceSpan":{"start":[49,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[49,36]}},{"children":[],"comments":"Get the form as a record where all fields are only the touched value\n","title":"getTouchedAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetTouchedField"]}]}},"sourceSpan":{"start":[53,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[53,40]}},{"children":[],"comments":"Get the form as a record where all fields are only the result value\n","title":"getResultAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetResultField"]}]}},"sourceSpan":{"start":[57,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[57,38]}},{"children":[],"comments":"Get the form as a record where all fields are only the error value\n","title":"getErrorAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetError"]}]}},"sourceSpan":{"start":[61,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[61,31]}},{"children":[],"comments":"Get the form as a record where all fields are only the output value\n","title":"getOutputAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetAll"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetOutput"]}]}},"sourceSpan":{"start":[65,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[65,33]}},{"children":[],"comments":"A lens to operate on the field at a given symbol in your form\n","title":"_Field","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}}]},null]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[72,69]}},{"children":[],"comments":"A lens to operate on the input at a given symbol in your form\n","title":"_FieldInput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},null]},null]},null]}},"sourceSpan":{"start":[76,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[76,46]}},{"children":[],"comments":"A lens to operate on the 'touched' field at a given symbol in your form\n","title":"_FieldTouched","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[80,54]}},{"children":[],"comments":"A lens to operate on the 'result' field at a given symbol in your form\n","title":"_FieldResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"FormFieldLens"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[84,67]}},{"children":[],"comments":"A traversal to operate on the possible error inside the 'result' field at\na given symbol in your form\n","title":"_FieldError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[89,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[95,42]}},{"children":[],"comments":"A traversal to operate on the possible output inside the 'result' field at\na given symbol in your form\n","title":"_FieldOutput","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[100,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[106,42]}},{"children":[],"comments":"A type representing a function to produce a value from a record of\nform fields given a particular symbol. The result of `view` from\nData.Lens applied with a particular lens to the form.\n","title":"FormFieldGet","info":{"arguments":[["e",null],["i",null],["o",null],["x",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[122,7]}},{"children":[],"comments":"A type representing a lens onto part of a form field\n","title":"FormFieldLens","info":{"arguments":[["e",null],["i",null],["o",null],["x",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["t0",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}},{"annotation":[],"tag":"TypeVar","contents":"t0"},{"annotation":[],"tag":"TypeVar","contents":"fields"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[125,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[131,37]}},{"children":[],"comments":"A type representing retrieving all of a particular field with the field's\nconstructor name. For internal use.\n","title":"GetAll","info":{"arguments":[["f",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["r1",{"annotation":[],"tag":"ForAll","contents":["r0",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"r0"},{"annotation":[],"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeVar","contents":"r0"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeVar","contents":"r1"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[140,8]}},{"children":[{"comments":null,"title":"GetInputField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getInputField function\n","title":"getInputField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetInputField"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}},"sourceSpan":{"start":[146,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[147,54]}}],"comments":"Data constructor for the getInputField function\n","title":"GetInputField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[143,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[143,35]}},{"children":[{"comments":null,"title":"GetTouchedField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getTouchedField function\n","title":"getTouchedField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetTouchedField"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[153,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[154,60]}}],"comments":"Data constructor for the getTouchedField function\n","title":"GetTouchedField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[150,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[150,39]}},{"children":[{"comments":null,"title":"GetResultField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getResultField function\n","title":"getResultField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetResultField"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[160,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[161,57]}}],"comments":"Data constructor for the getResultField function\n","title":"GetResultField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[157,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[157,37]}},{"children":[{"comments":null,"title":"GetError","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getError function\n","title":"getErrorResult'","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[167,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[170,17]}}],"comments":"Data constructor for the getError function\n","title":"GetError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[164,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[164,25]}},{"children":[{"comments":null,"title":"GetOutput","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"Heterogeneous type class for the getOutput function\n","title":"getOutput'","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Retrieve"],"GetOutput"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[176,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[177,60]}}],"comments":"Data constructor for the getOutput function\n","title":"GetOutput","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[173,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Retrieve.purs","end":[173,27]}}]},{"reExports":[],"name":"Formless.Transform.Record","comments":null,"declarations":[{"children":[{"comments":null,"title":"UnwrapField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"unwrapField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"wrapper"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"UnwrapField"]}]},{"annotation":[],"tag":"TypeVar","contents":"wrapper"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[12,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[13,31]}}],"comments":"Unwrap every newtype in a record filled with newtypes\n","title":"UnwrapField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[10,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[10,31]}},{"children":[],"comments":null,"title":"unwrapRecord","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r1",{"annotation":[],"tag":"ForAll","contents":["r0",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"UnwrapField"]},{"annotation":[],"tag":"TypeVar","contents":"r0"},{"annotation":[],"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"r0"}]},{"annotation":[],"tag":"TypeVar","contents":"r1"}]}]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[15,63]}},{"children":[{"comments":null,"title":"WrapField","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"wrapField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"wrapper"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeVar","contents":"wrapper"}]}},"sourceSpan":{"start":[21,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[22,27]}}],"comments":"Wrap every field in a record with a particular newtype\n","title":"WrapField","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[19,27]}},{"children":[],"comments":null,"title":"wrapRecord","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r1",{"annotation":[],"tag":"ForAll","contents":["r0",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeVar","contents":"r0"},{"annotation":[],"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"r0"}]},{"annotation":[],"tag":"TypeVar","contents":"r1"}]}]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[24,59]}},{"children":[],"comments":"Provided your form type containing a record of only valid outputs\nfrom the result of validation, unwraps the form and every value\nin the record to provide a record of only the output values.\n","title":"unwrapOutputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["os'",{"annotation":[],"tag":"ForAll","contents":["os",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"UnwrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"os'"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[35,15]}},{"children":[],"comments":"Provided a record, where each field in the record contains\na value of type `input`, wraps each value in the InputField\ntype for compatibility with Formless\n","title":"wrapInputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["is'",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[46,28]}},{"children":[],"comments":"Provided a record, where each field in the record contains\na function from `input -> input`, wraps each function in\nthe InputField type for compatibility with Formless\n","title":"wrapInputFunctions","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ifs'",{"annotation":[],"tag":"ForAll","contents":["ifs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Record"],"WrapField"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs'"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"ifs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Record.purs","end":[57,31]}}]},{"reExports":[],"name":"Formless.Transform.Row","comments":null,"declarations":[{"children":[],"comments":"A function to transform a row of labels into a InputFields. This allows you\nto go directly from a custom form newtype to an inputs record without having to\nfill in any values. Requires that all members have an instance of the\n`Initial` type class (all monoidal values do by default, along with some\nother primitives).\n","title":"mkInputFields","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"inputs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormProxy"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[30,28]}},{"children":[{"comments":null,"title":"mkInputFieldsFromRowBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","Row"],"RProxy"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}]}},"sourceSpan":{"start":[41,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[41,76]}},{"comments":null,"title":"mkInputFieldsFromRowNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[43,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[44,45]}},{"comments":null,"title":"mkInputFieldsFromRowCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Class","Initial"],"Initial"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"trash"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"row"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeInputFieldsFromRow"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"row"}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[46,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[60,39]}}],"comments":"The class that provides the Builder implementation to efficiently\ntransform a row into a proper InputFields by wrapping it in newtypes and\nsupplying initial values\n","title":"MakeInputFieldsFromRow","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[41,76]}},{"children":[],"comments":"A type to collect constraints necessary to apply to prove that a record of\nSProxies is compatible with your form type.\n","title":"SProxies","info":{"arguments":[["form",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["row",{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeSProxies"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[69,17]}},{"children":[],"comments":"A helper function to produce a record of SProxies given a form spec, to save\nyou the boilerplate of writing them all out.\n","title":"mkSProxies","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["row",{"annotation":[],"tag":"ForAll","contents":["inputs",{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"inputs"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"inputs"}]}}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeSProxies"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"TypeVar","contents":"row"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormProxy"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"row"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[79,16]}},{"children":[{"comments":null,"title":"makeSProxiesBuilder","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"xs"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Internal","Transform"],"FromScratch"]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}]}},"sourceSpan":{"start":[87,3],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[87,54]}},{"comments":null,"title":"makeSProxiesNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeSProxies"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[89,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[90,35]}},{"comments":null,"title":"makeSProxiesCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"Row1Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeVar","contents":"from"},{"annotation":[],"tag":"TypeVar","contents":"to"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Formless","Transform","Row"],"MakeSProxies"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"from"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Transform","Row"],"MakeSProxies"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"name"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"to"}]}},"sourceSpan":{"start":[92,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[101,77]}}],"comments":"The class used to build up a new record of symbol proxies from an\ninput row list.\n","title":"MakeSProxies","info":{"fundeps":[[["xs"],["to"]]],"arguments":[["xs",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["to",{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[86,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Transform/Row.purs","end":[87,54]}}]},{"reExports":[],"name":"Formless.Types.Form","comments":null,"declarations":[{"children":[{"comments":null,"title":"FormProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Create a proxy for your form type, for use with functions that generate records from\nform proxies.\n","title":"FormProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["form",{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"Row","contents":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]}]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]}]]},"sourceSpan":{"start":[10,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[10,96]}},{"children":[{"comments":null,"title":"InputField","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"input"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeInputField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[15,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[15,66]}},{"comments":null,"title":"eqInputField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[16,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[16,70]}}],"comments":"A wrapper to represent only the input type. Requires that `eq` is defined for the input\ntype in order to track dirty states.\n","title":"InputField","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[14,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[14,57]}},{"children":[{"comments":null,"title":"OutputField","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"output"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeOutputField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[21,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[21,68]}},{"comments":null,"title":"eqOutputField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[22,72]}}],"comments":"A wrapper to represent only the output type. Used to represent\nform results at the end of validation.\n","title":"OutputField","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[20,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[20,60]}},{"children":[{"comments":null,"title":"U","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Represents a unit value with the correct number of arguments; largely for internal use.\n","title":"U","info":{"declType":"data","dataDeclType":"data","typeArguments":[["e",null],["i",null],["o",null]]},"sourceSpan":{"start":[25,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[25,17]}},{"children":[{"comments":null,"title":"InputFunction","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"input"}]},{"annotation":[],"tag":"TypeVar","contents":"input"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeInputFunction","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[29,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[29,72]}}],"comments":"Represents modifications to input fields\n","title":"InputFunction","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[28,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[28,74]}},{"children":[{"comments":null,"title":"FormField","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormFieldRow"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeFormField","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[33,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[33,64]}},{"comments":null,"title":"eqFormField","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"o"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[34,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[34,74]}}],"comments":"The type that we need to record state across the form\n","title":"FormField","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["i",null],["o",null]]},"sourceSpan":{"start":[32,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[32,66]}},{"children":[],"comments":"The row used for the FormField newtype and in lens type signatures\n","title":"FormFieldRow","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"RCons","contents":["input",{"annotation":[],"tag":"TypeVar","contents":"input"},{"annotation":[],"tag":"RCons","contents":["touched",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["result",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Data","FormFieldResult"],"FormFieldResult"]},{"annotation":[],"tag":"TypeVar","contents":"error"}]},{"annotation":[],"tag":"TypeVar","contents":"output"}]},{"annotation":[],"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[37,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[41,4]}},{"children":[],"comments":"A type synonym that lets you pick out just the error type from\nyour form row.\n","title":"ErrorType","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeVar","contents":"error"}},"sourceSpan":{"start":[48,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[48,42]}},{"children":[],"comments":"A type synonym that lets you pick out just the input type from\nyour form row.\n","title":"InputType","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeVar","contents":"input"}},"sourceSpan":{"start":[52,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[52,42]}},{"children":[],"comments":"A type synonym that lets you pick out just the output type from\nyour form row.\n","title":"OutputType","info":{"arguments":[["error",null],["input",null],["output",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeVar","contents":"output"}},"sourceSpan":{"start":[56,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[56,44]}},{"children":[],"comments":"A type synonym that represents a record with the input fields of a form.\n","title":"InputForm","info":{"arguments":[["form",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},"sourceSpan":{"start":[59,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[59,45]}},{"children":[],"comments":"A type synonym that represents a record with the output fields of a form.\n","title":"OutputForm","info":{"arguments":[["form",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"OutputField"]}]}},"sourceSpan":{"start":[62,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Form.purs","end":[62,47]}}]},{"reExports":[],"name":"Formless.Types.Query","comments":null,"declarations":[{"children":[{"comments":null,"title":"Modify","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Validate","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"U"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ModifyValidate","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Reset","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SetAll","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ModifyAll","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputFunction"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ResetAll","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ValidateAll","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Submit","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LoadForm","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AndThen","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"Query"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"The component query type. See Formless.Query for helpers related\nto constructing and using these queries.\n","title":"Query","info":{"declType":"data","dataDeclType":"data","typeArguments":[["form",null]]},"sourceSpan":{"start":[18,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[29,38]}},{"children":[],"comments":"The component local state\n","title":"State","info":{"arguments":[["form",null],["m",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"StateRow"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"RCons","contents":["internal",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"InternalState"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"REmpty"}]}]}}]}},"sourceSpan":{"start":[32,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[32,78]}},{"children":[],"comments":"The component's public state\n","title":"PublicState","info":{"arguments":[["form",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"StateRow"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[35,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[35,50]}},{"children":[],"comments":"The component's public state\n","title":"StateRow","info":{"arguments":[["form",null],["r",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"RCons","contents":["validity",{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]},{"annotation":[],"tag":"RCons","contents":["dirty",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["submitting",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["errors",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"RCons","contents":["submitAttempts",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"RCons","contents":["form",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}},"sourceSpan":{"start":[38,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[46,4]}},{"children":[{"comments":null,"title":"InternalState","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["initialInputs",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]},{"annotation":[],"tag":"RCons","contents":["validators",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]},{"annotation":[],"tag":"RCons","contents":["allTouched",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeInternalState","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"InternalState"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[58,73]}}],"comments":"A newtype to make easier type errors for end users to\nread by hiding internal fields\n","title":"InternalState","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["form",null],["m",null]]},"sourceSpan":{"start":[50,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[57,4]}},{"children":[{"comments":null,"title":"Invalid","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Incomplete","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Valid","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[73,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[73,60]}},{"comments":null,"title":"eqValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]}},"sourceSpan":{"start":[74,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[74,48]}},{"comments":null,"title":"ordValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]}},"sourceSpan":{"start":[75,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[75,50]}},{"comments":null,"title":"showValidStatus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"ValidStatus"]}]}},"sourceSpan":{"start":[77,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[78,21]}}],"comments":"A type to represent a running debouncer\nA type to represent validation status\n","title":"ValidStatus","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[68,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[71,10]}},{"children":[],"comments":"Initialise the form state with default values.\nPassing in the initial inputs, and the validations.\n","title":"initFormState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["fs",{"annotation":[],"tag":"ForAll","contents":["is",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ForAll","contents":["ixs",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"ixs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Formless","Internal","Transform"],"InputFieldsToFormFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ixs"},{"annotation":[],"tag":"TypeVar","contents":"is"},{"annotation":[],"tag":"TypeVar","contents":"fs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"is"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fs"}]}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Query"],"State"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Types/Query.purs","end":[90,18]}}]},{"reExports":[],"name":"Formless.Validation","comments":null,"declarations":[{"children":[{"comments":null,"title":"Validation","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"input"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"error"}]},{"annotation":[],"tag":"TypeVar","contents":"output"}]}}]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeValidation","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[19,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[19,73]}},{"comments":null,"title":"functorValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[20,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[20,82]}},{"comments":null,"title":"applyValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[26,23]}},{"comments":null,"title":"applicativeValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[28,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[29,58]}},{"comments":null,"title":"altValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[31,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[35,23]}},{"comments":null,"title":"semigroupValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[37,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[38,88]}},{"comments":null,"title":"monoidValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}},"sourceSpan":{"start":[40,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[43,50]}},{"comments":null,"title":"semigroupoidValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Semigroupoid"],"Semigroupoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[45,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[48,47]}},{"comments":null,"title":"categoryValidation","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Category"],"Category"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[50,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[51,46]}},{"comments":"The heterogeneous instance the noValidation function\n","title":"emptyValidators","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"EmptyValidators"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[106,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[107,54]}}],"comments":"A wrapper to represent the validation function on a form field, which can itself take\nthe form state as its first argument. Inspired in some parts by the Validation type\nfrom purescript-polyform by @paluh.\n","title":"Validation","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["form",null],["m",null],["error",null],["input",null],["output",null]]},"sourceSpan":{"start":[18,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[18,118]}},{"children":[],"comments":"A more verbose but clearer function for running a validation function on its inputs\n","title":"runValidation","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[58,116]}},{"children":[],"comments":"A function to create a record of validators that simply pass through all inputs\nfor when no validation is needed. Provide this as your `validators` function.\n","title":"noValidation","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["xs",{"annotation":[],"tag":"ForAll","contents":["vs",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["fields",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fields"},{"annotation":[],"tag":"TypeVar","contents":"xs"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"vs"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fields"}]}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Heterogeneous","Mapping"],"MapRecordWithIndex"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"xs"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"ConstMapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"EmptyValidators"]}]}},{"annotation":[],"tag":"TypeVar","contents":"fields"},{"annotation":[],"tag":"TypeVar","contents":"vs"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"InputField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[71,37]}},{"children":[],"comments":"Turn a function from (form Record FormField -> i -> o) into a proper Validation\n","title":"hoistFn","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[75,99]}},{"children":[],"comments":"Turn a function from (i -> o) into a proper Validation\n","title":"hoistFn_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[79,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[79,75]}},{"children":[],"comments":"Turn a function from (form Record FormField -> i -> Either e o) into a proper Validation\n","title":"hoistFnE","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[83,109]}},{"children":[],"comments":"Turn a function from (i -> Either e o) into a proper Validation\n","title":"hoistFnE_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[87,85]}},{"children":[],"comments":"Turn a function from (form Record FormField -> i -> m (Either e o)) into a proper Validation\n","title":"hoistFnME","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[91,114]}},{"children":[],"comments":"Turn a function from (i -> m (Either e o)) into a proper Validation\n","title":"hoistFnME_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["e",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["form",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[95,90]}},{"children":[{"comments":null,"title":"EmptyValidators","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"The heterogeneous instance the noValidation function\n","title":"emptyValidators","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Heterogeneous","Mapping"],"Mapping"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"EmptyValidators"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}},"sourceSpan":{"start":[106,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[107,54]}}],"comments":"The data type used for the noValidation function's heterogenous instance\n","title":"EmptyValidators","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[103,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[103,39]}},{"children":[],"comments":"A type synonym that represents a set of form validations that run in a particular monad.\n","title":"Validations","info":{"arguments":[["form",null],["m",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"form"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Formless","Validation"],"Validation"]},{"annotation":[],"tag":"TypeVar","contents":"form"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[110,1],"name":"/Volumes/Dev/foss/purescript-concur-formless/src/Formless/Validation.purs","end":[110,58]}}]}],"resolvedDependencies":{"purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-ordered-collections":"1.6.1","purescript-control":"4.1.0","purescript-variant":"6.0.1","purescript-either":"4.1.1","purescript-profunctor":"4.0.0","purescript-arrays":"5.3.0","purescript-maybe":"4.0.1","purescript-profunctor-lenses":"6.2.0","purescript-type-equality":"3.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.2","purescript-invariant":"4.1.0","purescript-lazy":"4.0.0","purescript-foreign-object":"2.0.3","purescript-aff":"5.1.1","purescript-heterogeneous":"0.4.1","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.0.0","purescript-gen":"2.1.1","purescript-typelevel-prelude":"5.0.0","purescript-functors":"3.1.1","purescript-prelude":"4.1.1","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.1","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-const":"4.1.0","purescript-record":"2.0.1","purescript-transformers":"4.2.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.1.1","purescript-math":"2.1.1","purescript-enums":"4.0.1","purescript-parallel":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.1","purescript-identity":"4.1.0","purescript-lists":"5.4.1","purescript-datetime":"4.1.1","purescript-functions":"4.0.0"},"version":"0.1.0","github":["ajnsit","purescript-formless-independent"],"versionTag":"v0.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Lens":"purescript-profunctor-lenses","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Lens.Prism.Maybe":"purescript-profunctor-lenses","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Lens.Internal.Grating":"purescript-profunctor-lenses","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Foreign.Object":"purescript-foreign-object","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Data.Lens.Lens.Product":"purescript-profunctor-lenses","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Lens.Prism.Coproduct":"purescript-profunctor-lenses","Data.Map.Gen":"purescript-ordered-collections","Data.Lens.Lens":"purescript-profunctor-lenses","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Data.Lens.Internal.Forget":"purescript-profunctor-lenses","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Lens.Indexed":"purescript-profunctor-lenses","Heterogeneous.Mapping":"purescript-heterogeneous","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Data.Profunctor.Clown":"purescript-profunctor","Data.Lens.Zoom":"purescript-profunctor-lenses","Data.Lens.Iso.Newtype":"purescript-profunctor-lenses","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Lens.Internal.Wander":"purescript-profunctor-lenses","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Lens.Lens.Tuple":"purescript-profunctor-lenses","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Lens.Internal.Exchange":"purescript-profunctor-lenses","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Type.RowList":"purescript-typelevel-prelude","Control.Comonad.Store.Trans":"purescript-transformers","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Lens.Internal.Shop":"purescript-profunctor-lenses","Data.Lens.Internal.Tagged":"purescript-profunctor-lenses","Data.Lens.Record":"purescript-profunctor-lenses","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.Lens.Grate":"purescript-profunctor-lenses","Data.Profunctor.Strong":"purescript-profunctor","Data.Lens.Internal.Market":"purescript-profunctor-lenses","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Data.Lens.Common":"purescript-profunctor-lenses","Data.Lens.Getter":"purescript-profunctor-lenses","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Foreign.Object.ST":"purescript-foreign-object","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Lens.Traversal":"purescript-profunctor-lenses","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Data.Lens.Types":"purescript-profunctor-lenses","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Control.Parallel":"purescript-parallel","Data.Lens.Index":"purescript-profunctor-lenses","Data.Lens.Internal.Re":"purescript-profunctor-lenses","Control.MonadPlus":"purescript-control","Data.Lens.Lens.Void":"purescript-profunctor-lenses","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Lens.Internal.Indexed":"purescript-profunctor-lenses","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Lens.Fold":"purescript-profunctor-lenses","Data.Lens.Setter":"purescript-profunctor-lenses","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Lens.Prism.Either":"purescript-profunctor-lenses","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.Generic.Rep.Semiring":"purescript-generics-rep","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Lens.Lens.Unit":"purescript-profunctor-lenses","Data.Functor.Variant":"purescript-variant","Data.Functor.Coproduct":"purescript-functors","Data.Variant.Internal":"purescript-variant","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Data.Lens.Fold.Partial":"purescript-profunctor-lenses","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Data.Monoid.Multiplicative":"purescript-prelude","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Generic.Rep":"purescript-generics-rep","Data.Bifunctor.Join":"purescript-bifunctors","Data.Lens.Internal.Zipping":"purescript-profunctor-lenses","Heterogeneous.Folding":"purescript-heterogeneous","Data.Bifoldable":"purescript-foldable-traversable","Data.Lens.Internal.Bazaar":"purescript-profunctor-lenses","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Lens.Prism":"purescript-profunctor-lenses","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.Lens.Internal.Focusing":"purescript-profunctor-lenses","Data.Lens.Iso":"purescript-profunctor-lenses","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Data.Variant":"purescript-variant","Record.Unsafe":"purescript-prelude","Data.Lens.At":"purescript-profunctor-lenses","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.12.2"}