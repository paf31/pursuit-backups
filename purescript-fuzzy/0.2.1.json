{"uploader":"thomashoneyman","packageMeta":{"homepage":"https://github.com/citizennet/purescript-fuzzy","repository":{"url":"git@github.com:citizennet/purescript-fuzzy.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-test-unit":"^14.0.0","purescript-psci-support":"^4.0.0","purescript-strongcheck-laws":"^3.0.0","purescript-datetime":"^4.0.0"},"authors":[{"email":"https://github.com/whoadave","name":"Dave Zuch"}],"dependencies":{"purescript-newtype":"^3.0.0","purescript-ordered-collections":"^1.0.0","purescript-strongcheck":"^4.1.0","purescript-foreign-object":"^1.0.0","purescript-foldable-traversable":"^4.0.0","purescript-rationals":"^5.0.0","purescript-prelude":"^4.0.1","purescript-generics-rep":"^6.0.0","purescript-tuples":"^5.0.0","purescript-strings":"^4.0.0"},"name":"purescript-fuzzy","keywords":["purescript","fuzzy","levenshtein","search","autocomplete","typeahead"],"license":["Apache-2.0"],"description":"A type-safe fuzzy string matcher"},"tagTime":"2018-06-14T01:50:28+0000","modules":[{"reExports":[],"name":"Data.Fuzzy","comments":"The Fuzzy module provides functions and metrics for discerning\nhow well a given value matches a string.\n","declarations":[{"children":[],"comments":"Type representing segments of matched and unmatched substrings.\nFor example, when matching the pattern `\"foo bar\"` against the value\n`\"food barn\"`, the resulting `Segments` would be:\n\n```[ Right \"foo\", Left \"d \", Right \"bar\", Left \"n\" ]```\n","title":"Segments","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}},"sourceSpan":{"start":[39,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[39,45]}},{"children":[{"comments":null,"title":"Distance","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"None","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericDistance","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]}]},{"tag":"TypeWildcard","contents":{"start":[74,53],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[74,54]}}]}},"sourceSpan":{"start":[74,8],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[74,54]}},{"comments":null,"title":"eqDistance","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]}]}},"sourceSpan":{"start":[75,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[75,35]}},{"comments":null,"title":"showDistance","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[76,39]}},{"comments":null,"title":"ordDistance","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]}]}},"sourceSpan":{"start":[77,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[77,37]}},{"comments":null,"title":"semigroupDistance","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]}]}},"sourceSpan":{"start":[79,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[79,49]}},{"comments":null,"title":"monoidDistance","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]}]}},"sourceSpan":{"start":[85,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[85,43]}},{"comments":null,"title":"arbitraryDistance","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]}]}},"sourceSpan":{"start":[88,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[88,49]}}],"comments":"Data representing the distance of a value from the pattern string.\nThere are six magnitudes of distance, ranging from severe on the left,\nto almost trivial on the right. The smaller the distance, the better\nthe match, with `Distance 0 0 0 0 0 0` representing a perfect match.\n\n`Distance` is an instance of `Ord`, allowing you to sort based on best distance.\n\nEach position's penalty is incremented for the following conditions:\n\n- *`0`: Failed matches.* This is the most severe penalty, which is added each time\n  the `match` function cannot match any of the following in order: The exact\n  pattern in its entirety, entire words within the pattern, individual\n  chars in unmatched words\n- *`1`: Between matches in a word.* This is the next most severe penalty,\n  added for each irrelevant char inbetween matched chars in each word. E.g.,\n  when matching the pattern \"foo bar\" against the value \"f*l*ooded b*e*a*me*r\",\n  this penalty would be set to `4`\n- *`2`: Matched word prefix.* This penalty is added whenever the first char for a\n  word in a pattern is not also the first char for the word its matched in. E.g.,\n  when matching the pattern \"foo bar\" against the value \"an *un*followed *tu*bular\",\n  this penalty would be set to `4`\n- *`3`: Chars till first match.* This penalty is added for every char up to the\n  first match. E.g., when matching the pattern \"foo bar\" against the value\n  \"*an un*followed tubular\", this penalty would be set to `5`\n- *`4`: Matched word suffix.* This penalty is the same as the prefix penalty but\n  for suffixes. E.g., when matching the pattern \"foo bar\" against the value\n  \"foo*led* bar*n* hens\", this penalty would be set to `4`\n- *`5`: Chars after last match.* This penalty is added for every char after the\n  last match. E.g., when matching the pattern \"foo bar\" against the value\n  \"fooled bar*n hens*\", this penalty would be set to `6`\n","title":"Distance","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[72,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[72,56]}},{"children":[{"comments":null,"title":"FuzzyStr","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["original",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["segments",{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Segments"]},{"tag":"RCons","contents":["distance",{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]},{"tag":"RCons","contents":["ratio",{"tag":"TypeConstructor","contents":[["Data","Rational"],"Rational"]},{"tag":"REmpty"}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericFuzzyStr","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"FuzzyStr"]}]},{"tag":"TypeWildcard","contents":{"start":[122,53],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[122,54]}}]}},"sourceSpan":{"start":[122,8],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[122,54]}},{"comments":null,"title":"newtypeFuzzyStr","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"FuzzyStr"]}]},{"tag":"TypeWildcard","contents":{"start":[123,53],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[123,54]}}]}},"sourceSpan":{"start":[123,8],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[123,54]}},{"comments":null,"title":"eqFuzzyStr","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"FuzzyStr"]}]}},"sourceSpan":{"start":[124,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[124,35]}},{"comments":null,"title":"showFuzzyStr","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"FuzzyStr"]}]}},"sourceSpan":{"start":[125,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[125,39]}},{"comments":null,"title":"ordFuzzyStr","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"FuzzyStr"]}]}},"sourceSpan":{"start":[126,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[126,37]}}],"comments":"Data representing the result of matching a string value against a string pattern\n\nFields:\n\n- `original`: the original string value provided to `matchStr`\n- `segments`: `Segments` value, which will contain `original` split\n  into substrings of matched and unmatched chars (see `Segments` definition)\n- `distance`: `Distance` score from pattern to `original` (see `Distance` definition)\n- `ratio`: `Rational` representing percentage of matched chars. If all chars in pattern\n  are present, value will be a perfect `1 % 1`. If no chars are matched, value will be\n  `0 % 1`. A few other scenarios for the pattern \"foo bar\":\n  - \"goo bar\": `5 % 6`\n  - \"go bar\": `2 % 3`\n  - \"bar\": `1 % 2`\n  - \"car\": `1 % 3`\n  - \"curry\": `1 % 6`\n  This allows you to filter out results that are below a desired threshold\n","title":"FuzzyStr","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[115,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[120,4]}},{"children":[{"comments":null,"title":"Fuzzy","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["original",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["segments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Segments"]}]},{"tag":"RCons","contents":["distance",{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Distance"]},{"tag":"RCons","contents":["ratio",{"tag":"TypeConstructor","contents":[["Data","Rational"],"Rational"]},{"tag":"REmpty"}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericFuzzy","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Fuzzy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeWildcard","contents":{"start":[148,51],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[148,52]}}]}},"sourceSpan":{"start":[148,8],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[148,52]}},{"comments":null,"title":"newtypeFuzzy","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Fuzzy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeWildcard","contents":{"start":[149,51],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[149,52]}}]}},"sourceSpan":{"start":[149,8],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[149,52]}},{"comments":null,"title":"eqFuzzy","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Fuzzy"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[150,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[150,41]}},{"comments":null,"title":"showFuzzy","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Fuzzy"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[151,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[151,47]}},{"comments":null,"title":"ordFuzzy","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Fuzzy"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[152,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[152,43]}}],"comments":"Data representing the result of matching any polymorphic value to a string pattern\n\nFields:\n\n- `original`: the original polymorphic value provided to `match`\n- `segments`: `Object` of keys to `Segments` values, `Segments` values each\n  consisting of the original string values for each key, split into substrings\n  of matched and unmatched chars (see `Segments` or `match` definitions for more info)\n- `distance`: the best `Distance` score found for any provided key values (see `Distance`\n  and `match` defintions for more info)\n- `ratio`: the best ratio found for any provided key values (see `FuzzyStr` definition)\n","title":"Fuzzy","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[141,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[146,4]}},{"children":[],"comments":"Function to match a string value against a string pattern\n\nArguments:\n\n- `ignoreCase`: flag for whether or not uppercase and lowercase values should be\n  considered the same or not\n- `pattern`: string of chars you wish to match for in `str`\n- `str`: string to search through for the chars in `pattern`\n\nReturns:\n\n`FuzzyStr` data type with properties useful for highlighting matches, sorting\na list of values, filtering out poor matches, etc.\n\nExamples:\n\n```\n> matchStr true \"foo bar\" \"fiz baz foo bar buz\"\nFuzzyStr\n  { original: \"fiz baz foo bar buz\"\n  , segmemnts: [ Left \"fiz baz \", Right \"foo bar\", Left \" buz\" ]\n  , distance: Distance 0 0 0 8 0 4\n  , ratio: 1 % 1\n  }\n\nSee `test/Main.purs` for more examples\n","title":"matchStr","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"FuzzyStr"]}]}]}]}},"sourceSpan":{"start":[202,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[202,52]}},{"children":[],"comments":"Funtion to match any polymorhic value against a string pattern\n\nArguments:\n\n- `ignoreCase`: flag for whether or not uppercase and lowercase values should be\n  considered the same or not\n- `extract`: function from your polymorphic `val` to `Object String` so `match`\n  can search through each string for the desired `pattern`\n- `pattern`: string of chars you wish to match for in any of the strings `extract`\n  pulls from the provided `val`\n- `val`: polymorphic value that `match` will pull out strings from via the provided\n  `extract` function and then search through for the chars in `pattern`\n\nReturns:\n\n`Fuzzy` data type with properties useful for highlighting matches, sorting a list of\nvalues, filtering out poor matches, etc.\n\nExamples:\n\n```\n> toMapStr { name, value } = fromFoldable [ Tuple \"name\" name, Tuple \"value\" value ]\n> match true toMapStr \"foo bar\" { name: \"Foo Bar Baz\", value: \"foobar\" }\nFuzzy\n  { original: { name: \"Foo Bar Baz\", value: \"foobar\" }\n  , segments: fromFoldable [ Tuple \"name\" [ Right \"Foo Bar\", Left \" Baz\" ]\n                           , Tuple \"value\" [ Right \"foobar\" ] ]\n  , distance: Distance 0 0 0 0 0 4\n  , ratio: 1 % 1\n  }\n\nSee `test/Main.purs` for more examples\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"Fuzzy"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]}},"sourceSpan":{"start":[336,1],"name":"/Users/honeyman/Desktop/purescript-fuzzy/src/Data/Fuzzy.purs","end":[336,72]}}]}],"resolvedDependencies":{"purescript-free":"5.0.0","purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-ordered-collections":"1.0.0","purescript-control":"4.0.0","purescript-console":"4.1.0","purescript-either":"4.0.0","purescript-profunctor":"4.0.0","purescript-arrays":"5.0.0","purescript-maybe":"4.0.0","purescript-strongcheck":"4.1.0","purescript-type-equality":"3.0.0","purescript-js-timers":"4.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lcg":"2.0.0","purescript-lazy":"4.0.0","purescript-foreign-object":"1.0.0","purescript-aff":"5.0.0","purescript-foldable-traversable":"4.0.0","purescript-rationals":"5.0.0","purescript-tailrec":"4.0.0","purescript-avar":"3.0.0","purescript-gen":"2.0.0","purescript-typelevel-prelude":"3.0.0","purescript-functors":"3.0.0","purescript-prelude":"4.0.1","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-test-unit":"14.0.0","purescript-orders":"4.0.0","purescript-const":"4.0.0","purescript-record":"1.0.0","purescript-transformers":"4.1.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-psci-support":"4.0.0","purescript-catenable-lists":"5.0.0","purescript-random":"4.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-quickcheck":"5.0.0","purescript-strings":"4.0.0","purescript-identity":"4.0.0","purescript-machines":"5.1.0","purescript-lists":"5.0.0","purescript-strongcheck-laws":"3.1.0","purescript-datetime":"4.0.0","purescript-functions":"4.0.0"},"version":"0.2.1","github":["citizennet","purescript-fuzzy"],"versionTag":"v0.2.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Data.Rational":"purescript-rationals","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Test.StrongCheck.Laws.Control.Plus":"purescript-strongcheck-laws","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Test.StrongCheck.Gen":"purescript-strongcheck","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Test.StrongCheck.Data.AlphaNumString":"purescript-strongcheck","Test.StrongCheck.Data.ApproxNumber":"purescript-strongcheck","Data.Profunctor.Cowrap":"purescript-profunctor","Record.Builder":"purescript-record","Test.StrongCheck.Laws":"purescript-strongcheck-laws","Test.StrongCheck.Laws.Control.Alternative":"purescript-strongcheck-laws","Test.Unit.Assert":"purescript-test-unit","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Test.StrongCheck.Laws.Data.Semiring":"purescript-strongcheck-laws","Test.StrongCheck.Laws.Data.CommutativeRing":"purescript-strongcheck-laws","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Test.Unit.Output.Fancy":"purescript-test-unit","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Test.StrongCheck":"purescript-strongcheck","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Test.StrongCheck.Laws.Control.Applicative":"purescript-strongcheck-laws","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Test.StrongCheck.Perturb":"purescript-strongcheck","Control.Monad.Trampoline":"purescript-free","Foreign.Object":"purescript-foreign-object","Test.StrongCheck.Data.ArbDateTime":"purescript-strongcheck","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Test.StrongCheck.Laws.Control.Comonad":"purescript-strongcheck-laws","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Effect.Aff.Class":"purescript-aff","Test.StrongCheck.Landscape":"purescript-strongcheck","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Test.StrongCheck.Laws.Data.Field":"purescript-strongcheck-laws","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Test.StrongCheck.Data.NonZero":"purescript-strongcheck","Test.StrongCheck.Laws.Data.EuclideanRing":"purescript-strongcheck-laws","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Test.StrongCheck.Laws.Control.Extend":"purescript-strongcheck-laws","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Test.Unit.QuickCheck":"purescript-test-unit","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Data.Profunctor.Clown":"purescript-profunctor","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Effect.Timer":"purescript-js-timers","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Test.StrongCheck.Data.Signum":"purescript-strongcheck","Test.StrongCheck.Data.Positive":"purescript-strongcheck","Control.Comonad.Store.Trans":"purescript-transformers","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.Profunctor.Strong":"purescript-profunctor","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Test.StrongCheck.Laws.Data.DivisionRing":"purescript-strongcheck-laws","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.StrongCheck.Laws.Data.Monoid":"purescript-strongcheck-laws","Test.StrongCheck.Laws.Data":"purescript-strongcheck-laws","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Test.StrongCheck.Laws.Data.HeytingAlgebra":"purescript-strongcheck-laws","Foreign.Object.ST":"purescript-foreign-object","Test.StrongCheck.Data.ArbBoundedEnum":"purescript-strongcheck","Test.StrongCheck.Laws.Control.Bind":"purescript-strongcheck-laws","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Test.StrongCheck.Laws.Control.Alt":"purescript-strongcheck-laws","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Test.StrongCheck.Laws.Control.Monad":"purescript-strongcheck-laws","Test.Unit.Output.TAP":"purescript-test-unit","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Test.StrongCheck.Laws.Data.Semigroup":"purescript-strongcheck-laws","Data.Bifunctor.Product":"purescript-bifunctors","Data.Ratio":"purescript-rationals","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Test.Unit.Console":"purescript-test-unit","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.Unit.Output.Simple":"purescript-test-unit","Control.Comonad.Env.Class":"purescript-transformers","Test.StrongCheck.Arbitrary":"purescript-strongcheck","Effect.Aff.AVar":"purescript-avar","Test.StrongCheck.Laws.Control.Semigroupoid":"purescript-strongcheck-laws","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Test.StrongCheck.Laws.Control.Category":"purescript-strongcheck-laws","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Test.StrongCheck.Laws.Data.Functor":"purescript-strongcheck-laws","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Test.StrongCheck.Laws.Data.Ring":"purescript-strongcheck-laws","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Test.StrongCheck.Laws.Data.BooleanAlgebra":"purescript-strongcheck-laws","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Test.StrongCheck.LCG":"purescript-strongcheck","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Test.QuickCheck":"purescript-quickcheck","Test.Unit.Main":"purescript-test-unit","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Test.StrongCheck.Laws.Control":"purescript-strongcheck-laws","Test.StrongCheck.Laws.Data.Ord":"purescript-strongcheck-laws","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Test.StrongCheck.Laws.Control.MonadPlus":"purescript-strongcheck-laws","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Test.Unit":"purescript-test-unit","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Test.StrongCheck.Data.Negative":"purescript-strongcheck","Control.Monad.ST.Ref":"purescript-st","Test.StrongCheck.Laws.Data.Eq":"purescript-strongcheck-laws","Data.Monoid.Endo":"purescript-prelude","Test.StrongCheck.Laws.Control.MonadZero":"purescript-strongcheck-laws","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Test.StrongCheck.Laws.Control.Apply":"purescript-strongcheck-laws","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Data.Machine.Mealy":"purescript-machines","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Test.StrongCheck.Laws.Data.Bounded":"purescript-strongcheck-laws","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}