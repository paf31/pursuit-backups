{"uploader":"paf31","packageMeta":{"homepage":"https://github.com/purescript/purescript-globals","repository":{"url":"git://github.com/purescript/purescript-globals.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-console":"^3.0.0","purescript-assert":"^3.0.0"},"name":"purescript-globals","license":["MIT"],"description":"Typed definitions for standard Javascript globals"},"tagTime":"2017-03-25T23:47:29+0000","modules":[{"reExports":[],"name":"Global","comments":"This module defines types for some global Javascript functions\nand values.\n","declarations":[{"children":[],"comments":"Not a number (NaN)\n","title":"nan","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[6,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[6,29]}},{"children":[],"comments":"Test whether a number is NaN\n","title":"isNaN","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[9,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[9,42]}},{"children":[],"comments":"Positive infinity\n","title":"infinity","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[12,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[12,34]}},{"children":[],"comments":"Test whether a number is finite\n","title":"isFinite","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[15,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[15,45]}},{"children":[],"comments":"Parse an integer from a `String` in the specified base\n","title":"readInt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[18,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[18,50]}},{"children":[],"comments":"Parse a floating point value from a `String`\n","title":"readFloat","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[21,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[21,45]}},{"children":[],"comments":"uri decoding\n","title":"decodeURI","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[24,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[24,45]}},{"children":[],"comments":"uri encoding\n","title":"encodeURI","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[27,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[27,45]}},{"children":[],"comments":"uri component decoding\n","title":"decodeURIComponent","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[30,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[30,54]}},{"children":[],"comments":"uri component encoding\n","title":"encodeURIComponent","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[33,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global.purs","end":[33,48]}}]},{"reExports":[],"name":"Global.Unsafe","comments":null,"declarations":[{"children":[],"comments":"Uses the global JSON object to turn anything into a string. Careful! Trying\nto serialize functions returns undefined\n","title":"unsafeStringify","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]}},"sourceSpan":{"start":[5,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global/Unsafe.purs","end":[5,56]}},{"children":[],"comments":"Formats Number as a String with limited number of digits after the dot\nMay throw RangeError if the number of digits is not within the allowed range\n(standard precision range is 0 to 20, but implementations may change it)\n","title":"unsafeToFixed","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[10,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global/Unsafe.purs","end":[10,56]}},{"children":[],"comments":"Formats Number as String in exponential notation limiting number of digits\nafter the decimal dot. \nMay throw RangeError if the number of digits is not within the allowed range\n(standard precision range is 0 to 20, but implementations may change it)\n","title":"unsafeToExponential","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[16,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global/Unsafe.purs","end":[16,62]}},{"children":[],"comments":"Formats Number as String in fixed-point or exponential notation rounded \nto specified number of significant digits.\nMay throw RangeError if the number of digits is not within the allowed range\n(standard precision range is 0 to 100, but implementations may change it)\n","title":"unsafeToPrecision","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[22,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/globals/v3.0.0/src/Global/Unsafe.purs","end":[22,54]}}]}],"resolvedDependencies":{},"version":"3.0.0","github":["purescript","purescript-globals"],"versionTag":"v3.0.0","moduleMap":{},"compilerVersion":"0.11.3"}