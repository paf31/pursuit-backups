{"uploader":"thomashoneyman","packageMeta":{"homepage":"https://github.com/citizennet/purescript-halogen-select","repository":{"url":"git://github.com/citizennet/purescript-halogen-select.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","dist"],"devDependencies":{"purescript-console":"^3.0.0","purescript-js-timers":"^3.0.0","purescript-halogen-css":"^7.0.0","purescript-formatters":"^3.0.1","purescript-css":"^3.4.0","purescript-now":"^3.0.0","purescript-debug":"^3.0.0","purescript-datetime":"^3.4.1"},"authors":[{"email":"hello@thomashoneyman.com","name":"Thomas Honeyman"}],"dependencies":{"purescript-control":"^3.3.1","purescript-dom":"^4.15.0","purescript-halogen":"^3.1.1","purescript-affjax":"^5.0.0","purescript-transformers":"^3.5.0"},"name":"purescript-halogen-select","keywords":["purescript","halogen","autocomplete","typeahead","date picker","image picker","select","selection"],"license":["Apache-2.0"],"description":"Building blocks for common selection user interfaces in PureScript & Halogen"},"tagTime":"2018-02-06T22:05:49+0000","modules":[{"reExports":[],"name":"Select.Primitives.Container","comments":"The Container primitive contains an array of items that can be selected. As\nyou provide the render functions, this array of items could be anything from\na dropdown list to a calendar grid. The primitive provides keyboard and click\nbehaviors for highlighting and selecting items and will be used in nearly every\nselection component you write.\n","declarations":[{"children":[{"comments":null,"title":"Highlight","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"Target"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Select","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Key","info":{"arguments":[{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"KeyboardEvent"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Mouse","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"MouseState"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Blur","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Visibility","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"VisibilityStatus"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ReplaceItems","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"item"}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Raise","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"o"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ContainerReceiver","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerInput"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"The query type for the `Container` primitive. This primitive handles selections\nand keyboard navigation.\n\nArguments:\n\n- `o`: The type of the parent query to embed. This is usually the component that\n-      mounts the search primitive, but it could also be the query type of some\n       higher component.\n- `item`: Your custom item type, used by your renderers.\n\nConstructors:\n\n- `Highlight`: Change the highlighted item to the next, previous, or a specific index.\n- `Select`: Select an item at the specified index\n- `Key`: Capture key events for arrow navigation, Escape to close, and Enter to select.\n- `Mouse`: Capture mouse events to close the menu or select an item\n- `Blur`: Trigger the DOM blur event\n- `Visibility`: Set the visibility by toggling, setting to on, or setting to off.\n- `ReplaceItems`: Replace the array of items.\n- `Raise`: Embed a parent query that can be returned to the parent for evaluation.\n- `ContainerReceiver`: Update the component on new `Input` when the parent re-renders.\n","title":"ContainerQuery","info":{"declType":"data","dataDeclType":"data","typeArguments":[["o",null],["item",null],["a",null]]},"sourceSpan":{"start":[49,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[58,48]}},{"children":[{"comments":null,"title":"Next","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Prev","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Index","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Navigation for the container's `Highlight` query.\n\nNote: in `eval`, this wraps around, so providing `Highlight Next` on the\nlast item in the array will highlight the first item in the array.\n","title":"Target","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[64,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[67,14]}},{"children":[{"comments":null,"title":"Down","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Up","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Maintain the state of the mouse in the container's `Mouse` query.\n","title":"MouseState","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[70,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[72,7]}},{"children":[{"comments":null,"title":"On","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Off","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Toggle","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Possible visibility statuses for the container's `Visibility` query.\n\n`On`: Set the container to be visible (use this to \"open\" the container)\n`Off`: Set the container to be visible (use this to \"close\" the container)\n`Toggle`: Toggle between \"open\" and \"closed\".\n","title":"VisibilityStatus","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[79,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[82,11]}},{"children":[],"comments":"The internal state of the `Container` primitive\n\n- `items`: An array of items held within the `Container`\n- `open`: Whether the `Container` is visible\n- `highlightedIndex`: The index of the highlighted item, if one exists\n- `lastIndex`: The index of the last item in the `Container`\n- `mouseDown`: Whether the mouse is clicked or not\n","title":"ContainerState","info":{"arguments":[["item",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["items",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"item"}]},{"tag":"RCons","contents":["open",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["highlightedIndex",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["lastIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["mouseDown",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[91,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[97,4]}},{"children":[],"comments":"The input type of the `Container` primitive\n\n- `items`: The initial value of `items` in the `ContainerState`\n- `render`: The `render` function for the `Container` primitive\n","title":"ContainerInput","info":{"arguments":[["o",null],["item",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["items",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"item"}]},{"tag":"RCons","contents":["render",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerState"]},{"tag":"TypeVar","contents":"item"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Component"],"ComponentHTML"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]}]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[103,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[105,79]}},{"children":[{"comments":null,"title":"ItemSelected","info":{"arguments":[{"tag":"TypeVar","contents":"item"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Emit","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"o"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Messages emitted by the container primitive to notify the parent of important events.\n\n- `ItemSelected`: An item has been selected in the container. This does not indicate the item\n                  has been removed; if you would like the item to also be removed from the\n                  container, make sure to query `ReplaceItems` from the parent.\n- `Emit`: A parent query has been triggered and should be evaluated by the parent. Typically:\n\n```purescript\neval (HandleContainer (Emit q) next) = eval q *> pure next\n```\n","title":"Message","info":{"declType":"data","dataDeclType":"data","typeArguments":[["o",null],["item",null]]},"sourceSpan":{"start":[118,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[120,18]}},{"children":[],"comments":"The primitive handles state and transformations but defers all rendering to the parent. The\nrender function can be written using our helper functions to ensure the right events are included.\n","title":"component","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["item",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Component"],"Component"]},{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerInput"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"Message"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]},{"tag":"TypeVar","contents":"m"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[124,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[126,91]}},{"children":[],"comments":"Attach properties to a DOM node that will maintain focus and capture key and click events\nfor the container. If you are using the search primitive, this helper is unnecessary.\n\nNote: This function will overwrite any properties of the same name that are already set. Use\nit directly on the list of properties for the node that will serve as the toggle.\n\nNote: The toggle is not rendered within the container component. Instead, you should define\na query on the parent that routes events to the relevant container, and provide that query\nas the first argument to this function.\n\n```purescript\n-- ToContainer is a parent query you have defined that, in eval, sends queries to the container.\nspan (getToggleProps ToContainer [ class_ $ ClassName \"my-class\" ]) [ text \"Button\" ]\n```\n","title":"getToggleProps","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["item",{"tag":"ForAll","contents":["o",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onClick",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onKeyDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"KeyboardEvent"]},{"tag":"RCons","contents":["onMouseDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseUp",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]}]},{"tag":"TypeVar","contents":"f"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onClick",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onKeyDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"KeyboardEvent"]},{"tag":"RCons","contents":["onMouseDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseUp",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]}]},{"tag":"TypeVar","contents":"f"}]}}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[253,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[278,9]}},{"children":[],"comments":"A helper to embed your own HTML and queries inside the container's render function. It\nwill ensure that your events do not inadvertently steal focus or trigger a blur on the\ncontainer. Useful to embed buttons and other arbitrary HTML within the container.\n\nTo embed your own queries, remember to use the `Raise` query from the container to wrap\nthem. This will ensure they are re-raised to the parent.\n\nUse directly on the properties for the element you are embedding:\n\n```purescript\nbutton (getChildProps [ onClick $ input_ $ Raise $ action $ MyQuery \"Do something\" ]) [ text \"Button\" ]\n```\n\nNote: This will overwrite any properties of the same name.\n","title":"getChildProps","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["item",{"tag":"ForAll","contents":["o",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[302,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[319,6]}},{"children":[],"comments":"Attach properties to the HTML element that encloses the container. This makes sure you can\nselect items without blurring the container, unless you want to. It is used in conjunction\nwith the getItemProps helper, which you should attach to each item in the container.\n\n```purescript\ndiv (getContainerProps [ class_ (ClassName \"my-class\") ]) [ ... further html ... ]\n```\n\nNote: This function will overwrite any properties of the same name that are already set.\n","title":"getContainerProps","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["item",{"tag":"ForAll","contents":["o",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onMouseDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseUp",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onMouseDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseUp",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[334,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[355,8]}},{"children":[],"comments":"Attach events to an item in the container to support selection, highlighting, and key\nevents (like Enter to select). Used in conjunction with `getContainerProps`.\n\nThis function requires an index. It's usually easiest to provide a renderer that uses\n`mapWithIndex` to ensure indexes are provided properly.\n\n```purescript\nrenderItems arrayOfItems = renderItem `mapWithIndex` arrayOfItems\nrenderItem index item = li (getItemProps index [ class_ (ClassName \"item-class\") ]) [ text item ]\n```\n\nYou should provide CSS to highlight items without requiring hovers, so that arrow keys\ncan properly maintain highlights. To do that, use the container's state to check if the\nitem being rendered has the same index as the highlight, and if so, apply your class:\n\n```purescript\n-- in renderItem...\nif state.highlightedIndex == Just index then \"highlight-class\" else \"no-highlight-class\"\n```\n\nNote: This function will overwrite any properties of the same name that are already set.\n","title":"getItemProps","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["item",{"tag":"ForAll","contents":["o",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onClick",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseOver",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onKeyDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"KeyboardEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onClick",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseOver",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onKeyDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"KeyboardEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[384,1],"name":"/Users/honeyman/Code/select/src/Primitives/Container.purs","end":[407,8]}}]},{"reExports":[],"name":"Select.Primitives.Search","comments":"The Search primitive captures and debounces user input. It can be used in conjunction\nwith the Container primitive to make search-driven selection components like\ntypeaheads, image pickers, and date pickers.\n","declarations":[{"children":[{"comments":null,"title":"TextInput","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Raise","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"o"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FromContainer","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SearchReceiver","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"SearchInput"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"TypeVar","contents":"eff"}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"The query type for the `Search` primitive. This primitive handles text input\nand debouncing. It has a special query for the purpose of embedding Container\nqueries, used to route key events to the container from an input field.\n\nArguments:\n\n- `o`: The type of the parent query to embed. This is usually the component that\n-      mounts the search primitive, but it could also be the query type of some\n       higher component.\n- `item`: Your custom item type, used by your renderers.\n- `eff`: The extensible row of effects to used in the primitive. You should pass\n         your own effects.\n\n```purescript\ntype ChildQuery eff = SearchQuery MyQuery MyItem (YourEffects eff)\n```\n\nConstructors:\n\n- `TextInput`: Handle new text input as a string\n- `Raise`: Embed a parent query that can be returned to the parent for evaluation\n- `FromContainer`: Embed a container query that can be routed to a container slot\n- `SearchReceiver`: Update the component with new `Input` when the parent re-renders\n","title":"SearchQuery","info":{"declType":"data","dataDeclType":"data","typeArguments":[["o",null],["item",null],["eff",null],["a",null]]},"sourceSpan":{"start":[49,1],"name":"/Users/honeyman/Code/select/src/Primitives/Search.purs","end":[53,46]}},{"children":[],"comments":"The `Search` primitive internal state.\n\nArguments:\n\n- `eff`: The extensible row of effects used in the primitive. You should pass\n         your own effects.\n\nFields:\n\n- `search`: The `String` contained within the primitive. This is captured from user\n            input, or can be set by the parent.\n- `ms`: Number of milliseconds for the input to be debounced before passing\n        a message to the parent. Set to 0.0 if you don't want debouncing.\n- `debouncer`: Facilitates debouncing for the input field.\n","title":"SearchState","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["search",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["ms",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]},{"tag":"RCons","contents":["debouncer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"Debouncer"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[69,1],"name":"/Users/honeyman/Code/select/src/Primitives/Search.purs","end":[73,4]}},{"children":[],"comments":"The `Debouncer` type alias, used to debounce user input in the `Search` primitive.\n","title":"Debouncer","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["var",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVar"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"RCons","contents":["fiber",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/honeyman/Code/select/src/Primitives/Search.purs","end":[78,30]}},{"children":[],"comments":"The input type of the `Search` primitive\n\nFields:\n\n- `search`: An optional initial value for the `search` key on the `SearchState`\n- `debounceTime`: A value in milliseconds for the debounce delay. Set to 0.0 for\n                  no debouncing.\n- `render`: The render function for the primitive\n","title":"SearchInput","info":{"arguments":[["o",null],["item",null],["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["search",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["debounceTime",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]},{"tag":"RCons","contents":["render",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"SearchState"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Component"],"ComponentHTML"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"SearchQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"TypeVar","contents":"eff"}]}}]}]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[88,1],"name":"/Users/honeyman/Code/select/src/Primitives/Search.purs","end":[91,76]}},{"children":[{"comments":null,"title":"NewSearch","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ContainerQuery","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Container"],"ContainerQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Emit","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"o"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"The possible messages a parent can evaluate from the search primitive.\n\nConstructors:\n\n- `NewSearch`: The user has entered a new search and it has passed the debouncer.\n- `ContainerQuery`: The user has triggered an embedded container query, like using arrow\n                    keys or Enter to select an item. Usually, you will route this to the\n                    container associated with your search primitive.\n\n```purescript\neval (FromContainer q a) -> H.raise (ContainerQuery q) *> pure a\n```\n\n- `Emit`: An embedded parent query has been triggered. This can be evaluated automatically\n          with this code in the parent's eval function:\n\n```purescript\neval (HandleSearch (Emit q) next) = eval q *> pure next\n```\n","title":"Message","info":{"declType":"data","dataDeclType":"data","typeArguments":[["o",null],["item",null]]},"sourceSpan":{"start":[113,1],"name":"/Users/honeyman/Code/select/src/Primitives/Search.purs","end":[116,18]}},{"children":[],"comments":"The primitive handles state and transformations but defers all rendering to the parent. The\nrender function can be written using our helper functions to ensure the right events are included.\n","title":"component","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["item",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Component"],"Component"]},{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"SearchQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"SearchInput"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"eff"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"Message"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]}}]},{"tag":"TypeVar","contents":"m"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[121,1],"name":"/Users/honeyman/Code/select/src/Primitives/Search.purs","end":[128,7]}},{"children":[],"comments":"Attach the necessary properties to the input field you render in the page. This\nshould be used directly on the input field's list of properties:\n\n```purescript\ninput_ $ getInputProps [ class_ (ClassName \"my-class\"), placeholder \"Search...\" ]\n```\n\nNote: This will overwrite any existing properties of the same name.\n","title":"getInputProps","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["item",{"tag":"ForAll","contents":["o",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onFocus",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["onKeyDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"KeyboardEvent"]},{"tag":"RCons","contents":["onInput",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"Event"]},{"tag":"RCons","contents":["value",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["onMouseDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseUp",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"SearchQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"TypeVar","contents":"eff"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen"],"IProp"]},{"tag":"RCons","contents":["onFocus",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["onKeyDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"KeyboardEvent"]},{"tag":"RCons","contents":["onInput",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"Event"]},{"tag":"RCons","contents":["value",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["onMouseDown",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onMouseUp",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"MouseEvent"]},{"tag":"RCons","contents":["onBlur",{"tag":"TypeConstructor","contents":[["DOM","Event","Types"],"FocusEvent"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Select","Primitives","Search"],"SearchQuery"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"item"}]},{"tag":"TypeVar","contents":"eff"}]}}]}}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[210,1],"name":"/Users/honeyman/Code/select/src/Primitives/Search.purs","end":[238,8]}}]},{"reExports":[],"name":"Select.Primitives.State","comments":"All primitives use the `Store` comonad as their component state. They also\ndefine their own state as is typical for Halogen Components, which is in turn\nembedded in `Store`.\n\nNote: Unless you are modifying or defining a new primitive, you will not need to use this type\nand can rely on the usual state definitions in each primitive's module.\n\n\n**Why use `Store`?**\n\nHalogen components only update if new values come in via their `receiver` field using their `Input`\ntype, or if they are destroyed and re-initialized in a new slot. Most values can be updated this\nway, but not render functions.\n\nIn this library, we do not make any rendering decisions and leave it entirely up to you to decide\nhow your selection component should appear. Your render functions have access to the parent state\nin which you mounted the primitive. This means you can provide arbitrary data to the primitive by\nstoring it in the parent state and accessing it in the renderer.\n\nTherefore, it is necessary that your render function updates on parent re-render just like usual\n`Input` values. Using `Store` allows us to extract and use the render function in a primitive.\n","declarations":[{"children":[],"comments":"All primitives use the `Store` type as their component state. Any additional\ndata, like a traditional Halogen State record, will also be provided.\n\n- `s`: The state type defined for the primitive\n- `q`: The query type defined for the primitive\n","title":"State","info":{"arguments":[["s",null],["q",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store"],"Store"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Component"],"ComponentHTML"]},{"tag":"TypeVar","contents":"q"}]}}]}},"sourceSpan":{"start":[37,1],"name":"/Users/honeyman/Code/select/src/Primitives/State.purs","end":[37,45]}},{"children":[],"comments":"A helper to get and unpack the primitive state type from the Store type. When used with pattern matching,\nyou can access state with:\n\n```purescript\n(Tuple renderFunction state) <- getState\n```\n","title":"getState","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store"],"Store"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/Users/honeyman/Code/select/src/Primitives/State.purs","end":[45,70]}},{"children":[],"comments":"A helper for wholly updating the `State` (`Store`) of a primitive.\n\nUsed when the `render` function needs to be updated; this is typically in the\nquery that handles `Input` updates.\n\nNote: Use `seeks` if only the primitive's internal state needs to be updated (not the entire Store).\n","title":"updateStore","info":{"declType":"value","type":{"tag":"ForAll","contents":["html",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"html"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store"],"Store"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"html"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Store"],"Store"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"html"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"/Users/honeyman/Code/select/src/Primitives/State.purs","end":[54,105]}}]}],"resolvedDependencies":{"purescript-free":"4.2.0","purescript-fixed-points":"4.0.0","purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-these":"3.0.0","purescript-unicode":"3.0.2","purescript-maps":"3.6.0","purescript-control":"3.3.1","purescript-arraybuffer-types":"1.0.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-profunctor":"3.2.0","purescript-media-types":"3.0.0","purescript-form-urlencoded":"3.0.0","purescript-arrays":"4.2.2","purescript-maybe":"3.0.0","purescript-profunctor-lenses":"3.8.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-js-timers":"3.0.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-halogen-css":"7.0.0","purescript-unfoldable":"3.1.0","purescript-invariant":"3.0.0","purescript-fork":"3.0.0","purescript-parsing":"4.3.1","purescript-formatters":"3.0.1","purescript-css":"3.4.0","purescript-argonaut-core":"3.1.1","purescript-halogen-vdom":"2.0.1","purescript-lazy":"3.0.0","purescript-dom":"4.15.0","purescript-now":"3.0.0","purescript-monoid":"3.3.0","purescript-halogen":"3.1.1","purescript-coroutines":"4.0.0","purescript-aff":"4.0.2","purescript-foldable-traversable":"3.7.1","purescript-debug":"3.0.0","purescript-tailrec":"3.3.0","purescript-unsafe-reference":"2.0.0","purescript-avar":"2.0.1","purescript-gen":"1.1.1","purescript-dom-indexed":"5.0.0","purescript-typelevel-prelude":"2.6.0","purescript-functors":"2.2.0","purescript-prelude":"3.1.1","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.1.1","purescript-contravariant":"3.1.0","purescript-generics":"4.0.0","purescript-affjax":"5.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.2.0","purescript-eff":"3.1.0","purescript-const":"3.2.0","purescript-record":"0.2.6","purescript-freeap":"3.0.1","purescript-freet":"3.0.0","purescript-transformers":"3.5.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.4.0","purescript-js-date":"4.0.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-catenable-lists":"4.0.0","purescript-parallel":"3.3.1","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.4.0","purescript-identity":"3.1.0","purescript-foreign":"4.0.1","purescript-colors":"4.3.0","purescript-http-methods":"3.0.0","purescript-sets":"3.1.0","purescript-lists":"4.12.0","purescript-nullable":"3.0.0","purescript-datetime":"3.4.1","purescript-functions":"3.0.0"},"version":"0.1.7","github":["citizennet","purescript-halogen-select"],"versionTag":"v0.1.7","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Halogen.HTML.Events":"purescript-halogen","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Data.Functor.Nu":"purescript-fixed-points","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","DOM.HTML.Indexed.InputType":"purescript-dom-indexed","Data.NonEmpty":"purescript-nonempty","DOM.HTML.Document":"purescript-dom","Control.Monad.Eff.Ref":"purescript-refs","DOM.CSS.Event.Types":"purescript-dom","Data.Char.Gen":"purescript-strings","DOM.HTML.Indexed.MenuitemType":"purescript-dom-indexed","DOM.HTML.Indexed.ButtonType":"purescript-dom-indexed","DOM.WebStorage.Types":"purescript-dom","Data.Formatter.Interval":"purescript-formatters","DOM.XHR.Types":"purescript-dom","DOM.HTML.HTMLParamElement":"purescript-dom","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","DOM.Event.MouseEvent":"purescript-dom","Data.Enum.Gen":"purescript-enums","Halogen.Component":"purescript-halogen","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","DOM.HTML.HTMLTableSectionElement":"purescript-dom","Data.HTTP.Method":"purescript-http-methods","Control.Comonad.Traced.Class":"purescript-transformers","DOM.HTML.Indexed.OrderedListType":"purescript-dom-indexed","Data.StrMap":"purescript-maps","Data.Functor.Mu":"purescript-fixed-points","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","CSS.FontFace":"purescript-css","Data.Record.Unsafe":"purescript-record","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","DOM.HTML.HTMLOutputElement":"purescript-dom","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","DOM.Event.EventTarget":"purescript-dom","Control.Monad.Gen":"purescript-gen","CSS.Property":"purescript-css","DOM.Node.MutationRecord":"purescript-dom","Halogen.Query.ForkF":"purescript-halogen","Data.Date":"purescript-datetime","Data.Argonaut.Parser":"purescript-argonaut-core","Data.Monoid.Dual":"purescript-monoid","Halogen.HTML.Properties":"purescript-halogen","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","DOM.HTML.HTMLMediaElement.CanPlayType":"purescript-dom","DOM.HTML.HTMLDataListElement":"purescript-dom","Data.Lens":"purescript-profunctor-lenses","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","DOM.XHR.FormData":"purescript-dom","Control.Biapplicative":"purescript-bifunctors","DOM.HTML.HTMLTextAreaElement":"purescript-dom","Data.CatList":"purescript-catenable-lists","DOM.Event.ClipboardEvent":"purescript-dom","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","CSS.Transition":"purescript-css","Text.Parsing.Parser":"purescript-parsing","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Lens.Prism.Maybe":"purescript-profunctor-lenses","CSS.Pseudo":"purescript-css","Data.Bounded":"purescript-prelude","DOM.HTML.HTMLOListElement":"purescript-dom","CSS.Text.Whitespace":"purescript-css","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Halogen.VDom.Types":"purescript-halogen-vdom","Data.Int":"purescript-integers","Data.Lens.Internal.Grating":"purescript-profunctor-lenses","Data.Profunctor.Cochoice":"purescript-profunctor","Color.Scheme.Harmonic":"purescript-colors","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","DOM.Event.WheelEvent":"purescript-dom","DOM.HTML.Event.ErrorEvent":"purescript-dom","Control.Monad.Trampoline":"purescript-free","DOM.HTML.HTMLObjectElement":"purescript-dom","Control.Monad.Aff.AVar":"purescript-aff","DOM.HTML.HTMLLIElement":"purescript-dom","Control.Apply":"purescript-prelude","DOM.HTML.Event.DragEvent":"purescript-dom","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Color":"purescript-colors","DOM.HTML.HTMLSourceElement":"purescript-dom","DOM.HTML.HTMLMetaElement":"purescript-dom","Data.Lens.Lens.Product":"purescript-profunctor-lenses","Control.Monad":"purescript-prelude","Color.Scheme.X11":"purescript-colors","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","CSS.Text":"purescript-css","Network.HTTP.RequestHeader":"purescript-affjax","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","CSS.Text.Shadow":"purescript-css","Halogen.Aff.Driver.State":"purescript-halogen","Control.Monad.RWS":"purescript-transformers","Text.Parsing.Parser.Pos":"purescript-parsing","Data.Maybe.First":"purescript-maybe","DOM.HTML.Indexed.PreloadValue":"purescript-dom-indexed","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Foreign.Index":"purescript-foreign","DOM.HTML.HTMLFieldSetElement":"purescript-dom","DOM.HTML.URL":"purescript-dom","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","DOM.Websocket.Types":"purescript-dom","Data.Lens.Prism.Coproduct":"purescript-profunctor-lenses","Data.Map.Gen":"purescript-maps","Data.Lens.Lens":"purescript-profunctor-lenses","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","CSS.Selector":"purescript-css","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","CSS.Size":"purescript-css","Control.Monad.Cont":"purescript-transformers","DOM.HTML.Types":"purescript-dom","DOM.HTML.HTMLElement":"purescript-dom","DOM.HTML.HTMLDataElement":"purescript-dom","Halogen.HTML.Core":"purescript-halogen","Halogen.HTML.CSS":"purescript-halogen-css","CSS.Time":"purescript-css","Data.Time.Component.Gen":"purescript-datetime","Data.Lens.Internal.Forget":"purescript-profunctor-lenses","CSS.String":"purescript-css","DOM.HTML.HTMLLinkElement":"purescript-dom","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","DOM.HTML.HTMLOptionElement":"purescript-dom","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Record":"purescript-record","Halogen.VDom.Machine":"purescript-halogen-vdom","Control.Monad.Reader":"purescript-transformers","DOM.HTML.Indexed.CrossOriginValue":"purescript-dom-indexed","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Control.Monad.Eff.Now":"purescript-now","CSS.Background":"purescript-css","Data.Generic.Rep.Bounded":"purescript-generics-rep","Data.Formatter.Number":"purescript-formatters","DOM.HTML.HTMLKeygenElement":"purescript-dom","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Lens.Indexed":"purescript-profunctor-lenses","Halogen.Component.Profunctor":"purescript-halogen","Control.Coroutine":"purescript-coroutines","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","DOM.Node.NonElementParentNode":"purescript-dom","CSS":"purescript-css","DOM.File.FileReader":"purescript-dom","Data.Generic.Rep.Show":"purescript-generics-rep","Data.Profunctor.Clown":"purescript-profunctor","Data.Lens.Zoom":"purescript-profunctor-lenses","Data.Lens.Iso.Newtype":"purescript-profunctor-lenses","DOM.HTML.HTMLButtonElement":"purescript-dom","CSS.ListStyle.Type":"purescript-css","DOM.HTML.HTMLTableColElement":"purescript-dom","DOM.Node.Node":"purescript-dom","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Lens.Internal.Wander":"purescript-profunctor-lenses","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Halogen.Component.ChildPath":"purescript-halogen","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","DOM.HTML.HTMLInputElement":"purescript-dom","DOM.HTML.Indexed.DirValue":"purescript-dom-indexed","Control.Alternative":"purescript-control","Data.Lens.Lens.Tuple":"purescript-profunctor-lenses","DOM.HTML.Document.ReadyState":"purescript-dom","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.Char.Unicode.Internal":"purescript-unicode","DOM.HTML.HTMLModElement":"purescript-dom","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Data.Lens.Internal.Exchange":"purescript-profunctor-lenses","CSS.Font":"purescript-css","DOM.Event.CompositionEvent":"purescript-dom","DOM.Websocket.WebSocket":"purescript-dom","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","DOM.Event.Event":"purescript-dom","DOM.File.File":"purescript-dom","Data.Formatter.Parser.Utils":"purescript-formatters","Halogen":"purescript-halogen","Data.Formatter.Parser.Interval":"purescript-formatters","DOM.HTML.Location":"purescript-dom","DOM.WebStorage.Event.Types":"purescript-dom","DOM":"purescript-dom","Halogen.HTML.Elements.Keyed":"purescript-halogen","DOM.HTML.Indexed.KindValue":"purescript-dom-indexed","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Lens.Internal.Shop":"purescript-profunctor-lenses","Data.Lens.Internal.Tagged":"purescript-profunctor-lenses","Data.Lens.Record":"purescript-profunctor-lenses","DOM.HTML.HTMLLegendElement":"purescript-dom","DOM.File.FileReader.ReadyState":"purescript-dom","CSS.Media":"purescript-css","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","DOM.Node.Document":"purescript-dom","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Halogen.Aff":"purescript-halogen","DOM.HTML.History":"purescript-dom","Data.Lens.Grate":"purescript-profunctor-lenses","Data.Profunctor.Strong":"purescript-profunctor","Halogen.Aff.Driver.Eval":"purescript-halogen","Data.Lens.Internal.Market":"purescript-profunctor-lenses","Data.CatQueue":"purescript-catenable-lists","Network.HTTP.Affjax.Response":"purescript-affjax","DOM.HTML.Event.HashChangeEvent":"purescript-dom","Text.Parsing.Indent":"purescript-parsing","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Data.Formatter.DateTime":"purescript-formatters","CSS.ListStyle.Image":"purescript-css","Data.Lens.Common":"purescript-profunctor-lenses","Data.Lens.Getter":"purescript-profunctor-lenses","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","DOM.Node.ChildNode":"purescript-dom","DOM.Websocket.BinaryType":"purescript-dom","DOM.HTML.Indexed":"purescript-dom-indexed","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","DOM.HTML.HTMLOptGroupElement":"purescript-dom","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","DOM.HTML.HTMLIFrameElement":"purescript-dom","DOM.Node.NodeList":"purescript-dom","Network.HTTP.Affjax":"purescript-affjax","DOM.HTML.HTMLTableRowElement":"purescript-dom","Data.Set":"purescript-sets","DOM.HTML.HTMLMediaElement":"purescript-dom","DOM.HTML.HTMLMapElement":"purescript-dom","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Halogen.Query.InputF":"purescript-halogen","Data.Record.Builder":"purescript-record","Data.Lens.Traversal":"purescript-profunctor-lenses","DOM.HTML.Navigator":"purescript-dom","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","DOM.Node.NonDocumentTypeChildNode":"purescript-dom","Data.EuclideanRing":"purescript-prelude","DOM.File.FileList":"purescript-dom","DOM.HTML.Indexed.OnOff":"purescript-dom-indexed","Data.Functor.Invariant":"purescript-invariant","DOM.HTML.Window":"purescript-dom","Data.Formatter.Internal":"purescript-formatters","Data.Char.Unicode":"purescript-unicode","Halogen.Query.HalogenM":"purescript-halogen","CSS.Flexbox":"purescript-css","DOM.HTML.HTMLAreaElement":"purescript-dom","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","DOM.Node.MutationObserver":"purescript-dom","DOM.HTML.HTMLTrackElement":"purescript-dom","Data.Comparison":"purescript-contravariant","Unsafe.Reference":"purescript-unsafe-reference","Data.String.Unsafe":"purescript-strings","DOM.HTML.HTMLTableHeaderCellElement":"purescript-dom","Halogen.HTML.Properties.ARIA":"purescript-halogen","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","CSS.Geometry":"purescript-css","Data.Array":"purescript-arrays","DOM.HTML.HTMLScriptElement":"purescript-dom","Data.Bifunctor.Product":"purescript-bifunctors","CSS.Render":"purescript-css","CSS.Display":"purescript-css","Control.Extend":"purescript-control","Text.Parsing.Parser.Token":"purescript-parsing","Network.HTTP.StatusCode":"purescript-affjax","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","CSS.ListStyle.Position":"purescript-css","Control.Monad.Reader.Trans":"purescript-transformers","DOM.HTML.HTMLImageElement":"purescript-dom","Data.Functor.Product.Nested":"purescript-functors","Data.Lens.Types":"purescript-profunctor-lenses","DOM.HTML.HTMLStyleElement":"purescript-dom","Control.Comonad.Env.Class":"purescript-transformers","DOM.Websocket.ReadyState":"purescript-dom","Data.Interval.Duration.Iso":"purescript-datetime","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","CSS.VerticalAlign":"purescript-css","Halogen.Query":"purescript-halogen","Data.Either.Nested":"purescript-either","DOM.Node.ClassList":"purescript-dom","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","DOM.HTML.Event.Types":"purescript-dom","Data.Bifunctor":"purescript-bifunctors","CSS.Text.Transform":"purescript-css","DOM.HTML.Event.DataTransfer":"purescript-dom","Data.Monoid.Disj":"purescript-monoid","Halogen.VDom.Util":"purescript-halogen-vdom","Control.Monad.Eff.Exception":"purescript-exceptions","Data.MediaType":"purescript-media-types","Control.Monad.Eff.Timer":"purescript-js-timers","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Data.Record.ST":"purescript-record","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Data.Lens.Index":"purescript-profunctor-lenses","Network.HTTP.ResponseHeader":"purescript-affjax","Data.Lens.Internal.Re":"purescript-profunctor-lenses","Control.MonadPlus":"purescript-control","DOM.HTML.HTMLQuoteElement":"purescript-dom","Data.Lens.Lens.Void":"purescript-profunctor-lenses","DOM.Event.FocusEvent":"purescript-dom","DOM.Node.ParentNode":"purescript-dom","Color.Blending":"purescript-colors","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Halogen.Data.OrdBox":"purescript-halogen","DOM.Websocket.Event.Types":"purescript-dom","Data.DateTime.Instant":"purescript-datetime","Data.Lens.Internal.Indexed":"purescript-profunctor-lenses","Data.Formatter.Parser.Number":"purescript-formatters","Data.Profunctor.Costrong":"purescript-profunctor","Halogen.HTML":"purescript-halogen","Control.Comonad.Store":"purescript-transformers","DOM.Node.HTMLCollection":"purescript-dom","DOM.HTML.HTMLTimeElement":"purescript-dom","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Aff.Compat":"purescript-aff","DOM.HTML.Indexed.WrapValue":"purescript-dom-indexed","CSS.Stylesheet":"purescript-css","DOM.HTML.HTMLProgressElement":"purescript-dom","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","CSS.TextAlign":"purescript-css","DOM.HTML.HTMLBaseElement":"purescript-dom","DOM.HTML":"purescript-dom","DOM.Node.Types":"purescript-dom","Data.Lens.Fold":"purescript-profunctor-lenses","DOM.HTML.HTMLTrackElement.ReadyState":"purescript-dom","Halogen.Query.EventSource":"purescript-halogen","Data.Lens.Setter":"purescript-profunctor-lenses","Color.Scheme.HTML":"purescript-colors","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Lens.Prism.Either":"purescript-profunctor-lenses","DOM.HTML.HTMLCanvasElement":"purescript-dom","Color.Scale.Perceptual":"purescript-colors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","DOM.WebStorage.Event.StorageEvent":"purescript-dom","DOM.HTML.HTMLTitleElement":"purescript-dom","Data.Unit":"purescript-prelude","CSS.ListStyle":"purescript-css","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Halogen.VDom.Driver":"purescript-halogen","DOM.HTML.Event.DragEvent.DataTransfer":"purescript-dom","Data.List.NonEmpty":"purescript-lists","DOM.Node.Element":"purescript-dom","CSS.Color":"purescript-css","CSS.Common":"purescript-css","DOM.HTML.HTMLTableCellElement":"purescript-dom","Data.List.Lazy.NonEmpty":"purescript-lists","CSS.Box":"purescript-css","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Lens.Lens.Unit":"purescript-profunctor-lenses","Data.Functor.Coproduct":"purescript-functors","CSS.Elements":"purescript-css","DOM.HTML.HTMLSelectElement":"purescript-dom","Halogen.VDom.DOM":"purescript-halogen-vdom","Control.Monad.Cont.Class":"purescript-transformers","Data.TacitString":"purescript-fixed-points","Data.Identity":"purescript-identity","DOM.HTML.SelectionMode":"purescript-dom","Data.Lens.Fold.Partial":"purescript-profunctor-lenses","DOM.HTML.HTMLTemplateElement":"purescript-dom","Math":"purescript-math","Halogen.VDom":"purescript-halogen-vdom","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","CSS.Gradient":"purescript-css","Text.Parsing.Parser.Combinators":"purescript-parsing","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","DOM.HTML.HTMLEmbedElement":"purescript-dom","Control.Monad.Eff.Class":"purescript-eff","Halogen.VDom.DOM.Prop":"purescript-halogen-vdom","Halogen.Data.Prism":"purescript-halogen","DOM.Util.FFI":"purescript-dom","Halogen.Aff.Effects":"purescript-halogen","DOM.File.Types":"purescript-dom","CSS.Animation":"purescript-css","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Type.Row.Effect.Equality":"purescript-type-equality","Color.Scale":"purescript-colors","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","DOM.Event.TouchEvent":"purescript-dom","DOM.HTML.HTMLMediaElement.NetworkState":"purescript-dom","Partial":"purescript-partial","Network.HTTP.Affjax.Request":"purescript-affjax","Text.Parsing.Parser.Expr":"purescript-parsing","Halogen.Aff.Util":"purescript-halogen","DOM.Websocket.Event.CloseEvent":"purescript-dom","Control.Comonad.Env.Trans":"purescript-transformers","DOM.HTML.Indexed.StepValue":"purescript-dom-indexed","DOM.HTML.Indexed.ScopeValue":"purescript-dom-indexed","DOM.HTML.HTMLMeterElement":"purescript-dom","DOM.HTML.Indexed.FormMethod":"purescript-dom-indexed","Control.Applicative.Free":"purescript-freeap","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","DOM.File.Blob":"purescript-dom","DOM.Event.KeyboardEvent":"purescript-dom","Control.Monad.Aff.Unsafe":"purescript-aff","DOM.Websocket.Event.EventTypes":"purescript-dom","DOM.HTML.HTMLLabelElement":"purescript-dom","Text.Parsing.Parser.Language":"purescript-parsing","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","DOM.WebStorage.Storage":"purescript-dom","Data.Array.ST":"purescript-arrays","Color.Scheme.Clrs":"purescript-colors","Control.Monad.Error.Class":"purescript-transformers","Data.Argonaut.Core":"purescript-argonaut-core","DOM.Websocket.Event.MessageEvent":"purescript-dom","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","DOM.HTML.HTMLFormElement":"purescript-dom","DOM.HTML.Event.EventTypes":"purescript-dom","Debug.Trace":"purescript-debug","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","DOM.Node.NodeType":"purescript-dom","Data.Generic.Rep":"purescript-generics-rep","Control.Monad.Free.Trans":"purescript-freet","Data.Bifunctor.Join":"purescript-bifunctors","DOM.HTML.HTMLTableElement":"purescript-dom","Control.Monad.Fork.Class":"purescript-fork","Data.Lens.Internal.Zipping":"purescript-profunctor-lenses","DOM.Event.PopstateEvent":"purescript-dom","DOM.HTML.HTMLMediaElement.ReadyState":"purescript-dom","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Halogen.HTML.Elements":"purescript-halogen","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Lens.Prism":"purescript-profunctor-lenses","Data.String.Regex.Flags":"purescript-strings","DOM.HTML.HTMLAnchorElement":"purescript-dom","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Color.Scheme.MaterialDesign":"purescript-colors","Halogen.Aff.Driver":"purescript-halogen","DOM.HTML.Indexed.MenuType":"purescript-dom-indexed","DOM.HTML.HTMLVideoElement":"purescript-dom","Control.Applicative":"purescript-prelude","Text.Parsing.Parser.String":"purescript-parsing","Data.Lens.Internal.Focusing":"purescript-profunctor-lenses","Data.Lens.Iso":"purescript-profunctor-lenses","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Data.MediaType.Common":"purescript-media-types","Data.These":"purescript-these","CSS.Transform":"purescript-css","Control.Monad.Eff.AVar":"purescript-avar","Data.Lens.At":"purescript-profunctor-lenses","Control.Monad.Writer":"purescript-transformers","CSS.Border":"purescript-css","DOM.Node.DocumentType":"purescript-dom","Data.Argonaut.Gen":"purescript-argonaut-core","Data.Profunctor.Choice":"purescript-profunctor","DOM.Event.EventPhase":"purescript-dom","CSS.Overflow":"purescript-css","Data.FormURLEncoded":"purescript-form-urlencoded","Data.Time.Gen":"purescript-datetime","DOM.Event.Types":"purescript-dom","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}