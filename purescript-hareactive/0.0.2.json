{"uploader":"paldepind","packageMeta":{"repository":{"url":"https://github.com/funkia/purescript-hareactive.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-psci-support":"^3.0.0"},"dependencies":{"purescript-console":"^3.0.0","purescript-monoid":"^3.3.0","purescript-prelude":"^3.1.1","purescript-eff":"^3.2.0","purescript-tuples":"^4.1.0","purescript-functions":"^3.0.0"},"name":"purescript-hareactive","license":["MIT"]},"tagTime":"2018-04-07T08:26:51+0000","modules":[{"reExports":[],"name":"Data.Hareactive","comments":null,"declarations":[{"children":[{"comments":null,"title":"functorNow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Now"]}]}},"sourceSpan":{"start":[265,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[265,35]}},{"comments":null,"title":"applyNow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Now"]}]}},"sourceSpan":{"start":[270,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[270,31]}},{"comments":null,"title":"applicativeNow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Now"]}]}},"sourceSpan":{"start":[275,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[275,43]}},{"comments":null,"title":"bindNow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Now"]}]}},"sourceSpan":{"start":[280,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[280,29]}},{"comments":null,"title":"monadNow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Now"]}]}},"sourceSpan":{"start":[285,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[285,31]}}],"comments":"A `Now` represents a computation that occurs at a specific moment in time.\nThat moment is always \"now\". This means that computations inside the now\ncan depend on timeâ€”but only the current point in time. The requirement\nthat `Time` is always the current moment in time is enforced and\nguaranteed by the API for working with time.\n\nIn addition to containing time-dependent computations a `Now` can also\ncontain computations with side-effects. An approximate model of a `Now a`\nis that it is equivalent to `Time -> IO a`.\n\n`Now` servers two purposes in Hareactive: It makes it possible to create\nstateful behaviors that depends on the past _without_ introducing\nspace-leaks (a notorious problem in FRP). Additionally, it is the glue\nbetween FRP primitives and effectful computations.\n","title":"Now","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[67,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[67,40]}},{"children":[{"comments":null,"title":"functorBehavior","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]}]}},"sourceSpan":{"start":[75,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[75,45]}},{"comments":null,"title":"applyBehavior","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]}]}},"sourceSpan":{"start":[78,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[78,41]}},{"comments":null,"title":"applicativeBehavior","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]}]}},"sourceSpan":{"start":[83,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[83,53]}},{"comments":null,"title":"bindBehavior","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]}]}},"sourceSpan":{"start":[88,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[88,39]}},{"comments":null,"title":"monadBehavior","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[93,41]}}],"comments":"A behavior represents a value that changes over time. I.e. a value that\ndepends on time. Semantically a `Behavior a` can be understood as being\nequivalent to a function `Time -> a`. A behavior isn't implemented as a\nfunction. But the semantics serve as a mental model in terms of which all\nother operations can be understood.\n","title":"Behavior","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[35,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[35,45]}},{"children":[{"comments":"The `Semigroup` instance merges to streams by combining their occurrences\nwhile keeping them ordered with respect to time.\n\nOne detail to be aware of is what happens in case both the left and the\nright stream contains occurences that occur simultaneously.  The\n`sortWith` in the semantics below is _stable_. This implies that\nsimultaneous ocurrences in the left stream will occurr before ones in the\nrigh stream.\n\nSemantically.\n\n```purescript\nappend s1 s2 = sortWith (\\(time, a) -> time) (s1 <> s2)\n```\n","title":"semigroupStream","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[122,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[122,49]}},{"comments":"The `Monoid` instance lets `mempty` be a stream without any occurrences.\n","title":"monoidStream","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[128,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[128,43]}},{"comments":null,"title":"functorStream","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]}]}},"sourceSpan":{"start":[145,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[145,41]}}],"comments":"A stream represents events that occur at specific moments in time. It is a\nlist of future values.  Semantically a `Stream a` can be understood as\n`List (Time, a)`. That is, a list of values where each value is associated\nwith a specific moment in time. The time values have to be increasing.\nBut, they do _not_ have to be _strictly_ increasing. This means that a\nstream can have several occurrences at the same moment in time. This can\nbe very useful in certain circumstances.\n","title":"Stream","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[51,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[51,43]}},{"children":[{"comments":null,"title":"functorFuture","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Future"]}]}},"sourceSpan":{"start":[99,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[99,41]}}],"comments":"A future is a value associated with some point in time. Semantically a\n`Future a` is equivalent to `(Time, a)`. That is, a value tagged with\ntime. In practice, `Stream` is used more often than `Future`. `Future` is\nuseful in circumstances where some event occurs exactly once in the\nfuture.\n","title":"Future","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[42,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[42,43]}},{"children":[],"comments":"Whenever the stream has an occurence the function at the behavior is\napplied to the value of the occurrence.\n\nSemantically.\n```purescript\napply b s = map (\\{time, a} -> {time, a: b time a}) s\n```\n","title":"apply","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[161,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[161,63]}},{"children":[],"comments":"A combination of `filter` and `apply`\n","title":"filterApply","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[167,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[167,73]}},{"children":[],"comments":"Filter a stream, keeping the elements which satisfy a predicate function,\ncreating a new stream.\n\nSemantically.\n```purescript\nfilter p s = filter (\\(time, a) -> p x) s\n```\n","title":"filter","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[140,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[140,59]}},{"children":[],"comments":"Filter a stream, keeping the elements which satisfy a predicate function,\ncreating a new stream.\n\n```purescrept\nkeepWhen s b = filter (\\{time, a} -> b time) s\n```\n","title":"keepWhen","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[178,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[178,63]}},{"children":[],"comments":"Returns the current value of the behavior in the `Now`. This is possible\nbecause computations in the `Now` monad have an associated point in time.\n","title":"sample","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Now"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[263,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[263,55]}},{"children":[],"comments":"Creates a stream that occurs exactly when the given stream occurs. Every\ntime the stream s has an occurrence the current value of the behavior is\nsampled. The value in the occurrence is then replaced with the sampled\nvalue.\n","title":"snapshot","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[204,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[204,59]}},{"children":[],"comments":"Returns a stream that occurs whenever the given stream occurs. At each\noccurrence the value and the value from the behavior is passed to the\nfunction and the return value is the value of the returned streams\noccurrence.\n","title":"snapshotWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[213,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[213,82]}},{"children":[],"comments":"For each occurrence on the stream the function is applied to the value and\nthe accumulator.\n\n```purescrept\nscan f a s =\n  \\from, to -> foldr f a <<< map (_.a) <<< filter ({time} -> from <= time && to <= endT) $ s\n```\n","title":"scan","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[190,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[190,76]}},{"children":[],"comments":null,"title":"scanS","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[195,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[195,75]}},{"children":[],"comments":"Creates a behavior whose value is the last occurrence in the stream.\n","title":"stepper","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[219,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[219,60]}},{"children":[],"comments":"Creates a new behavior that acts exactly like the first behavior until the\nfuture occurs after which it acts like the behavior from the future.\n","title":"switchTo","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Future"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[226,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[226,70]}},{"children":[],"comments":"Creates a behavior that initially acts like the first behavior and then\nswitches to each new behavior from the stream.\n","title":"switcher","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[233,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[233,81]}},{"children":[],"comments":"Takes a stream valued behavior and returns a stream that emits values from\nthe current stream at the behavior. I.e. the returned stream always\n\"switches\" to the current stream at the behavior.\n","title":"switchStream","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Behavior"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hareactive"],"Stream"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[241,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive.purs","end":[241,73]}}]}],"resolvedDependencies":{"purescript-newtype":"2.0.0","purescript-control":"3.3.1","purescript-console":"3.0.0","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-invariant":"3.0.0","purescript-monoid":"3.3.0","purescript-foldable-traversable":"3.7.1","purescript-prelude":"3.1.1","purescript-bifunctors":"3.0.0","purescript-eff":"3.2.0","purescript-psci-support":"3.0.0","purescript-tuples":"4.1.0","purescript-identity":"3.1.0","purescript-functions":"3.0.0"},"version":"0.0.2","github":["funkia","purescript-hareactive"],"versionTag":"v0.0.2","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Data.Monoid.Multiplicative":"purescript-monoid","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.7"}