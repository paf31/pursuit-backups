{"uploader":"paldepind","packageMeta":{"repository":{"url":"https://github.com/funkia/purescript-hareactive.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-refs":"^4.1.0","purescript-spec":"^3.1.0","purescript-psci-support":"^4.0.0"},"dependencies":{"purescript-effect":"^2.0.1","purescript-maybe":"^4.0.1","purescript-web-uievents":"^2.0.0","purescript-aff":"^5.1.1","purescript-prelude":"^4.1.1","purescript-web-dom":"^2.0.0","purescript-partial":"^2.0.1","purescript-functions":"^4.0.0"},"name":"purescript-hareactive","license":["MIT"]},"tagTime":"2019-05-03T13:46:59+0000","modules":[{"reExports":[],"name":"Hareactive.BehaviorRef","comments":"This module allows the creation of mutable behaviors. That is, behaviors\nwhose value can be changed in an `Effect`.\n\nThis module intentionally resembles\n[`Effect.Ref`](https://pursuit.purescript.org/packages/purescript-refs). The\nonly difference in the API is the presence of `toBehavior` and `new'` which\nmakes it possible to extract a `Behavior` from a `BehaviorRef`.\n","declarations":[{"children":[],"comments":"A `BehaviorRef` represents a behavior whose current value can be mutated\nsimilarly to a `Ref`.\n","title":"BehaviorRef","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[30,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[30,48]}},{"children":[],"comments":"An effectful computation that creates a `BehaviorRef`. A `BehaviorRef` is a\nbehavior that one can imperatively change the value of by using the\n[`writerBehavior`](#v:writerBehavior) function.\n","title":"new","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[35,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[35,45]}},{"children":[],"comments":"This is convenience function for the common use-case of calling `new` and\nthen also converting the `BehaviorRef` into a `Behavior` with `toBehavior`.\n\nThe code\n```purescript\nref <- new 0\nbehavior <- toBehavior ref\n```\nIs equivalent to\n```purescript\n{ ref, behavior } <- new'\n```\n","title":"new'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["ref",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["behavior",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[52,79]}},{"children":[],"comments":"Extracts the `Behavior` from a `BehaviorRef`.\n","title":"toBehavior","info":{"declType":"value","type":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]}]}},"sourceSpan":{"start":[56,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[56,53]}},{"children":[],"comments":"Reads the current value of a `BehaviorRef`.\n","title":"read","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[59,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[59,44]}},{"children":[],"comments":"\n","title":"modify'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["state",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"RCons","contents":["value",{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"REmpty"}]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[65,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[65,86]}},{"children":[],"comments":"\n","title":"modify","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[73,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[73,58]}},{"children":[],"comments":"\n","title":"modify_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[77,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[77,62]}},{"children":[],"comments":"Change the value of the `BehaviorRef` into the given value.\n","title":"write","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","BehaviorRef"],"BehaviorRef"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[81,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/BehaviorRef.purs","end":[81,53]}}]},{"reExports":[],"name":"Hareactive.Combinators","comments":"This module contains all the combinators in Hareactive.\n\nThe lists below contains convenient grouping of various functions.\n\n#### Accumulating state\n\n[`accum     :: (a -> b -> b) -> b -> Stream a -> Now (Behavior b)`](#v:accum)\n[`scan      :: (a -> b -> b) -> b -> Stream a -> Now (Stream   b)`](#v:scan)\n[`integrate :: Behavior Number -> Now (Behavior Number)`](#v:integrate)\n\n#### Stepping and switching\n\nThe term \"switch\" refers to a behavior that changes between one or more\nbehaviors. The term \"step\" refers to a behavior changes between\nconstants. In other words, \"switch\" is a generalization of \"step\" that one\narrives at by replacing `a` with `Behavior a`.\n\n[`stepTo   ::          a -> Future           a  ->      Behavior a`](#v:stepTo)\n[`switchTo :: Behavior a -> Future (Behavior a) ->      Behavior a`](#v:switchTo)\n[`stepper  ::          a -> Stream           a  -> Now (Behavior a)`](#v:stepper)\n[`switcher :: Behavior a -> Stream (Behavior a) -> Now (Behavior a)`](#v:switcher)\n\n#### Shifts\n\nThe term \"shift\" refers to creating a stream that changes between one or\nmore streams.\n\n* `shiftCurrent :: Behavior (Stream a) ->      Stream a`\n* `shift        :: Stream   (Stream a) -> Now (Stream a)`\n\n#### Converting between reactive values\n\n* From `Behavior` to `Stream`: [changes](#v:changes).\n* From `Future` to `Behavior`: [stepTo](#v:stepTo).\n* From `Stream` to `Behavior`: [accum](#v:accum), [stepper](#v:stepper).\n* From `Stream` to `Future`: [nextOccurrence](#v:nextOccurrence).\n\n#### Flattening nested reactive values.\n\n* `Behavior (         a)`: [sample](#v:sample), [moment](#v:sample)\n* `Behavior (Behavior a)`: `join`\n* `Behavior (Stream   a)`: [shiftCurrent](#v:shiftCurrent)\n* `Stream   (Stream   a)`: [shift](#v:shift)\n* `Stream   (Behavior a)`: [switcherFrom](#v:switcherFrom), [selfie](#v:selfie)\n* `Future   (Behavior a)`: [switchTo](#v:switchTo)\n* `Future   (Future   a)`: `join`\n","declarations":[{"children":[],"comments":"This function is similar to `apply` for behaviors except the last argument\nis a stream instead of a behaviors. Whenever the stream has an occurrence\nthe function at the behavior is applied to the value of the occurrence.\n\nThis function has an operator alias `<~>`. The operator is intended to work\nin tandem with `<$>` and `<*>`. As an example, assume that `f3` is a\nfunction of three arguments, that `b1` and `b2` are two behaviors, and that\n`s` is a stream.` Then the function can be applied to the two behaviors and\nthe stream in the following way.\n\n```purescript\nf3 <$> b1 <*> b2 <~> s\n```\n\nWith the above code, whenever `s` has an occurrence the value of `b1`,\n`b2`, and the value of the occurrence will be applied to `f3` and its\nreturn value will be the value of the occurrence in the resulting stream.\n\nSemantically.\n```purescript\napplyS b s = map (\\{time, a} -> {time, a: (b time) a}) s\n```\n","title":"applyS","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[180,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[180,64]}},{"children":[],"comments":null,"title":"(<~>)","info":{"declType":"alias","alias":[["Control","Apply"],{"Right":{"Left":{"Ident":"apply"}}}],"fixity":{"associativity":"infixl","precedence":4}},"sourceSpan":{"start":[185,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[185,22]}},{"children":[],"comments":"A combination of `filter` and `apply`. For each occurrence of the stream\nthe predicate at the behavior at that time is applied to the value and the\nreturned stream contains the occurrence if and only if the predicate\nreturns true.\n\nThis function can be seen as a generalization of `filter`. Where `filter`\ntakes a constant predicate function `filterApply` takes a varying predicate\nin the form of a behavior of a predicate. As such `filterApply (pure\npredicate) stream` is equivalent to `filter predicate stream`.\n","title":"filterApply","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[196,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[196,73]}},{"children":[],"comments":"Filter a stream, keeping the elements which satisfy a predicate function,\ncreating a new stream.\n\nSemantically.\n```purescript\nfilter p s = filter (\\(time, a) -> p x) s\n```\n","title":"filter","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[115,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[115,59]}},{"children":[],"comments":"Removes all `Nothing` values from the stream and extracts the\nvalues from the remaining `Just`s.\n","title":"filterJust","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[125,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[125,53]}},{"children":[],"comments":"Takes a predicate and a stream. A record of to streams is returned. The\nfirst stream includes all occurrences from the original stream which pass\nthe predicate test and the second stream includes all occurrences which\nfail to pass the predicate.\n\n```purescript\n{ pass: smallNumbers, fail: largeNumbers } = split (_ < 100) streamOfNumbers\n```\n","title":"split","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["pass",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["fail",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[136,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[136,88]}},{"children":[],"comments":"Filter a stream, keeping the elements which satisfy a predicate function,\ncreating a new stream.\n\n```purescrept\nkeepWhen s b = filter (\\{time, a} -> b time) s\n```\n","title":"keepWhen","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[207,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[207,63]}},{"children":[],"comments":"Returns the current value of the behavior in the `Now`. This is possible\nbecause computations in the `Now` monad have an associated point in time.\n","title":"sample","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[391,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[391,55]}},{"children":[],"comments":"Creates a stream that occurs exactly when the given stream occurs. Every\ntime the stream s has an occurrence the current value of the behavior is\nsampled. The value in the occurrence is then replaced with the sampled\nvalue.\n","title":"snapshot","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[264,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[264,59]}},{"children":[],"comments":"Returns a stream that occurs whenever the given stream occurs. At each\noccurrence the value and the value from the behavior is passed to the\nfunction and the return value is the value of the returned streams\noccurrence.\n","title":"snapshotWith","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["c",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"c"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[273,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[273,82]}},{"children":[],"comments":"On each occurrence the behavior is sampled at the time of the occurrence.\n","title":"selfie","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[279,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[279,67]}},{"children":[],"comments":"For each occurrence on the stream the function is applied to the value and\nthe accumulator.\n\n","title":"accum","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[215,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[215,72]}},{"children":[],"comments":"Generalization of `accum` satisfying the equation `accum f init s = sample $ accumFrom f init s`.\n\nSemantically.\n```purescrept\naccumFrom f a s =\n  \\from, to -> foldr f a <<< map (_.a) <<< filter ({time} -> from <= time && to <= endT) $ s\n```\n","title":"accumFrom","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[225,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[225,81]}},{"children":[],"comments":"Similar to `accum` but instead of returning a behavior it returns a stream.\n\n","title":"scan","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[232,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[232,69]}},{"children":[],"comments":"Generalization of `scan` satisfying the equation `scan f init s = sample $ scanFrom f init s`.\n","title":"scanFrom","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[236,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[236,78]}},{"children":[],"comments":"From an initial value and a future value, `stepTo` creates a new behavior\nthat has the initial value until `next` occurs, after which it has the\nvalue of the future.\n","title":"stepTo","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[255,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[255,48]}},{"children":[],"comments":"Creates a behavior whose value is the last occurrence in the stream.\n","title":"stepper","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[242,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[242,55]}},{"children":[],"comments":"Generalization of `stepper` satisfying `stepper init s = sample $\nstepperFrom init s`.\n","title":"stepperFrom","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[247,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[247,64]}},{"children":[],"comments":"Creates a new behavior that acts exactly like the first behavior until the\nfuture occurs after which it acts like the behavior from the future.\n","title":"switchTo","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[283,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[283,70]}},{"children":[],"comments":"Creates a behavior that initially acts like the first behavior and then\nswitches to each new behavior from the stream.\n\nThis function is equal to `switcherB >>> sample`\n","title":"switcher","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[292,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[292,76]}},{"children":[],"comments":"Creates a behavior that initially acts like the first behavior and then\nswitches to each new behavior from the stream.\n","title":"switcherFrom","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[297,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[297,85]}},{"children":[],"comments":"Takes a stream valued behavior and returns a stream that emits values from\nthe current stream at the behavior. I.e. the returned stream always\n\"shifts\" to the current stream at the behavior.\n","title":"shiftCurrent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[305,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[305,73]}},{"children":[],"comments":"Takes a stream of a stream and returns a stream that emits from the last\nstream.\n","title":"shift","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[309,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[309,55]}},{"children":[],"comments":"Takes a stream of a stream and returns a stream that emits from the last\nstream.\n","title":"shiftFrom","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[314,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[314,79]}},{"children":[],"comments":"A behavior whose value is the number of milliseconds elapsed since UNIX\nepoch.\n","title":"time","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[318,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[318,39]}},{"children":[],"comments":"The now-computation results in a behavior that tracks the time passed since\nits creation.\n","title":"measureTime","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}]}},"sourceSpan":{"start":[322,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[322,52]}},{"children":[],"comments":"A behavior giving access to continous time. When sampled the outer\nbehavior returns a behavior whose value is the time since the outer\nbehavior was sampled.\n\nSemantically.\n```purescript\nmeasureTimeFrom = \\from, to -> to - from\n```\n","title":"measureTimeFrom","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}]}},"sourceSpan":{"start":[332,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[332,61]}},{"children":[],"comments":"Takes a behavior and returns a stream that has an occurrence\nwhenever the behavior changes.\n","title":"changes","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[336,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[336,52]}},{"children":[],"comments":"Creates a behavior that switches between `true` and `false`. Initally it\ntakes the value of its first argument. Each occurrence of the first stream\nwill make the behavior `true` and each occurrence of the second stream\nmakes the behavior `false`.\n\nThe example below demonstrates one use case for `toggle`. A stream\n`doorOpen` signifies that a door has been opened and similairly a stream\n`doorClose` signifies that the door has closed. `toggle` is then used to\nconstruct a behavior that at any time represents the state of the door.\n\n```purescript\nisDoorOpen <- toggle false doorOpen doorClose\n```\n","title":"toggle","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[354,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[354,80]}},{"children":[],"comments":"Generalization of `toggle` satisfying `toggle initial on off = sample $\ntoggleB initial on off`.\n","title":"toggleFrom","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[359,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[359,89]}},{"children":[],"comments":null,"title":"moment","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},null]}},"sourceSpan":{"start":[364,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[364,84]}},{"children":[],"comments":"Returns the next occurrence at the stream as a future.\n","title":"nextOccurrence","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[367,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[367,55]}},{"children":[],"comments":"Returns the next occurrence at the stream as a future.\n","title":"nextOccurrenceFrom","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[371,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[371,79]}},{"children":[],"comments":"Integrate behavior with respect to time. The value of the given behavior is\ninterpreted as being a rate of change _per second_.\n\nNote that `integrate` is implemented using Euler's method. Hence the\nresulting behavior is not exact but includes some numerical error.\n","title":"integrate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}]}]}},"sourceSpan":{"start":[378,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[378,54]}},{"children":[],"comments":"Generalization of `integrate` satisfying `integrate = sample <<<\nintegrateFrom`.\n","title":"integrateFrom","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}]}]}},"sourceSpan":{"start":[383,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[383,78]}},{"children":[],"comments":"`console.log`s the value of every occurrence.\n","title":"logS","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[143,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[143,52]}},{"children":[],"comments":"`console.log`s the value of the behavior whenever it changes.\n","title":"logB","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[149,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[149,54]}},{"children":[],"comments":"Runs an `Aff` inside a `Now`-computation.\n","title":"runAffNow","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}]}]},null]}},"sourceSpan":{"start":[399,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[399,62]}},{"children":[],"comments":"Takes a future effect and returns a now-computation that runs the effect\nonce the future occurs and delivers the result in a future.\n","title":"runFutureEffect","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[407,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[407,65]}},{"children":[],"comments":"Takes a stream of effects and returns a now-computation that runs the\neffect in each occurrence and delivers the result in a stream.\n","title":"runStreamEffect","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[412,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[412,65]}},{"children":[],"comments":"Takes a stream of `Aff` and runs each side-effect. The returned stream has\nan occurrence for the result from each asynchronous computation.\n","title":"runStreamAff","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}]}]},null]}},"sourceSpan":{"start":[417,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[417,74]}},{"children":[],"comments":"Creates a `Now`-computation that can depend recursively on its own.\n\nThe type variable `a` must be a record consisting of only `Future`,\n`Stream`, or `Behavior` values. This constraint is not, yet, enforced at\nthe type level.\n\nThe `counter` function in the following contrieved example returns a\nbehavior. Whenever the given stream has an occurrence the counter is\nincreased by adding its current value to a snapshot of its current value.\n\n```purescript\ncounter :: forall a. Stream a -> Stream Integer\ncounter stream = loopNow f\n  where f { count } = do\n    let countS = snapshot count stream\n    count <- accum (+) 1 countS\n    pure { count }\n","title":"loopNow","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[443,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[443,58]}},{"children":[],"comments":"Returns an `Effect` that executes the `Now` computation.\n","title":"runNow","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[446,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Combinators.purs","end":[446,38]}}]},{"reExports":[],"name":"Hareactive.DOM","comments":"This module contains functions for interacting with DOM.\n","declarations":[{"children":[],"comments":"Creates a stream from a DOM element and an event type. You can think of\nthis as the FRP equivalent of\n[addEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener).\n\n```purescript\nclickStream <- streamFromEvent (wrap \"click\") (toEventTarget buttonElement)\n```\n","title":"streamFromEvent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"EventTarget"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"Event"]}]}}]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Dom.purs","end":[26,69]}},{"children":[],"comments":"Returns a stream that has an occurrence whenever a key is pressed down. The\nvalue is the\n[KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)\nassociated with the key press.\n","title":"keyDown","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","UIEvent","KeyboardEvent"],"KeyboardEvent"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Dom.purs","end":[35,47]}},{"children":[],"comments":"Returns a stream that has an occurrence whenever a key is released. The\nvalue is the\n[KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)\nassociated with the key press.\n","title":"keyUp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","UIEvent","KeyboardEvent"],"KeyboardEvent"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Dom.purs","end":[41,45]}},{"children":[],"comments":"Returns a behavior that is true when the key is pressed and false then the\nkey is not pressed.\n\nThe string specifying the key is a\n[KeyboardEvent.code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code).\n","title":"keyPressed","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}},"sourceSpan":{"start":[48,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Dom.purs","end":[48,62]}},{"children":[],"comments":"Render the value of a behavior with an effectful render function.\n\nThe render function is called on each frame using `requestAnimationFrame`\nif the behavior has changed.\n","title":"render","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[54,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Dom.purs","end":[54,68]}}]},{"reExports":[],"name":"Hareactive.Interop","comments":"This module contains functions for connecting FRP with the rest of the\nworld. It contains low-level functions for creating futures, streams, and\nbehaviors \"from scratch\". It also contains low-level functions consuming\nstreams and behaviors by executing side-effects in response to their\noccurrences and value changes.\n\nThe module contains the following functions for creating reactive.\n\n* `Future`: [sinkFuture](#v:sinkFuture)\n* `Stream`: [sinkStream](#v:sinkStream), [producerStream](#v:producerStream)\n* `Behavior`: [producerBehavior](#v:producerBehavior)\n\nSince the functions in this module are low-level some of them necessitates\nthe understanding a few details about how Hareactive is implemented. These\nare activation and deactivation of streams and behaviors and the difference\nbetween pull and push behaviors.\n\n#### Activation and deactivation\n\nWhen a stream or behavior is created in Hareactive it is _inactive_ until\nother circumstanses forces it to _activate_. For instance, if `s` is a\nstream then `map f s` creates a new stream which is inactive. Since `f` is\npure and since no one depends on the occurrences of the mapped stream the\noccurrences are actualy never computed.\n\nAs soon as something with an observable effect depends on the stream (like\na stateful combinator such as `accum` or a function with side effects such\nas `runStreamEffect`) the stream will be activated. This is purely an\noptimization and it functions such that it does not leak into the rest of\nthe API (as opposed to some other reactive libraries with similar notions\nthat do escape into the API an affect every day users). However, when\nconstructing streams and behaviors from scratch it is beneficial for\nperformance reasons to understand activation/deactivation and create then\nsuch that they can activate and deactivate.\n\nFor instance, if creating a stream from DOM key press events then only when\nthe stream is activated should it add and event listener to the DOM and\nwhen the stream is deactivated it should remove the event listener from the\nDOM.\n\nStreams and behaviors that can activate and deactivate are created with the\nfunctions [producerStream](v:producerStream) and\n[producerBehavior](v:producerBehavior) respectively.\n\n### Push and pull behaviors\n\nBehaviors in Hareactive can be in either a _push_ state or a _pull_\nstate. When a behavior is in the push state it will notify any listeners of\nany changes in its value. On the other hand, when a behavior is in the pull\nstate any listeners must ask the behavior for changes whenever it is\nreleant for them to do so. This distinction only affects the function\n[observe](v:observe) which must handle behaviors in both states.\n\n","declarations":[{"children":[],"comments":"Hareactive represents time internally by using a logical clock. This type represents logical timestamps.\n\nThis type is opaque to users of Hareactive.\n","title":"Clock","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[83,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[83,34]}},{"children":[],"comments":"A `ProducerFunction` produces values by repeatedly invoking its first\nargument with new values.\n","title":"ProducerFunction","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}},"sourceSpan":{"start":[103,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[103,69]}},{"children":[],"comments":null,"title":"producerStream","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"ProducerFunction"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[106,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[106,59]}},{"children":[],"comments":null,"title":"SinkFuture","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[85,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[85,47]}},{"children":[],"comments":"Creates a future that one can resolve imperatively by calling\n`resolveFuture`.\n","title":"sinkFuture","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkFuture"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},null]}},"sourceSpan":{"start":[89,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[89,61]}},{"children":[],"comments":null,"title":"sinkFuture'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["sink",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkFuture"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["future",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"REmpty"}]}]}]}]},null]}},"sourceSpan":{"start":[91,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[91,77]}},{"children":[],"comments":null,"title":"resolveFuture","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkFuture"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[94,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[94,60]}},{"children":[],"comments":null,"title":"sinkFutureToFuture","info":{"declType":"value","type":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkFuture"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]}]}},"sourceSpan":{"start":[99,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[99,58]}},{"children":[],"comments":"Create a behavior from a producer function.\n","title":"producerBehavior","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"ProducerFunction"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"Clock"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[156,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[156,86]}},{"children":[],"comments":null,"title":"SinkStream","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[111,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[111,47]}},{"children":[],"comments":"An effectful computation that creates a `SinkStream`. A `SinkStream` is a\nsink that one can imperatively push occurrences into by using the\n[`pushSink`](#v:pushSink) function.\n","title":"sinkStream","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkStream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},null]}},"sourceSpan":{"start":[116,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[116,61]}},{"children":[],"comments":"This is a convenience function for the common use-case of calling\n`sinkStream` and then converting the `SinkStream` into a `Stream`\nwith `sinkStreamToStream`.\n\nThe code\n```purescript\nsink <- sinkStream\nstream <- sinkStreamToStream sink\n```\n\nIs equivalent to\n```purescript\n{ sink, stream } <- sinkStream'\n```\n","title":"sinkStream'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["sink",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkStream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["stream",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"REmpty"}]}]}]}]},null]}},"sourceSpan":{"start":[132,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[132,77]}},{"children":[],"comments":"Extract a `Stream` from a `SinkStream`. The resulting stream has an\noccurrence every time the `SinkStream` gets pushed into.\n","title":"sinkStreamToStream","info":{"declType":"value","type":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkStream"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]}]}},"sourceSpan":{"start":[142,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[142,58]}},{"children":[],"comments":null,"title":"pushSink","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Interop"],"SinkStream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[135,55]}},{"children":[],"comments":"Executes the side-effect for each occurrence of the stream.\n","title":"subscribe","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[162,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[162,69]}},{"children":[],"comments":"Executes side-effects in response to a behavior.\n","title":"observe","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[168,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Interop.purs","end":[168,110]}}]},{"reExports":[],"name":"Hareactive.Types","comments":null,"declarations":[{"children":[{"comments":null,"title":"functorBehavior","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]}]}},"sourceSpan":{"start":[62,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[62,45]}},{"comments":null,"title":"applyBehavior","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]}]}},"sourceSpan":{"start":[65,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[65,41]}},{"comments":null,"title":"applicativeBehavior","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[70,53]}},{"comments":null,"title":"bindBehavior","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]}]}},"sourceSpan":{"start":[75,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[75,39]}},{"comments":null,"title":"monadBehavior","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Behavior"]}]}},"sourceSpan":{"start":[80,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[80,41]}}],"comments":"A behavior represents a value that changes over time. I.e. a value that\ndepends on time. Semantically a `Behavior a` can be understood as being\nequivalent to a function `Time -> a`. A behavior isn't implemented as a\nfunction. But the semantics serve as a mental model in terms of which all\nother operations can be understood.\n","title":"Behavior","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[22,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[22,45]}},{"children":[{"comments":"`append` returns the future that occurs first. The expression `a <> b` is\nequal to `a` if `a` occurs before `b` and `b` otherwise.\n","title":"semigroupFuture","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[88,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[88,49]}},{"comments":"`mempty` is a future that never occurs.\n","title":"monoidFuture","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[92,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[92,43]}},{"comments":null,"title":"functorFuture","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]}]}},"sourceSpan":{"start":[97,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[97,41]}},{"comments":null,"title":"applyFuture","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]}]}},"sourceSpan":{"start":[104,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[104,37]}},{"comments":null,"title":"applicativeFuture","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]}]}},"sourceSpan":{"start":[111,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[111,49]}},{"comments":null,"title":"bindFuture","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]}]}},"sourceSpan":{"start":[116,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[116,35]}},{"comments":null,"title":"monadFuture","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Future"]}]}},"sourceSpan":{"start":[121,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[121,37]}}],"comments":"A future is a value associated with some point in time. Semantically a\n`Future a` is equivalent to `(Time, a)`. That is, a value tagged with\ntime. In practice, `Stream` is used more often than `Future`. `Future` is\nuseful in circumstances where some event occurs exactly once in the\nfuture.\n","title":"Future","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[29,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[29,43]}},{"children":[{"comments":"The `Semigroup` instance merges two streams by combining their occurrences\nwhile keeping them ordered with respect to time.\n\nOne detail to be aware of is what happens in case both the left and the\nright stream contains occurences that occur simultaneously.  The\n`sortWith` in the semantics below is _stable_. This implies that\nsimultaneous ocurrences in the left stream will occurr before ones in the\nrigh stream.\n\nSemantically.\n\n```purescript\nappend s1 s2 = sortWith (\\(time, a) -> time) (s1 <> s2)\n```\n","title":"semigroupStream","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[141,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[141,49]}},{"comments":"The `Monoid` instance lets `mempty` be a stream without any occurrences.\n","title":"monoidStream","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[147,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[147,43]}},{"comments":null,"title":"functorStream","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Stream"]}]}},"sourceSpan":{"start":[152,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[152,41]}}],"comments":"A stream represents events that occur at specific moments in time. It is a\nlist of future values.  Semantically a `Stream a` can be understood as\n`List (Time, a)`. That is, a list of values where each value is associated\nwith a specific moment in time. The time values have to be increasing.\nBut, they do _not_ have to be _strictly_ increasing. This means that a\nstream can have several occurrences at the same moment in time. This can\nbe very useful in certain circumstances.\n","title":"Stream","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[38,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[38,43]}},{"children":[{"comments":null,"title":"functorNow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]}]}},"sourceSpan":{"start":[161,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[161,35]}},{"comments":null,"title":"applyNow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]}]}},"sourceSpan":{"start":[166,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[166,31]}},{"comments":null,"title":"applicativeNow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]}]}},"sourceSpan":{"start":[171,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[171,43]}},{"comments":null,"title":"bindNow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]}]}},"sourceSpan":{"start":[176,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[176,29]}},{"comments":null,"title":"monadNow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]}]}},"sourceSpan":{"start":[181,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[181,31]}},{"comments":"Runs an `Effect` inside a `Now`. The side-effect will be executed\nwhen the `Now` computation is being executed.\n","title":"monadEffectNow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Class"],"MonadEffect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Hareactive","Types"],"Now"]}]}},"sourceSpan":{"start":[185,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[185,43]}}],"comments":"A `Now` represents a computation that occurs at a specific moment in time.\nThat moment is always \"now\". This means that computations inside the now\ncan depend on time—but only the current point in time. The requirement\nthat `Time` is always the current moment in time is enforced and\nguaranteed by the API for working with time.\n\nIn addition to containing time-dependent computations a `Now` can also\ncontain computations with side-effects. An approximate model of a `Now a`\nis that it is equivalent to `Time -> IO a`.\n\n`Now` servers two purposes in Hareactive: It makes it possible to create\nstateful behaviors that depends on the past _without_ introducing\nspace-leaks (a notorious problem in FRP). Additionally, it is the glue\nbetween FRP primitives and effectful computations.\n","title":"Now","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[54,1],"name":"/home/simon/projects/purescript-hareactive/src/Hareactive/Types.purs","end":[54,40]}}]}],"resolvedDependencies":{"purescript-free":"5.2.0","purescript-web-storage":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-ordered-collections":"1.6.1","purescript-control":"4.1.0","purescript-console":"4.2.0","purescript-either":"4.1.1","purescript-media-types":"4.0.1","purescript-web-events":"2.0.1","purescript-arrays":"5.3.0","purescript-maybe":"4.0.1","purescript-type-equality":"3.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.1.0","purescript-web-html":"2.0.1","purescript-lazy":"4.0.0","purescript-now":"4.0.0","purescript-web-uievents":"2.0.0","purescript-aff":"5.1.1","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.0.0","purescript-gen":"2.1.1","purescript-functors":"3.1.1","purescript-prelude":"4.1.1","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-pipes":"6.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.1","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-mmorph":"5.1.0","purescript-ansi":"5.0.0","purescript-orders":"4.0.0","purescript-const":"4.1.0","purescript-spec":"3.1.0","purescript-transformers":"4.2.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.1.1","purescript-js-date":"6.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.1","purescript-psci-support":"4.0.0","purescript-catenable-lists":"5.0.1","purescript-web-file":"2.0.0","purescript-web-dom":"2.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.1","purescript-strings":"4.0.1","purescript-identity":"4.1.0","purescript-foreign":"5.0.0","purescript-lists":"5.4.0","purescript-nullable":"4.1.1","purescript-datetime":"4.1.1","purescript-functions":"4.0.0"},"version":"0.1.1","github":["funkia","purescript-hareactive"],"versionTag":"v0.1.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Web.DOM.NodeList":"purescript-web-dom","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Web.UIEvent.CompositionEvent":"purescript-web-uievents","Web.HTML.HTMLDataListElement":"purescript-web-html","Control.Monad.Trans.Class":"purescript-transformers","Web.HTML.HTMLTextAreaElement":"purescript-web-html","Data.Functor.Product":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Web.HTML.HTMLMediaElement.CanPlayType":"purescript-web-html","Test.Spec.Console":"purescript-spec","Effect.Uncurried":"purescript-effect","Web.DOM.ChildNode":"purescript-web-dom","Data.Char.Gen":"purescript-strings","Web.HTML.HTMLHRElement":"purescript-web-html","Web.DOM.NonDocumentTypeChildNode":"purescript-web-dom","Effect.Now":"purescript-now","Data.String.NonEmpty":"purescript-strings","Web.File.FileReader.ReadyState":"purescript-web-file","Effect":"purescript-effect","Web.HTML.HTMLLegendElement":"purescript-web-html","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Web.HTML.Event.HashChangeEvent":"purescript-web-html","Control.Comonad.Traced.Class":"purescript-transformers","Test.Spec.Summary":"purescript-spec","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Web.HTML.Event.BeforeUnloadEvent":"purescript-web-html","Web.DOM.MutationObserver":"purescript-web-dom","Data.DateTime":"purescript-datetime","Web.UIEvent.EventTypes":"purescript-web-uievents","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Web.HTML.History":"purescript-web-html","Control.Monad.Gen":"purescript-gen","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Web.HTML.Event.PopStateEvent.EventTypes":"purescript-web-html","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Web.DOM.ParentNode":"purescript-web-dom","Web.HTML.Event.DragEvent.EventTypes":"purescript-web-html","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Web.HTML.HTMLSpanElement":"purescript-web-html","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Pipes.Core":"purescript-pipes","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Test.Spec.Assertions.Aff":"purescript-spec","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLOptionElement":"purescript-web-html","Data.Int":"purescript-integers","Web.DOM.HTMLCollection":"purescript-web-dom","Web.HTML.Event.TrackEvent.EventTypes":"purescript-web-html","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Web.HTML.HTMLDivElement":"purescript-web-html","Control.Monad.Writer.Trans":"purescript-transformers","Web.File.FileReader":"purescript-web-file","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Web.HTML.HTMLKeygenElement":"purescript-web-html","Control.Monad":"purescript-prelude","Web.HTML.Event.EventTypes":"purescript-web-html","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Web.UIEvent.KeyboardEvent.EventTypes":"purescript-web-uievents","Control.Monad.List.Trans":"purescript-transformers","Web.HTML.HTMLLabelElement":"purescript-web-html","Web.HTML.HTMLAudioElement":"purescript-web-html","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Web.HTML.HTMLFormElement":"purescript-web-html","Web.DOM.Element":"purescript-web-dom","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Web.HTML.HTMLMediaElement.ReadyState":"purescript-web-html","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Web.UIEvent.FocusEvent":"purescript-web-uievents","Data.Time.Component.Gen":"purescript-datetime","Web.HTML.HTMLTableElement":"purescript-web-html","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Web.HTML.HTMLLIElement":"purescript-web-html","Web.HTML.HTMLMetaElement":"purescript-web-html","Web.HTML.HTMLOListElement":"purescript-web-html","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Web.HTML.Event.DragEvent":"purescript-web-html","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Web.HTML.Event.PopStateEvent":"purescript-web-html","Data.Generic.Rep.Bounded":"purescript-generics-rep","Web.Event.CustomEvent":"purescript-web-events","Test.Spec.Reporter.Console":"purescript-spec","Web.HTML.Event.ErrorEvent":"purescript-web-html","Control.Comonad.Traced.Trans":"purescript-transformers","Web.DOM.Text":"purescript-web-dom","Web.HTML.HTMLObjectElement":"purescript-web-html","Test.Spec.Reporter.Dot":"purescript-spec","Web.HTML.HTMLSourceElement":"purescript-web-html","Web.UIEvent.InputEvent.EventTypes":"purescript-web-uievents","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Web.DOM.NodeType":"purescript-web-dom","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","Control.Alternative":"purescript-control","Web.HTML.HTMLSelectElement":"purescript-web-html","Data.Semiring":"purescript-prelude","Pipes.Prelude":"purescript-pipes","Web.HTML.HTMLCanvasElement":"purescript-web-html","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Web.HTML.HTMLTableDataCellElement":"purescript-web-html","Data.Yoneda":"purescript-free","Web.HTML.HTMLTableCaptionElement":"purescript-web-html","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Web.HTML.HTMLTemplateElement":"purescript-web-html","Web.HTML.SelectionMode":"purescript-web-html","Web.UIEvent.WheelEvent.EventTypes":"purescript-web-uievents","Web.HTML.HTMLTitleElement":"purescript-web-html","Web.HTML.Event.PageTransitionEvent.EventTypes":"purescript-web-html","Web.HTML.HTMLTableCellElement":"purescript-web-html","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Web.HTML.HTMLUListElement":"purescript-web-html","Web.UIEvent.KeyboardEvent":"purescript-web-uievents","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Web.HTML.HTMLParamElement":"purescript-web-html","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Web.HTML.HTMLTableSectionElement":"purescript-web-html","Test.Spec.Reporter.Base":"purescript-spec","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Web.Event.EventTarget":"purescript-web-events","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Web.HTML.HTMLOutputElement":"purescript-web-html","Web.DOM.DocumentType":"purescript-web-dom","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Web.UIEvent.MouseEvent.EventTypes":"purescript-web-uievents","Test.Spec.Speed":"purescript-spec","Web.HTML.HTMLQuoteElement":"purescript-web-html","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Web.DOM.Internal.Types":"purescript-web-dom","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Web.HTML.Event.DataTransfer":"purescript-web-html","Data.EuclideanRing":"purescript-prelude","Web.HTML.Event.TrackEvent":"purescript-web-html","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Web.HTML.HTMLVideoElement":"purescript-web-html","Web.HTML.HTMLAnchorElement":"purescript-web-html","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Web.DOM.CharacterData":"purescript-web-dom","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Web.UIEvent.WheelEvent":"purescript-web-uievents","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Web.HTML.HTMLDocument":"purescript-web-html","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Web.HTML.Event.PageTransitionEvent":"purescript-web-html","Control.Comonad.Env.Class":"purescript-transformers","Web.Event.EventPhase":"purescript-web-events","Web.HTML.HTMLOptGroupElement":"purescript-web-html","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Web.HTML.HTMLIFrameElement":"purescript-web-html","Data.Either.Nested":"purescript-either","Web.HTML.Navigator":"purescript-web-html","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Web.File.FileList":"purescript-web-file","Test.Spec.Reporter":"purescript-spec","Web.UIEvent.InputEvent":"purescript-web-uievents","Data.Monoid.Disj":"purescript-prelude","Data.MediaType":"purescript-media-types","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Web.HTML.HTMLMapElement":"purescript-web-html","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Web.DOM.MutationRecord":"purescript-web-dom","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Web.HTML.HTMLMediaElement":"purescript-web-html","Web.HTML.HTMLTableRowElement":"purescript-web-html","Data.DateTime.Instant":"purescript-datetime","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Web.HTML.HTMLEmbedElement":"purescript-web-html","Web.UIEvent.CompositionEvent.EventTypes":"purescript-web-uievents","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Web.File.Url":"purescript-web-file","Ansi.Codes":"purescript-ansi","Web.HTML.HTMLDocument.ReadyState":"purescript-web-html","Web.UIEvent.MouseEvent":"purescript-web-uievents","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Web.HTML.HTMLMediaElement.NetworkState":"purescript-web-html","Web.DOM.Comment":"purescript-web-dom","Web.File.Blob":"purescript-web-file","Web.HTML.HTMLMeterElement":"purescript-web-html","Web.DOM.ProcessingInstruction":"purescript-web-dom","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Web.HTML.HTMLParagraphElement":"purescript-web-html","Data.Generic.Rep.Semiring":"purescript-generics-rep","Web.DOM":"purescript-web-dom","Data.List.Lazy.NonEmpty":"purescript-lists","Web.HTML.HTMLButtonElement":"purescript-web-html","Data.Ordering":"purescript-prelude","Web.HTML.HTMLModElement":"purescript-web-html","Data.Functor.Coproduct":"purescript-functors","Web.Event.Event":"purescript-web-events","Web.HTML.HTMLDListElement":"purescript-web-html","Control.Monad.Cont.Class":"purescript-transformers","Web.File.File":"purescript-web-file","Web.UIEvent.UIEvent":"purescript-web-uievents","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Web.HTML.Location":"purescript-web-html","Web.HTML.ValidityState":"purescript-web-html","Math":"purescript-math","Web.HTML.HTMLTableColElement":"purescript-web-html","Data.Set.NonEmpty":"purescript-ordered-collections","Web.Storage.Storage":"purescript-web-storage","Control.Comonad.Trans.Class":"purescript-transformers","Web.HTML.HTMLInputElement":"purescript-web-html","Data.String":"purescript-strings","Control.Plus":"purescript-control","Web.HTML.HTMLTimeElement":"purescript-web-html","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Web.HTML":"purescript-web-html","Web.HTML.HTMLProgressElement":"purescript-web-html","Web.HTML.HTMLTrackElement.ReadyState":"purescript-web-html","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Web.DOM.NonElementParentNode":"purescript-web-dom","Web.HTML.HTMLBaseElement":"purescript-web-html","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Web.DOM.Node":"purescript-web-dom","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Web.Storage.Event.StorageEvent":"purescript-web-storage","Web.HTML.HTMLElement":"purescript-web-html","Data.Array.ST":"purescript-arrays","Web.Event.Internal.Types":"purescript-web-events","Foreign":"purescript-foreign","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Web.Internal.FFI":"purescript-web-events","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Web.HTML.HTMLFieldSetElement":"purescript-web-html","Web.HTML.HTMLLinkElement":"purescript-web-html","Web.HTML.Event.HashChangeEvent.EventTypes":"purescript-web-html","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Web.HTML.HTMLBRElement":"purescript-web-html","Web.HTML.HTMLHeadingElement":"purescript-web-html","Web.HTML.HTMLHeadElement":"purescript-web-html","Web.HTML.HTMLDataElement":"purescript-web-html","Web.HTML.HTMLBodyElement":"purescript-web-html","Data.Bifoldable":"purescript-foldable-traversable","Web.HTML.Event.BeforeUnloadEvent.EventTypes":"purescript-web-html","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Test.Spec.Color":"purescript-spec","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Web.UIEvent.FocusEvent.EventTypes":"purescript-web-uievents","Web.HTML.Window":"purescript-web-html","Web.HTML.HTMLTableHeaderCellElement":"purescript-web-html","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLImageElement":"purescript-web-html","Data.Op":"purescript-contravariant","Web.HTML.HTMLPreElement":"purescript-web-html","Web.HTML.HTMLScriptElement":"purescript-web-html","Record.Unsafe":"purescript-prelude","Data.MediaType.Common":"purescript-media-types","Web.DOM.DocumentFragment":"purescript-web-dom","Control.Monad.Writer":"purescript-transformers","Web.DOM.DOMTokenList":"purescript-web-dom","Web.HTML.HTMLAreaElement":"purescript-web-html","Web.DOM.Document":"purescript-web-dom","Test.Spec.Reporter.Spec":"purescript-spec","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Time.Gen":"purescript-datetime","Web.HTML.HTMLTrackElement":"purescript-web-html","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings","Web.HTML.HTMLStyleElement":"purescript-web-html"},"compilerVersion":"0.12.2"}