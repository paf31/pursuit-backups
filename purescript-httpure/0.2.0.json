{"uploader":"cprussin","packageMeta":{"homepage":"https://github.com/cprussin/purescript-httpure","repository":{"url":"https://github.com/cprussin/purescript-httpure","type":"git"},"ignore":["**/.*","docs","out","test","Makefile","*.json","*.md"],"devDependencies":{"purescript-unsafe-coerce":"^3.0.0","purescript-spec":"^1.0.0","purescript-psci-support":"^3.0.0"},"dependencies":{"purescript-aff":"^3.1.0","purescript-prelude":"^3.0.0","purescript-node-http":"^4.0.0"},"name":"purescript-httpure","license":["MIT"],"description":"A web framework written in PureScript."},"tagTime":"2017-07-21T05:51:54+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["HTTPure","Headers"]},"declarations":[{"children":[],"comments":"The Headers type is just sugar for a StrMap of Strings that represents the\nset of headers sent or received in an HTTP request or response.\n","title":"Headers","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Headers.purs","end":[18,36]}},{"children":[],"comments":"Return the value of the given header.\n","title":"lookup","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[21,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Headers.purs","end":[21,38]}}]},{"moduleName":{"package":null,"item":["HTTPure","Request"]},"declarations":[{"children":[{"comments":null,"title":"Get","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Post","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Put","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Delete","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Head","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Connect","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Options","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Trace","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Patch","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"When using show on a Request, print the method and the path.\n","title":"show","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["HTTPure","Request"],"Request"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Request.purs","end":[30,35]}}],"comments":"A Request is a method along with headers, a path, and sometimes a body.\n","title":"Request","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Request.purs","end":[27,48]}}]},{"moduleName":{"package":null,"item":["HTTPure","Response"]},"declarations":[{"children":[],"comments":"The ResponseM type simply conveniently wraps up an HTTPure monad that\nreturns a response. This type is the return type of all router/route\nmethods.\n","title":"ResponseM","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureM"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"Response"]}]}},"sourceSpan":{"start":[96,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Response.purs","end":[96,48]}},{"children":[{"comments":null,"title":"Response","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Continue","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SwitchingProtocols","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Processing","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OK","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Created","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Accepted","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NonAuthoritativeInformation","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NoContent","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ResetContent","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PartialContent","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MultiStatus","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AlreadyReported","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IMUsed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MultipleChoices","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MovedPermanently","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Found","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SeeOther","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotModified","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UseProxy","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"TemporaryRedirect","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PermanentRedirect","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BadRequest","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Unauthorized","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PaymentRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Forbidden","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotFound","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MethodNotAllowed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotAcceptable","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ProxyAuthenticationRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RequestTimeout","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Conflict","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Gone","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LengthRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PreconditionFailed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PayloadTooLarge","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"URITooLong","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnsupportedMediaType","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RangeNotSatisfiable","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ExpectationFailed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ImATeapot","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MisdirectedRequest","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnprocessableEntity","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Locked","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FailedDependency","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UpgradeRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PreconditionRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"TooManyRequests","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RequestHeaderFieldsTooLarge","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnavailableForLegalReasons","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InternalServerError","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotImplemented","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BadGateway","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ServiceUnavailable","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"GatewayTimeout","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HTTPVersionNotSupported","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"VariantAlsoNegotiates","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InsufficientStorage","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LoopDetected","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotExtended","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NetworkAuthenticationRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A response is a status and headers, and for some statuses, a body. You can\nuse the data constructor `Response` to send non-standard status codes.\n","title":"Response","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Response.purs","end":[91,50]}}]},{"moduleName":{"package":null,"item":["HTTPure","Server"]},"declarations":[{"children":[],"comments":"The ResponseM type simply conveniently wraps up an HTTPure monad that\nreturns a Unit. This type is the return type of the HTTPure serve and\nrelated methods.\n","title":"ServerM","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureM"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Server.purs","end":[20,42]}},{"children":[],"comments":"Create and start a server. This is the main entry point for HTTPure. Takes\na port number on which to listen, a function mapping Request to ResponseM,\nand an HTTPureM containing effects to run after the server has booted\n(usually logging). Returns an HTTPureM containing the server's effects.\n","title":"serve","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Request"],"Request"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]},{"tag":"TypeVar","contents":"e"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","Server"],"ServerM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","Server"],"ServerM"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Server.purs","end":[56,19]}}]}],"name":"HTTPure","comments":null,"declarations":[]},{"reExports":[],"name":"HTTPure.Body","comments":null,"declarations":[{"children":[],"comments":"The Body type is just sugar for a String, that will be sent or received in\nthe HTTP body.\n","title":"Body","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Body.purs","end":[20,19]}},{"children":[],"comments":"Extract the contents of the body of the HTTP Request.\n","title":"read","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Request"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureEffects"]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Body.purs","end":[23,77]}},{"children":[],"comments":"Write a body to the given HTTP Response and close it.\n","title":"write","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Response"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["http",{"tag":"TypeConstructor","contents":[["Node","HTTP"],"HTTP"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Body.purs","end":[32,81]}}]},{"reExports":[],"name":"HTTPure.HTTPureM","comments":null,"declarations":[{"children":[],"comments":"A row of types that are used by an HTTPure server.\n","title":"HTTPureEffects","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["http",{"tag":"TypeConstructor","contents":[["Node","HTTP"],"HTTP"]},{"tag":"RCons","contents":["st",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST"],"ST"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"e"}]}]}]}},"sourceSpan":{"start":[12,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/HTTPureM.purs","end":[17,4]}},{"children":[],"comments":"The `HTTPureM` monad represents effects run by an HTTPure server. It takes\nan effects row parameter which enumerates all other side-effects performed\nwhile carrying out the server actions.\n","title":"HTTPureM","info":{"arguments":[["e",null],["t",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureEffects"]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/HTTPureM.purs","end":[22,48]}}]},{"reExports":[],"name":"HTTPure.Headers","comments":null,"declarations":[{"children":[],"comments":"The Headers type is just sugar for a StrMap of Strings that represents the\nset of headers sent or received in an HTTP request or response.\n","title":"Headers","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Headers.purs","end":[18,36]}},{"children":[],"comments":"Return the value of the given header.\n","title":"lookup","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[21,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Headers.purs","end":[21,38]}},{"children":[],"comments":"Write a set of headers to the given HTTP Response.\n","title":"write","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Response"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["http",{"tag":"TypeConstructor","contents":[["Node","HTTP"],"HTTP"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Headers.purs","end":[29,46]}}]},{"reExports":[],"name":"HTTPure.Path","comments":null,"declarations":[{"children":[],"comments":"The Path type is just sugar for a String that will be sent in a request and\nindicates the path of the resource being requested.\n","title":"Path","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[7,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Path.purs","end":[7,13]}}]},{"reExports":[],"name":"HTTPure.Request","comments":null,"declarations":[{"children":[{"comments":null,"title":"Get","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Post","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Put","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Delete","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Head","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Connect","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Options","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Trace","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Patch","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":"When using show on a Request, print the method and the path.\n","title":"show","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["HTTPure","Request"],"Request"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Request.purs","end":[30,35]}}],"comments":"A Request is a method along with headers, a path, and sometimes a body.\n","title":"Request","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Request.purs","end":[27,48]}},{"children":[],"comments":"Given an HTTP Request object, this method will convert it to an HTTPure\nRequest object.\n","title":"fromHTTPRequest","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Request"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureEffects"]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeConstructor","contents":[["HTTPure","Request"],"Request"]}]}]},null]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Request.purs","end":[45,63]}}]},{"reExports":[],"name":"HTTPure.Response","comments":null,"declarations":[{"children":[{"comments":null,"title":"Response","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Continue","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SwitchingProtocols","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Processing","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OK","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Created","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Accepted","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NonAuthoritativeInformation","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NoContent","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ResetContent","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PartialContent","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MultiStatus","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AlreadyReported","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IMUsed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MultipleChoices","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MovedPermanently","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Found","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SeeOther","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotModified","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UseProxy","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"TemporaryRedirect","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PermanentRedirect","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BadRequest","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Unauthorized","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PaymentRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Forbidden","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotFound","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MethodNotAllowed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotAcceptable","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ProxyAuthenticationRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RequestTimeout","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Conflict","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Gone","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LengthRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PreconditionFailed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PayloadTooLarge","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"URITooLong","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnsupportedMediaType","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RangeNotSatisfiable","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ExpectationFailed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ImATeapot","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MisdirectedRequest","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnprocessableEntity","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Locked","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FailedDependency","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UpgradeRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"PreconditionRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"TooManyRequests","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RequestHeaderFieldsTooLarge","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnavailableForLegalReasons","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InternalServerError","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]},{"tag":"TypeConstructor","contents":[["HTTPure","Body"],"Body"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotImplemented","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BadGateway","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ServiceUnavailable","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"GatewayTimeout","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HTTPVersionNotSupported","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"VariantAlsoNegotiates","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InsufficientStorage","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LoopDetected","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotExtended","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NetworkAuthenticationRequired","info":{"arguments":[{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A response is a status and headers, and for some statuses, a body. You can\nuse the data constructor `Response` to send non-standard status codes.\n","title":"Response","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Response.purs","end":[91,50]}},{"children":[],"comments":"The ResponseM type simply conveniently wraps up an HTTPure monad that\nreturns a response. This type is the return type of all router/route\nmethods.\n","title":"ResponseM","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureM"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"Response"]}]}},"sourceSpan":{"start":[96,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Response.purs","end":[96,48]}},{"children":[],"comments":"Given an HTTP response and a HTTPure response, this method will return a\nmonad encapsulating writing the HTTPure response to the HTTP response and\nclosing the HTTP response.\n","title":"send","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Response"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"Response"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureM"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[249,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Response.purs","end":[249,72]}}]},{"reExports":[],"name":"HTTPure.Server","comments":null,"declarations":[{"children":[],"comments":"The ResponseM type simply conveniently wraps up an HTTPure monad that\nreturns a Unit. This type is the return type of the HTTPure serve and\nrelated methods.\n","title":"ServerM","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","HTTPureM"],"HTTPureM"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Server.purs","end":[20,42]}},{"children":[],"comments":"Create and start a server. This is the main entry point for HTTPure. Takes\na port number on which to listen, a function mapping Request to ResponseM,\nand an HTTPureM containing effects to run after the server has booted\n(usually logging). Returns an HTTPureM containing the server's effects.\n","title":"serve","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Request"],"Request"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]},{"tag":"TypeVar","contents":"e"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","Server"],"ServerM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["HTTPure","Server"],"ServerM"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Server.purs","end":[56,19]}}]},{"reExports":[],"name":"HTTPure.Status","comments":null,"declarations":[{"children":[],"comments":"The Status type enumerates all valid HTTP response status codes.\n","title":"Status","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[12,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Status.purs","end":[12,18]}},{"children":[],"comments":"Write a status to a given HTTP Response.\n","title":"write","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Response"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Status"],"Status"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["http",{"tag":"TypeConstructor","contents":[["Node","HTTP"],"HTTP"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[15,1],"name":"/home/travis/build/cprussin/purescript-httpure/src/HTTPure/Status.purs","end":[18,46]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-maps":"3.5.0","purescript-control":"3.3.0","purescript-arraybuffer-types":"2.0.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-node-streams":"3.1.0","purescript-arrays":"4.1.2","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-js-timers":"3.0.0","purescript-node-path":"2.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-node-process":"4.0.0","purescript-node-url":"3.0.0","purescript-monoid":"3.1.0","purescript-aff":"3.1.0","purescript-foldable-traversable":"3.4.0","purescript-tailrec":"3.3.0","purescript-gen":"1.1.0","purescript-functors":"2.2.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-pipes":"4.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.1.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-mmorph":"3.0.0","purescript-node-http":"4.1.0","purescript-const":"3.0.0","purescript-spec":"1.0.0","purescript-node-buffer":"3.0.1","purescript-node-fs":"4.0.0","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-js-date":"4.0.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-options":"3.0.0","purescript-psci-support":"3.0.0","purescript-parallel":"3.0.0","purescript-posix-types":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.3.0","purescript-identity":"3.1.0","purescript-foreign":"4.0.1","purescript-lists":"4.9.0","purescript-nullable":"3.0.0","purescript-datetime":"3.3.0","purescript-functions":"3.0.0"},"version":"0.2.0","github":["cprussin","purescript-httpure"],"versionTag":"v0.2.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Test.Spec.Console":"purescript-spec","Control.Monad.Eff.Ref":"purescript-refs","Data.Char.Gen":"purescript-strings","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Test.Spec.Summary":"purescript-spec","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Pipes.Core":"purescript-pipes","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Test.Spec.Assertions.Aff":"purescript-spec","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Foreign.Index":"purescript-foreign","Data.Monoid.Additive":"purescript-monoid","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.Time.Component.Gen":"purescript-datetime","Data.List.ZipList":"purescript-lists","Node.FS":"purescript-node-fs","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Test.Spec.Reporter.Console":"purescript-spec","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Node.FS.Async":"purescript-node-fs","Test.Spec.Reporter.Dot":"purescript-spec","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Pipes.Prelude":"purescript-pipes","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Node.HTTP.Client":"purescript-node-http","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Test.Spec.Reporter.Base":"purescript-spec","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Node.HTTP.Secure":"purescript-node-http","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Node.Buffer.Unsafe":"purescript-node-buffer","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Node.Process":"purescript-node-process","Control.Monad.Except.Trans":"purescript-transformers","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Node.URL":"purescript-node-url","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Posix":"purescript-posix-types","Control.Monad.Eff.Class":"purescript-eff","Data.Posix.Signal":"purescript-posix-types","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Node.HTTP":"purescript-node-http","Data.Options":"purescript-options","Node.Globals":"purescript-node-process","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Test.Spec.Color":"purescript-spec","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Node.Platform":"purescript-node-process","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}