{"uploader":"KtorZ","packageMeta":{"homepage":"https://ktorz.github.io/ifrit","repository":{"url":"git://github.com/KtorZ/purescript-ifrit.git","type":"git"},"resolutions":{"purescript-control":"2.0.0","purescript-maybe":"2.0.1","purescript-invariant":"2.0.0","purescript-monoid":"2.0.0","purescript-foldable-traversable":"2.2.0","purescript-prelude":"2.3.0","purescript-bifunctors":"2.0.0","purescript-tuples":"3.1.0"},"ignore":["**/.*","node_modules","bower_components","test","tests","dist","examples","releases","package.json","src/Main.purs"],"main":[""],"devDependencies":{"purescript-node-path":"1.0.0","purescript-node-process":"3.0.0","purescript-aff":"2.0.3","purescript-pairs":"4.0.0","purescript-test-unit":"10.1.0","purescript-node-fs":"3.0.0","purescript-psci-support":"2.0.0"},"authors":[{"email":"matthias.benkort@gmail.com","name":"KtorZ"}],"dependencies":{"purescript-string-parsers":"^2.1.0","purescript-maps":"2.1.2","purescript-control":"2.0.0","purescript-either":"2.1.0","purescript-filterable":"^1.1.0","purescript-maybe":"2.0.1","purescript-argonaut-core":"2.0.1","purescript-foldable-traversable":"2.2.0","purescript-prelude":"2.3.0","purescript-argonaut-codecs":"2.0.0","purescript-decimals":"^1.2.0","purescript-tuples":"3.1.0","purescript-lists":"3.4.0"},"name":"purescript-ifrit","license":["MPL-2.0"],"description":"A NoSQL-like request transpiler for data aggregation"},"modules":[{"reExports":[],"name":"Ifrit.Core","comments":"This module defines high-level instances to handle compilation with Ifrit\n","declarations":[{"children":[{"comments":null,"title":"compile","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"driver"}]}]}]}},"sourceSpan":null},{"comments":null,"title":"compileMongoDB","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Core"],"Compile"]},{"tag":"TypeConstructor","contents":[["Ifrit","Core"],"MongoDB"]}]}},"sourceSpan":{"start":[30,1],"name":"src/Ifrit/Core.purs","end":[37,20]}}],"comments":"The `Compile` type class represents target NoSQL drivers.\n\nEach driver may have a different input and output type representation\n","title":"Compile","info":{"fundeps":[],"arguments":[["driver",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[20,1],"name":"src/Ifrit/Core.purs","end":[21,52]}},{"children":[{"comments":null,"title":"MongoDB","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showMongoDB","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Core"],"MongoDB"]}]}},"sourceSpan":{"start":[26,1],"name":"src/Ifrit/Core.purs","end":[28,14]}},{"comments":null,"title":"compileMongoDB","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Core"],"Compile"]},{"tag":"TypeConstructor","contents":[["Ifrit","Core"],"MongoDB"]}]}},"sourceSpan":{"start":[30,1],"name":"src/Ifrit/Core.purs","end":[37,20]}}],"comments":"MongoDB driver type: compiles SQL to an aggregation pipeline as JSON\n","title":"MongoDB","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"src/Ifrit/Core.purs","end":[24,31]}}]},{"reExports":[],"name":"Ifrit.Driver.MongoDB","comments":"This modules provides code generation for MongoDB aggregation pipeline\n","declarations":[{"children":[{"comments":null,"title":"ingest","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"stage"}]},{"tag":"TypeVar","contents":"pipeline"}]}},"sourceSpan":null},{"comments":null,"title":"ingestStatement","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}},"sourceSpan":{"start":[124,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[160,8]}},{"comments":null,"title":"ingestList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Ifrit","Driver","MongoDB"],"Ingest"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}},{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[163,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[168,35]}},{"comments":null,"title":"ingestProjection","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Projection"]}]}},"sourceSpan":{"start":[171,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[284,80]}},{"comments":null,"title":"ingestAggregation","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Aggregation"]}]}},"sourceSpan":{"start":[287,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[306,76]}},{"comments":null,"title":"ingestOrder","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Order"]}]}},"sourceSpan":{"start":[309,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[316,1]}},{"comments":null,"title":"ingestLimit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Limit"]}]}},"sourceSpan":{"start":[316,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[318,22]}},{"comments":null,"title":"ingestOffset","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Offset"]}]}},"sourceSpan":{"start":[321,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[323,22]}},{"comments":null,"title":"ingestCondition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}]}},"sourceSpan":{"start":[326,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[334,45]}},{"comments":null,"title":"ingestTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]}]}},"sourceSpan":{"start":[348,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[356,46]}},{"comments":null,"title":"ingestFactor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}]}},"sourceSpan":{"start":[370,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[397,42]}},{"comments":null,"title":"ingestOperand","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]}]}},"sourceSpan":{"start":[447,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[457,18]}},{"comments":null,"title":"ingestIndex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Driver","MongoDB"],"Ingest"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Index"]}]}},"sourceSpan":{"start":[460,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[464,18]}}],"comments":"The `Ingest` type class materializes types from which code can be generated.\nThe output may vary but is usually a JSON-related type\n","title":"Ingest","info":{"fundeps":[],"arguments":[["pipeline",null],["stage",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[32,1],"name":"src/Ifrit/Driver/MongoDB.purs","end":[33,30]}}]},{"reExports":[],"name":"Ifrit.Lexer","comments":"This module defines the logic to convert an SQL string to a list of tokens\n","declarations":[{"children":[],"comments":"Lexer materializes the progress of the tokenizer\nIt holds the current position and the remaining string to analyze. In exchange,\nit produces a list of tokens associated with their starting position\n","title":"Lexer","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pos",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["str",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":[]}]}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pos",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["token",{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Token"]},{"tag":"REmpty","contents":[]}]}]}]}]}}]}},"sourceSpan":{"start":[34,1],"name":"src/Ifrit/Lexer.purs","end":[34,102]}},{"children":[],"comments":"tokenize leads a Lexer to its final stage whenever posible\n","title":"tokenize","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Lexer"]}},"sourceSpan":{"start":[38,1],"name":"src/Ifrit/Lexer.purs","end":[38,18]}},{"children":[{"comments":null,"title":"Comma","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Function","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Funktion"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Parenthesis","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Parenthesis"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Keyword","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Keyword"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Binary","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Binary"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Unary","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Unary"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Word","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Boolean","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"String","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Number","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Decimal"],"Decimal"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"EOF","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showToken","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Keyword"]}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Token"]}]}},"sourceSpan":{"start":[257,1],"name":"src/Ifrit/Lexer.purs","end":[284,1]}},{"comments":null,"title":"eqToken","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Token"]}]}},"sourceSpan":{"start":[355,1],"name":"src/Ifrit/Lexer.purs","end":[355,36]}}],"comments":"A token value. Anything outside of these constructors is an invalid token.\n","title":"Token","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[55,1],"name":"src/Ifrit/Lexer.purs","end":[66,8]}},{"children":[{"comments":null,"title":"And","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"As","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Asc","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Desc","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Distinct","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"From","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"GroupBy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Limit","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Null","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Offset","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Or","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OrderBy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Select","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Where","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showKeyword","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Keyword"]}]}},"sourceSpan":{"start":[297,1],"name":"src/Ifrit/Lexer.purs","end":[328,1]}},{"comments":null,"title":"eqKeyword","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Keyword"]}]}},"sourceSpan":{"start":[358,1],"name":"src/Ifrit/Lexer.purs","end":[358,40]}}],"comments":"A supported SQL Keywords\n","title":"Keyword","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[70,1],"name":"src/Ifrit/Lexer.purs","end":[84,10]}},{"children":[{"comments":null,"title":"Avg","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Count","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Max","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Min","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Sum","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showFunktion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Funktion"]}]}},"sourceSpan":{"start":[284,1],"name":"src/Ifrit/Lexer.purs","end":[297,1]}},{"comments":null,"title":"eqFunktion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Funktion"]}]}},"sourceSpan":{"start":[361,1],"name":"src/Ifrit/Lexer.purs","end":[361,42]}}],"comments":"A supported aggregation / projection function\n","title":"Funktion","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[88,1],"name":"src/Ifrit/Lexer.purs","end":[93,8]}},{"children":[{"comments":null,"title":"Eq","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Neq","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Lt","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Gt","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Lte","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Gte","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showBinary","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Binary"]}]}},"sourceSpan":{"start":[328,1],"name":"src/Ifrit/Lexer.purs","end":[343,1]}},{"comments":null,"title":"eqBinary","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Binary"]}]}},"sourceSpan":{"start":[364,1],"name":"src/Ifrit/Lexer.purs","end":[364,38]}}],"comments":"A supported binary operator\n","title":"Binary","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[97,1],"name":"src/Ifrit/Lexer.purs","end":[103,8]}},{"children":[{"comments":null,"title":"Not","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showUnary","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Unary"]}]}},"sourceSpan":{"start":[343,1],"name":"src/Ifrit/Lexer.purs","end":[348,1]}},{"comments":null,"title":"eqUnary","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Unary"]}]}},"sourceSpan":{"start":[367,1],"name":"src/Ifrit/Lexer.purs","end":[367,36]}}],"comments":"A supported unary operator\n","title":"Unary","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[107,1],"name":"src/Ifrit/Lexer.purs","end":[108,8]}},{"children":[{"comments":null,"title":"Close","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Open","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqParenthesis","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Parenthesis"]}]}},"sourceSpan":{"start":[370,1],"name":"src/Ifrit/Lexer.purs","end":[370,37]}}],"comments":"A type of parenthesis, open or close\n","title":"Parenthesis","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[112,1],"name":"src/Ifrit/Lexer.purs","end":[114,9]}}]},{"reExports":[],"name":"Ifrit.Parser","comments":"This module provides logic to convert a list of tokens to an AST.\n\nThe AST representation can then be used for semantic analysis and code generation\n","declarations":[{"children":[],"comments":"A Parser type materializes the progress of the parser.\nIt holds a list of token associated with their respective position.\nIt produces an AST for the given parser\n","title":"Parser","info":{"arguments":[["expr",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pos",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["token",{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Token"]},{"tag":"REmpty","contents":[]}]}]}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"TypeVar","contents":"expr"}]}},"sourceSpan":{"start":[40,1],"name":"src/Ifrit/Parser.purs","end":[40,91]}},{"children":[{"comments":null,"title":"parse","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parser"]},{"tag":"TypeVar","contents":"expr"}]}},"sourceSpan":null},{"comments":null,"title":"parseIndex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Index"]}]}},"sourceSpan":{"start":[167,1],"name":"src/Ifrit/Parser.purs","end":[191,51]}},{"comments":null,"title":"parseOperand","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]}]}},"sourceSpan":{"start":[194,1],"name":"src/Ifrit/Parser.purs","end":[230,51]}},{"comments":null,"title":"parseFactor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}]}},"sourceSpan":{"start":[233,1],"name":"src/Ifrit/Parser.purs","end":[263,32]}},{"comments":null,"title":"parseTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]}]}},"sourceSpan":{"start":[266,1],"name":"src/Ifrit/Parser.purs","end":[277,27]}},{"comments":null,"title":"parseCondition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}]}},"sourceSpan":{"start":[280,1],"name":"src/Ifrit/Parser.purs","end":[291,25]}},{"comments":null,"title":"parseOrder","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Order"]}]}},"sourceSpan":{"start":[294,1],"name":"src/Ifrit/Parser.purs","end":[323,51]}},{"comments":null,"title":"parseLimit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Limit"]}]}},"sourceSpan":{"start":[326,1],"name":"src/Ifrit/Parser.purs","end":[338,51]}},{"comments":null,"title":"parseOffset","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Offset"]}]}},"sourceSpan":{"start":[341,1],"name":"src/Ifrit/Parser.purs","end":[353,51]}},{"comments":null,"title":"parseSelector","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Selector"]}]}},"sourceSpan":{"start":[356,1],"name":"src/Ifrit/Parser.purs","end":[402,51]}},{"comments":null,"title":"parseList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Ifrit","Parser"],"Parse"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[405,1],"name":"src/Ifrit/Parser.purs","end":[436,27]}},{"comments":null,"title":"parseStatement","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}},"sourceSpan":{"start":[439,1],"name":"src/Ifrit/Parser.purs","end":[468,51]}}],"comments":"The `Parse` type class refers to parts of the AST which can be parsed from a list of tokens\n","title":"Parse","info":{"fundeps":[],"arguments":[["expr",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[44,1],"name":"src/Ifrit/Parser.purs","end":[45,23]}},{"children":[{"comments":null,"title":"Select","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Projection"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Order"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Limit"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Offset"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Group","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Index"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Aggregation"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Order"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Limit"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Offset"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseStatement","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}},"sourceSpan":{"start":[439,1],"name":"src/Ifrit/Parser.purs","end":[468,51]}},{"comments":null,"title":"showStatement","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}},"sourceSpan":{"start":[471,1],"name":"src/Ifrit/Parser.purs","end":[499,92]}},{"comments":null,"title":"eqStatement","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}},"sourceSpan":{"start":[611,1],"name":"src/Ifrit/Parser.purs","end":[611,44]}}],"comments":"A statement refers to the highest element of the tree. So far, only read-type operations are\nrepresented. Also, in order to simplify the code-generation and the semantic analysis,\naggregations and projections are represented as via 2 constructors although they are both\nrepresented by a SELECT in sql.\n","title":"Statement","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[52,1],"name":"src/Ifrit/Parser.purs","end":[54,113]}},{"children":[{"comments":null,"title":"Projection","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Selector"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showProjection","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Projection"]}]}},"sourceSpan":{"start":[502,1],"name":"src/Ifrit/Parser.purs","end":[504,18]}},{"comments":null,"title":"eqProjection","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Projection"]}]}},"sourceSpan":{"start":[614,1],"name":"src/Ifrit/Parser.purs","end":[614,46]}}],"comments":"A projection, i.e. a field selected via a SELECT without any GROUP BY\n","title":"Projection","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[58,1],"name":"src/Ifrit/Parser.purs","end":[59,24]}},{"children":[{"comments":null,"title":"Aggregation","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Selector"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showAggregation","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Aggregation"]}]}},"sourceSpan":{"start":[507,1],"name":"src/Ifrit/Parser.purs","end":[509,18]}},{"comments":null,"title":"eqAggregation","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Aggregation"]}]}},"sourceSpan":{"start":[617,1],"name":"src/Ifrit/Parser.purs","end":[617,48]}}],"comments":"An aggregation, i.e. a field selected via a SELECT + GROUP BY\n","title":"Aggregation","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[63,1],"name":"src/Ifrit/Parser.purs","end":[64,25]}},{"children":[{"comments":null,"title":"Selector","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Function","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Funktion"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseSelector","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Selector"]}]}},"sourceSpan":{"start":[356,1],"name":"src/Ifrit/Parser.purs","end":[402,51]}},{"comments":null,"title":"showSelector","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Selector"]}]}},"sourceSpan":{"start":[512,1],"name":"src/Ifrit/Parser.purs","end":[523,1]}},{"comments":null,"title":"eqSelector","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Selector"]}]}},"sourceSpan":{"start":[620,1],"name":"src/Ifrit/Parser.purs","end":[620,42]}}],"comments":"A selector, i.e a field or function selected via a SELECT\n","title":"Selector","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[68,1],"name":"src/Ifrit/Parser.purs","end":[70,50]}},{"children":[{"comments":null,"title":"Term","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Or","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseCondition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}]}},"sourceSpan":{"start":[280,1],"name":"src/Ifrit/Parser.purs","end":[291,25]}},{"comments":null,"title":"showCondition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}]}},"sourceSpan":{"start":[523,1],"name":"src/Ifrit/Parser.purs","end":[527,31]}},{"comments":null,"title":"eqCondition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}]}},"sourceSpan":{"start":[623,1],"name":"src/Ifrit/Parser.purs","end":[623,44]}}],"comments":"A boolean condition associated with a WHERE clause\n","title":"Condition","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[74,1],"name":"src/Ifrit/Parser.purs","end":[76,17]}},{"children":[{"comments":null,"title":"Factor","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"And","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]}]}},"sourceSpan":{"start":[266,1],"name":"src/Ifrit/Parser.purs","end":[277,27]}},{"comments":null,"title":"showTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]}]}},"sourceSpan":{"start":[530,1],"name":"src/Ifrit/Parser.purs","end":[534,32]}},{"comments":null,"title":"eqTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Term"]}]}},"sourceSpan":{"start":[626,1],"name":"src/Ifrit/Parser.purs","end":[626,34]}}],"comments":"A term of a boolean condition\n","title":"Term","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[80,1],"name":"src/Ifrit/Parser.purs","end":[82,22]}},{"children":[{"comments":null,"title":"Operand","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Condition","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Condition"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Unary","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Unary"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Binary","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Binary"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseFactor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}]}},"sourceSpan":{"start":[233,1],"name":"src/Ifrit/Parser.purs","end":[263,32]}},{"comments":null,"title":"showFactor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}]}},"sourceSpan":{"start":[537,1],"name":"src/Ifrit/Parser.purs","end":[545,46]}},{"comments":null,"title":"eqFactor","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Factor"]}]}},"sourceSpan":{"start":[629,1],"name":"src/Ifrit/Parser.purs","end":[629,38]}}],"comments":"A factor of a term condition\n","title":"Factor","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[86,1],"name":"src/Ifrit/Parser.purs","end":[90,40]}},{"children":[{"comments":null,"title":"String","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Boolean","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Number","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Decimal"],"Decimal"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Field","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Null","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseOperand","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]}]}},"sourceSpan":{"start":[194,1],"name":"src/Ifrit/Parser.purs","end":[230,51]}},{"comments":null,"title":"showOperand","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]}]}},"sourceSpan":{"start":[548,1],"name":"src/Ifrit/Parser.purs","end":[561,1]}},{"comments":null,"title":"eqOperand","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Operand"]}]}},"sourceSpan":{"start":[632,1],"name":"src/Ifrit/Parser.purs","end":[632,40]}}],"comments":"An operand of an operator\n","title":"Operand","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[94,1],"name":"src/Ifrit/Parser.purs","end":[99,9]}},{"children":[{"comments":null,"title":"OrderAsc","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OrderDesc","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseOrder","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Order"]}]}},"sourceSpan":{"start":[294,1],"name":"src/Ifrit/Parser.purs","end":[323,51]}},{"comments":null,"title":"showOrder","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Order"]}]}},"sourceSpan":{"start":[561,1],"name":"src/Ifrit/Parser.purs","end":[568,1]}},{"comments":null,"title":"eqOrder","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Order"]}]}},"sourceSpan":{"start":[635,1],"name":"src/Ifrit/Parser.purs","end":[635,36]}}],"comments":"An ordering field, associated to an ORDER BY clause\n","title":"Order","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[103,1],"name":"src/Ifrit/Parser.purs","end":[105,21]}},{"children":[{"comments":null,"title":"Limit","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseLimit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Limit"]}]}},"sourceSpan":{"start":[326,1],"name":"src/Ifrit/Parser.purs","end":[338,51]}},{"comments":null,"title":"showLimit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Limit"]}]}},"sourceSpan":{"start":[568,1],"name":"src/Ifrit/Parser.purs","end":[570,11]}},{"comments":null,"title":"eqLimit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Limit"]}]}},"sourceSpan":{"start":[638,1],"name":"src/Ifrit/Parser.purs","end":[638,36]}}],"comments":"A limit, associated to a LIMIT clause\n","title":"Limit","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[109,1],"name":"src/Ifrit/Parser.purs","end":[110,14]}},{"children":[{"comments":null,"title":"Offset","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseOffset","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Offset"]}]}},"sourceSpan":{"start":[341,1],"name":"src/Ifrit/Parser.purs","end":[353,51]}},{"comments":null,"title":"showOffset","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Offset"]}]}},"sourceSpan":{"start":[573,1],"name":"src/Ifrit/Parser.purs","end":[575,11]}},{"comments":null,"title":"eqOffset","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Offset"]}]}},"sourceSpan":{"start":[641,1],"name":"src/Ifrit/Parser.purs","end":[641,38]}}],"comments":"An offset, associated to an OFFSET clause\n","title":"Offset","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[114,1],"name":"src/Ifrit/Parser.purs","end":[115,15]}},{"children":[{"comments":null,"title":"IdxField","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IdxNull","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseIndex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Parse"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Index"]}]}},"sourceSpan":{"start":[167,1],"name":"src/Ifrit/Parser.purs","end":[191,51]}},{"comments":null,"title":"showIndex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Index"]}]}},"sourceSpan":{"start":[578,1],"name":"src/Ifrit/Parser.purs","end":[585,1]}},{"comments":null,"title":"eqIndex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Index"]}]}},"sourceSpan":{"start":[644,1],"name":"src/Ifrit/Parser.purs","end":[644,31]}}],"comments":"An index, associated to a GROUP BY clause\n","title":"Index","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[119,1],"name":"src/Ifrit/Parser.purs","end":[121,12]}},{"children":[{"comments":null,"title":"ErrParenthesis","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pos",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["token",{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Token"]},{"tag":"REmpty","contents":[]}]}]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ErrUnexpectedTokens","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pos",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["token",{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Token"]},{"tag":"REmpty","contents":[]}]}]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ErrNotInteger","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Keyword"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ErrInvalidArgument","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Ifrit","Lexer"],"Funktion"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ErrEOF","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Error"]}]}},"sourceSpan":{"start":[585,1],"name":"src/Ifrit/Parser.purs","end":[611,1]}}],"comments":"Static representation of an error\n","title":"Error","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[125,1],"name":"src/Ifrit/Parser.purs","end":[130,11]}}]},{"reExports":[],"name":"Ifrit.Semantic","comments":"The semantic analyzer verifies the validaity of an AST according to a given\nJSON schema\n","declarations":[{"children":[{"comments":null,"title":"Object","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","StrMap"],"StrMap"]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Array","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"String","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Number","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Boolean","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Null","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"decodeSchema","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Class"],"DecodeJson"]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}},"sourceSpan":{"start":[362,1],"name":"src/Ifrit/Semantic.purs","end":[400,43]}},{"comments":null,"title":"encodeJsonSchema","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Argonaut","Encode","Class"],"EncodeJson"]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}},"sourceSpan":{"start":[403,1],"name":"src/Ifrit/Semantic.purs","end":[425,1]}},{"comments":null,"title":"showSchema","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}},"sourceSpan":{"start":[425,1],"name":"src/Ifrit/Semantic.purs","end":[426,34]}},{"comments":null,"title":"eqSchema","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}},"sourceSpan":{"start":[449,1],"name":"src/Ifrit/Semantic.purs","end":[449,32]}}],"comments":null,"title":"Schema","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[35,1],"name":"src/Ifrit/Semantic.purs","end":[41,9]}},{"children":[],"comments":"Decode a JSON stringified representation of a schema to an actual schema.\n\nLook at the fromJson function for more details about the schema structure.\n","title":"fromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}]}},"sourceSpan":{"start":[58,1],"name":"src/Ifrit/Semantic.purs","end":[58,45]}},{"children":[],"comments":"Decode a schema from a JSON object.\n\nIt can only decode JSON-objects to schema, where each property is mapped to one of the\nsupported types: \"null\", \"number\", \"string\", \"boolean\".\n\nArrays and nested objects can be represented by using their JSON equivalent. For instance:\n\n```json\n{\n   \"property\": \"string\",\n   \"whatever\": [\"number\"],\n   \"foo\": [{\n      \"bar\": \"boolean\"\n   }],\n   \"patate\": {\n      \"baguette\": \"number\"\n   }\n}\n```\n","title":"fromJson","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}]}},"sourceSpan":{"start":[82,1],"name":"src/Ifrit/Semantic.purs","end":[82,41]}},{"children":[],"comments":"Perform a semantic analysis on a statement from an input schema. The produced schema\ncorresponds to the schema of the generated result, after the statement has been processed.\n","title":"analyze","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Ifrit","Semantic"],"Schema"]}]}]}]}},"sourceSpan":{"start":[116,1],"name":"src/Ifrit/Semantic.purs","end":[116,62]}}]},{"reExports":[],"name":"Main","comments":null,"declarations":[{"children":[],"comments":null,"title":"input","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[23,1],"name":"src/Main.purs","end":[23,16]}},{"children":[],"comments":null,"title":"rawSchema","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[30,1],"name":"src/Main.purs","end":[30,20]}},{"children":[],"comments":null,"title":"ingest","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Ifrit","Parser"],"Statement"]}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Main.purs","end":[53,46]}},{"children":[],"comments":null,"title":"main","info":{"declType":"value","type":{"tag":"ForAll","contents":["t26804",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"t26804"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[59,1],"name":"src/Main.purs","end":[61,8]}}]}],"resolvedDependencies":{"purescript-free":"3.5.1","purescript-proxy":"1.0.0","purescript-string-parsers":"2.2.0","purescript-exceptions":"2.0.0","purescript-newtype":"1.3.0","purescript-maps":"2.1.2","purescript-control":"2.0.0","purescript-console":"2.0.0","purescript-either":"2.1.0","purescript-node-streams":"2.0.0","purescript-filterable":"1.1.0","purescript-arrays":"3.2.1","purescript-maybe":"2.0.1","purescript-js-timers":"2.0.0","purescript-exists":"2.0.0","purescript-node-path":"1.0.0","purescript-distributive":"2.0.0","purescript-unfoldable":"2.0.0","purescript-invariant":"2.0.0","purescript-argonaut-core":"2.0.1","purescript-lazy":"2.0.0","purescript-node-process":"3.0.0","purescript-preface":"1.1.0","purescript-monoid":"2.2.0","purescript-aff":"2.0.3","purescript-pairs":"4.0.0","purescript-foldable-traversable":"2.2.0","purescript-debug":"2.0.0","purescript-tailrec":"2.0.2","purescript-functors":"1.1.0","purescript-prelude":"2.3.0","purescript-inject":"3.0.0","purescript-st":"2.0.0","purescript-bifunctors":"2.0.0","purescript-nonempty":"3.0.0","purescript-contravariant":"2.0.0","purescript-generics":"3.3.0","purescript-unsafe-coerce":"2.0.0","purescript-refs":"2.0.0","purescript-integers":"2.1.1","purescript-argonaut-codecs":"2.0.0","purescript-eff":"2.0.0","purescript-test-unit":"10.1.0","purescript-const":"2.0.0","purescript-node-buffer":"2.0.1","purescript-node-fs":"3.0.0","purescript-transformers":"2.3.0","purescript-globals":"2.0.0","purescript-decimals":"1.4.0","purescript-js-date":"3.0.0","purescript-math":"2.0.0","purescript-enums":"2.0.1","purescript-psci-support":"2.0.0","purescript-catenable-lists":"3.0.1","purescript-random":"2.0.0","purescript-parallel":"2.1.0","purescript-posix-types":"2.0.0","purescript-tuples":"3.1.0","purescript-partial":"1.2.0","purescript-quickcheck":"3.1.1","purescript-strings":"2.1.0","purescript-identity":"2.1.0","purescript-foreign":"3.2.0","purescript-lists":"3.4.0","purescript-nullable":"2.0.0","purescript-datetime":"2.2.0","purescript-functions":"2.0.0"},"version":"0.1.0","github":["KtorZ","purescript-ifrit"],"versionTag":"v0.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Text.Parsing.StringParser.String":"purescript-string-parsers","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Data.Pair":"purescript-pairs","Control.Monad.Eff.Ref":"purescript-refs","Either":"purescript-preface","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Text.Parsing.StringParser":"purescript-string-parsers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Date":"purescript-datetime","Data.Argonaut.Parser":"purescript-argonaut-core","Data.Argonaut.Encode.Combinators":"purescript-argonaut-codecs","Data.Monoid.Dual":"purescript-monoid","Data.Foreign.NullOrUndefined":"purescript-foreign","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Test.Unit.Assert":"purescript-test-unit","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Function":"purescript-preface","Control.Biapplicative":"purescript-bifunctors","Maybe":"purescript-preface","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Test.Unit.Output.Fancy":"purescript-test-unit","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.Decimal":"purescript-decimals","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","String":"purescript-preface","Data.Foreign.Null":"purescript-foreign","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Foreign.Index":"purescript-foreign","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Data.Foreign.Class":"purescript-foreign","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Node.FS":"purescript-node-fs","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Test.Unit.QuickCheck":"purescript-test-unit","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Argonaut.Encode.Class":"purescript-argonaut-codecs","Node.FS.Async":"purescript-node-fs","Data.StrMap.Unsafe":"purescript-maps","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Control.Monad.Aff.Internal":"purescript-aff","Text.Parsing.StringParser.Combinators":"purescript-string-parsers","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Inject":"purescript-inject","Data.List.Types":"purescript-lists","Array":"purescript-preface","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Filterable":"purescript-filterable","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Foreign.Undefined":"purescript-foreign","Boolean":"purescript-preface","Test.Unit.Output.TAP":"purescript-test-unit","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Test.Unit.Console":"purescript-test-unit","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.Unit.Output.Simple":"purescript-test-unit","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Node.Buffer.Unsafe":"purescript-node-buffer","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Node.Process":"purescript-node-process","Control.Monad.Except.Trans":"purescript-transformers","Task":"purescript-preface","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Argonaut.Decode.Combinators":"purescript-argonaut-codecs","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Posix":"purescript-posix-types","Control.Monad.Eff.Class":"purescript-eff","Data.Posix.Signal":"purescript-posix-types","Test.QuickCheck":"purescript-quickcheck","Test.Unit.Main":"purescript-test-unit","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Number":"purescript-preface","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Data.Argonaut.Printer":"purescript-argonaut-core","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Data.Argonaut.Core":"purescript-argonaut-core","Test.Unit":"purescript-test-unit","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Text.Parsing.StringParser.Expr":"purescript-string-parsers","Debug.Trace":"purescript-debug","Data.Monoid.Alternate":"purescript-monoid","Unit":"purescript-preface","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Node.Globals":"purescript-node-process","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Argonaut.Decode.Class":"purescript-argonaut-codecs","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Node.Platform":"purescript-node-process","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Witherable":"purescript-filterable","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.10.7"}