{"uploader":"paulyoung","packageMeta":{"repository":{"url":"git://github.com/paulyoung/purescript-invertible-syntax.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-psci-support":"^3.0.0"},"dependencies":{"purescript-partial-isomorphisms":"^1.0.0","purescript-either":"^3.2.0","purescript-maybe":"^3.1.0","purescript-prelude":"^3.3.0","purescript-tuples":"^4.1.0","purescript-strings":"^3.5.0","purescript-lists":"^4.12.0"},"name":"purescript-invertible-syntax","license":["Apache-2.0"]},"tagTime":"2018-05-10T08:56:38+0000","modules":[{"reExports":[],"name":"Text.Syntax.Classes","comments":null,"declarations":[{"children":[{"comments":null,"title":"apply","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[10,3],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[10,51]}}],"comments":null,"title":"ProductFunctor","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[9,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[10,51]}},{"children":[],"comments":null,"title":"(<*>)","info":{"declType":"alias","alias":[["Text","Syntax","Classes"],{"Right":{"Left":{"Ident":"apply"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[12,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[12,22]}},{"children":[{"comments":null,"title":"alt","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[16,3],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[16,37]}},{"comments":null,"title":"empty","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[17,3],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[17,25]}}],"comments":null,"title":"Alternative","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[15,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[17,25]}},{"children":[],"comments":null,"title":"(<|>)","info":{"declType":"alias","alias":[["Text","Syntax","Classes"],{"Right":{"Left":{"Ident":"alt"}}}],"fixity":{"associativity":"infixl","precedence":3}},"sourceSpan":{"start":[19,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[19,20]}},{"children":[{"comments":null,"title":"pure","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[23,3],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[23,37]}},{"comments":null,"title":"token","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[24,3],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[24,14]}}],"comments":null,"title":"Syntax","info":{"fundeps":[],"arguments":[["d",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Control","Isomorphism","Partial"],"IsoFunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"constraintClass":[["Text","Syntax","Classes"],"ProductFunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"constraintClass":[["Text","Syntax","Classes"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null}]},"sourceSpan":{"start":[22,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Classes.purs","end":[24,14]}}]},{"reExports":[],"name":"Text.Syntax.Combinators","comments":"Derived combinators\n","declarations":[{"children":[],"comments":"`text` parses/prints a fixed text and consumes/produces a unit value.\n","title":"text","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[21,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[21,47]}},{"children":[],"comments":null,"title":"comma","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[29,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[29,38]}},{"children":[],"comments":null,"title":"dot","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[32,36]}},{"children":[],"comments":null,"title":"many","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[37,50]}},{"children":[],"comments":null,"title":"many1","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[40,51]}},{"children":[],"comments":null,"title":"sepBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[43,61]}},{"children":[],"comments":"The `chainl1` combinator is used to parse a left-associative chain of\ninfix operators.\n","title":"chainl1","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Isomorphism","Partial"],"Iso"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[54,9]}},{"children":[],"comments":"This variant of `<*>` ignores its left result. In contrast to its\ncounterpart derived from the `Apply` class, the ignored parts have type\n`d Unit` rather than `d b` because otherwise information relevant for\npretty-printing would be lost.\n","title":"applySecond","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[63,60]}},{"children":[],"comments":null,"title":"(*>)","info":{"declType":"alias","alias":[["Text","Syntax","Combinators"],{"Right":{"Left":{"Ident":"applySecond"}}}],"fixity":{"associativity":"infixl","precedence":9}},"sourceSpan":{"start":[66,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[66,27]}},{"children":[],"comments":"This variant of `<*>` ignores its right result. In contrast to its\ncounterpart derived from the `Apply` class, the ignored parts have type\n`d Unit` rather than `d b` because otherwise information relevant for\npretty-printing would be lost.\n","title":"applyFirst","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[72,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[72,59]}},{"children":[],"comments":null,"title":"(<*)","info":{"declType":"alias","alias":[["Text","Syntax","Combinators"],{"Right":{"Left":{"Ident":"applyFirst"}}}],"fixity":{"associativity":"infixl","precedence":9}},"sourceSpan":{"start":[75,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[75,26]}},{"children":[],"comments":"The `between` function combines `*>` and `<*` in the obvious way.\n","title":"between","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[78,66]}},{"children":[],"comments":null,"title":"alt","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[83,62]}},{"children":[],"comments":null,"title":"(<+>)","info":{"declType":"alias","alias":[["Text","Syntax","Combinators"],{"Right":{"Left":{"Ident":"alt"}}}],"fixity":{"associativity":"infixl","precedence":4}},"sourceSpan":{"start":[86,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[86,20]}},{"children":[],"comments":"Expressing whitespace\n\nParsers and pretty printers treat whitespace differently. Parsers specify\nwhere whitespace is allowed or required to occur, while pretty printers\nspecify how much whitespace is to be inserted at these locations. To\naccount for these different roles of whitespace, the following three syntax\ndescriptions provide fine-grained control over where whitespace is allowed,\ndesired or required to occur.\n`skipSpace` marks a position where whitespace is allowed to occur. It\naccepts arbitrary space while parsing, and produces no space while\nprinting.\n","title":"skipSpace","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[105,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[105,42]}},{"children":[],"comments":"`optSpace` marks a position where whitespace is desired to occur. It\naccepts arbitrary space while parsing, and produces a single space\ncharacter while printing.\n","title":"optSpace","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[111,41]}},{"children":[],"comments":"`sepSpace` marks a position where whitespace is required to occur. It\nrequires one or more space characters while parsing, and produces a single\nspace character while printing.\n","title":"sepSpace","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Syntax","Classes"],"Syntax"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[117,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Combinators.purs","end":[117,41]}}]},{"reExports":[],"name":"Text.Syntax.Parser.Naive","comments":null,"declarations":[{"children":[{"comments":null,"title":"Parser","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"isoFunctorParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Isomorphism","Partial"],"IsoFunctor"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Parser","Naive"],"Parser"]}]}},"sourceSpan":{"start":[14,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Parser/Naive.purs","end":[14,47]}},{"comments":null,"title":"productFunctorParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Classes"],"ProductFunctor"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Parser","Naive"],"Parser"]}]}},"sourceSpan":{"start":[19,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Parser/Naive.purs","end":[19,55]}},{"comments":null,"title":"alternativeParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Classes"],"Alternative"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Parser","Naive"],"Parser"]}]}},"sourceSpan":{"start":[24,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Parser/Naive.purs","end":[24,49]}},{"comments":null,"title":"syntaxParser","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Classes"],"Syntax"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Parser","Naive"],"Parser"]}]}},"sourceSpan":{"start":[28,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Parser/Naive.purs","end":[28,39]}}],"comments":null,"title":"Parser","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[12,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Parser/Naive.purs","end":[12,60]}},{"children":[],"comments":null,"title":"parse","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Parser","Naive"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[35,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Parser/Naive.purs","end":[35,48]}}]},{"reExports":[],"name":"Text.Syntax.Printer.Naive","comments":null,"declarations":[{"children":[{"comments":null,"title":"Printer","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"isoFunctorPrinter","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Isomorphism","Partial"],"IsoFunctor"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Printer","Naive"],"Printer"]}]}},"sourceSpan":{"start":[15,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Printer/Naive.purs","end":[15,49]}},{"comments":null,"title":"productFunctorPrinter","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Classes"],"ProductFunctor"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Printer","Naive"],"Printer"]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Printer/Naive.purs","end":[18,57]}},{"comments":null,"title":"alternativePrinter","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Classes"],"Alternative"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Printer","Naive"],"Printer"]}]}},"sourceSpan":{"start":[21,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Printer/Naive.purs","end":[21,51]}},{"comments":null,"title":"syntaxPrinter","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Classes"],"Syntax"]},{"tag":"TypeConstructor","contents":[["Text","Syntax","Printer","Naive"],"Printer"]}]}},"sourceSpan":{"start":[25,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Printer/Naive.purs","end":[25,41]}}],"comments":null,"title":"Printer","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[13,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Printer/Naive.purs","end":[13,48]}},{"children":[],"comments":null,"title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Syntax","Printer","Naive"],"Printer"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"/Users/py/projects/paulyoung/purescript-invertible-syntax/src/Text/Syntax/Printer/Naive.purs","end":[32,50]}}]}],"resolvedDependencies":{"purescript-newtype":"2.0.0","purescript-partial-isomorphisms":"1.0.0","purescript-control":"3.3.1","purescript-console":"3.0.0","purescript-either":"3.2.0","purescript-arrays":"4.4.0","purescript-maybe":"3.1.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.2.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.3.0","purescript-foldable-traversable":"3.7.1","purescript-tailrec":"3.3.0","purescript-gen":"1.3.1","purescript-prelude":"3.3.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.2.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.2.0","purescript-eff":"3.2.1","purescript-globals":"3.0.0","purescript-math":"2.1.0","purescript-psci-support":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.5.0","purescript-identity":"3.1.0","purescript-lists":"4.12.0"},"version":"1.0.0","github":["paulyoung","purescript-invertible-syntax"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Isomorphism.Partial.Derived":"purescript-partial-isomorphisms","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Eff":"purescript-eff","Data.Array.ST.Partial":"purescript-arrays","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Math":"purescript-math","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Control.Isomorphism.Partial.Constructors":"purescript-partial-isomorphisms","Global":"purescript-globals","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Isomorphism.Partial.Prim":"purescript-partial-isomorphisms","Control.Semigroupoid":"purescript-prelude","Control.Isomorphism.Partial":"purescript-partial-isomorphisms","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}