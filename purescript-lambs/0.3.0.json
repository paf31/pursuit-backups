{"uploader":"Glorp","packageMeta":{"repository":{"url":"git://github.com/Glorp/purescript-lambs.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-psci-support":"^3.0.0"},"dependencies":{"purescript-console":"^3.0.0","purescript-parsing":"^4.2.1","purescript-prelude":"^3.0.0","purescript-generics":"^4.0.0","purescript-sets":"^3.0.0","purescript-lists":"^4.3.0"},"name":"purescript-lambs","license":["LGPL-3.0+"]},"tagTime":"2017-07-30T10:46:44+0000","modules":[{"reExports":[],"name":"Lambs.Define","comments":null,"declarations":[{"children":[{"comments":null,"title":"Define","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericDefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}]}},"sourceSpan":{"start":[18,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[18,48]}},{"comments":null,"title":"showDefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}]}},"sourceSpan":{"start":[19,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[19,54]}},{"comments":null,"title":"eqDefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}]}},"sourceSpan":{"start":[20,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[20,46]}},{"comments":null,"title":"orDefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}]}},"sourceSpan":{"start":[21,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[21,57]}}],"comments":"A toplevel definition. Has:\r\n 1. name that can be used\r\n 2. `Term` that can be substituted for name\r\n","title":"Define","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[16,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[16,33]}},{"children":[{"comments":null,"title":"Undefine","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericUndefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Undefine"]}]}},"sourceSpan":{"start":[26,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[26,52]}},{"comments":null,"title":"showUndefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Undefine"]}]}},"sourceSpan":{"start":[27,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[27,58]}},{"comments":null,"title":"eqUndefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Undefine"]}]}},"sourceSpan":{"start":[28,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[28,50]}},{"comments":null,"title":"orUndefine","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Undefine"]}]}},"sourceSpan":{"start":[29,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[29,61]}}],"comments":"For removing a toplevel definition.\r\n","title":"Undefine","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[24,32]}},{"children":[{"comments":null,"title":"genericDefinitions","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]}},"sourceSpan":{"start":[35,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[35,58]}},{"comments":null,"title":"showDefinitions","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]}},"sourceSpan":{"start":[36,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[36,64]}},{"comments":null,"title":"eqDefinitions","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]}},"sourceSpan":{"start":[37,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[37,56]}},{"comments":null,"title":"orDefinitions","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]}},"sourceSpan":{"start":[38,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[38,67]}}],"comments":"List of toplevel definitions.\r\n","title":"Definitions","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[33,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[33,45]}},{"children":[],"comments":"Given\r\n 1. some `Definitions`\r\n 2. a `Term`\r\n\r\nthis should return a new `Term` where the `Define`s in the `Definitions` are\r\nsubstituted for the correspinging free variables in the original `Term`.\r\n","title":"substDefs","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]}]}},"sourceSpan":{"start":[46,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[46,41]}},{"children":[],"comments":"Empty list of toplevel definitions.\r\n","title":"noDefinitions","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}},"sourceSpan":{"start":[51,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[51,29]}},{"children":[],"comments":"For adding a definition.\r\n","title":"addDef","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]}]}},"sourceSpan":{"start":[55,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[55,47]}},{"children":[],"comments":"For taking away a definition.\r\n","title":"removeDef","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Undefine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]}]}},"sourceSpan":{"start":[65,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[65,52]}},{"children":[],"comments":"For getting the list of `Define`s contained in a `Definitions`\r\n","title":"definitionsList","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}]}]}},"sourceSpan":{"start":[75,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Define.purs","end":[75,46]}}]},{"reExports":[],"name":"Lambs.Eval","comments":null,"declarations":[{"children":[{"comments":null,"title":"Reduce","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Rename","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Normal","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericExec","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Lambs","Eval"],"Exec"]}]}},"sourceSpan":{"start":[30,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Eval.purs","end":[30,44]}},{"comments":null,"title":"showExec","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Lambs","Eval"],"Exec"]}]}},"sourceSpan":{"start":[31,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Eval.purs","end":[31,50]}},{"comments":null,"title":"eqExec","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Lambs","Eval"],"Exec"]}]}},"sourceSpan":{"start":[32,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Eval.purs","end":[32,42]}},{"comments":null,"title":"ordExec","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Lambs","Eval"],"Exec"]}]}},"sourceSpan":{"start":[33,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Eval.purs","end":[33,54]}}],"comments":"An `Exec` is used to represent one step of execution. Is one of following:\r\n\r\n * A `Reduce`, for one step of beta reduction, with:\r\n   1. old `Term`\r\n   2. the `Term` after one step of beta reduction\r\n * A `Rename`, for the renaming of one variable (one parameter and every\r\n   reference to it). Typically for avoiding variable capture. Has:\r\n   1. old name of variable\r\n   2. old `Term`\r\n   3. new name of variable\r\n   4. the `Term` with variable renamed to new name\r\n * A `Normal`, for the, ah, determination that a `Term` is on normal form. Has:\r\n   1. the `Term` that is on normal form\r\n","title":"Exec","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Eval.purs","end":[28,16]}},{"children":[],"comments":"For performing one step of execution.\r\n","title":"stepExec","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Eval"],"Exec"]}]}},"sourceSpan":{"start":[122,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Eval.purs","end":[122,25]}}]},{"reExports":[],"name":"Lambs.Parse","comments":null,"declarations":[{"children":[],"comments":"Parses a toplevel thing.\r\n","title":"parseTop","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Lambs","Toplevel"],"Toplevel"]}]}]}},"sourceSpan":{"start":[133,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Parse.purs","end":[133,37]}}]},{"reExports":[],"name":"Lambs.Subst","comments":null,"declarations":[{"children":[{"comments":null,"title":"Redex","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericRedex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Lambs","Subst"],"Redex"]}]}},"sourceSpan":{"start":[15,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Subst.purs","end":[15,46]}},{"comments":null,"title":"showRedex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Lambs","Subst"],"Redex"]}]}},"sourceSpan":{"start":[16,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Subst.purs","end":[16,52]}},{"comments":null,"title":"eqRedex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Lambs","Subst"],"Redex"]}]}},"sourceSpan":{"start":[17,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Subst.purs","end":[17,44]}},{"comments":null,"title":"orRedex","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Lambs","Subst"],"Redex"]}]}},"sourceSpan":{"start":[18,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Subst.purs","end":[18,55]}}],"comments":"A reducible expression. With:\r\n 1. a `Term` that will be substituted for\r\n 2. a (variable) name in\r\n 3. a `Term`\r\n","title":"Redex","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[13,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Subst.purs","end":[13,36]}},{"children":[],"comments":"Finds a `Redex` (a function application where the function is a lambda)\r\n","title":"redex","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Lambs","Subst"],"Redex"]}]}]}},"sourceSpan":{"start":[21,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Subst.purs","end":[21,29]}},{"children":[],"comments":"Performs a reduction/does the substitution.\r\n","title":"subst","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Subst"],"Redex"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]}},"sourceSpan":{"start":[26,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Subst.purs","end":[26,23]}}]},{"reExports":[],"name":"Lambs.Term","comments":null,"declarations":[{"children":[{"comments":null,"title":"Var","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Lam","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"App","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]}},"sourceSpan":{"start":[17,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[17,44]}},{"comments":null,"title":"showTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]}},"sourceSpan":{"start":[18,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[18,50]}},{"comments":null,"title":"eqTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]}},"sourceSpan":{"start":[19,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[19,42]}},{"comments":null,"title":"orTerm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]}},"sourceSpan":{"start":[20,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[20,53]}}],"comments":"A `Term` is one of:\r\n * a `Var`iable with a name\r\n * a `Lam`bda abstraction with a parameter name and a body `Term`\r\n * a function `App`lication with a function `Term` and an arugment `Term`\r\n","title":"Term","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[15,18]}},{"children":[],"comments":"Kind of a path into a term, focusing on something kind of...\r\n","title":"TermPath","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[23,47]}},{"children":[{"comments":null,"title":"Found","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"If you looked for something in a `Term`, this like,\r\n 1. where you found it and\r\n 2. what you found\r\n","title":"Found","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[28,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[28,32]}},{"children":[],"comments":"For building `TermPath` with a `Lam` in it.\r\n","title":"lamStep","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}]}]}},"sourceSpan":{"start":[31,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[31,42]}},{"children":[],"comments":"For building `TermPath` with an `App` in it.\r\n(Step into function part.)\r\n","title":"funStep","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}]}]}},"sourceSpan":{"start":[36,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[36,40]}},{"children":[],"comments":"For building `TermPath` with another `App` in it.\r\n(Step into argument part.)\r\n","title":"argStep","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}]}]}},"sourceSpan":{"start":[41,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[41,40]}},{"children":[],"comments":"A `TermPath` that doesn't have a ton of stuff in it.s\r\n","title":"emptyTermPath","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}},"sourceSpan":{"start":[45,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[45,26]}},{"children":[],"comments":"For looking for stuff in a `Term`. Maybe you'll find.\r\n","title":"findTerm","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Found"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[53,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[53,67]}},{"children":[],"comments":"So uh a `TermPath` is kind of like a `Term` except it's missing a `Term`.\r\nSo if you have a `Term` for it, you can get a `Term`.\r\n\r\n`Term`. `Term` `Term` `Term`.\r\n","title":"fillTerm","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"TermPath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]}]}},"sourceSpan":{"start":[73,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Term.purs","end":[73,37]}}]},{"reExports":[],"name":"Lambs.Toplevel","comments":null,"declarations":[{"children":[{"comments":null,"title":"Def","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Undef","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Undefine"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Trm","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"genericToplevel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic"],"Generic"]},{"tag":"TypeConstructor","contents":[["Lambs","Toplevel"],"Toplevel"]}]}},"sourceSpan":{"start":[17,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Toplevel.purs","end":[17,52]}},{"comments":null,"title":"showToplevel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Lambs","Toplevel"],"Toplevel"]}]}},"sourceSpan":{"start":[18,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Toplevel.purs","end":[18,58]}},{"comments":null,"title":"eqToplevel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Lambs","Toplevel"],"Toplevel"]}]}},"sourceSpan":{"start":[19,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Toplevel.purs","end":[19,50]}},{"comments":null,"title":"orToplevel","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Lambs","Toplevel"],"Toplevel"]}]}},"sourceSpan":{"start":[20,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Toplevel.purs","end":[20,53]}}],"comments":"`Toplevel` things are for toplevel things. Can be:\r\n * `Def`initions, for adding toplevel defintions\r\n * `Undef`initions, for removing toplevel defintions\r\n * `Trm`s, with `Term`s in them. The `Term`s can be evaluated (is fun)\r\n","title":"Toplevel","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Toplevel.purs","end":[15,13]}}]},{"reExports":[],"name":"Lambs.Unparse","comments":null,"declarations":[{"children":[],"comments":"uns the parse\r\n","title":"unparse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Term"],"Term"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[17,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Unparse.purs","end":[17,26]}},{"children":[],"comments":"unparse toplevel define-thing\r\n","title":"unparseDef","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Define"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[24,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Unparse.purs","end":[24,31]}},{"children":[],"comments":"like `unparseDef` but for like a `Definitions`ful of them\r\n","title":"unparseDefs","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Lambs","Define"],"Definitions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[28,1],"name":"D:\\purescript-lambs\\src\\Lambs\\Unparse.purs","end":[28,37]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-newtype":"2.0.0","purescript-unicode":"3.0.1","purescript-maps":"3.3.1","purescript-control":"3.3.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.1.0","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-parsing":"4.2.2","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.3.0","purescript-tailrec":"3.3.0","purescript-gen":"1.1.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-psci-support":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.2.1","purescript-identity":"3.1.0","purescript-sets":"3.0.0","purescript-lists":"4.7.0","purescript-functions":"3.0.0"},"version":"0.3.0","github":["Glorp","purescript-lambs"],"versionTag":"v0.3.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Char.Gen":"purescript-strings","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Type.Proxy":"purescript-proxy","Text.Parsing.Parser":"purescript-parsing","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Text.Parsing.Parser.Pos":"purescript-parsing","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Char.Unicode.Internal":"purescript-unicode","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Text.Parsing.Indent":"purescript-parsing","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-sets","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Data.Char.Unicode":"purescript-unicode","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Text.Parsing.Parser.Token":"purescript-parsing","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Text.Parsing.Parser.Combinators":"purescript-parsing","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Text.Parsing.Parser.Expr":"purescript-parsing","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Text.Parsing.Parser.Language":"purescript-parsing","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Text.Parsing.Parser.String":"purescript-parsing","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}