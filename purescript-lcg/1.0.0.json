{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/purescript/purescript-lcg","repository":{"url":"git://github.com/purescript/purescript-lcg.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"dependencies":{"purescript-random":"^3.0.0"},"name":"purescript-lcg","license":["MIT"]},"tagTime":"2017-11-07T15:50:44+0000","modules":[{"reExports":[],"name":"Random.LCG","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[27,34]}},{"comments":null,"title":"ordSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[28,36]}},{"comments":null,"title":"showSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[30,31]}}],"comments":"A seed for the linear congruential generator. We omit a `Semiring`\ninstance because there is no `zero` value, as 0 is not an acceptable\nseed for the generator.\n","title":"Seed","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[25,24]}},{"children":[],"comments":null,"title":"mkSeed","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[33,22]}},{"children":[],"comments":null,"title":"unSeed","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[44,22]}},{"children":[],"comments":"Create a random seed\n","title":"randomSeed","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},null]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[48,56]}},{"children":[],"comments":"The *multiplier*: a magic constant for the linear congruential generator\n","title":"lcgA","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[60,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[60,12]}},{"children":[],"comments":"The *increment*: a magic constant for the linear congruential generator\n","title":"lcgC","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[64,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[64,12]}},{"children":[],"comments":"The *modulus*: a magic constant for the linear congruential generator.\nIt is equal to 2^31 - 1, a Mersenne prime. It is useful for this value to\nbe prime, because then the requirement of the initial seed being coprime\nto the modulus is satisfied when the seed is between 1 and lcgM - 1.\n","title":"lcgM","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[71,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[71,12]}},{"children":[],"comments":"Perturb a seed value\n","title":"lcgPerturb","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}]}},"sourceSpan":{"start":[75,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[75,37]}},{"children":[],"comments":"Step the linear congruential generator\n","title":"lcgNext","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}},"sourceSpan":{"start":[81,1],"name":"/home/travis/build/purescript/purescript-lcg/src/Random/LCG.purs","end":[81,24]}}]}],"resolvedDependencies":{"purescript-newtype":"2.0.0","purescript-control":"3.3.1","purescript-maybe":"3.0.0","purescript-invariant":"3.0.0","purescript-monoid":"3.3.0","purescript-prelude":"3.1.1","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-globals":"3.0.0","purescript-math":"2.1.0","purescript-random":"3.0.0","purescript-partial":"1.2.1"},"version":"1.0.0","github":["purescript","purescript-lcg"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Control.Monad.Eff.Random":"purescript-random","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Global.Unsafe":"purescript-globals","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.Monoid.Disj":"purescript-monoid","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DivisionRing":"purescript-prelude","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Math":"purescript-math","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Partial":"purescript-partial","Global":"purescript-globals","Data.Monoid.Multiplicative":"purescript-monoid","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Monoid.Endo":"purescript-monoid","Control.Applicative":"purescript-prelude"},"compilerVersion":"0.11.4"}