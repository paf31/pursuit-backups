{"uploader":"paf31","packageMeta":{"moduleType":["node"],"repository":{"url":"git://github.com/paf31/purescript-leibniz.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-console":"^4.1.0","purescript-exists":"^4.0.0"},"dependencies":{"purescript-prelude":"^4.0.0","purescript-unsafe-coerce":"^4.0.0"},"name":"purescript-leibniz","license":["MIT"]},"tagTime":"2018-06-07T02:24:58+0000","modules":[{"reExports":[],"name":"Data.Leibniz","comments":"This module defines a data type for _Leibniz equality_.\n","declarations":[{"children":[{"comments":null,"title":"Leibniz","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},null]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupoidLeibniz","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Semigroupoid"],"Semigroupoid"]},{"tag":"TypeConstructor","contents":[["Data","Leibniz"],"Leibniz"]}]}},"sourceSpan":{"start":[44,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[44,53]}},{"comments":null,"title":"categoryLeibniz","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Category"],"Category"]},{"tag":"TypeConstructor","contents":[["Data","Leibniz"],"Leibniz"]}]}},"sourceSpan":{"start":[47,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[47,45]}}],"comments":"Two types are equal if they are _equal in all contexts_.\n","title":"Leibniz","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[36,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[36,53]}},{"children":[],"comments":null,"title":"type (~)","info":{"declType":"alias","alias":[["Data","Leibniz"],{"Left":"Leibniz"}],"fixity":{"associativity":"infix","precedence":4}},"sourceSpan":{"start":[38,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[38,26]}},{"children":[],"comments":"Unpack a Leibniz equality.\n","title":"runLeibniz","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[41,48]}},{"children":[],"comments":"Coerce a value of type `a` to a value of the Leibniz-equal type `b`.\n","title":"coerce","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[63,38]}},{"children":[],"comments":"Coerce a value of type `b` to a value of the Leibniz-equal type `a`.\n","title":"coerceSymm","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[67,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[67,42]}},{"children":[],"comments":"Equality is symmetric.\n","title":"symm","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[59,35]}},{"children":[],"comments":"Lift equality over a type constructor.\n","title":"liftLeibniz","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[71,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[71,48]}},{"children":[],"comments":"Lift equality over a type constructor.\n","title":"liftLeibniz1of2","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[75,58]}},{"children":[],"comments":"Lift equality over a type constructor.\n","title":"liftLeibniz2of2","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[79,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[79,58]}},{"children":[],"comments":"Lift equality over a type constructor.\n","title":"liftLeibniz1of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[83,64]}},{"children":[],"comments":"Lift equality over a type constructor.\n","title":"liftLeibniz2of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[87,64]}},{"children":[],"comments":"Lift equality over a type constructor.\n","title":"liftLeibniz3of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[91,64]}},{"children":[],"comments":"Apply an equality of type constructors to an equality of types.\n","title":"applyLeibniz","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"d"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[95,68]}},{"children":[],"comments":"Apply an equality of type constructors to an equality of types.\n","title":"applyLeibniz1of2","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g2",{"tag":"ForAll","contents":["g1",{"tag":"ForAll","contents":["f2",{"tag":"ForAll","contents":["f1",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"f1"}]},{"tag":"TypeVar","contents":"f2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"g1"}]},{"tag":"TypeVar","contents":"g2"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[99,94]}},{"children":[],"comments":"Apply an equality of type constructors to an equality of types.\n","title":"applyLeibniz2of2","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g2",{"tag":"ForAll","contents":["g1",{"tag":"ForAll","contents":["f2",{"tag":"ForAll","contents":["f1",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"f1"}]},{"tag":"TypeVar","contents":"f2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"g1"}]},{"tag":"TypeVar","contents":"g2"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[103,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[103,94]}},{"children":[],"comments":"Apply an equality of type constructors to an equality of types.\n","title":"applyLeibniz1of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g3",{"tag":"ForAll","contents":["g2",{"tag":"ForAll","contents":["g1",{"tag":"ForAll","contents":["f3",{"tag":"ForAll","contents":["f2",{"tag":"ForAll","contents":["f1",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"f1"}]},{"tag":"TypeVar","contents":"f2"}]},{"tag":"TypeVar","contents":"f3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"g1"}]},{"tag":"TypeVar","contents":"g2"}]},{"tag":"TypeVar","contents":"g3"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[107,112]}},{"children":[],"comments":"Apply an equality of type constructors to an equality of types.\n","title":"applyLeibniz2of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g3",{"tag":"ForAll","contents":["g2",{"tag":"ForAll","contents":["g1",{"tag":"ForAll","contents":["f3",{"tag":"ForAll","contents":["f2",{"tag":"ForAll","contents":["f1",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"f1"}]},{"tag":"TypeVar","contents":"f2"}]},{"tag":"TypeVar","contents":"f3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"g1"}]},{"tag":"TypeVar","contents":"g2"}]},{"tag":"TypeVar","contents":"g3"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[111,112]}},{"children":[],"comments":"Apply an equality of type constructors to an equality of types.\n","title":"applyLeibniz3of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g3",{"tag":"ForAll","contents":["g2",{"tag":"ForAll","contents":["g1",{"tag":"ForAll","contents":["f3",{"tag":"ForAll","contents":["f2",{"tag":"ForAll","contents":["f1",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"f1"}]},{"tag":"TypeVar","contents":"f2"}]},{"tag":"TypeVar","contents":"f3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"g1"}]},{"tag":"TypeVar","contents":"g2"}]},{"tag":"TypeVar","contents":"g3"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[115,112]}},{"children":[],"comments":"Every type constructor in PureScript is injective.\n","title":"lowerLeibniz","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[119,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[119,51]}},{"children":[],"comments":"Every type constructor in PureScript is injective.\n","title":"lowerLeibniz1of2","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[123,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[123,63]}},{"children":[],"comments":"Every type constructor in PureScript is injective.\n","title":"lowerLeibniz2of2","info":{"declType":"value","type":{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"d"}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[127,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[127,63]}},{"children":[],"comments":"Every type constructor in PureScript is injective.\n","title":"lowerLeibniz1of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"h"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"d"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[131,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[131,71]}},{"children":[],"comments":"Every type constructor in PureScript is injective.\n","title":"lowerLeibniz2of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"h"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[135,71]}},{"children":[],"comments":"Every type constructor in PureScript is injective.\n","title":"lowerLeibniz3of3","info":{"declType":"value","type":{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"h"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"h"}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[139,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[139,71]}},{"children":[{"comments":null,"title":"distinguishLeft","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Leibniz"],"Distinguish"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[149,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[149,51]}},{"comments":null,"title":"distinguishRight","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Leibniz"],"Distinguish"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[150,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[150,52]}}],"comments":"This class is used in the definition of the `refute` function.\n\nIts job is to distinguish the two types `a` and `b` (if possible)\nby mapping them to the different output types `Unit` and `Void`\nrespectively.\n","title":"Distinguish","info":{"fundeps":[[["a","b","c"],["o"]]],"arguments":[["a",null],["b",null],["c",null],["o",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[147,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[147,39]}},{"children":[],"comments":"Refute a type equality for two types which are not definitionally equal.\n\nFor example, in the REPL:\n\n```\n> import Data.Leibniz\n\n> :type \\(l :: String ~ Int) -> refute l\nforall r. Leibniz String Int -> r\n\n> :type \\(l :: String ~ String) -> refute l\nError found:\n  Could not match type Unit with type Void\n```\n\nThe error message here is due to the way in which the `Distinguish` class decides\napartness.\n","title":"refute","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Leibniz"],"Distinguish"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]},null]}},"sourceSpan":{"start":[179,1],"name":"/Users/phil/Documents/Code/purescript/purescript-leibniz/src/Data/Leibniz.purs","end":[179,61]}}]}],"resolvedDependencies":{"purescript-effect":"2.0.0","purescript-console":"4.1.0","purescript-exists":"4.0.0","purescript-prelude":"4.0.0","purescript-unsafe-coerce":"4.0.0"},"version":"5.0.0","github":["paf31","purescript-leibniz"],"versionTag":"v5.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Type.Data.RowList":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Effect.Unsafe":"purescript-effect","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Eq":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Void":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Monoid.Endo":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.11.7"}