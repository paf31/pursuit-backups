{"uploader":"klangner","packageMeta":{"homepage":"https://github.com/klangner/purescript-linear-algebra","repository":{"url":"https://github.com/klangner/purescript-linear-algebra.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-console":"^3.0.0","purescript-assert":"^3.0.0","purescript-psci-support":"^3.0.0"},"dependencies":{"purescript-arrays":"^4.0.1","purescript-prelude":"^3.0.0","purescript-globals":"^3.0.0","purescript-tuples":"^4.0.0"},"name":"purescript-linear-algebra","license":["Apache-2.0"],"description":"Linear Algebra. Matrices, vector spaces etc."},"tagTime":"2017-05-13T08:20:34+0000","modules":[{"reExports":[],"name":"LinearAlgebra.Matrix","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqMatrix","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[39,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[40,76]}},{"comments":null,"title":"showMatrix","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[42,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[45,46]}}],"comments":"Dense Matrix implementation\n","title":"Matrix","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[37,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[37,40]}},{"children":[],"comments":"Number of rows in matrix\n","title":"nrows","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[49,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[49,30]}},{"children":[],"comments":"Number of cols in matrix\n","title":"ncols","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[53,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[53,30]}},{"children":[],"comments":"Convert Matrix to Vector\n","title":"toVector","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[57,38]}},{"children":[],"comments":"Create array of given dimmension containing replicated value\n","title":"replicate","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[62,55]}},{"children":[],"comments":"Create array of given dimmension with all values set to 0\n","title":"zeros","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[68,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[68,37]}},{"children":[],"comments":"Create identy matrix\n","title":"identity","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[76,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[76,33]}},{"children":[],"comments":"Create Matrix from Array\n","title":"fromArray","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[87,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[87,60]}},{"children":[],"comments":"Create matrix from column\n","title":"fromColumn","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[93,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[93,40]}},{"children":[],"comments":"Create matrix from row\n","title":"fromRow","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[98,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[98,37]}},{"children":[],"comments":"Get specific column as a vector. Index is 0 based\nIf the index is out of range then return empty vector\n","title":"column","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[104,43]}},{"children":[],"comments":"Get specific row as a vector. Index is 0 based\nIf the index is out of range then return empty vector\n","title":"row","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[110,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[110,40]}},{"children":[],"comments":"Get specific element. Index is 0 based\n","title":"element","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[118,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[118,50]}},{"children":[],"comments":"Return list of rows\n","title":"rows","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[123,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[123,42]}},{"children":[],"comments":"List of columns\n","title":"columns","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[130,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[130,45]}},{"children":[],"comments":"Slice matrix along the columns. Range is inclusive.\n","title":"sliceCols","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[137,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[141,22]}},{"children":[],"comments":"Slice matrix along the rows. Range is inclusive.\n","title":"sliceRows","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[150,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[154,22]}},{"children":[],"comments":"Insert new column at a given index to the matrix \n","title":"insertCol","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[161,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[161,58]}},{"children":[],"comments":"Multiply 2 matrices. The have to have compatible dimmensions\n","title":"multiply","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[170,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[170,60]}},{"children":[],"comments":"Transpose matrix\n","title":"transpose","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[183,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[183,39]}},{"children":[],"comments":"Add 2 matrices. The should have the same size\n","title":"add","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Matrix"],"Matrix"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[190,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Matrix.purs","end":[190,55]}}]},{"reExports":[],"name":"LinearAlgebra.Vector","comments":null,"declarations":[{"children":[],"comments":"Dense Vector implementation\n","title":"Vector","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}},"sourceSpan":{"start":[20,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[20,20]}},{"children":[],"comments":"Difference between 2 vectors.\nVector have to have the same size\n","title":"diff","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[25,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[25,56]}},{"children":[],"comments":"Add 2 vectors.\nVector have to have the same size\n","title":"add","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[33,59]}},{"children":[],"comments":"Dot product between 2 vectors\nhttps://en.wikipedia.org/wiki/Dot_product\n","title":"dot","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[41,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[41,58]}},{"children":[],"comments":"Sum vector elements\n","title":"sum","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[48,40]}},{"children":[],"comments":"Return index of the first maximum value\nThis function will return 0 index for empty vector\n","title":"argmax","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[54,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[54,31]}},{"children":[],"comments":"Return index of the first minimum value\nThis function will return 0 index for empty vector\n","title":"argmin","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[63,31]}},{"children":[],"comments":"Multiply vector by scalar\n","title":"mulScalar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LinearAlgebra","Vector"],"Vector"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[71,1],"name":"/home/klangner/workspaces/purescript/purescript-linear-algebra/src/LinearAlgebra/Vector.purs","end":[71,54]}}]}],"resolvedDependencies":{"purescript-newtype":"2.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.1.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-assert":"3.0.0","purescript-unsafe-coerce":"3.0.0","purescript-eff":"3.1.0","purescript-globals":"3.0.0","purescript-psci-support":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-identity":"3.1.0"},"version":"0.4.0","github":["klangner","purescript-linear-algebra"],"versionTag":"v0.4.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Global.Unsafe":"purescript-globals","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Data.Array.Partial":"purescript-arrays","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Partial":"purescript-partial","Global":"purescript-globals","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}