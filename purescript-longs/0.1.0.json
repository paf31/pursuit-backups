{"uploader":"jvliwanag","packageMeta":{"repository":{"url":"https://github.com/zapph/purescript-longs.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-quickcheck-laws":"^4.0.0","purescript-debug":"^4.0.0","purescript-assert":"^4.1.0","purescript-spec":"^3.1.0","purescript-psci-support":"^4.0.0","purescript-spec-quickcheck":"^3.1.0","purescript-quickcheck":"^5.0.0"},"dependencies":{"purescript-effect":"^2.0.1","purescript-console":"^4.2.0","purescript-prelude":"^4.1.0","purescript-strings":"^4.0.1","purescript-foreign":"^5.0.0","purescript-nullable":"^4.1.1","purescript-functions":"^4.0.0"},"name":"purescript-longs","license":["MIT"]},"tagTime":"2019-02-26T04:58:11+0000","modules":[{"reExports":[],"name":"Data.Long","comments":null,"declarations":[{"children":[],"comments":null,"title":"Long","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}},"sourceSpan":{"start":[24,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[24,42]}},{"children":[],"comments":"Creates a signed `Long` from low and high bits respresented as `Int`\n","title":"fromLowHighBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[31,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[31,38]}},{"children":[],"comments":"Creates a `Long` from an `Int` value\n","title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}},"sourceSpan":{"start":[27,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[27,23]}},{"children":[],"comments":"Reads an Int from a String value. The number must parse as an integer and fall within the valid range of values for the Int type, otherwise Nothing is returned.\n","title":"fromString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[35,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[35,35]}},{"children":[],"comments":"Like fromString, but the integer can be specified in a different base.\n","title":"fromStringAs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}]}},"sourceSpan":{"start":[39,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[39,46]}},{"children":[],"comments":"Get low bits of a `Long` as an `Int`\n","title":"lowBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[43,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[43,23]}},{"children":[],"comments":"Get high bits of a `Long` as an `Int`\n","title":"highBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[47,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[47,24]}},{"children":[],"comments":"Creates an `Int` if the `Long` value is within the range of `Long`.\n","title":"toInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[51,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[51,27]}},{"children":[],"comments":"Like `show`, but omits the `l` suffix.\n","title":"toString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[55,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[55,27]}},{"children":[],"comments":"Like `toStringAs`, but the integer can be specified in a different base.\n","title":"toStringAs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[59,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[59,38]}},{"children":[],"comments":"Returns whether a `Long` is `Even` or `Odd`.\n","title":"parity","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]}},"sourceSpan":{"start":[67,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[67,25]}},{"children":[],"comments":"Returns whether a `Long` is an even number.\n","title":"even","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[71,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[71,24]}},{"children":[],"comments":"Returns whether a `Long` is an odd number.\n","title":"odd","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[75,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[75,23]}},{"children":[],"comments":"The quot function provides truncating integer division (see the documentation for the EuclideanRing class). It is identical to div in the EuclideanRing Long instance if the dividend is positive, but will be slightly different if the dividend is negative.\n","title":"quot","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[79,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[79,29]}},{"children":[],"comments":"The rem function provides the remainder after truncating integer division (see the documentation for the EuclideanRing class). It is identical to mod in the EuclideanRing Long instance if the dividend is positive, but will be slightly different if the dividend is negative\n","title":"rem","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[83,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[83,28]}},{"children":[],"comments":"Converts to an unsigned long by reading the bits as a 64 bit unsigned integer.\n","title":"toUnsigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long.purs","end":[87,54]}}]},{"reExports":[],"name":"Data.Long.Bits","comments":"This module defines bitwise operations for the `Long` type.\n","declarations":[{"children":[],"comments":"Bitwise AND.\n","title":"and","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[17,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[17,28]}},{"children":[],"comments":null,"title":"(.&.)","info":{"declType":"alias","alias":[["Data","Long","Bits"],{"Right":{"Left":{"Ident":"and"}}}],"fixity":{"associativity":"infixl","precedence":10}},"sourceSpan":{"start":[20,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[20,21]}},{"children":[],"comments":"Bitwise OR.\n","title":"or","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[23,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[23,27]}},{"children":[],"comments":null,"title":"(.|.)","info":{"declType":"alias","alias":[["Data","Long","Bits"],{"Right":{"Left":{"Ident":"or"}}}],"fixity":{"associativity":"infixl","precedence":10}},"sourceSpan":{"start":[26,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[26,20]}},{"children":[],"comments":"Bitwise XOR.\n","title":"xor","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[29,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[29,28]}},{"children":[],"comments":null,"title":"(.^.)","info":{"declType":"alias","alias":[["Data","Long","Bits"],{"Right":{"Left":{"Ident":"xor"}}}],"fixity":{"associativity":"infixl","precedence":10}},"sourceSpan":{"start":[32,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[32,21]}},{"children":[],"comments":"Bitwise shift left.\n","title":"shl","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[35,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[35,28]}},{"children":[],"comments":"Bitwise shift right.\n","title":"shr","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[39,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[39,28]}},{"children":[],"comments":"Bitwise zero-fill shift right.\n","title":"zshr","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}]}},"sourceSpan":{"start":[43,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[43,29]}},{"children":[],"comments":"Bitwise NOT.\n","title":"complement","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long"],"Long"]}]}},"sourceSpan":{"start":[47,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Bits.purs","end":[47,27]}}]},{"reExports":[],"name":"Data.Long.FFI","comments":null,"declarations":[{"children":[{"comments":null,"title":"showLong","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[77,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[77,31]}},{"comments":null,"title":"eqLong","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[84,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[84,27]}}],"comments":null,"title":"Long","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[75,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[75,33]}},{"children":[{"comments":null,"title":"IsUnsigned","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqIsUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]}},"sourceSpan":{"start":[88,16],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[88,54]}},{"comments":null,"title":"showIsUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]}},"sourceSpan":{"start":[89,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[89,43]}}],"comments":null,"title":"IsUnsigned","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[87,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[87,40]}},{"children":[{"comments":null,"title":"IsLittleEndian","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqIsLittleEndian","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsLittleEndian"]}]}},"sourceSpan":{"start":[93,16],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[93,62]}},{"comments":null,"title":"showIsLittleEndian","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsLittleEndian"]}]}},"sourceSpan":{"start":[94,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[94,51]}}],"comments":null,"title":"IsLittleEndian","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[92,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[92,48]}},{"children":[],"comments":"Signed zero\n","title":"zero","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[103,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[103,28]}},{"children":[],"comments":"Signed one\n","title":"one","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[106,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[106,27]}},{"children":[],"comments":"Signed negative one\n","title":"negOne","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[109,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[109,30]}},{"children":[],"comments":"Unsigned zero\n","title":"uzero","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[112,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[112,29]}},{"children":[],"comments":"Unsigned one\n","title":"uone","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[115,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[115,28]}},{"children":[],"comments":"Maximum signed value\n","title":"maxValue","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[118,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[118,32]}},{"children":[],"comments":"Minimum signed value\n","title":"minValue","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[121,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[121,32]}},{"children":[],"comments":"Maximum unsigned value\n","title":"maxUnsignedValue","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}},"sourceSpan":{"start":[124,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[124,40]}},{"children":[],"comments":"Tests if the specified object is a Long\n","title":"isLong","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[131,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[131,45]}},{"children":[],"comments":"Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is assumed to use 32 bits.\n","title":"fromBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[134,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[134,55]}},{"children":[],"comments":"Creates a Long from its byte representation.\n","title":"fromBytes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsLittleEndian"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[137,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[137,75]}},{"children":[],"comments":"Creates a Long from its little endian byte representation.\n","title":"fromBytesLE","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[140,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[140,62]}},{"children":[],"comments":"Creates a Long from its big endian byte representation.\n","title":"fromBytesBE","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[143,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[143,62]}},{"children":[],"comments":"Returns a Long representing the given 32 bit integer value.\n","title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[146,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[146,50]}},{"children":[],"comments":"Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n","title":"fromNumber","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[149,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[149,56]}},{"children":[],"comments":"Returns a Long representation of the given string, written using the specified radix.\n","title":"fromString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn3"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[152,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[152,68]}},{"children":[],"comments":"Converts the specified value to a Long using the appropriate from* function for its type.\n","title":"fromValue","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[155,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[155,56]}},{"children":[],"comments":null,"title":"unsigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]}},"sourceSpan":{"start":[161,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[161,46]}},{"children":[],"comments":"Returns the sum of this and the specified Long.\n","title":"add","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[168,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[168,44]}},{"children":[],"comments":"Returns the bitwise AND of this Long and the specified.\n","title":"and","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[171,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[171,44]}},{"children":[],"comments":"Compares this Long's value with the specified's. Returns 0 if they are the same, 1 if the this is greater and -1 if the given one is greater.\n","title":"compare","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[174,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[174,47]}},{"children":[],"comments":"Returns this Long divided by the specified.\n","title":"divide","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[177,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[177,47]}},{"children":[],"comments":"Tests if this Long's value equals the specified's.\nNote: The original API accepts any number like input.\nIf provided with another Long, this does not compare signedness.\n","title":"equals","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[182,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[182,50]}},{"children":[],"comments":"Gets the high 32 bits as a signed integer.\nNote: Use Internal.getNumberBitsToInt to get back Int\n","title":"getHighBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[186,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[186,45]}},{"children":[],"comments":"Gets the high 32 bits as an unsigned integer.\nNote: Use Internal.getNumberBitsToInt to get back Int\n","title":"getHighBitsUnsigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[190,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[190,53]}},{"children":[],"comments":"Gets the low 32 bits as a signed integer.\nUse Internal.getNumberBitsToInt to get back Int\n","title":"getLowBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[194,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[194,44]}},{"children":[],"comments":"Gets the low 32 bits as an unsigned integer.\nUse Internal.getNumberBitsToInt to get back Int\n","title":"getLowBitsUnsigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[198,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[198,52]}},{"children":[],"comments":"Gets the number of bits needed to represent the absolute value of this Long.\n","title":"getNumBitsAbs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[201,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[201,44]}},{"children":[],"comments":"Tests if this Long's value is greater than the specified's.\n","title":"greaterThan","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[204,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[204,55]}},{"children":[],"comments":"Tests if this Long's value is greater than or equal the specified's.\n","title":"greaterThanOrEqual","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[207,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[207,62]}},{"children":[],"comments":"Tests if this Long's value is even.\n","title":"isEven","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[210,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[210,41]}},{"children":[],"comments":"Tests if this Long's value is negative.\n","title":"isNegative","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[213,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[213,45]}},{"children":[],"comments":"Tests if this Long's value is odd.\n","title":"isOdd","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[216,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[216,40]}},{"children":[],"comments":"Tests if this Long's value is positive.\n","title":"isPositive","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[219,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[219,45]}},{"children":[],"comments":"Tests if this Long's value equals zero.\n","title":"isZero","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[222,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[222,41]}},{"children":[],"comments":"Tests if this Long's value is less than the specified's.\n","title":"lessThan","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[225,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[225,52]}},{"children":[],"comments":"Tests if this Long's value is less than or equal the specified's.\n","title":"lessThanOrEqual","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[228,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[228,59]}},{"children":[],"comments":"Returns this Long modulo the specified.\n","title":"modulo","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[231,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[231,47]}},{"children":[],"comments":"Returns the product of this and the specified Long.\n","title":"multiply","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[234,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[234,49]}},{"children":[],"comments":"Negates this Long's value.\n","title":"negate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[237,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[237,38]}},{"children":[],"comments":"Returns the bitwise NOT of this Long.\n","title":"not","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[240,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[240,35]}},{"children":[],"comments":"Tests if this Long's value differs from the specified's.\n","title":"notEquals","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[243,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[243,53]}},{"children":[],"comments":"Returns the bitwise OR of this Long and the specified.\n","title":"or","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[246,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[246,43]}},{"children":[],"comments":"Returns this Long with bits shifted to the left by the given amount.\n","title":"shiftLeft","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[249,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[249,50]}},{"children":[],"comments":"Returns this Long with bits arithmetically shifted to the right by the given amount.\n","title":"shiftRight","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[252,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[252,51]}},{"children":[],"comments":"Returns this Long with bits logically shifted to the right by the given amount.\n","title":"shiftRightUnsigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[255,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[255,59]}},{"children":[],"comments":"Returns this Long with bits rotated to the left by the given amount.\n","title":"rotateLeft","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[258,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[258,51]}},{"children":[],"comments":"Returns this Long with bits rotated to the right by the given amount.\n","title":"rotateRight","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[261,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[261,52]}},{"children":[],"comments":"Returns the difference of this and the specified Long.\n","title":"subtract","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[264,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[264,49]}},{"children":[],"comments":"Converts this Long to its byte representation.\n","title":"toBytes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsLittleEndian"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[267,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[267,62]}},{"children":[],"comments":"Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n","title":"toInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[270,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[270,36]}},{"children":[],"comments":"Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n","title":"toNumber","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[273,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[273,42]}},{"children":[],"comments":"Converts this Long to signed.\n","title":"toSigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[276,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[276,40]}},{"children":[],"comments":"Converts the Long to a string written in the specified radix.\n","title":"toString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[279,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[279,52]}},{"children":[],"comments":"Converts this Long to unsigned.\n","title":"toUnsigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}},"sourceSpan":{"start":[282,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[282,42]}},{"children":[],"comments":"Returns the bitwise XOR of this Long and the given one.\n","title":"xor","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"Long"]}]}]}},"sourceSpan":{"start":[285,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/FFI.purs","end":[285,40]}}]},{"reExports":[],"name":"Data.Long.Internal","comments":null,"declarations":[{"children":[{"comments":null,"title":"showLong","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[87,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[87,35]}},{"comments":null,"title":"eqLong","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[90,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[90,31]}},{"comments":null,"title":"ordLong","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[93,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[93,33]}},{"comments":null,"title":"boundedLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[99,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[99,52]}},{"comments":null,"title":"boundedLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[103,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[103,56]}},{"comments":null,"title":"semiringLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[107,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[107,54]}},{"comments":null,"title":"semiringLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[113,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[113,58]}},{"comments":null,"title":"ringLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[119,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[119,46]}},{"comments":null,"title":"ringLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[122,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[122,50]}},{"comments":null,"title":"commutativeRingLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[125,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[125,68]}},{"comments":null,"title":"commutativeRingLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[126,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[126,72]}},{"comments":null,"title":"euclideanRingLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[128,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[128,64]}},{"comments":null,"title":"euclideanRingLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[137,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[137,68]}},{"comments":null,"title":"arbitraryLong","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Long","Internal"],"SInfo"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[142,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[142,56]}}],"comments":null,"title":"Long","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",{"annotation":[],"tag":"NamedKind","contents":[["Data","Long","Internal"],"Signedness"]}]]},"sourceSpan":{"start":[85,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[85,47]}},{"children":[],"comments":null,"title":"Signedness","info":{"declType":"kind"},"sourceSpan":{"start":[56,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[56,31]}},{"children":[{"comments":null,"title":"infoSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"SInfo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}},"sourceSpan":{"start":[67,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[67,36]}},{"comments":null,"title":"boundedLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[99,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[99,52]}},{"comments":null,"title":"semiringLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[107,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[107,54]}},{"comments":null,"title":"ringLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[119,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[119,46]}},{"comments":null,"title":"commutativeRingLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[125,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[125,68]}},{"comments":null,"title":"euclideanRingLongSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[128,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[128,64]}}],"comments":null,"title":"Signed","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Data","Long","Internal"],"Signedness"]},"declType":"externData"},"sourceSpan":{"start":[58,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[58,41]}},{"children":[{"comments":null,"title":"infoUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"SInfo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[76,40]}},{"comments":null,"title":"boundedLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[103,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[103,56]}},{"comments":null,"title":"semiringLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[113,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[113,58]}},{"comments":null,"title":"ringLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[122,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[122,50]}},{"comments":null,"title":"commutativeRingLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[126,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[126,72]}},{"comments":null,"title":"euclideanRingLongUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[137,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[137,68]}}],"comments":null,"title":"Unsigned","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Data","Long","Internal"],"Signedness"]},"declType":"externData"},"sourceSpan":{"start":[59,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[59,43]}},{"children":[{"comments":null,"title":"ffiSignedness","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"SignProxy"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","FFI"],"IsUnsigned"]}]}},"sourceSpan":{"start":[64,3],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[64,49]}},{"comments":null,"title":"toInt","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[65,3],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[65,31]}},{"comments":null,"title":"infoSigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"SInfo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}},"sourceSpan":{"start":[67,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[67,36]}},{"comments":null,"title":"infoUnsigned","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"SInfo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[76,40]}}],"comments":null,"title":"SInfo","info":{"fundeps":[],"arguments":[["s",{"annotation":[],"tag":"NamedKind","contents":[["Data","Long","Internal"],"Signedness"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[63,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[65,31]}},{"children":[{"comments":null,"title":"SignProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"SignProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["s",{"annotation":[],"tag":"NamedKind","contents":[["Data","Long","Internal"],"Signedness"]}]]},"sourceSpan":{"start":[61,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[61,45]}},{"children":[],"comments":null,"title":"signedLongFromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[147,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[147,40]}},{"children":[],"comments":null,"title":"unsignedLongFromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}}]}]}},"sourceSpan":{"start":[150,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[150,52]}},{"children":[],"comments":null,"title":"unsafeFromInt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Long","Internal"],"SInfo"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[155,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[155,52]}},{"children":[],"comments":null,"title":"fromLowHighBits","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Long","Internal"],"SInfo"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]}]},null]}},"sourceSpan":{"start":[158,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[158,61]}},{"children":[],"comments":null,"title":"fromNumber","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Long","Internal"],"SInfo"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[161,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[161,80]}},{"children":[],"comments":null,"title":"fromString","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Long","Internal"],"SInfo"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}]}]}]},null]}},"sourceSpan":{"start":[171,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[171,60]}},{"children":[],"comments":null,"title":"fromStringAs","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Long","Internal"],"SInfo"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[174,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[174,71]}},{"children":[],"comments":null,"title":"highBits","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[178,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[178,36]}},{"children":[],"comments":null,"title":"lowBits","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[181,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[181,35]}},{"children":[],"comments":null,"title":"toString","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]}},"sourceSpan":{"start":[184,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[184,39]}},{"children":[],"comments":null,"title":"toStringAs","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[187,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[187,50]}},{"children":[],"comments":"Converts a `Long` to a `Number`, possibly losing precision.\n","title":"toNumber","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},null]}},"sourceSpan":{"start":[191,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[191,39]}},{"children":[],"comments":"Returns whether a `Long` is `Even` or `Odd`.\n","title":"parity","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]},null]}},"sourceSpan":{"start":[195,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[195,37]}},{"children":[],"comments":null,"title":"even","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[199,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[199,36]}},{"children":[],"comments":null,"title":"odd","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[202,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[202,35]}},{"children":[],"comments":null,"title":"positive","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[205,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[205,40]}},{"children":[],"comments":null,"title":"negative","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[208,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[208,40]}},{"children":[],"comments":null,"title":"quot","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]}]},null]}},"sourceSpan":{"start":[211,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[211,66]}},{"children":[],"comments":null,"title":"rem","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]}]},null]}},"sourceSpan":{"start":[216,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[216,65]}},{"children":[],"comments":null,"title":"and","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[223,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[223,44]}},{"children":[],"comments":null,"title":"or","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[226,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[226,43]}},{"children":[],"comments":null,"title":"xor","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[229,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[229,44]}},{"children":[],"comments":null,"title":"shl","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[232,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[232,44]}},{"children":[],"comments":null,"title":"shr","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[235,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[235,44]}},{"children":[],"comments":null,"title":"zshr","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]}]},null]}},"sourceSpan":{"start":[238,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[238,45]}},{"children":[],"comments":null,"title":"complement","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},null]}},"sourceSpan":{"start":[241,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[241,41]}},{"children":[],"comments":null,"title":"signedToUnsigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]}},"sourceSpan":{"start":[246,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[246,49]}},{"children":[],"comments":null,"title":"unsignedToSigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[249,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[249,49]}},{"children":[],"comments":null,"title":"numberBitsToInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[267,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Internal.purs","end":[267,48]}}]},{"reExports":[],"name":"Data.Long.Unsigned","comments":null,"declarations":[{"children":[],"comments":null,"title":"Long","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Unsigned"]}]}},"sourceSpan":{"start":[24,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[24,44]}},{"children":[],"comments":"Creates a signed `Long` from low and high bits respresented as `Int`\n","title":"fromLowHighBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]}]}},"sourceSpan":{"start":[31,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[31,38]}},{"children":[],"comments":"Creates a `Long` from an `Int` value\n","title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]}]}},"sourceSpan":{"start":[27,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[27,29]}},{"children":[],"comments":"Reads an Int from a String value. The number must parse as an integer and fall within the valid range of values for the Int type, otherwise Nothing is returned.\n","title":"fromString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]}]}},"sourceSpan":{"start":[35,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[35,35]}},{"children":[],"comments":"Like fromString, but the integer can be specified in a different base.\n","title":"fromStringAs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]}]}]}},"sourceSpan":{"start":[39,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[39,46]}},{"children":[],"comments":"Get low bits of a `Long` as an `Int`\n","title":"lowBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[43,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[43,23]}},{"children":[],"comments":"Get high bits of a `Long` as an `Int`\n","title":"highBits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[47,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[47,24]}},{"children":[],"comments":"Creates an `Int` if the `Long` value is within the range of `Long`.\n","title":"toInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[51,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[51,27]}},{"children":[],"comments":"Like `show`, but omits the `l` suffix.\n","title":"toString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[55,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[55,27]}},{"children":[],"comments":"Like `toStringAs`, but the integer can be specified in a different base.\n","title":"toStringAs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[59,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[59,38]}},{"children":[],"comments":"Returns whether a `Long` is `Even` or `Odd`.\n","title":"parity","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]}},"sourceSpan":{"start":[67,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[67,25]}},{"children":[],"comments":"Returns whether a `Long` is an even number.\n","title":"even","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[71,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[71,24]}},{"children":[],"comments":"Returns whether a `Long` is an odd number.\n","title":"odd","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[75,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[75,23]}},{"children":[],"comments":"The quot function provides truncating integer division (see the documentation for the EuclideanRing class). It is identical to div in the EuclideanRing Long instance if the dividend is positive, but will be slightly different if the dividend is negative.\n","title":"quot","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]}]}},"sourceSpan":{"start":[79,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[79,29]}},{"children":[],"comments":"The rem function provides the remainder after truncating integer division (see the documentation for the EuclideanRing class). It is identical to mod in the EuclideanRing Long instance if the dividend is positive, but will be slightly different if the dividend is negative\n","title":"rem","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]}]}},"sourceSpan":{"start":[83,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[83,28]}},{"children":[],"comments":"Converts to a signed long by reading the bits as a 2's complement 64 bit signed integer.\n","title":"toSigned","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Unsigned"],"Long"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Long"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Long","Internal"],"Signed"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/Users/jvliwanag/Documents/workspace/purescript/purescript-long/src/Data/Long/Unsigned.purs","end":[87,50]}}]}],"resolvedDependencies":{"purescript-free":"5.1.0","purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-ordered-collections":"1.6.0","purescript-quickcheck-laws":"4.0.0","purescript-control":"4.1.0","purescript-console":"4.2.0","purescript-either":"4.1.1","purescript-arrays":"5.2.0","purescript-maybe":"4.0.1","purescript-type-equality":"3.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.1.0","purescript-lcg":"2.0.0","purescript-lazy":"4.0.0","purescript-aff":"5.1.0","purescript-foldable-traversable":"4.1.1","purescript-debug":"4.0.0","purescript-tailrec":"4.0.0","purescript-gen":"2.1.0","purescript-typelevel-prelude":"3.0.0","purescript-functors":"3.1.1","purescript-prelude":"4.1.0","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-pipes":"6.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.0","purescript-assert":"4.1.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-mmorph":"5.1.0","purescript-ansi":"5.0.0","purescript-orders":"4.0.0","purescript-const":"4.1.0","purescript-spec":"3.1.0","purescript-record":"1.0.0","purescript-transformers":"4.2.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.1.1","purescript-math":"2.1.1","purescript-enums":"4.0.1","purescript-psci-support":"4.0.0","purescript-catenable-lists":"5.0.1","purescript-random":"4.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.1.0","purescript-spec-quickcheck":"3.1.0","purescript-partial":"2.0.1","purescript-quickcheck":"5.0.0","purescript-strings":"4.0.1","purescript-identity":"4.1.0","purescript-foreign":"5.0.0","purescript-lists":"5.4.0","purescript-nullable":"4.1.1","purescript-datetime":"4.1.1","purescript-functions":"4.0.0"},"version":"0.1.0","github":["zapph","purescript-longs"],"versionTag":"v0.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Test.QuickCheck.Laws.Control.Semigroupoid":"purescript-quickcheck-laws","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Test.Spec.Console":"purescript-spec","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Test.QuickCheck.Laws.Data.Foldable":"purescript-quickcheck-laws","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Test.QuickCheck.Laws.Data.Bounded":"purescript-quickcheck-laws","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Test.Spec.Summary":"purescript-spec","Data.Functor.Compose":"purescript-functors","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Test.QuickCheck.Laws.Control.Apply":"purescript-quickcheck-laws","Control.Monad.Gen":"purescript-gen","Control.Monad.Free.Class":"purescript-free","Test.QuickCheck.Laws.Control.Alt":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Monoid":"purescript-quickcheck-laws","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Test.QuickCheck.Laws.Data.HeytingAlgebra":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data":"purescript-quickcheck-laws","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Control.Monad.Rec.Class":"purescript-tailrec","Test.QuickCheck.Laws.Control.Bind":"purescript-quickcheck-laws","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Test.QuickCheck.Laws.Control.Monad":"purescript-quickcheck-laws","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Pipes.Core":"purescript-pipes","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Test.QuickCheck.Laws.Data.Ord":"purescript-quickcheck-laws","Test.Spec.Assertions.Aff":"purescript-spec","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Test.QuickCheck.Laws.Control":"purescript-quickcheck-laws","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Test.Spec.QuickCheck":"purescript-spec-quickcheck","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Test.QuickCheck.Laws.Data.Functor":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Control.Category":"purescript-quickcheck-laws","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Test.Spec.Reporter.Console":"purescript-spec","Control.Comonad.Traced.Trans":"purescript-transformers","Test.Spec.Reporter.Dot":"purescript-spec","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Pipes.Prelude":"purescript-pipes","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Test.QuickCheck.Laws.Data.EuclideanRing":"purescript-quickcheck-laws","Data.Yoneda":"purescript-free","Test.QuickCheck.Laws.Data.Field":"purescript-quickcheck-laws","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Test.QuickCheck.Laws.Control.Comonad":"purescript-quickcheck-laws","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Test.Spec.Reporter.Base":"purescript-spec","Test.QuickCheck.Laws.Data.Semigroup":"purescript-quickcheck-laws","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Laws":"purescript-quickcheck-laws","Test.Spec.Speed":"purescript-spec","Test.QuickCheck.Laws.Data.CommutativeRing":"purescript-quickcheck-laws","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Control.Alternative":"purescript-quickcheck-laws","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Test.QuickCheck.Laws.Data.Semiring":"purescript-quickcheck-laws","Data.Field":"purescript-prelude","Test.QuickCheck.Laws.Data.BoundedEnum":"purescript-quickcheck-laws","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Data.DivisionRing":"purescript-quickcheck-laws","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Test.Assert":"purescript-assert","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Test.QuickCheck.Laws.Control.Extend":"purescript-quickcheck-laws","Ansi.Codes":"purescript-ansi","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Test.QuickCheck.Laws.Control.MonadPlus":"purescript-quickcheck-laws","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Test.QuickCheck.Laws.Control.MonadZero":"purescript-quickcheck-laws","Data.List.NonEmpty":"purescript-lists","Data.Generic.Rep.Semiring":"purescript-generics-rep","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Test.QuickCheck.Laws.Data.Eq":"purescript-quickcheck-laws","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Applicative":"purescript-quickcheck-laws","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Test.QuickCheck.Laws.Data.BooleanAlgebra":"purescript-quickcheck-laws","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Test.QuickCheck.Laws.Data.Ring":"purescript-quickcheck-laws","Foreign":"purescript-foreign","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Debug.Trace":"purescript-debug","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Test.Spec.Color":"purescript-spec","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Test.QuickCheck.Laws.Control.Plus":"purescript-quickcheck-laws","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.12.2"}