{"uploader":"hdgarrood","packageMeta":{"moduleType":["node"],"repository":{"url":"https://github.com/hdgarrood/purescript-modular-arithmetic","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-quickcheck-laws":"^4.0.0","purescript-console":"^4.2.0","purescript-psci-support":"^4.0.0","purescript-quickcheck":"^5.0.0"},"dependencies":{"purescript-proxy":"^3.0.0","purescript-arrays":"^5.1.0","purescript-maybe":"^4.0.0","purescript-typelevel":"^4.0.0","purescript-gen":"^2.1.0","purescript-nonempty":"^5.0.0","purescript-enums":"^4.0.0","purescript-partial":"^2.0.0"},"name":"purescript-modular-arithmetic","license":["MIT"]},"tagTime":"2018-11-28T00:37:27+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Data","ModularArithmetic","Primality"]},"declarations":[{"children":[{"comments":null,"title":"prime2","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[67,28]}},{"comments":null,"title":"prime3","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}},"sourceSpan":{"start":[68,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[68,28]}},{"comments":null,"title":"prime5","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]}},"sourceSpan":{"start":[69,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[69,28]}},{"comments":null,"title":"prime7","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[70,28]}},{"comments":null,"title":"prime11","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[71,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[71,37]}},{"comments":null,"title":"prime13","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[72,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[72,37]}},{"comments":null,"title":"prime17","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[73,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[73,37]}},{"comments":null,"title":"prime19","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[74,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[74,37]}},{"comments":null,"title":"prime23","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[75,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[75,37]}},{"comments":null,"title":"prime29","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[76,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[76,37]}},{"comments":null,"title":"prime31","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[77,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[77,37]}},{"comments":null,"title":"prime37","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[78,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[78,37]}},{"comments":null,"title":"prime41","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[79,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[79,37]}},{"comments":null,"title":"prime43","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[80,37]}},{"comments":null,"title":"prime47","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[81,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[81,37]}},{"comments":null,"title":"prime53","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[82,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[82,37]}},{"comments":null,"title":"prime59","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[83,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[83,37]}},{"comments":null,"title":"prime61","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D6"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[84,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[84,37]}},{"comments":null,"title":"prime67","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D6"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[85,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[85,37]}},{"comments":null,"title":"prime71","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[86,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[86,37]}},{"comments":null,"title":"prime73","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[87,37]}},{"comments":null,"title":"prime79","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[88,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[88,37]}},{"comments":null,"title":"prime83","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D8"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[89,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[89,37]}},{"comments":null,"title":"prime89","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D8"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[90,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[90,37]}},{"comments":null,"title":"prime97","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[91,37]}}],"comments":"This class specifies that a type-level integer is *prime*; that is, it\nhas exactly 2 divisors: itself, and 1.\n\nAll primes up to 100 have instances. For larger primes, you will need to\nuse the `reifyPrime` function.\n","title":"Prime","info":{"fundeps":[],"arguments":[["m",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}]},"sourceSpan":{"start":[65,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[65,23]}},{"children":[],"comments":"Reify a prime number at the type level. If the first argument provided is\nnot prime, this function returns `Nothing`.\n","title":"reifyPrime","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","ModularArithmetic","Primality"],"Prime"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"r"}]}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"r"}]}]}]},null]}},"sourceSpan":{"start":[95,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[95,72]}},{"children":[],"comments":"Find prime factors by _trial division_; first attempting to divide by 2\nand then by every odd number after that. This is the most basic prime\nfactorisation algorithm possible but it is more than enough for this case\n(specifically, when the input is guaranteed to be no more than 2^31).\n\nPrime factors are returned in increasing order. For example:\n\n```purescript\n> primeFactors 12\n(2 : 2 : 3 : Nil)\n```\n\nPassing in any number less than 2 will return an empty list.\n\n```purescript\n> primeFactors (-12)\nNil\n```\n\nFor all positive integers, the following properties are satisfied:\n\n```purescript\n> product (primeFactors n) == n\n> all isPrime (primeFactors n)\n```\n","title":"primeFactors","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[41,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[41,32]}},{"children":[],"comments":"Check if a number is prime. Note that 1 is not a prime number.\n","title":"isPrime","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[57,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[57,26]}}]}],"name":"Data.ModularArithmetic","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqZ","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[41,16],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[41,40]}},{"comments":null,"title":"ordZ","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[42,16],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[42,42]}},{"comments":null,"title":"showZ","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[43,16],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[43,44]}},{"comments":null,"title":"boundedZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[45,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[45,44]}},{"comments":null,"title":"enumZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[49,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[49,38]}},{"comments":null,"title":"boundedEnumZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"BoundedEnum"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[55,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[55,52]}},{"comments":null,"title":"semiringZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[74,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[74,46]}},{"comments":null,"title":"ringZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[80,38]}},{"comments":null,"title":"commutativeRingZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[83,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[83,60]}},{"comments":null,"title":"divisionRingZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","ModularArithmetic","Primality"],"Prime"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DivisionRing"],"DivisionRing"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[85,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[85,66]}},{"comments":null,"title":"euclideanRingZ","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","ModularArithmetic","Primality"],"Prime"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[91,68]}}],"comments":"Integers modulo some positive integer m.\n\nThe type argument should be a positive integer of the kind defined by [purescript-typelevel](https://pursuit.purescript.org/packages/purescript-typelevel).\nThis way, the modulus that you're working with is specified in the type. Note\nthat even though the modulus is captured at the type level, you can still use\nmodulus values which are not known at compile time, with the [`reifyIntP`](https://pursuit.purescript.org/packages/purescript-typelevel/2.0.0/docs/Data.Typelevel.Num.Sets#v:reifyIntP) function.\n\nThis type forms a commutative ring for any positive integer m, and\nadditionally a field when m is prime. Unlike `Int` and `Number`, though,\nall of these instances are *fully law-abiding*.\n\nThe runtime representation is identical to that of `Int`, except that\nvalues are guaranteed to be between 0 and m-1.\n","title":"Z","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["m",null]]},"sourceSpan":{"start":[39,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[39,20]}},{"children":[],"comments":"Smart constructor for `Z` values.\n","title":"mkZ","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[62,37]}},{"children":[],"comments":"Get at the underlying `Int`.\n","title":"runZ","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[71,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[71,29]}},{"children":[],"comments":"Convenience function for accessing `m` at the value level.\n","title":"modulus","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}},"sourceSpan":{"start":[97,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[97,41]}},{"children":[],"comments":"Compute a multiplicative inverse of some nonzero number in Z_m. Note that\nan inverse exists if and only if the input and `m` are coprime. If this is\nnot the case, this function returns `Nothing`.\n","title":"inverse","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}}]}]}]},null]}},"sourceSpan":{"start":[103,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[103,49]}},{"children":[],"comments":"List all members of Z_m.\n","title":"enumerate","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}}]}]},null]}},"sourceSpan":{"start":[119,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[119,53]}},{"children":[],"comments":"A random generator for elements of Z_m; selects any value of Z_m with\neach value being equally likely to be selected.\n","title":"genZ","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["gen",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"gen"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"gen"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic"],"Z"]},{"tag":"TypeVar","contents":"m"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[128,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic.purs","end":[128,57]}}]},{"reExports":[],"name":"Data.ModularArithmetic.Primality","comments":null,"declarations":[{"children":[],"comments":"Find prime factors by _trial division_; first attempting to divide by 2\nand then by every odd number after that. This is the most basic prime\nfactorisation algorithm possible but it is more than enough for this case\n(specifically, when the input is guaranteed to be no more than 2^31).\n\nPrime factors are returned in increasing order. For example:\n\n```purescript\n> primeFactors 12\n(2 : 2 : 3 : Nil)\n```\n\nPassing in any number less than 2 will return an empty list.\n\n```purescript\n> primeFactors (-12)\nNil\n```\n\nFor all positive integers, the following properties are satisfied:\n\n```purescript\n> product (primeFactors n) == n\n> all isPrime (primeFactors n)\n```\n","title":"primeFactors","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[41,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[41,32]}},{"children":[],"comments":"Check if a number is prime. Note that 1 is not a prime number.\n","title":"isPrime","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[57,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[57,26]}},{"children":[{"comments":null,"title":"prime2","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[67,28]}},{"comments":null,"title":"prime3","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}},"sourceSpan":{"start":[68,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[68,28]}},{"comments":null,"title":"prime5","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]}},"sourceSpan":{"start":[69,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[69,28]}},{"comments":null,"title":"prime7","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[70,28]}},{"comments":null,"title":"prime11","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[71,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[71,37]}},{"comments":null,"title":"prime13","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[72,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[72,37]}},{"comments":null,"title":"prime17","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[73,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[73,37]}},{"comments":null,"title":"prime19","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[74,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[74,37]}},{"comments":null,"title":"prime23","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[75,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[75,37]}},{"comments":null,"title":"prime29","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[76,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[76,37]}},{"comments":null,"title":"prime31","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[77,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[77,37]}},{"comments":null,"title":"prime37","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[78,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[78,37]}},{"comments":null,"title":"prime41","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[79,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[79,37]}},{"comments":null,"title":"prime43","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[80,37]}},{"comments":null,"title":"prime47","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[81,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[81,37]}},{"comments":null,"title":"prime53","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[82,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[82,37]}},{"comments":null,"title":"prime59","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[83,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[83,37]}},{"comments":null,"title":"prime61","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D6"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[84,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[84,37]}},{"comments":null,"title":"prime67","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D6"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[85,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[85,37]}},{"comments":null,"title":"prime71","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}]}},"sourceSpan":{"start":[86,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[86,37]}},{"comments":null,"title":"prime73","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[87,37]}},{"comments":null,"title":"prime79","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[88,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[88,37]}},{"comments":null,"title":"prime83","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D8"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]}]}},"sourceSpan":{"start":[89,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[89,37]}},{"comments":null,"title":"prime89","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D8"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]}]}},"sourceSpan":{"start":[90,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[90,37]}},{"comments":null,"title":"prime97","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ModularArithmetic","Primality"],"Prime"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"NumCons"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[91,37]}}],"comments":"This class specifies that a type-level integer is *prime*; that is, it\nhas exactly 2 divisors: itself, and 1.\n\nAll primes up to 100 have instances. For larger primes, you will need to\nuse the `reifyPrime` function.\n","title":"Prime","info":{"fundeps":[],"arguments":[["m",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}]},"sourceSpan":{"start":[65,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[65,23]}},{"children":[],"comments":"Reify a prime number at the type level. If the first argument provided is\nnot prime, this function returns `Nothing`.\n","title":"reifyPrime","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","ModularArithmetic","Primality"],"Prime"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"r"}]}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"r"}]}]}]},null]}},"sourceSpan":{"start":[95,1],"name":"/home/harry/code/purescript-modular-arithmetic/src/Data/ModularArithmetic/Primality.purs","end":[95,72]}}]}],"resolvedDependencies":{"purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-quickcheck-laws":"4.0.0","purescript-control":"4.1.0","purescript-console":"4.2.0","purescript-either":"4.1.0","purescript-arrays":"5.1.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.1.0","purescript-lcg":"2.0.0","purescript-typelevel":"4.0.0","purescript-lazy":"4.0.0","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.0.0","purescript-gen":"2.1.0","purescript-typelevel-prelude":"3.0.0","purescript-prelude":"4.1.0","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-record":"1.0.0","purescript-transformers":"4.1.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.1.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-psci-support":"4.0.0","purescript-random":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.0","purescript-quickcheck":"5.0.0","purescript-strings":"4.0.1","purescript-identity":"4.1.0","purescript-lists":"5.3.0","purescript-functions":"4.0.0"},"version":"4.0.0","github":["hdgarrood","purescript-modular-arithmetic"],"versionTag":"v4.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Test.QuickCheck.Laws.Control.Semigroupoid":"purescript-quickcheck-laws","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.Typelevel.Undefined":"purescript-typelevel","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Test.QuickCheck.Laws.Data.Foldable":"purescript-quickcheck-laws","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Test.QuickCheck.Laws.Data.Bounded":"purescript-quickcheck-laws","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Typelevel.Num.Sets":"purescript-typelevel","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Test.QuickCheck.Laws.Control.Apply":"purescript-quickcheck-laws","Control.Monad.Gen":"purescript-gen","Data.Typelevel.Num.Reps":"purescript-typelevel","Test.QuickCheck.Laws.Control.Alt":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Monoid":"purescript-quickcheck-laws","Type.Data.Row":"purescript-prelude","Test.QuickCheck.Laws.Data.HeytingAlgebra":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data":"purescript-quickcheck-laws","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Control.Monad.Rec.Class":"purescript-tailrec","Test.QuickCheck.Laws.Control.Bind":"purescript-quickcheck-laws","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Test.QuickCheck.Laws.Control.Monad":"purescript-quickcheck-laws","Effect.Exception.Unsafe":"purescript-exceptions","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Test.QuickCheck.Laws.Data.Ord":"purescript-quickcheck-laws","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Test.QuickCheck.Laws.Control":"purescript-quickcheck-laws","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Typelevel.Num":"purescript-typelevel","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Test.QuickCheck.Laws.Data.Functor":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Control.Category":"purescript-quickcheck-laws","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Test.QuickCheck.Laws.Data.EuclideanRing":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Field":"purescript-quickcheck-laws","Data.Unfoldable":"purescript-unfoldable","Data.Typelevel.Num.Aliases":"purescript-typelevel","Test.QuickCheck.Laws.Control.Comonad":"purescript-quickcheck-laws","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Test.QuickCheck.Laws.Data.Semigroup":"purescript-quickcheck-laws","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Laws":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.CommutativeRing":"purescript-quickcheck-laws","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Control.Alternative":"purescript-quickcheck-laws","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Test.QuickCheck.Laws.Data.Semiring":"purescript-quickcheck-laws","Data.Field":"purescript-prelude","Test.QuickCheck.Laws.Data.BoundedEnum":"purescript-quickcheck-laws","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Data.DivisionRing":"purescript-quickcheck-laws","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Typelevel.Num.Ops":"purescript-typelevel","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Test.QuickCheck.Laws.Control.Extend":"purescript-quickcheck-laws","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Test.QuickCheck.Laws.Control.MonadPlus":"purescript-quickcheck-laws","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Test.QuickCheck.Laws.Control.MonadZero":"purescript-quickcheck-laws","Data.List.NonEmpty":"purescript-lists","Data.Generic.Rep.Semiring":"purescript-generics-rep","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Typelevel.Bool":"purescript-typelevel","Data.Identity":"purescript-identity","Test.QuickCheck.Laws.Data.Eq":"purescript-quickcheck-laws","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Applicative":"purescript-quickcheck-laws","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Test.QuickCheck.Laws.Data.BooleanAlgebra":"purescript-quickcheck-laws","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Test.QuickCheck.Laws.Data.Ring":"purescript-quickcheck-laws","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Test.QuickCheck.Laws.Control.Plus":"purescript-quickcheck-laws","Data.Either":"purescript-either","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.12.0"}