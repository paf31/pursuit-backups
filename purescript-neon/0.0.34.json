{"uploader":"tfausak","packageMeta":{"homepage":"https://github.com/tfausak/purescript-neon","repository":{"url":"git://github.com/tfausak/purescript-neon.git","type":"git"},"ignore":["/.psci","/.psci_modules/","/.pulp-cache/","/bower_components/","/docs/","/node_modules/","/npm-debug.log","/output/"],"main":["src/Neon.purs"],"authors":[{"homepage":"http://taylor.fausak.me","email":"taylor@fausak.me","name":"Taylor Fausak"}],"name":"purescript-neon","keywords":["neon","prelude","purescript"],"description":"An experimental PureScript prelude."},"modules":[{"name":"Neon.Types.HasToArray","comments":null,"declarations":[{"children":[{"comments":null,"title":"toArray","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":null},{"comments":null,"title":"stringHasToArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasToArray.HasToArray"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[11,1],"name":"src/Neon/Types/HasToArray.purs","end":[12,35]}}],"comments":null,"title":"HasToArray","fixity":null,"info":{"arguments":[["a",null],["b",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[8,1],"name":"src/Neon/Types/HasToArray.purs","end":[11,1]}}]},{"name":"Neon.Types.HasShow","comments":null,"declarations":[{"children":[{"comments":null,"title":"show","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.String"}]}},"sourceSpan":null},{"comments":null,"title":"arrayHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[24,1],"name":"src/Neon/Types/HasShow.purs","end":[27,1]}},{"comments":null,"title":"booleanHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Types/HasShow.purs","end":[30,1]}},{"comments":null,"title":"charHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Types/HasShow.purs","end":[33,1]}},{"comments":null,"title":"intHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[33,1],"name":"src/Neon/Types/HasShow.purs","end":[36,1]}},{"comments":null,"title":"numberHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Types/HasShow.purs","end":[39,1]}},{"comments":null,"title":"stringHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Prim.String"}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Types/HasShow.purs","end":[40,29]}}],"comments":"Represents types that can be converting to a string.\n\nThis class does not have any laws.\n","title":"HasShow","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[15,1],"name":"src/Neon/Types/HasShow.purs","end":[24,1]}}]},{"name":"Neon.Types.HasFromArray","comments":null,"declarations":[{"children":[{"comments":null,"title":"fromArray","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":null},{"comments":null,"title":"stringHasFromArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFromArray.HasFromArray"},{"tag":"TypeConstructor","contents":"Prim.Char"}]},{"tag":"TypeConstructor","contents":"Prim.String"}]}},"sourceSpan":{"start":[11,1],"name":"src/Neon/Types/HasFromArray.purs","end":[12,40]}}],"comments":null,"title":"HasFromArray","fixity":null,"info":{"arguments":[["a",null],["b",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[8,1],"name":"src/Neon/Types/HasFromArray.purs","end":[11,1]}}]},{"name":"Neon.Types.HasEqual","comments":null,"declarations":[{"children":[{"comments":null,"title":"equal","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}},"sourceSpan":null},{"comments":null,"title":"arrayHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Types/HasEqual.purs","end":[33,1]}},{"comments":null,"title":"booleanHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[33,1],"name":"src/Neon/Types/HasEqual.purs","end":[36,1]}},{"comments":null,"title":"charHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Types/HasEqual.purs","end":[39,1]}},{"comments":null,"title":"functionHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Types/HasEqual.purs","end":[42,1]}},{"comments":null,"title":"intHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Types/HasEqual.purs","end":[45,1]}},{"comments":null,"title":"numberHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Types/HasEqual.purs","end":[48,1]}},{"comments":null,"title":"stringHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Prim.String"}]}},"sourceSpan":{"start":[48,1],"name":"src/Neon/Types/HasEqual.purs","end":[57,1]}}],"comments":"Represents types that can be equal to each other.\n\nLaws:\n- Reflexivity: `x == x = true`\n- Symmetry: `x == y = y == x`\n- Transitivity: `x == y` and `y == z` implies `x == z`\n","title":"HasEqual","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[21,1],"name":"src/Neon/Types/HasEqual.purs","end":[30,1]}},{"children":[],"comments":"Alias for `equal`.\n\n``` purescript\n\"a\" == \"a\"\n-- true\n```\n","title":"(==)","fixity":{"associativity":"infix","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"src/Neon/Types/HasEqual.purs","end":[58,1]}}]},{"name":"Neon.Values.Ordering","comments":null,"declarations":[{"children":[{"comments":null,"title":"LessThan","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"EqualTo","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"GreaterThan","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"orderingHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}},"sourceSpan":{"start":[14,1],"name":"src/Neon/Values/Ordering.purs","end":[26,1]}},{"comments":null,"title":"orderingHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}},"sourceSpan":{"start":[26,1],"name":"src/Neon/Values/Ordering.purs","end":[30,20]}}],"comments":"Represents the possible outcomes from comparing two values.\n","title":"Ordering","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[9,1],"name":"src/Neon/Values/Ordering.purs","end":[14,1]}}]},{"name":"Neon.Values.Proxy","comments":null,"declarations":[{"children":[{"comments":null,"title":"Proxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"proxyHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Proxy.Proxy"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[11,1],"name":"src/Neon/Values/Proxy.purs","end":[14,1]}},{"comments":null,"title":"proxyHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Proxy.Proxy"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[14,1],"name":"src/Neon/Values/Proxy.purs","end":[15,12]}}],"comments":"A value that represents a type.\n","title":"Proxy","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[9,1],"name":"src/Neon/Values/Proxy.purs","end":[11,1]}}]},{"name":"Neon.Values.Regex","comments":null,"declarations":[{"children":[{"comments":null,"title":"regexHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Neon.Values.Regex.Regex"}]}},"sourceSpan":{"start":[20,1],"name":"src/Neon/Values/Regex.purs","end":[23,1]}},{"comments":null,"title":"regexHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Neon.Values.Regex.Regex"}]}},"sourceSpan":{"start":[23,1],"name":"src/Neon/Values/Regex.purs","end":[27,1]}}],"comments":"Represents regular expressions. A wrapper around `RegExp` from JavaScript.\n","title":"Regex","fixity":null,"info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[18,1],"name":"src/Neon/Values/Regex.purs","end":[20,1]}},{"children":[],"comments":"Represents the flags that a regex can have.\n","title":"RegexFlags","fixity":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Object"},{"tag":"RCons","contents":["ignoreCase",{"tag":"TypeConstructor","contents":"Prim.Boolean"},{"tag":"RCons","contents":["global",{"tag":"TypeConstructor","contents":"Prim.Boolean"},{"tag":"RCons","contents":["multiline",{"tag":"TypeConstructor","contents":"Prim.Boolean"},{"tag":"REmpty","contents":[]}]}]}]}]}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Values/Regex.purs","end":[39,1]}},{"children":[],"comments":"Creates a regular expression.\n\n``` purescript\nshow (regex \"a\" { ignoreCase: true, global: false, multiline: false })\n-- \"regex \\\"a\\\" { ignoreCase: true, global: false, multiline: false }\"\n```\n","title":"regex","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Neon.Values.Regex.RegexFlags"}]},{"tag":"TypeConstructor","contents":"Neon.Values.Regex.Regex"}]}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Values/Regex.purs","end":[40,1]}},{"children":[],"comments":"Returns the default regular expression flags.\n\n``` purescript\nshow regexFlags\n-- \"{ ignoreCase: false, global: false, multiline: false }\"\n```\n","title":"regexFlags","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":"Neon.Values.Regex.RegexFlags"}},"sourceSpan":{"start":[48,1],"name":"src/Neon/Values/Regex.purs","end":[49,1]}},{"children":[],"comments":"Tests if a regular expression matches a string.\n\n``` purescript\ntest \"a\" (regex \"a\" regexFlags)\n-- true\n```\n","title":"test","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Neon.Values.Regex.Regex"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Values/Regex.purs","end":[62,1]}}]},{"name":"Neon.Types.HasCompose","comments":null,"declarations":[{"children":[{"comments":null,"title":"compose","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"functionHasCompose","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompose.HasCompose"},{"tag":"TypeConstructor","contents":"Prim.Function"}]}},"sourceSpan":{"start":[22,1],"name":"src/Neon/Types/HasCompose.purs","end":[31,1]}}],"comments":"Represents types that have a composition morphism.\n\nLaws:\n- Associativity: `f >> (g >> h) = (f >> g) >> h`\n","title":"HasCompose","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[12,1],"name":"src/Neon/Types/HasCompose.purs","end":[22,1]}},{"children":[],"comments":"Alias for `compose`.\n\n``` purescript\n((+ 2) >> (* 2)) 3\n-- 10\n```\n","title":"(>>)","fixity":{"associativity":"infixr","precedence":9},"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompose.HasCompose",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasCompose.purs","end":[32,1]}},{"children":[],"comments":"`(>>)` with the arguments flipped.\n\n``` purescript\n((* 2) << (+ 2)) 3\n-- 10\n```\n","title":"(<<)","fixity":{"associativity":"infixr","precedence":9},"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompose.HasCompose",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Neon/Types/HasCompose.purs","end":[42,1]}}]},{"name":"Neon.Types.HasIdentity","comments":null,"declarations":[{"children":[{"comments":null,"title":"identity","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":null},{"comments":null,"title":"functionHasIdentity","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasIdentity.HasIdentity"},{"tag":"TypeConstructor","contents":"Prim.Function"}]}},"sourceSpan":{"start":[23,1],"name":"src/Neon/Types/HasIdentity.purs","end":[24,21]}}],"comments":"Represents types that have an identity morphism. This is also known as a\n[category](https://en.wikipedia.org/wiki/Category_(mathematics)).\n\nLaws:\n- Identity: `f >> identity = identity >> f = f`\n","title":"HasIdentity","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasCompose.HasCompose",[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[13,1],"name":"src/Neon/Types/HasIdentity.purs","end":[23,1]}}]},{"name":"Neon.Types.HasCompare","comments":null,"declarations":[{"children":[{"comments":null,"title":"compare","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}]}},"sourceSpan":null},{"comments":null,"title":"arrayHasCompare","info":{"declType":"instance","dependencies":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Types/HasCompare.purs","end":[48,1]}},{"comments":null,"title":"booleanHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[48,1],"name":"src/Neon/Types/HasCompare.purs","end":[55,1]}},{"comments":null,"title":"charHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[55,1],"name":"src/Neon/Types/HasCompare.purs","end":[58,1]}},{"comments":null,"title":"functionHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[58,1],"name":"src/Neon/Types/HasCompare.purs","end":[61,1]}},{"comments":null,"title":"intHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Types/HasCompare.purs","end":[64,1]}},{"comments":null,"title":"numberHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[64,1],"name":"src/Neon/Types/HasCompare.purs","end":[67,1]}},{"comments":null,"title":"orderingHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}},"sourceSpan":{"start":[67,1],"name":"src/Neon/Types/HasCompare.purs","end":[80,1]}},{"comments":null,"title":"stringHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeConstructor","contents":"Prim.String"}]}},"sourceSpan":{"start":[80,1],"name":"src/Neon/Types/HasCompare.purs","end":[90,1]}}],"comments":"Represents types that can be compared to each other. This is also known as\na [total order](https://en.wikipedia.org/wiki/Total_order).\n\nLaws:\n- Reflexivity: `a <= a`\n- Antisymmetry: if `a <= b` and `b <= a` then `a = b`\n- Transitivity: if `a <= b` and `b <= c` then `a <= c`\n","title":"HasCompare","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[35,1],"name":"src/Neon/Types/HasCompare.purs","end":[45,1]}},{"children":[],"comments":"Returns `true` if the first value is less than the second value, `false`\notherwise.\n\n``` purescript\nlessThan \"a\" \"b\"\n-- true\n```\n","title":"lessThan","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[90,1],"name":"src/Neon/Types/HasCompare.purs","end":[91,1]}},{"children":[],"comments":"Alias for `lessThan`.\n\n``` purescript\n\"a\" < \"b\"\n-- true\n```\n","title":"(<)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[101,1],"name":"src/Neon/Types/HasCompare.purs","end":[102,1]}},{"children":[],"comments":"Returns `true` if the first value is less than or equal to the second\nvalue, `false` otherwise.\n\n``` purescript\nlessThanOrEqualTo \"a\" \"a\"\n-- true\n```\n","title":"lessThanOrEqualTo","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[112,1],"name":"src/Neon/Types/HasCompare.purs","end":[113,1]}},{"children":[],"comments":"Alias for `lessThanOrEqualTo`.\n\n``` purescript\n\"a\" < \"a\"\n-- true\n```\n","title":"(<=)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[123,1],"name":"src/Neon/Types/HasCompare.purs","end":[124,1]}},{"children":[],"comments":"Returns `true` if the first value is greater than or equal to the second\nvalue, `false` otherwise.\n\n``` purescript\ngreaterThanOrEqualTo \"a\" \"a\"\n-- true\n```\n","title":"greaterThanOrEqualTo","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[134,1],"name":"src/Neon/Types/HasCompare.purs","end":[135,1]}},{"children":[],"comments":"Alias for `greaterThanOrEqualTo`.\n\n``` purescript\n \"a\" >= \"a\"\n-- true\n```\n","title":"(>=)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"src/Neon/Types/HasCompare.purs","end":[146,1]}},{"children":[],"comments":"Returns `true` if the first value is greater than the second value,\n`false` otherwise.\n\n``` purescript\ngreaterThan \"b\" \"a\"\n-- true\n```\n","title":"greaterThan","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[156,1],"name":"src/Neon/Types/HasCompare.purs","end":[157,1]}},{"children":[],"comments":"Alias for `greaterThan`.\n\n``` purescript\n\"b\" > \"a\"\n-- true\n```\n","title":"(>)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[167,1],"name":"src/Neon/Types/HasCompare.purs","end":[168,1]}},{"children":[],"comments":"Returns the lesser of two values.\n\n``` purescript\nmin \"a\" \"b\"\n-- \"a\"\n```\n","title":"min","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[177,1],"name":"src/Neon/Types/HasCompare.purs","end":[178,1]}},{"children":[],"comments":"Returns the greater of two values.\n\n``` purescript\nmax \"a\" \"b\"\n-- \"b\"\n```\n","title":"max","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[186,1],"name":"src/Neon/Types/HasCompare.purs","end":[187,1]}},{"children":[],"comments":"Clamps the value to the given range.\n\n``` purescript\nclamp 2 4 1\n-- 2\nclamp 2 4 3\n-- 3\nclamp 2 4 5\n-- 4\n```\n","title":"clamp","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[199,1],"name":"src/Neon/Types/HasCompare.purs","end":[200,1]}},{"children":[],"comments":"Applies a function to both values and compares the results.\n\n``` purescript\ncomparing (/ 2) 4 5\n-- EqualTo\n```\n","title":"comparing","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[211,1],"name":"src/Neon/Types/HasCompare.purs","end":[212,1]}}]},{"name":"Neon.Types.HasAdd","comments":null,"declarations":[{"children":[{"comments":null,"title":"add","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"arrayHasAdd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Types/HasAdd.purs","end":[30,1]}},{"comments":null,"title":"booleanHasAdd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Types/HasAdd.purs","end":[33,1]}},{"comments":null,"title":"functionHasAdd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[33,1],"name":"src/Neon/Types/HasAdd.purs","end":[36,1]}},{"comments":null,"title":"intHasAdd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Types/HasAdd.purs","end":[39,1]}},{"comments":null,"title":"numberHasAdd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Types/HasAdd.purs","end":[42,1]}},{"comments":null,"title":"stringHasAdd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeConstructor","contents":"Prim.String"}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Types/HasAdd.purs","end":[51,1]}}],"comments":"Represents types that can be added together. This is also known as a\n[semigroup](https://en.wikipedia.org/wiki/Semigroup).\n\nLaws:\n- Associativity: `x + (y + z) = (x + y) + z`\n","title":"HasAdd","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[18,1],"name":"src/Neon/Types/HasAdd.purs","end":[27,1]}},{"children":[],"comments":"Alias for `add`.\n\n``` purescript\n\"a\" + \"b\"\n-- \"ab\"\n```\n","title":"(+)","fixity":{"associativity":"infixl","precedence":6},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[51,1],"name":"src/Neon/Types/HasAdd.purs","end":[52,1]}}]},{"name":"Neon.Primitives.String","comments":null,"declarations":[]},{"name":"Neon.Primitives.Object","comments":null,"declarations":[]},{"name":"Neon.Primitives.Number","comments":null,"declarations":[{"children":[],"comments":"An alias for `NaN` from JavaScript.\n","title":"nan","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":"Prim.Number"}},"sourceSpan":{"start":[13,1],"name":"src/Neon/Primitives/Number.purs","end":[24,1]}},{"children":[],"comments":"Tests whether a number is `nan` or not. This is necessary because `nan`\ndoes not equal `nan`.\n\n``` purescript\nisNaN nan\n-- true\nisNaN 1.0\n-- false\n```\n","title":"isNaN","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Number"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[24,1],"name":"src/Neon/Primitives/Number.purs","end":[27,1]}},{"children":[],"comments":"An alias for `Infinity` from JavaScript.\n","title":"infinity","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":"Prim.Number"}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Primitives/Number.purs","end":[37,1]}},{"children":[],"comments":"Tests whether a number is finite or not.\n\n``` purescript\nisFinite 1.0\n-- true\nisFinite infinity\n-- false\n```\n","title":"isFinite","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Number"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[37,1],"name":"src/Neon/Primitives/Number.purs","end":[45,1]}},{"children":[],"comments":"Rounds a number to the nearest integer.\n\n``` purescript\nround 1.4\n-- 1\n```\n","title":"round","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Number"}]},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Primitives/Number.purs","end":[53,1]}},{"children":[],"comments":"Rounds a number up.\n\n``` purescript\nceiling 1.1\n-- 2\n```\n","title":"ceiling","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Number"}]},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[53,1],"name":"src/Neon/Primitives/Number.purs","end":[61,1]}},{"children":[],"comments":"Rounds a number down.\n\n``` purescript\nfloor 1.9\n-- 1\n```\n","title":"floor","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Number"}]},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Primitives/Number.purs","end":[71,1]}},{"children":[],"comments":"Removes the non-integral component of a number.\n\n``` purescript\ntruncate 1.5\n-- 1\ntruncate (-1.5)\n-- -1\n```\n","title":"truncate","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Number"}]},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[71,1],"name":"src/Neon/Primitives/Number.purs","end":[71,38]}}]},{"name":"Neon.Primitives.Int","comments":null,"declarations":[{"children":[],"comments":"Converts an integer into a number.\n\n``` purescript\ntoNumber 1\n-- 1.0\n```\n","title":"toNumber","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Int"}]},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[11,1],"name":"src/Neon/Primitives/Int.purs","end":[11,35]}}]},{"name":"Neon.Primitives.Function","comments":null,"declarations":[{"children":[],"comments":"The constant function. Always returns the first argument.\n\n``` purescript\nalways 1 2\n-- 1\n```\n","title":"always","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"src/Neon/Primitives/Function.purs","end":[16,1]}},{"children":[],"comments":"Flips the order of the first two arguments.\n\n``` purescript\nflip always 1 2\n-- 2\n```\n","title":"flip","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"src/Neon/Primitives/Function.purs","end":[25,1]}},{"children":[],"comments":"Applies the second function to both arguments before applying the first\nfunction.\n\n``` purescript\n((*) `on` (+ 1)) 2 3\n-- 12\n```\n","title":"on","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"src/Neon/Primitives/Function.purs","end":[35,1]}},{"children":[],"comments":"Applies an argument to a function. This is useful to avoid parentheses.\n\n``` purescript\n'A' |> toLower\n-- 'a'\n```\n","title":"(|>)","fixity":{"associativity":"infixl","precedence":0},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"src/Neon/Primitives/Function.purs","end":[44,1]}},{"children":[],"comments":"Applies a function to an argument. This is useful to avoid parentheses.\n\n``` purescript\ntoLower <| 'A'\n-- 'a'\n```\n","title":"(<|)","fixity":{"associativity":"infixr","precedence":0},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"src/Neon/Primitives/Function.purs","end":[54,1]}}]},{"name":"Neon.Types.HasTop","comments":null,"declarations":[{"children":[{"comments":null,"title":"top","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"booleanHasTop","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Types/HasTop.purs","end":[30,1]}},{"comments":null,"title":"charHasTop","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Types/HasTop.purs","end":[33,1]}},{"comments":null,"title":"functionHasTop","info":{"declType":"instance","dependencies":[["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[33,1],"name":"src/Neon/Types/HasTop.purs","end":[36,1]}},{"comments":null,"title":"intHasTop","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Types/HasTop.purs","end":[39,1]}},{"comments":null,"title":"numberHasTop","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Types/HasTop.purs","end":[42,1]}},{"comments":null,"title":"orderingHasTop","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Types/HasTop.purs","end":[43,9]}}],"comments":"Represents types that have an upper bound.\n\nLaws:\n- `top >= x`\n","title":"HasTop","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[18,1],"name":"src/Neon/Types/HasTop.purs","end":[27,1]}}]},{"name":"Neon.Types.HasZero","comments":null,"declarations":[{"children":[{"comments":null,"title":"zero","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"arrayHasZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[23,1],"name":"src/Neon/Types/HasZero.purs","end":[26,1]}},{"comments":null,"title":"booleanHasZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[26,1],"name":"src/Neon/Types/HasZero.purs","end":[29,1]}},{"comments":null,"title":"functionHasZero","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[29,1],"name":"src/Neon/Types/HasZero.purs","end":[32,1]}},{"comments":null,"title":"intHasZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Types/HasZero.purs","end":[35,1]}},{"comments":null,"title":"numberHasZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[35,1],"name":"src/Neon/Types/HasZero.purs","end":[38,1]}},{"comments":null,"title":"stringHasZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeConstructor","contents":"Prim.String"}]}},"sourceSpan":{"start":[38,1],"name":"src/Neon/Types/HasZero.purs","end":[39,10]}}],"comments":"Represents types that have an additive identity. This is also known as a\n[monoid](https://en.wikipedia.org/wiki/Monoid).\n\nLaws:\n- Identity: `zero + x = x + zero = x`\n","title":"HasZero","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[14,1],"name":"src/Neon/Types/HasZero.purs","end":[23,1]}}]},{"name":"Neon.Types.HasMultiply","comments":null,"declarations":[{"children":[{"comments":null,"title":"multiply","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"booleanHasMultiply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[29,1],"name":"src/Neon/Types/HasMultiply.purs","end":[32,1]}},{"comments":null,"title":"functionHasMultiply","info":{"declType":"instance","dependencies":[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Types/HasMultiply.purs","end":[35,1]}},{"comments":null,"title":"intHasMultiply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[35,1],"name":"src/Neon/Types/HasMultiply.purs","end":[38,1]}},{"comments":null,"title":"numberHasMultiply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[38,1],"name":"src/Neon/Types/HasMultiply.purs","end":[47,1]}}],"comments":"Represents values that can be multiplied together. This is also known as\na [near-ring](https://en.wikipedia.org/wiki/Near-ring).\n\nLaws:\n- Associativity: `x * (y * z) = (x * y) * z`\n- Distributivity: `x * (y + z) = (x * y) + (x * z)`\n- Annihilation: `x * zero = zero * x = zero`\n","title":"HasMultiply","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[20,1],"name":"src/Neon/Types/HasMultiply.purs","end":[29,1]}},{"children":[],"comments":"Alias for `multiply`.\n\n``` purescript\n3 * 2\n-- 6\n```\n","title":"(*)","fixity":{"associativity":"infixl","precedence":7},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[47,1],"name":"src/Neon/Types/HasMultiply.purs","end":[48,1]}}]},{"name":"Neon.Types.HasSubtract","comments":null,"declarations":[{"children":[{"comments":null,"title":"subtract","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"functionHasSubtract","info":{"declType":"instance","dependencies":[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasSubtract.purs","end":[31,1]}},{"comments":null,"title":"intHasSubtract","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasSubtract.purs","end":[34,1]}},{"comments":null,"title":"numberHasSubtract","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[34,1],"name":"src/Neon/Types/HasSubtract.purs","end":[43,1]}}],"comments":"Represents types that can be subtracted from each other.\n\nLaws:\n- Inverse: `a - a = a + (zero - a) = zero`\n","title":"HasSubtract","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[19,1],"name":"src/Neon/Types/HasSubtract.purs","end":[28,1]}},{"children":[],"comments":"Alias for `subtract`.\n\n``` purescript\n3 - 2\n-- 1\n```\n","title":"(-)","fixity":{"associativity":"infixl","precedence":6},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[43,1],"name":"src/Neon/Types/HasSubtract.purs","end":[44,1]}},{"children":[],"comments":"Negates a value. This is the same as subtracting the value from zero.\n\n``` purescript\nnegate 1\n-- -1\n```\n","title":"negate","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[53,1],"name":"src/Neon/Types/HasSubtract.purs","end":[54,1]}},{"children":[],"comments":"Returns the absolute value of a value. If the value is negative, this\nreturns it negated. Otherwise it returns the value.\n\n``` purescript\nabs 1\n-- 1\nabs (-1)\n-- 1\n```\n","title":"abs","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[65,1],"name":"src/Neon/Types/HasSubtract.purs","end":[66,1]}}]},{"name":"Neon.Types.HasBottom","comments":null,"declarations":[{"children":[{"comments":null,"title":"bottom","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"booleanHasBottom","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasBottom.purs","end":[31,1]}},{"comments":null,"title":"charHasBottom","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasBottom.purs","end":[34,1]}},{"comments":null,"title":"functionHasBottom","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[34,1],"name":"src/Neon/Types/HasBottom.purs","end":[37,1]}},{"comments":null,"title":"intHasBottom","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[37,1],"name":"src/Neon/Types/HasBottom.purs","end":[40,1]}},{"comments":null,"title":"numberHasBottom","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[40,1],"name":"src/Neon/Types/HasBottom.purs","end":[43,1]}},{"comments":null,"title":"orderingHasBottom","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}},"sourceSpan":{"start":[43,1],"name":"src/Neon/Types/HasBottom.purs","end":[44,12]}}],"comments":"Represents types that have a lower bound.\n\nLaws:\n- `bottom <= x`\n","title":"HasBottom","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[19,1],"name":"src/Neon/Types/HasBottom.purs","end":[28,1]}}]},{"name":"Neon.Types.HasAnd","comments":null,"declarations":[{"children":[{"comments":null,"title":"and","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"booleanHasAnd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasAnd.purs","end":[31,1]}},{"comments":null,"title":"functionHasAnd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasAnd.purs","end":[40,1]}}],"comments":"Represents types than can be \"and\"ed together. This is also known as a\n[logical conjunction](https://en.wikipedia.org/wiki/Logical_conjunction).\n\nLaws:\n- Associativity: `x && (y && z) = (x && y) && z`\n- Commutativity: `x && y = y && x`\n- Identity: `x && top = x`\n- Annihiliation: `x && bottom = bottom`\n- Idempotence: `x && x = x`\n","title":"HasAnd","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[19,1],"name":"src/Neon/Types/HasAnd.purs","end":[28,1]}},{"children":[],"comments":"Alias for `and`.\n\n``` purescript\ntrue && true\n-- true\n```\n","title":"(&&)","fixity":{"associativity":"infixr","precedence":3},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Neon/Types/HasAnd.purs","end":[41,1]}}]},{"name":"Neon.Types.HasNot","comments":null,"declarations":[{"children":[{"comments":null,"title":"not","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"booleanHasNot","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[29,1],"name":"src/Neon/Types/HasNot.purs","end":[32,1]}},{"comments":null,"title":"functionHasNot","info":{"declType":"instance","dependencies":[["Neon.Types.HasNot.HasNot",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Types/HasNot.purs","end":[43,1]}}],"comments":"Represents types can be \"not\"ed. This is also know as\n[negation](https://en.wikipedia.org/wiki/Negation).\n\nLaws:\n- `not top = bottom`\n- `not bottom = top`\n","title":"HasNot","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[20,1],"name":"src/Neon/Types/HasNot.purs","end":[29,1]}},{"children":[],"comments":"Tests whether a number is finite or not.\n\n``` purescript\nisInfinite infinity\n-- true\nisInfinite 1.0\n-- false\n```\n","title":"isInfinite","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Number"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[43,1],"name":"src/Neon/Types/HasNot.purs","end":[44,1]}},{"children":[],"comments":"Returns `true` if two values are not equal, `false` otherwise.\n\n``` purescript\nnotEqual \"a\" \"b\"\n-- true\n```\n","title":"notEqual","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"src/Neon/Types/HasNot.purs","end":[53,1]}},{"children":[],"comments":"Alias for `notEqual`.\n\n``` purescript\n\"a\" != \"b\"\n-- true\n```\n","title":"(!=)","fixity":{"associativity":"infix","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Types/HasNot.purs","end":[62,1]}}]},{"name":"Neon.Types.HasOr","comments":null,"declarations":[{"children":[{"comments":null,"title":"or","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"booleanHasOr","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasOr.purs","end":[31,1]}},{"comments":null,"title":"functionHasOr","info":{"declType":"instance","dependencies":[["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasOr.purs","end":[40,1]}}],"comments":"Represents types than can be \"or\"ed together. This is also known as a\n[logical disjunction](https://en.wikipedia.org/wiki/Logical_disjunction).\n\nLaws:\n- Associativity: `x || (y || z) = (x || y) || z`\n- Commutativity: `x || y = y || x`\n- Identity: `x || bottom = x`\n- Annihiliation: `x || top = top`\n- Idempotence: `x || x = x`\n","title":"HasOr","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[19,1],"name":"src/Neon/Types/HasOr.purs","end":[28,1]}},{"children":[],"comments":"Alias for `or`.\n\n``` purescript\nfalse || true\n-- true\n```\n","title":"(||)","fixity":{"associativity":"infixr","precedence":2},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Neon/Types/HasOr.purs","end":[41,1]}}]},{"name":"Neon.Types.HasOne","comments":null,"declarations":[{"children":[{"comments":null,"title":"one","info":{"declType":"typeClassMember","type":{"tag":"TypeVar","contents":"a"}},"sourceSpan":null},{"comments":null,"title":"booleanHasOne","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasOne.purs","end":[31,1]}},{"comments":null,"title":"functionHasOne","info":{"declType":"instance","dependencies":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasOne.purs","end":[34,1]}},{"comments":null,"title":"intHasOne","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[34,1],"name":"src/Neon/Types/HasOne.purs","end":[37,1]}},{"comments":null,"title":"numberHasOne","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[37,1],"name":"src/Neon/Types/HasOne.purs","end":[50,1]}}],"comments":"Represents types that have an multiplicative identity. This is also known\nas a [semiring](https://en.wikipedia.org/wiki/Semiring).\n\nLaws:\n- Identity: `one * x = x * one = x`\n","title":"HasOne","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[19,1],"name":"src/Neon/Types/HasOne.purs","end":[28,1]}},{"children":[],"comments":"Returns the sign of a value. For any value `x`, `sign x * abs x = x`.\n\n``` purescript\nsign (-2)\n-- -1\nsign 0\n-- 0\nsign 2\n-- 1\n```\n","title":"sign","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[50,1],"name":"src/Neon/Types/HasOne.purs","end":[51,1]}}]},{"name":"Neon.Types.HasDivide","comments":null,"declarations":[{"children":[{"comments":null,"title":"divide","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"modulo","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"functionHasDivide","info":{"declType":"instance","dependencies":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[38,1],"name":"src/Neon/Types/HasDivide.purs","end":[42,1]}},{"comments":null,"title":"intHasDivide","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Types/HasDivide.purs","end":[46,1]}},{"comments":null,"title":"numberHasDivide","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[46,1],"name":"src/Neon/Types/HasDivide.purs","end":[56,1]}}],"comments":"Represents types that are divisible.\n\nLaws:\n- Remainder: `(x / y) * y + (x % y) = x`\n- Identity: `x / one = x`\n","title":"HasDivide","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[21,1],"name":"src/Neon/Types/HasDivide.purs","end":[38,1]}},{"children":[],"comments":"Alias for `divide`.\n\n``` purescript\n5 / 2\n-- 2\n```\n","title":"(/)","fixity":{"associativity":"infixl","precedence":7},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[56,1],"name":"src/Neon/Types/HasDivide.purs","end":[57,1]}},{"children":[],"comments":"Alias for `modulo`.\n\n``` purescript\n5 % 2\n-- 1\n```\n","title":"(%)","fixity":{"associativity":"infixl","precedence":7},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[66,1],"name":"src/Neon/Types/HasDivide.purs","end":[67,1]}},{"children":[],"comments":"Returns the multiplicative inverse.\n\n``` purescript\nreciprocal 2\n-- 0.5\n```\n","title":"reciprocal","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[76,1],"name":"src/Neon/Types/HasDivide.purs","end":[77,1]}}]},{"name":"Neon.Types.HasFold","comments":null,"declarations":[{"children":[{"comments":null,"title":"foldl","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"foldr","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[44,1],"name":"src/Neon/Types/HasFold.purs","end":[55,1]}}],"comments":"Represents types that can be reduced to a single value. This is also known\nas a [fold](https://en.wikipedia.org/wiki/Fold_(higher-order_function)).\n","title":"HasFold","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[27,1],"name":"src/Neon/Types/HasFold.purs","end":[44,1]}},{"children":[],"comments":"Reduces the container into a value that supports addition and has an\nadditive identity (that is, a monoid).\n\n``` purescript\nfoldMap (+ \"!\") [\"ne\", \"on\"]\n-- \"ne!on!\"\n```\n","title":"foldMap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]],["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[55,1],"name":"src/Neon/Types/HasFold.purs","end":[56,1]}},{"children":[],"comments":"Returns the length of the container.\n\n``` purescript\nlength [1, 2, 3]\n-- 3\n```\n","title":"length","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":"Prim.Int"}]}]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"src/Neon/Types/HasFold.purs","end":[65,1]}},{"children":[],"comments":"Returns `true` if the length of the container is greater than 0,\n`false` otherwise.\n\n``` purescript\nisPresent []\n-- false\nisPresent [1, 2, 3]\n-- true\n```\n","title":"isPresent","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]},null]},null]}},"sourceSpan":{"start":[76,1],"name":"src/Neon/Types/HasFold.purs","end":[77,1]}},{"children":[],"comments":"Returns `true` if the length of the container is 0, `false` otherwise.\n\n``` purescript\nisBlank []\n-- true\nisBlank [1, 2, 3]\n-- false\n```\n","title":"isBlank","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"src/Neon/Types/HasFold.purs","end":[88,1]}},{"children":[],"comments":"Returns `true` if the container contains the given value, `false`\notherwise.\n\n``` purescript\ncontains 1 [0, 1]\n-- true\ncontains 2 [0, 1]\n-- false\n```\n","title":"contains","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]],["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]}]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"src/Neon/Types/HasFold.purs","end":[100,1]}},{"children":[],"comments":"Returns the sum of all the values in the container.\n\n``` purescript\nsum [3, 4, 5]\n-- 12\n```\n","title":"sum","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]],["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"src/Neon/Types/HasFold.purs","end":[109,1]}},{"children":[],"comments":"Returns the product of all the values in the container.\n\n``` purescript\nproduct [3, 4, 5]\n-- 60\n```\n","title":"product","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]],["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[117,1],"name":"src/Neon/Types/HasFold.purs","end":[118,1]}}]},{"name":"Neon.Types.HasPower","comments":null,"declarations":[{"children":[{"comments":null,"title":"power","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"intHasPower","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPower.HasPower"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasPower.purs","end":[31,1]}},{"comments":null,"title":"numberHasPower","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPower.HasPower"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasPower.purs","end":[40,1]}}],"comments":"Represents types that can be exponentiated.\n\nLaws:\n- `(b ^ n) * (b ^ m) = b ^ (n + m)`\n- `(b ^ n) ^ m = b ^ (n * m)`\n- `(b * y) ^ n = (b ^ n) * (y ^ n)`\n","title":"HasPower","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[18,1],"name":"src/Neon/Types/HasPower.purs","end":[28,1]}},{"children":[],"comments":"Alias for `power`.\n\n``` purescript\n2 ^ 3\n-- 8\n```\n","title":"(^)","fixity":{"associativity":"infixr","precedence":8},"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasPower.HasPower",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Neon/Types/HasPower.purs","end":[41,1]}}]},{"name":"Neon.Types.HasLogarithm","comments":null,"declarations":[{"children":[{"comments":null,"title":"logarithm","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"intHasLogarithm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasLogarithm.HasLogarithm"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Types/HasLogarithm.purs","end":[30,1]}},{"comments":null,"title":"numberHasLogarithm","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasLogarithm.HasLogarithm"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Types/HasLogarithm.purs","end":[31,43]}}],"comments":"Represents types that support logarithms.\n\nLaws:\n- `logarithm b (x * y) = logarithm b x + logarithm b y`\n- `logarithm b (x / y) = logarithm b x - logarithm b y`\n- `logarithm b (x ^ y) = y * logarithm b x`\n","title":"HasLogarithm","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasPower.HasPower",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[18,1],"name":"src/Neon/Types/HasLogarithm.purs","end":[27,1]}}]},{"name":"Neon.Types.HasRoot","comments":null,"declarations":[{"children":[{"comments":null,"title":"root","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"intHasRoot","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasRoot.HasRoot"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[25,1],"name":"src/Neon/Types/HasRoot.purs","end":[28,1]}},{"comments":null,"title":"numberHasRoot","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasRoot.HasRoot"},{"tag":"TypeConstructor","contents":"Prim.Number"}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasRoot.purs","end":[29,33]}}],"comments":"Represents types that support roots.\n\nLaws:\n- `root n x = x ^ (1 / n)`\n","title":"HasRoot","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasPower.HasPower",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[16,1],"name":"src/Neon/Types/HasRoot.purs","end":[25,1]}}]},{"name":"Neon.Values.Unit","comments":null,"declarations":[{"children":[{"comments":null,"title":"unitHasAdd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[26,1],"name":"src/Neon/Values/Unit.purs","end":[29,1]}},{"comments":null,"title":"unitHasAnd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[29,1],"name":"src/Neon/Values/Unit.purs","end":[32,1]}},{"comments":null,"title":"unitHasBottom","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Values/Unit.purs","end":[35,1]}},{"comments":null,"title":"unitHasCompare","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[35,1],"name":"src/Neon/Values/Unit.purs","end":[38,1]}},{"comments":null,"title":"unitHasDivide","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[38,1],"name":"src/Neon/Values/Unit.purs","end":[42,1]}},{"comments":null,"title":"unitHasEqual","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Values/Unit.purs","end":[45,1]}},{"comments":null,"title":"unitHasMultiply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Values/Unit.purs","end":[48,1]}},{"comments":null,"title":"unitHasNot","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[48,1],"name":"src/Neon/Values/Unit.purs","end":[51,1]}},{"comments":null,"title":"unitHasOne","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[51,1],"name":"src/Neon/Values/Unit.purs","end":[54,1]}},{"comments":null,"title":"unitHasOr","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[54,1],"name":"src/Neon/Values/Unit.purs","end":[57,1]}},{"comments":null,"title":"unitHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[57,1],"name":"src/Neon/Values/Unit.purs","end":[60,1]}},{"comments":null,"title":"unitHasSubtract","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[60,1],"name":"src/Neon/Values/Unit.purs","end":[63,1]}},{"comments":null,"title":"unitHasTop","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[63,1],"name":"src/Neon/Values/Unit.purs","end":[66,1]}},{"comments":null,"title":"unitHasZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[66,1],"name":"src/Neon/Values/Unit.purs","end":[70,1]}}],"comments":"Represents nothing. The unit type is often used to show that only the\neffects of a given function are important.\n","title":"Unit","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"src/Neon/Values/Unit.purs","end":[26,1]}},{"children":[],"comments":"The only inhabitant of the `Unit` type.\n","title":"unit","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}},"sourceSpan":{"start":[70,1],"name":"src/Neon/Values/Unit.purs","end":[71,1]}}]},{"name":"Neon.Types.HasMap","comments":null,"declarations":[{"children":[{"comments":null,"title":"map","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Types/HasMap.purs","end":[35,1]}},{"comments":null,"title":"functionHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[35,1],"name":"src/Neon/Types/HasMap.purs","end":[44,1]}}],"comments":"Represents types that can be mapped over. This is also know as a\n[functor](https://en.wikipedia.org/wiki/Functor).\n\nLaws:\n- Identity: `map identity = identity`\n- Composition: `map (f >> g) = map f >> map g`\n","title":"HasMap","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[23,1],"name":"src/Neon/Types/HasMap.purs","end":[32,1]}},{"children":[],"comments":"Alias for `map`.\n\n``` purescript\n(+ 1) <$> [1, 2, 3]\n-- [2, 3, 4]\n```\n","title":"(<$>)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"src/Neon/Types/HasMap.purs","end":[45,1]}},{"children":[],"comments":"Replaces all values in the container with the given value.\n\n``` purescript\n[1, 2, 3] $> true\n-- [true, true, true]\n```\n","title":"($>)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"src/Neon/Types/HasMap.purs","end":[55,1]}},{"children":[],"comments":"`($>)` with the arguments flipped.\n\n``` purescript\ntrue <$ [1, 2, 3]\n-- [true, true, true]\n```\n","title":"(<$)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"src/Neon/Types/HasMap.purs","end":[65,1]}},{"children":[],"comments":"Discards the result. This is useful for `Effect`s.\n\n``` purescript\nvoid [1, 2, 3]\n-- [unit, unit, unit]\n```\n","title":"void","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]}]},null]},null]}},"sourceSpan":{"start":[74,1],"name":"src/Neon/Types/HasMap.purs","end":[75,1]}},{"children":[],"comments":"`map` with the arguments flipped.\n\n``` purescript\nfor [1, 2, 3] (+ 1)\n-- [2, 3, 4]\n```\n","title":"for","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"src/Neon/Types/HasMap.purs","end":[84,1]}}]},{"name":"Neon.Types.HasAlternative","comments":null,"declarations":[{"children":[{"comments":null,"title":"alternative","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasAlternative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAlternative.HasAlternative"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[25,1],"name":"src/Neon/Types/HasAlternative.purs","end":[26,28]}}],"comments":"Represents types that can express alternatives. This is like `HasAdd` but\nfor types of kind `* -> *` instead of `*`.\n\nLaws:\n- Associativity: `alternative (alternative x y) z == alternative x (alternative y z)`\n- Distributivity: `f <$> (alternative x y) == alternative (f <$> x) (f <$> y)`\n","title":"HasAlternative","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[15,1],"name":"src/Neon/Types/HasAlternative.purs","end":[25,1]}}]},{"name":"Neon.Types.HasApply","comments":null,"declarations":[{"children":[{"comments":null,"title":"apply","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Types/HasApply.purs","end":[33,1]}},{"comments":null,"title":"functionHasApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[33,1],"name":"src/Neon/Types/HasApply.purs","end":[42,1]}}],"comments":"Represents types that can be applied from within a container. In other\nwords, given both a function and a value in a container, apply the\nfunction to the value and return the result in a container. This is also\nknown as an applicative functor.\n\nLaws:\n- Associative composition: `(<<) <$> f <*> g <*> h = f <*> (g <*> h)`\n","title":"HasApply","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[21,1],"name":"src/Neon/Types/HasApply.purs","end":[30,1]}},{"children":[],"comments":"Alias for `apply`.\n\n``` purescript\n[(+ 2), (* 2)] <*> [3, 4]\n-- [5, 6, 6, 8]\n```\n","title":"(<*>)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasApply.HasApply",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Types/HasApply.purs","end":[43,1]}},{"children":[],"comments":"Returns the second value but also evaluates the first.\n\n``` purescript\n[1] *> [2]\n-- [2]\n```\n","title":"(*>)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasApply.HasApply",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"src/Neon/Types/HasApply.purs","end":[53,1]}},{"children":[],"comments":"Returns the first value but also evaluates the second.\n\n``` purescript\n[1] <* [2]\n-- [1]\n```\n","title":"(<*)","fixity":{"associativity":"infixl","precedence":4},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasApply.HasApply",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"src/Neon/Types/HasApply.purs","end":[63,1]}}]},{"name":"Neon.Values.List","comments":null,"declarations":[{"children":[{"comments":null,"title":"Nil","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cons","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.List.List"},{"tag":"TypeVar","contents":"a"}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"listHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.List.List"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[19,1],"name":"src/Neon/Values/List.purs","end":[24,1]}},{"comments":null,"title":"listHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeConstructor","contents":"Neon.Values.List.List"}]}},"sourceSpan":{"start":[24,1],"name":"src/Neon/Values/List.purs","end":[32,1]}},{"comments":null,"title":"listHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeConstructor","contents":"Neon.Values.List.List"}]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Values/List.purs","end":[37,1]}},{"comments":null,"title":"listHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.List.List"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[37,1],"name":"src/Neon/Values/List.purs","end":[42,1]}},{"comments":null,"title":"listHasToArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasToArray.HasToArray"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.List.List"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Values/List.purs","end":[51,1]}}],"comments":"Represents a linked list of values.\n","title":"List","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[15,1],"name":"src/Neon/Values/List.purs","end":[19,1]}},{"children":[],"comments":"Converts a foldable container into a list.\n\n``` purescript\ntoList [1, 2]\n-- Cons 1 (Cons 2 Nil)\n```\n","title":"toList","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.List.List"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[51,1],"name":"src/Neon/Values/List.purs","end":[52,1]}}]},{"name":"Neon.Types.HasPure","comments":null,"declarations":[{"children":[{"comments":null,"title":"pure","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasPure","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasPure.purs","end":[34,1]}},{"comments":null,"title":"functionHasPure","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[34,1],"name":"src/Neon/Types/HasPure.purs","end":[46,1]}}],"comments":"Represents types that allow injecting values into a container.\n\nLaws:\n- Identity: `(pure id) <*> v = v`\n- Composition: `(pure <<) <*> f <*> g <*> h = f <*> (g <*> h)`\n- Homomorphism: `(pure f) <*> (pure x) = pure (f x)`\n- Interchange: `u <*> (pure y) = (pure (\\ f -> f y)) <*> u`\n","title":"HasPure","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasApply.HasApply",[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[20,1],"name":"src/Neon/Types/HasPure.purs","end":[31,1]}},{"children":[],"comments":"If the condition is `true`, returns the value. Otherwise returns\n`pure unit`.\n\n``` purescript\nwhen false [unit, unit]\n-- [unit]\nwhen true [unit, unit]\n-- [unit, unit]\n```\n","title":"when","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]}]}]},null]}},"sourceSpan":{"start":[46,1],"name":"src/Neon/Types/HasPure.purs","end":[47,1]}},{"children":[],"comments":"If the condition is `false`, returns the value. Otherwise returns\n`pure unit`.\n\n``` purescript\nunless true [unit, unit]\n-- [unit]\nunless false [unit, unit]\n-- [unit, unit]\n```\n","title":"unless","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]}]}]},null]}},"sourceSpan":{"start":[58,1],"name":"src/Neon/Types/HasPure.purs","end":[59,1]}}]},{"name":"Neon.Types.HasBind","comments":null,"declarations":[{"children":[{"comments":null,"title":"bind","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Types/HasBind.purs","end":[31,1]}},{"comments":null,"title":"functionHasbind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/HasBind.purs","end":[40,1]}}],"comments":"Represents types that can express sequential actions. This is also known\nas a [monad](https://en.wikipedia.org/wiki/Monad_(functional_programming)).\n\nLaws:\n- Associativity: `(x >>= f) >>= g = x >>= (\\ k => f k >>= g)`\n","title":"HasBind","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[19,1],"name":"src/Neon/Types/HasBind.purs","end":[28,1]}},{"children":[],"comments":"Alias for `bind`.\n\n``` purescript\n[1, 2] >>= \\ x -> [x, x]\n-- [1, 1, 2, 2]\n```\n","title":"(>>=)","fixity":{"associativity":"infixl","precedence":1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Neon/Types/HasBind.purs","end":[41,1]}},{"children":[],"comments":"`(>>=)` with the arguments reversed.\n\n``` purescript\n(\\ x -> [x, x]) =<< [1, 2]\n-- [1, 1, 2, 2]\n```\n","title":"(=<<)","fixity":{"associativity":"infixr","precedence":1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[50,1],"name":"src/Neon/Types/HasBind.purs","end":[51,1]}},{"children":[],"comments":"Collapses two wrappers into one.\n\n``` purescript\njoin [[1, 2], [3, 4]]\n-- [1, 2, 3, 4]\n```\n","title":"join","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[60,1],"name":"src/Neon/Types/HasBind.purs","end":[61,1]}}]},{"name":"Neon.Types.HasLift","comments":null,"declarations":[{"children":[{"comments":null,"title":"lift","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":null}],"comments":"Represents types that support being lifted into a stack of\n[monad transformers](https://en.wikipedia.org/wiki/Monad_transformer).\n\nLaws:\n- `lift (pure x) = pure x`\n- `lift (m >>= \\ x -> y) = lift m >>= \\ x -> lift y`\n","title":"HasLift","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[14,1],"name":"src/Neon/Types/HasLift.purs","end":[21,49]}}]},{"name":"Neon.Types.HasEmpty","comments":null,"declarations":[{"children":[{"comments":null,"title":"empty","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasEmpty","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEmpty.HasEmpty"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Types/HasEmpty.purs","end":[39,1]}}],"comments":"Represents types that can be empty. This is like `HasZero` but for types\nof kind `* -> *` instead of `*`.\n\nLaws:\n- Left identity: `alternative empty x == x`\n- Right identity: `alternative x empty == x`\n- Annihilation: `f <$> empty == empty`\n","title":"HasEmpty","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasAlternative.HasAlternative",[{"tag":"TypeVar","contents":"f"}]]]},"sourceSpan":{"start":[18,1],"name":"src/Neon/Types/HasEmpty.purs","end":[27,1]}},{"children":[],"comments":"If the condition is `false`, returns `empty`. Otherwise returns\n`pure unit`. This is useful for stopping some action part-way through.\n\n``` purescript\nguard false\n-- []\nguard true\n-- [unit]\n```\n","title":"guard","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasEmpty.HasEmpty",[{"tag":"TypeVar","contents":"f"}]],["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]}]},null]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Types/HasEmpty.purs","end":[40,1]}}]},{"name":"Neon.Values.Pair","comments":null,"declarations":[{"children":[{"comments":null,"title":"Pair","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Object"},{"tag":"RCons","contents":["first",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["second",{"tag":"TypeVar","contents":"b"},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"pairHasAdd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Values/Pair.purs","end":[39,1]}},{"comments":null,"title":"pairHasAnd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Values/Pair.purs","end":[42,1]}},{"comments":null,"title":"pairHasApply","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Values/Pair.purs","end":[45,1]}},{"comments":null,"title":"pairHasBind","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Values/Pair.purs","end":[49,1]}},{"comments":null,"title":"pairHasBottom","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[49,1],"name":"src/Neon/Values/Pair.purs","end":[52,1]}},{"comments":null,"title":"pairHasCompare","info":{"declType":"instance","dependencies":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[52,1],"name":"src/Neon/Values/Pair.purs","end":[57,1]}},{"comments":null,"title":"pairHasCompose","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompose.HasCompose"},{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"}]}},"sourceSpan":{"start":[57,1],"name":"src/Neon/Values/Pair.purs","end":[60,1]}},{"comments":null,"title":"pairHasDivide","info":{"declType":"instance","dependencies":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[60,1],"name":"src/Neon/Values/Pair.purs","end":[64,1]}},{"comments":null,"title":"pairHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Neon/Values/Pair.purs","end":[67,1]}},{"comments":null,"title":"pairHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"x"}]}]}},"sourceSpan":{"start":[67,1],"name":"src/Neon/Values/Pair.purs","end":[71,1]}},{"comments":null,"title":"pairHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[71,1],"name":"src/Neon/Values/Pair.purs","end":[74,1]}},{"comments":null,"title":"pairHasMultiply","info":{"declType":"instance","dependencies":[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[74,1],"name":"src/Neon/Values/Pair.purs","end":[77,1]}},{"comments":null,"title":"pairHasNot","info":{"declType":"instance","dependencies":[["Neon.Types.HasNot.HasNot",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasNot.HasNot",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[77,1],"name":"src/Neon/Values/Pair.purs","end":[80,1]}},{"comments":null,"title":"pairHasOne","info":{"declType":"instance","dependencies":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[80,1],"name":"src/Neon/Values/Pair.purs","end":[83,1]}},{"comments":null,"title":"pairHasOr","info":{"declType":"instance","dependencies":[["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[83,1],"name":"src/Neon/Values/Pair.purs","end":[86,1]}},{"comments":null,"title":"pairHasPure","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[86,1],"name":"src/Neon/Values/Pair.purs","end":[89,1]}},{"comments":null,"title":"pairHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[89,1],"name":"src/Neon/Values/Pair.purs","end":[96,1]}},{"comments":null,"title":"pairHasSubtract","info":{"declType":"instance","dependencies":[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[96,1],"name":"src/Neon/Values/Pair.purs","end":[99,1]}},{"comments":null,"title":"pairHasTop","info":{"declType":"instance","dependencies":[["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[99,1],"name":"src/Neon/Values/Pair.purs","end":[102,1]}},{"comments":null,"title":"pairHasZero","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[102,1],"name":"src/Neon/Values/Pair.purs","end":[112,1]}}],"comments":"Represents a pair of values. That is, a pair contains both values at the\nsame time, unlike `Either` which only has one. Pairs are also known as\ntuples.\n","title":"Pair","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[34,1],"name":"src/Neon/Values/Pair.purs","end":[36,1]}},{"children":[],"comments":"Creates a pair. This is useful to avoid the `Pair` constructor and record\nboilerplate.\n\n``` purescript\npair 'x' 1 == Pair { first: 'x', second: 1 }\n-- true\n```\n","title":"pair","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[112,1],"name":"src/Neon/Values/Pair.purs","end":[113,1]}},{"children":[],"comments":"Converts a function that takes a pair into one that takes two arguments.\n\n``` purescript\nlet f (Pair x) = x.first + x.second\nuncurry f \"race\" \"car\"\n-- \"racecar\"\n```\n","title":"curry","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[122,1],"name":"src/Neon/Values/Pair.purs","end":[123,1]}},{"children":[],"comments":"Converts a function that takes two arguments into one that takes a pair.\n\n``` purescript\ncurry (+) (pair \"race\" \"car\")\n-- \"racecar\"\n```\n","title":"uncurry","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]},null]},null]},null]}},"sourceSpan":{"start":[131,1],"name":"src/Neon/Values/Pair.purs","end":[132,1]}},{"children":[],"comments":"Swaps the elements of the pair.\n\n``` purescript\nswap (pair 1 2)\n-- pair 2 1\n```\n","title":"swap","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[140,1],"name":"src/Neon/Values/Pair.purs","end":[141,1]}}]},{"name":"Neon.Values.Dictionary","comments":null,"declarations":[{"children":[{"comments":null,"title":"dictionaryHasAdd","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Values/Dictionary.purs","end":[33,1]}},{"comments":null,"title":"dictionaryHasAlternative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAlternative.HasAlternative"},{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"}]}},"sourceSpan":{"start":[33,1],"name":"src/Neon/Values/Dictionary.purs","end":[36,1]}},{"comments":null,"title":"dictionaryHasApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Values/Dictionary.purs","end":[39,1]}},{"comments":null,"title":"dictionaryHasEmpty","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEmpty.HasEmpty"},{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Values/Dictionary.purs","end":[42,1]}},{"comments":null,"title":"dictionaryHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Values/Dictionary.purs","end":[45,1]}},{"comments":null,"title":"dictionaryHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Values/Dictionary.purs","end":[49,1]}},{"comments":null,"title":"dictionaryHasFromArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFromArray.HasFromArray"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[49,1],"name":"src/Neon/Values/Dictionary.purs","end":[52,1]}},{"comments":null,"title":"dictionaryHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"}]}},"sourceSpan":{"start":[52,1],"name":"src/Neon/Values/Dictionary.purs","end":[55,1]}},{"comments":null,"title":"dictionaryHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[55,1],"name":"src/Neon/Values/Dictionary.purs","end":[58,1]}},{"comments":null,"title":"dictionaryHasZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Dictionary.Dictionary"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[58,1],"name":"src/Neon/Values/Dictionary.purs","end":[59,10]}}],"comments":"Represents a mapping between strings and values.\n","title":"Dictionary","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[18,1],"name":"src/Neon/Values/Dictionary.purs","end":[20,1]}}]},{"name":"Neon.Values.These","comments":null,"declarations":[{"children":[{"comments":null,"title":"This","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"That","info":{"arguments":[{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Both","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"theseHasAdd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[27,1],"name":"src/Neon/Values/These.purs","end":[38,1]}},{"comments":null,"title":"theseHasApply","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[38,1],"name":"src/Neon/Values/These.purs","end":[47,1]}},{"comments":null,"title":"theseHasBind","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[47,1],"name":"src/Neon/Values/These.purs","end":[56,1]}},{"comments":null,"title":"theseHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[56,1],"name":"src/Neon/Values/These.purs","end":[62,1]}},{"comments":null,"title":"theseHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[62,1],"name":"src/Neon/Values/These.purs","end":[72,1]}},{"comments":null,"title":"theseHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[72,1],"name":"src/Neon/Values/These.purs","end":[78,1]}},{"comments":null,"title":"theseHasPure","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[78,1],"name":"src/Neon/Values/These.purs","end":[81,1]}},{"comments":null,"title":"theseHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[81,1],"name":"src/Neon/Values/These.purs","end":[98,1]}}],"comments":"Represents either one value or another, or both. This is different than\n`Either`, which only represents one or the other. And `Pair` only\nrepresents both values.\n","title":"These","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[22,1],"name":"src/Neon/Values/These.purs","end":[27,1]}},{"children":[],"comments":"Applies the first function to `This` values, the second function to `That`\nvalues, and the third function to `Both` values.\n\n``` purescript\nthese (+ 2) (* 2) (+) (This 3)\n-- 5\nthese (+ 2) (* 2) (+) (That 3)\n-- 6\nthese (+ 2) (* 2) (+) (Both 3 4)\n-- 7\n```\n","title":"these","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[98,1],"name":"src/Neon/Values/These.purs","end":[99,1]}},{"children":[],"comments":"Returns `true` if the `These` is a `This` value. Returns `false`\notherwise.\n\n``` purescript\nisThis (This unit)\n-- true\n```\n","title":"isThis","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"src/Neon/Values/These.purs","end":[112,1]}},{"children":[],"comments":"Returns `true` if the `These` is a `That` value. Returns `false`\notherwise.\n\n``` purescript\nisThat (That unit)\n-- true\n```\n","title":"isThat","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]},null]}},"sourceSpan":{"start":[123,1],"name":"src/Neon/Values/These.purs","end":[124,1]}},{"children":[],"comments":"Returns `true` if the `These` is a `Both` value. Returns `false`\notherwise.\n\n``` purescript\nisBith (Both unit unit)\n-- true\n```\n","title":"isBoth","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.These.These"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"src/Neon/Values/These.purs","end":[136,1]}}]},{"name":"Neon.Types.HasState","comments":null,"declarations":[{"children":[{"comments":null,"title":"state","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null}],"comments":"Represents monads that contain \"mutable\" state.\n\nLaws:\n- `do { getState ; getState } = getState`\n- `do { setState x ; setState y } = setState y`\n- `do { setState x ; getState } = setState x $> x`\n- `do { s <- getState ; setState s } = pure unit`\n","title":"HasState","fixity":null,"info":{"arguments":[["s",null],["m",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[20,1],"name":"src/Neon/Types/HasState.purs","end":[35,1]}},{"children":[],"comments":"Gets the state.\n\n``` purescript\nrunStateT getState 1\n-- Identity (pair 1 1)\n```\n","title":"getState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasState.HasState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"src/Neon/Types/HasState.purs","end":[36,1]}},{"children":[],"comments":"Sets the state.\n\n``` purescript\nrunStateT (setState 2) 1\n-- Identity (pair unit 2)\n```\n","title":"setState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasState.HasState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]}]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"src/Neon/Types/HasState.purs","end":[45,1]}}]},{"name":"Neon.Transformers.StateT","comments":null,"declarations":[{"children":[{"comments":null,"title":"StateT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"stateTHasAlternative","info":{"declType":"instance","dependencies":[["Neon.Types.HasAlternative.HasAlternative",[{"tag":"TypeVar","contents":"m"}]],["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAlternative.HasAlternative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[21,1],"name":"src/Neon/Transformers/StateT.purs","end":[25,1]}},{"comments":null,"title":"stateTHasApply","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[25,1],"name":"src/Neon/Transformers/StateT.purs","end":[31,1]}},{"comments":null,"title":"stateTHasBind","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Transformers/StateT.purs","end":[36,1]}},{"comments":null,"title":"stateTHasEmpty","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]],["Neon.Types.HasEmpty.HasEmpty",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEmpty.HasEmpty"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Transformers/StateT.purs","end":[39,1]}},{"comments":null,"title":"stateTHasLift","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasLift.HasLift"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Transformers/StateT.purs","end":[42,1]}},{"comments":null,"title":"stateTHasMap","info":{"declType":"instance","dependencies":[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Transformers/StateT.purs","end":[47,1]}},{"comments":null,"title":"stateTHasPure","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[47,1],"name":"src/Neon/Transformers/StateT.purs","end":[50,1]}},{"comments":null,"title":"stateTHasState","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasState.HasState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Neon/Transformers/StateT.purs","end":[61,1]}}],"comments":"The \"state\" monad transformer. Extends any monad with state via the `Pair`\ntype.\n","title":"StateT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["m",null],["a",null]]},"sourceSpan":{"start":[19,1],"name":"src/Neon/Transformers/StateT.purs","end":[21,1]}},{"children":[],"comments":"Runs a \"state\" monad transformer, returning the stateful value and the\nresult in the wrapped monad.\n\n``` purescript\nflip runStateT \"world\"\" do\n  pure \"hello\"\n-- Identity (pair \"hello\" \"world\")\n```\n","title":"runStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.StateT.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Pair.Pair"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Transformers/StateT.purs","end":[62,1]}}]},{"name":"Neon.Values.Maybe","comments":null,"declarations":[{"children":[{"comments":null,"title":"Nothing","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Just","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"maybeHasAdd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[40,1],"name":"src/Neon/Values/Maybe.purs","end":[43,1]}},{"comments":null,"title":"maybeHasAlternative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAlternative.HasAlternative"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[43,1],"name":"src/Neon/Values/Maybe.purs","end":[47,1]}},{"comments":null,"title":"maybeHasAnd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[47,1],"name":"src/Neon/Values/Maybe.purs","end":[50,1]}},{"comments":null,"title":"maybeHasApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[50,1],"name":"src/Neon/Values/Maybe.purs","end":[54,1]}},{"comments":null,"title":"maybeHasBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[54,1],"name":"src/Neon/Values/Maybe.purs","end":[58,1]}},{"comments":null,"title":"maybeHasBottom","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[58,1],"name":"src/Neon/Values/Maybe.purs","end":[61,1]}},{"comments":null,"title":"maybeHasCompare","info":{"declType":"instance","dependencies":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Values/Maybe.purs","end":[67,1]}},{"comments":null,"title":"maybeHasDivide","info":{"declType":"instance","dependencies":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[67,1],"name":"src/Neon/Values/Maybe.purs","end":[71,1]}},{"comments":null,"title":"maybeHasEmpty","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEmpty.HasEmpty"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[71,1],"name":"src/Neon/Values/Maybe.purs","end":[74,1]}},{"comments":null,"title":"maybeHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[74,1],"name":"src/Neon/Values/Maybe.purs","end":[79,1]}},{"comments":null,"title":"maybeHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[79,1],"name":"src/Neon/Values/Maybe.purs","end":[87,1]}},{"comments":null,"title":"maybeHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[87,1],"name":"src/Neon/Values/Maybe.purs","end":[91,1]}},{"comments":null,"title":"maybeHasMultiply","info":{"declType":"instance","dependencies":[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[91,1],"name":"src/Neon/Values/Maybe.purs","end":[94,1]}},{"comments":null,"title":"maybeHasNot","info":{"declType":"instance","dependencies":[["Neon.Types.HasNot.HasNot",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[94,1],"name":"src/Neon/Values/Maybe.purs","end":[97,1]}},{"comments":null,"title":"maybeHasOne","info":{"declType":"instance","dependencies":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[97,1],"name":"src/Neon/Values/Maybe.purs","end":[100,1]}},{"comments":null,"title":"maybeHasOr","info":{"declType":"instance","dependencies":[["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[100,1],"name":"src/Neon/Values/Maybe.purs","end":[103,1]}},{"comments":null,"title":"maybeHasPure","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[103,1],"name":"src/Neon/Values/Maybe.purs","end":[106,1]}},{"comments":null,"title":"maybeHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[106,1],"name":"src/Neon/Values/Maybe.purs","end":[110,1]}},{"comments":null,"title":"maybeHasSubtract","info":{"declType":"instance","dependencies":[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[110,1],"name":"src/Neon/Values/Maybe.purs","end":[113,1]}},{"comments":null,"title":"maybeHasTop","info":{"declType":"instance","dependencies":[["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[113,1],"name":"src/Neon/Values/Maybe.purs","end":[116,1]}},{"comments":null,"title":"maybeHasZero","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[116,1],"name":"src/Neon/Values/Maybe.purs","end":[128,1]}}],"comments":"Represents an optional value. This is similar to `null` in other\nlanguages, where `Nothing` is `null` and `Just x` is `x`.\n","title":"Maybe","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[36,1],"name":"src/Neon/Values/Maybe.purs","end":[40,1]}},{"children":[],"comments":"Returns the default value if the `Maybe` is `Nothing`. If instead the\n`Maybe` is `Just x`, call the function with `x`.\n\n``` purescript\nmaybe 0 (+ 1) Nothing\n-- 0\nmaybe 0 (+ 1) (Just 2)\n-- 3\n```\n","title":"maybe","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[128,1],"name":"src/Neon/Values/Maybe.purs","end":[129,1]}},{"children":[],"comments":"Returns `true` if the `Maybe` is `Just x`. Returns `false` otherwise.\n\n``` purescript\nisJust (Just 1)\n-- true\nisJust Nothing\n-- false\n```\n","title":"isJust","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]}},"sourceSpan":{"start":[141,1],"name":"src/Neon/Values/Maybe.purs","end":[142,1]}},{"children":[],"comments":"Returns `true` if the `Maybe` is `Nothing`. Returns `false` otherwise.\n\n``` purescript\nisNothing Nothing\n-- true\nisNothing (Just 1)\n-- false\n```\n","title":"isNothing","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]}},"sourceSpan":{"start":[152,1],"name":"src/Neon/Values/Maybe.purs","end":[153,1]}},{"children":[],"comments":"Returns the default value if the `Maybe` is `Nothing`. If instead the\n`Maybe` is `Just x`, return `x`.\n\n``` purescript\nwithDefault 0 Nothing\n-- 0\nwithDefault 0 (Just 2)\n-- 2\n```\n","title":"withDefault","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[164,1],"name":"src/Neon/Values/Maybe.purs","end":[165,1]}}]},{"name":"Neon.Transformers.MaybeT","comments":null,"declarations":[{"children":[{"comments":null,"title":"MaybeT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"maybeTHasAlternative","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAlternative.HasAlternative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[20,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[24,1]}},{"comments":null,"title":"maybeTHasApply","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[24,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[30,1]}},{"comments":null,"title":"maybeTHasBind","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[37,1]}},{"comments":null,"title":"maybeTHasEmpty","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEmpty.HasEmpty"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[37,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[40,1]}},{"comments":null,"title":"maybeTHasLift","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasLift.HasLift"},{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"}]}},"sourceSpan":{"start":[40,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[43,1]}},{"comments":null,"title":"maybeTHasMap","info":{"declType":"instance","dependencies":[["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[43,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[47,1]}},{"comments":null,"title":"maybeTHasPure","info":{"declType":"instance","dependencies":[["Neon.Types.HasBind.HasBind",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[47,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[60,1]}}],"comments":"The \"maybe\" monad transformer. Extends any monad with failure via the\n`Maybe` type.\n","title":"MaybeT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["m",null],["a",null]]},"sourceSpan":{"start":[18,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[20,1]}},{"children":[],"comments":"Runs a \"maybe\" monad transformer, returning the `Maybe` value in the\nwrapped monad.\n\n``` purescript\nrunMaybeT do\n  Just 1\n  Nothing\n  Just 1\n-- Identity Nothing\n```\n","title":"runMaybeT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Transformers.MaybeT.MaybeT"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[60,1],"name":"src/Neon/Transformers/MaybeT.purs","end":[61,1]}}]},{"name":"Neon.Transformers","comments":null,"declarations":[]},{"name":"Neon.Types.HasTraverse","comments":null,"declarations":[{"children":[{"comments":null,"title":"traverse","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":null},{"comments":null,"title":"arrayHasTraverse","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTraverse.HasTraverse"},{"tag":"TypeConstructor","contents":"Prim.Array"}]}},"sourceSpan":{"start":[34,1],"name":"src/Neon/Types/HasTraverse.purs","end":[37,1]}},{"comments":null,"title":"listHasTraverse","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTraverse.HasTraverse"},{"tag":"TypeConstructor","contents":"Neon.Values.List.List"}]}},"sourceSpan":{"start":[37,1],"name":"src/Neon/Types/HasTraverse.purs","end":[42,1]}},{"comments":null,"title":"maybeHasTraverse","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTraverse.HasTraverse"},{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Types/HasTraverse.purs","end":[53,1]}}],"comments":"Represents data structures that can be traversed from left to right.\nUnlike `HasFold`, these structures can be traversed while keeping their\nshape.\n\nLaws:\n- Naturality: `t >> traverse f = traverse (t >> f)`\n- Identity: `traverse Identity = Identity`\n- Composition: TODO\n","title":"HasTraverse","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasFold.HasFold",[{"tag":"TypeVar","contents":"t"}]],["Neon.Types.HasMap.HasMap",[{"tag":"TypeVar","contents":"t"}]]]},"sourceSpan":{"start":[24,1],"name":"src/Neon/Types/HasTraverse.purs","end":[34,1]}},{"children":[],"comments":"Evaluates actions from left to right and collects the results.\n\n``` purescript\nsequence [Just 1, Just 2]\n-- Just [1, 2]\n```\n","title":"sequence","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"m"}]],["Neon.Types.HasTraverse.HasTraverse",[{"tag":"TypeVar","contents":"t"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"src/Neon/Types/HasTraverse.purs","end":[54,1]}}]},{"name":"Neon.Types.IsEnumerable","comments":null,"declarations":[{"children":[{"comments":null,"title":"fromEnum","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":null},{"comments":null,"title":"toEnum","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Int"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"succ","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"pred","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"booleanIsEnumerable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}},"sourceSpan":{"start":[72,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[87,1]}},{"comments":null,"title":"charIsEnumerable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[87,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[95,1]}},{"comments":null,"title":"intIsEnumerable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeConstructor","contents":"Prim.Int"}]}},"sourceSpan":{"start":[95,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[101,1]}},{"comments":null,"title":"maybeIsEnumerable","info":{"declType":"instance","dependencies":[["Neon.Types.IsEnumerable.IsEnumerable",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[101,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[119,1]}},{"comments":null,"title":"orderingIsEnumerable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeConstructor","contents":"Neon.Values.Ordering.Ordering"}]}},"sourceSpan":{"start":[119,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[138,1]}},{"comments":null,"title":"unitIsEnumerable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}},"sourceSpan":{"start":[138,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[150,1]}}],"comments":"Represents types that can be converted to and from integers.\n\nLaws:\n- `pred bottom = Nothing`\n- `succ top = Nothing`\n- `toEnum (fromEnum x) = Just x`\n- `compare x y = compare (fromEnum x) (fromEnum y)`\n","title":"IsEnumerable","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeClass","superclasses":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]]]},"sourceSpan":{"start":[31,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[72,1]}},{"children":[],"comments":"Returns a range of values.\n\n``` purescript\nrange 1 4\n-- [1, 2, 3, 4]\n```\n","title":"range","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.IsEnumerable.IsEnumerable",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Array"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[150,1],"name":"src/Neon/Types/IsEnumerable.purs","end":[151,1]}}]},{"name":"Neon.Types","comments":null,"declarations":[]},{"name":"Neon.Values.Constant","comments":null,"declarations":[{"children":[{"comments":null,"title":"Constant","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"constantHasAdd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[33,1],"name":"src/Neon/Values/Constant.purs","end":[36,1]}},{"comments":null,"title":"constantHasAlternative","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAlternative.HasAlternative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[36,1],"name":"src/Neon/Values/Constant.purs","end":[39,1]}},{"comments":null,"title":"constantHasAnd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Values/Constant.purs","end":[42,1]}},{"comments":null,"title":"constantHasApply","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Values/Constant.purs","end":[45,1]}},{"comments":null,"title":"constantHasBind","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Values/Constant.purs","end":[48,1]}},{"comments":null,"title":"constantHasBottom","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[48,1],"name":"src/Neon/Values/Constant.purs","end":[51,1]}},{"comments":null,"title":"constantHasCompare","info":{"declType":"instance","dependencies":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[51,1],"name":"src/Neon/Values/Constant.purs","end":[54,1]}},{"comments":null,"title":"constantHasDivide","info":{"declType":"instance","dependencies":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[54,1],"name":"src/Neon/Values/Constant.purs","end":[58,1]}},{"comments":null,"title":"constantHasEmpty","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEmpty.HasEmpty"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[58,1],"name":"src/Neon/Values/Constant.purs","end":[61,1]}},{"comments":null,"title":"constantHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Values/Constant.purs","end":[64,1]}},{"comments":null,"title":"constantHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Neon/Values/Constant.purs","end":[68,1]}},{"comments":null,"title":"constantHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[68,1],"name":"src/Neon/Values/Constant.purs","end":[71,1]}},{"comments":null,"title":"constantHasMultiply","info":{"declType":"instance","dependencies":[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[71,1],"name":"src/Neon/Values/Constant.purs","end":[74,1]}},{"comments":null,"title":"constantHasNot","info":{"declType":"instance","dependencies":[["Neon.Types.HasNot.HasNot",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[74,1],"name":"src/Neon/Values/Constant.purs","end":[77,1]}},{"comments":null,"title":"constantHasOne","info":{"declType":"instance","dependencies":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[77,1],"name":"src/Neon/Values/Constant.purs","end":[80,1]}},{"comments":null,"title":"constantHasOr","info":{"declType":"instance","dependencies":[["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[80,1],"name":"src/Neon/Values/Constant.purs","end":[83,1]}},{"comments":null,"title":"constantHasPower","info":{"declType":"instance","dependencies":[["Neon.Types.HasPower.HasPower",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPower.HasPower"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[83,1],"name":"src/Neon/Values/Constant.purs","end":[86,1]}},{"comments":null,"title":"constantHasPure","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[86,1],"name":"src/Neon/Values/Constant.purs","end":[89,1]}},{"comments":null,"title":"constantHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[89,1],"name":"src/Neon/Values/Constant.purs","end":[92,1]}},{"comments":null,"title":"constantHasSubtract","info":{"declType":"instance","dependencies":[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[92,1],"name":"src/Neon/Values/Constant.purs","end":[95,1]}},{"comments":null,"title":"constantHasTop","info":{"declType":"instance","dependencies":[["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[95,1],"name":"src/Neon/Values/Constant.purs","end":[98,1]}},{"comments":null,"title":"constantHasZero","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[98,1],"name":"src/Neon/Values/Constant.purs","end":[101,1]}},{"comments":null,"title":"constantIsEnumerable","info":{"declType":"instance","dependencies":[["Neon.Types.IsEnumerable.IsEnumerable",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[101,1],"name":"src/Neon/Values/Constant.purs","end":[113,1]}}],"comments":"A wrapper that ignores its second type argument.\n","title":"Constant","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[31,1],"name":"src/Neon/Values/Constant.purs","end":[33,1]}},{"children":[],"comments":"Extracts the value from its wrapper.\n\n``` purescript\nrunConstant (Constant unit)\n-- unit\n```\n","title":"runConstant","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Constant.Constant"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"src/Neon/Values/Constant.purs","end":[114,1]}}]},{"name":"Neon.Values.Identity","comments":null,"declarations":[{"children":[{"comments":null,"title":"Identity","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"identityHasAdd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Values/Identity.purs","end":[35,1]}},{"comments":null,"title":"identityHasAnd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[35,1],"name":"src/Neon/Values/Identity.purs","end":[38,1]}},{"comments":null,"title":"identityHasApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"}]}},"sourceSpan":{"start":[38,1],"name":"src/Neon/Values/Identity.purs","end":[41,1]}},{"comments":null,"title":"identityHasBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"}]}},"sourceSpan":{"start":[41,1],"name":"src/Neon/Values/Identity.purs","end":[44,1]}},{"comments":null,"title":"identityHasBottom","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[44,1],"name":"src/Neon/Values/Identity.purs","end":[47,1]}},{"comments":null,"title":"identityHasCompare","info":{"declType":"instance","dependencies":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[47,1],"name":"src/Neon/Values/Identity.purs","end":[50,1]}},{"comments":null,"title":"identityHasDivide","info":{"declType":"instance","dependencies":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Neon/Values/Identity.purs","end":[54,1]}},{"comments":null,"title":"identityHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[54,1],"name":"src/Neon/Values/Identity.purs","end":[57,1]}},{"comments":null,"title":"identityHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"}]}},"sourceSpan":{"start":[57,1],"name":"src/Neon/Values/Identity.purs","end":[61,1]}},{"comments":null,"title":"identityHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"}]}},"sourceSpan":{"start":[61,1],"name":"src/Neon/Values/Identity.purs","end":[64,1]}},{"comments":null,"title":"identityHasMultiply","info":{"declType":"instance","dependencies":[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Neon/Values/Identity.purs","end":[67,1]}},{"comments":null,"title":"identityHasNot","info":{"declType":"instance","dependencies":[["Neon.Types.HasNot.HasNot",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[67,1],"name":"src/Neon/Values/Identity.purs","end":[70,1]}},{"comments":null,"title":"identityHasOne","info":{"declType":"instance","dependencies":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[70,1],"name":"src/Neon/Values/Identity.purs","end":[73,1]}},{"comments":null,"title":"identityHasOr","info":{"declType":"instance","dependencies":[["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[73,1],"name":"src/Neon/Values/Identity.purs","end":[76,1]}},{"comments":null,"title":"identityHasPure","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"}]}},"sourceSpan":{"start":[76,1],"name":"src/Neon/Values/Identity.purs","end":[79,1]}},{"comments":null,"title":"identityHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[79,1],"name":"src/Neon/Values/Identity.purs","end":[82,1]}},{"comments":null,"title":"identityHasSubtract","info":{"declType":"instance","dependencies":[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[82,1],"name":"src/Neon/Values/Identity.purs","end":[85,1]}},{"comments":null,"title":"identityHasTop","info":{"declType":"instance","dependencies":[["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[85,1],"name":"src/Neon/Values/Identity.purs","end":[88,1]}},{"comments":null,"title":"identityHasZero","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[88,1],"name":"src/Neon/Values/Identity.purs","end":[91,1]}},{"comments":null,"title":"identityIsEnumerable","info":{"declType":"instance","dependencies":[["Neon.Types.IsEnumerable.IsEnumerable",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.IsEnumerable.IsEnumerable"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[91,1],"name":"src/Neon/Values/Identity.purs","end":[103,1]}}],"comments":"A simple wrapper. This is most useful as the base of a monad transformer\nstack. That means you can use this as an \"empty\" monad and layer others on\ntop of it.\n","title":"Identity","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[30,1],"name":"src/Neon/Values/Identity.purs","end":[32,1]}},{"children":[],"comments":"Extracts the value from its wrapper.\n\n``` purescript\nrunIdentity (Identity unit)\n-- unit\n```\n","title":"runIdentity","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Identity.Identity"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[103,1],"name":"src/Neon/Values/Identity.purs","end":[104,1]}}]},{"name":"Neon.Values.Either","comments":null,"declarations":[{"children":[{"comments":null,"title":"Left","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Right","info":{"arguments":[{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eitherHasAdd","info":{"declType":"instance","dependencies":[["Neon.Types.HasAdd.HasAdd",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAdd.HasAdd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Values/Either.purs","end":[45,1]}},{"comments":null,"title":"eitherHasAlternative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAlternative.HasAlternative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Neon/Values/Either.purs","end":[49,1]}},{"comments":null,"title":"eitherHasAnd","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasAnd.HasAnd",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasAnd.HasAnd"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[49,1],"name":"src/Neon/Values/Either.purs","end":[52,1]}},{"comments":null,"title":"eitherHasApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[52,1],"name":"src/Neon/Values/Either.purs","end":[56,1]}},{"comments":null,"title":"eitherHasBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[56,1],"name":"src/Neon/Values/Either.purs","end":[60,1]}},{"comments":null,"title":"eitherHasBottom","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBottom.HasBottom"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[60,1],"name":"src/Neon/Values/Either.purs","end":[63,1]}},{"comments":null,"title":"eitherHasCompare","info":{"declType":"instance","dependencies":[["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasCompare.HasCompare",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasCompare.HasCompare"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[63,1],"name":"src/Neon/Values/Either.purs","end":[69,1]}},{"comments":null,"title":"eitherHasDivide","info":{"declType":"instance","dependencies":[["Neon.Types.HasDivide.HasDivide",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasDivide.HasDivide"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[69,1],"name":"src/Neon/Values/Either.purs","end":[73,1]}},{"comments":null,"title":"eitherHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[73,1],"name":"src/Neon/Values/Either.purs","end":[78,1]}},{"comments":null,"title":"eitherHasFold","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasFold.HasFold"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[78,1],"name":"src/Neon/Values/Either.purs","end":[86,1]}},{"comments":null,"title":"eitherHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[86,1],"name":"src/Neon/Values/Either.purs","end":[90,1]}},{"comments":null,"title":"eitherHasMultiply","info":{"declType":"instance","dependencies":[["Neon.Types.HasMultiply.HasMultiply",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMultiply.HasMultiply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[90,1],"name":"src/Neon/Values/Either.purs","end":[93,1]}},{"comments":null,"title":"eitherHasNot","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasNot.HasNot",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasNot.HasNot"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[93,1],"name":"src/Neon/Values/Either.purs","end":[96,1]}},{"comments":null,"title":"eitherHasOne","info":{"declType":"instance","dependencies":[["Neon.Types.HasOne.HasOne",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOne.HasOne"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[96,1],"name":"src/Neon/Values/Either.purs","end":[99,1]}},{"comments":null,"title":"eitherHasOr","info":{"declType":"instance","dependencies":[["Neon.Types.HasBottom.HasBottom",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasOr.HasOr",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasOr.HasOr"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[99,1],"name":"src/Neon/Values/Either.purs","end":[102,1]}},{"comments":null,"title":"eitherHasPure","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[102,1],"name":"src/Neon/Values/Either.purs","end":[105,1]}},{"comments":null,"title":"eitherHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[105,1],"name":"src/Neon/Values/Either.purs","end":[109,1]}},{"comments":null,"title":"eitherHasSubtract","info":{"declType":"instance","dependencies":[["Neon.Types.HasSubtract.HasSubtract",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasSubtract.HasSubtract"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[109,1],"name":"src/Neon/Values/Either.purs","end":[112,1]}},{"comments":null,"title":"eitherHasTop","info":{"declType":"instance","dependencies":[["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"a"}]],["Neon.Types.HasTop.HasTop",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasTop.HasTop"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[112,1],"name":"src/Neon/Values/Either.purs","end":[115,1]}},{"comments":null,"title":"eitherHasZero","info":{"declType":"instance","dependencies":[["Neon.Types.HasZero.HasZero",[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasZero.HasZero"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[115,1],"name":"src/Neon/Values/Either.purs","end":[127,1]}}],"comments":"Represents a choice between two values. `Either` is conventially used for\nerror handling where `Left` represents failure and `Right` represents\nsuccess.\n","title":"Either","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[38,1],"name":"src/Neon/Values/Either.purs","end":[42,1]}},{"children":[],"comments":"Applies the first function to `Left` values and the second function to\n`Right` values.\n\n``` purescript\neither (+ 2) (* 2) (Left 3)\n-- Left 5\neither (+ 2) (* 2) (Right 3)\n-- Right 6\n```\n","title":"either","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[127,1],"name":"src/Neon/Values/Either.purs","end":[128,1]}},{"children":[],"comments":"Returns `true` if the `Either` is a `Left` value. Returns `false`\notherwise.\n\n``` purescript\nisLeft (Left unit)\n-- true\nisLeft (Right unit)\n-- false\n```\n","title":"isLeft","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]},null]}},"sourceSpan":{"start":[141,1],"name":"src/Neon/Values/Either.purs","end":[142,1]}},{"children":[],"comments":"Returns `true` if the `Either` is a `Right` value. Returns `false`\notherwise.\n\n``` purescript\nisRight (Right unit)\n-- true\nisRight (Left unit)\n-- false\n```\n","title":"isRight","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]},null]}},"sourceSpan":{"start":[155,1],"name":"src/Neon/Values/Either.purs","end":[156,1]}},{"children":[],"comments":"Converts an `Either` into a `Maybe`.\n\n``` purescript\nfromEither (Left unit)\n-- Nothing\nfromEither (Right unit)\n-- Just unit\n```\n","title":"fromEither","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasEmpty.HasEmpty",[{"tag":"TypeVar","contents":"m"}]],["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[166,1],"name":"src/Neon/Values/Either.purs","end":[167,1]}},{"children":[],"comments":"Converts a `Maybe` into an `Either`.\n\n``` purescript\ntoEither unit Nothing\n-- Left unit\ntoEither unit (Just true)\n-- Right true\n```\n","title":"toEither","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Either.Either"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[177,1],"name":"src/Neon/Values/Either.purs","end":[178,1]}}]},{"name":"Neon.Values.Nullable","comments":null,"declarations":[{"children":[{"comments":null,"title":"nullableHasEqual","info":{"declType":"instance","dependencies":[["Neon.Types.HasEqual.HasEqual",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasEqual.HasEqual"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Nullable.Nullable"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Neon/Values/Nullable.purs","end":[35,1]}},{"comments":null,"title":"nullableHasShow","info":{"declType":"instance","dependencies":[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Nullable.Nullable"},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[35,1],"name":"src/Neon/Values/Nullable.purs","end":[44,1]}}],"comments":"Represents values that can be null. This is different than `Maybe` because\nit has no runtime overhead.\n","title":"Nullable","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"src/Neon/Values/Nullable.purs","end":[17,1]}},{"children":[],"comments":"Converts a `Nullable` value into some other container. Typically this is\n`Maybe`.\n\n``` purescript\nfromNullable (toNullable (Just unit))\n-- Just unit\n```\n","title":"fromNullable","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasEmpty.HasEmpty",[{"tag":"TypeVar","contents":"m"}]],["Neon.Types.HasPure.HasPure",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Nullable.Nullable"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Values/Nullable.purs","end":[30,1]}},{"children":[],"comments":"Converts a `Maybe` value into a `Nullable` value.\n\n``` purescript\nshow (toNullable (Just unit))\n-- \"unit\"\n```\n","title":"toNullable","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Values.Nullable.Nullable"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[44,1],"name":"src/Neon/Values/Nullable.purs","end":[45,1]}}]},{"name":"Neon.Values","comments":null,"declarations":[]},{"name":"Neon.Primitives.Char","comments":null,"declarations":[{"children":[],"comments":"Convert a character to lower case.\n\n``` purescript\ntoLower 'A'\n-- 'a'\n```\n","title":"toLower","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Char"}]},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[12,1],"name":"src/Neon/Primitives/Char.purs","end":[20,1]}},{"children":[],"comments":"Convert a character to upper case.\n\n``` purescript\ntoUpper 'a'\n-- 'A'\n```\n","title":"toUpper","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Char"}]},{"tag":"TypeConstructor","contents":"Prim.Char"}]}},"sourceSpan":{"start":[20,1],"name":"src/Neon/Primitives/Char.purs","end":[20,35]}}]},{"name":"Neon.Primitives.Boolean","comments":null,"declarations":[{"children":[],"comments":"An alias for `true`. This is useful in guard clauses.\n\n``` purescript\nmax x y\n  | y > x = y\n  | otherwise = x\n```\n","title":"otherwise","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":"Prim.Boolean"}},"sourceSpan":{"start":[13,1],"name":"src/Neon/Primitives/Boolean.purs","end":[14,1]}},{"children":[],"comments":"A functional alternative to the `if _ then _ else _` syntax. This is\nuseful in higher-order functions.\n\n``` purescript\nmap (boolean 1 2) [false, true]\n-- [2, 1]\n```\n","title":"boolean","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[23,1],"name":"src/Neon/Primitives/Boolean.purs","end":[24,1]}}]},{"name":"Neon.Primitives.Array","comments":null,"declarations":[]},{"name":"Neon.Primitives","comments":null,"declarations":[]},{"name":"Neon.Effects.Effect","comments":null,"declarations":[{"children":[{"comments":null,"title":"effectHasApply","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasApply.HasApply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[28,1],"name":"src/Neon/Effects/Effect.purs","end":[31,1]}},{"comments":null,"title":"effectHasBind","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasBind.HasBind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Effects/Effect.purs","end":[34,1]}},{"comments":null,"title":"effectHasMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasMap.HasMap"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[34,1],"name":"src/Neon/Effects/Effect.purs","end":[37,1]}},{"comments":null,"title":"effectHasPure","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasPure.HasPure"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[37,1],"name":"src/Neon/Effects/Effect.purs","end":[46,1]}}],"comments":"Represents native effects. This type constructor takes two arguments: a\nrow of effects and a return type. The row of effects gives the native\ncapabilities of the effect.\n\n``` purescript\n-- This effect can use the console (like `console.log()` in JavaScript).\nforall e. Effect (console :: CONSOLE | e) Unit\n```\n","title":"Effect","fixity":null,"info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"Bang","contents":[]}},{"tag":"FunKind","contents":[{"tag":"Star","contents":[]},{"tag":"Star","contents":[]}]}]},"declType":"externData"},"sourceSpan":{"start":[20,1],"name":"src/Neon/Effects/Effect.purs","end":[22,1]}},{"children":[],"comments":"Runs a pure effect.\n\n``` purescript\nrunPure (pure 1)\n-- 1\n```\n","title":"runPure","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"REmpty","contents":[]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[46,1],"name":"src/Neon/Effects/Effect.purs","end":[47,1]}},{"children":[],"comments":"Dangerously runs an effect. In general, you should not use this function.\nSometimes it is necessary to subvert the type system. This can also be\nuseful for debugging pure functions.\n\n``` purescript\nunsafeRunEffect (log \"...\" *> pure 1) :: Int\n-- logs \"...\" and returns `1`\n```\n","title":"unsafeRunEffect","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[57,1],"name":"src/Neon/Effects/Effect.purs","end":[58,1]}}]},{"name":"Neon.Effects.Exception","comments":null,"declarations":[{"children":[],"comments":"Represents effects that can throw exceptions.\n","title":"EXCEPTION","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[13,1],"name":"src/Neon/Effects/Exception.purs","end":[14,1]}},{"children":[{"comments":null,"title":"exceptionHasShow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Types.HasShow.HasShow"},{"tag":"TypeConstructor","contents":"Neon.Effects.Exception.Exception"}]}},"sourceSpan":{"start":[44,1],"name":"src/Neon/Effects/Exception.purs","end":[45,23]}}],"comments":"An alias for `Error` from JavaScript.\n","title":"Exception","fixity":null,"info":{"kind":{"tag":"Star","contents":[]},"declType":"externData"},"sourceSpan":{"start":[17,1],"name":"src/Neon/Effects/Exception.purs","end":[25,1]}},{"children":[],"comments":"Creates an exception with the given message.\n\n``` purescript\nshow (exception \"Boink!\")\n-- \"Error: Boink!\"\n```\n","title":"exception","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeConstructor","contents":"Neon.Effects.Exception.Exception"}]}},"sourceSpan":{"start":[25,1],"name":"src/Neon/Effects/Exception.purs","end":[32,1]}},{"children":[],"comments":"Throws an exception.\n\n``` purescript\nthrow (exception \"Boink!\")\n```\n","title":"throw","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Neon.Effects.Exception.Exception"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":"Neon.Effects.Exception.EXCEPTION"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"src/Neon/Effects/Exception.purs","end":[42,1]}},{"children":[],"comments":"Catches an exception.\n\n``` purescript\ncatch\n  (throw (exception \"Boink!\"))\n  (\\ e -> error (show e))\n--\n```\n","title":"catch","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":"Neon.Effects.Exception.EXCEPTION"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Neon.Effects.Exception.Exception"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"src/Neon/Effects/Exception.purs","end":[44,1]}}]},{"name":"Neon.Effects.Random","comments":null,"declarations":[{"children":[],"comments":"Represents effects that can generate random numbers.\n","title":"RANDOM","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[9,1],"name":"src/Neon/Effects/Random.purs","end":[18,1]}},{"children":[],"comments":"Generates a random number. The number will be in the range [0, 1). That\nis, `0 <= x < 1`.\n\n``` purescript\nrandomNumber\n-- 0.123\n```\n","title":"randomNumber","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":"Neon.Effects.Random.RANDOM"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":"Prim.Number"}]},null]}},"sourceSpan":{"start":[18,1],"name":"src/Neon/Effects/Random.purs","end":[18,72]}}]},{"name":"Neon.Effects.Console","comments":null,"declarations":[{"children":[],"comments":"Represents effects that can write to the console.\n","title":"CONSOLE","fixity":null,"info":{"kind":{"tag":"Bang","contents":[]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"src/Neon/Effects/Console.purs","end":[23,1]}},{"children":[],"comments":"Writes an info-level message to the console.\n\n``` purescript\ninfo \"Starting...\"\n-- prints \"Starting...\" to standard out\n```\n","title":"info","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":"Neon.Effects.Console.CONSOLE"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]},null]}},"sourceSpan":{"start":[23,1],"name":"src/Neon/Effects/Console.purs","end":[31,1]}},{"children":[],"comments":"Writes a log-level message to the console.\n\n``` purescript\nlog \"Listening..\"\n-- prints \"Listening...\" to standard out\n```\n","title":"log","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":"Neon.Effects.Console.CONSOLE"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Neon/Effects/Console.purs","end":[39,1]}},{"children":[],"comments":"Writes a warn-level message to the console.\n\n``` purescript\nwarn \"Stopping...\"\n-- prints \"Stopping...\" to standard error\n```\n","title":"warn","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":"Neon.Effects.Console.CONSOLE"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]},null]}},"sourceSpan":{"start":[39,1],"name":"src/Neon/Effects/Console.purs","end":[47,1]}},{"children":[],"comments":"Writes an error-level message to the console.\n\n``` purescript\nerror \"Exploded!\"\n-- prints \"Exploded!\" to standard error\n```\n","title":"error","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.String"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":"Neon.Effects.Console.CONSOLE"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]},null]}},"sourceSpan":{"start":[47,1],"name":"src/Neon/Effects/Console.purs","end":[56,1]}},{"children":[],"comments":"Converts a value to a string and writes a log-level message to the\nconsole.\n\n``` purescript\nprint 1\n-- print \"1\" to standard out\n```\n","title":"print","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[["Neon.Types.HasShow.HasShow",[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Neon.Effects.Effect.Effect"},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":"Neon.Effects.Console.CONSOLE"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":"Neon.Values.Unit.Unit"}]}]}]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"src/Neon/Effects/Console.purs","end":[57,1]}}]},{"name":"Neon.Effects","comments":null,"declarations":[]},{"name":"Neon","comments":null,"declarations":[]}],"resolvedDependencies":{"purescript-coproducts":"0.4.0","purescript-free":"0.9.1","purescript-proxy":"0.1.0","purescript-exceptions":"0.3.2","purescript-these":"0.3.3","purescript-maps":"0.5.3","purescript-control":"0.3.2","purescript-console":"0.1.1","purescript-either":"0.2.3","purescript-profunctor":"0.3.1","purescript-arrows":"0.6.2","purescript-arrays":"0.4.3","purescript-maybe":"0.3.5","purescript-exists":"0.2.0","purescript-distributive":"0.5.1","purescript-unfoldable":"0.4.1","purescript-invariant":"0.3.0","purescript-batteries":"0.3.0","purescript-lazy":"0.4.0","purescript-monoid":"0.3.2","purescript-aff":"0.13.1","purescript-foldable-traversable":"0.4.1","purescript-tailrec":"0.3.1","purescript-lens":"0.9.1","purescript-sequences":"0.4.2","purescript-prelude":"0.1.3","purescript-inject":"0.3.0","purescript-st":"0.1.1","purescript-bifunctors":"0.4.0","purescript-contravariant":"0.2.3","purescript-assert":"0.1.1","purescript-generics":"0.6.2","purescript-unsafe-coerce":"0.1.0","purescript-refs":"0.2.0","purescript-integers":"0.2.1","purescript-eff":"0.1.2","purescript-orders":"0.1.1","purescript-const":"0.5.0","purescript-transformers":"0.8.4","purescript-globals":"0.2.2","purescript-math":"0.2.0","purescript-enums":"0.7.0","purescript-catenable-lists":"0.1.1","purescript-validation":"0.2.1","purescript-random":"0.2.3","purescript-parallel":"0.5.1","purescript-tuples":"0.4.0","purescript-semirings":"0.2.0","purescript-strings":"0.7.1","purescript-identity":"0.4.1","purescript-foreign":"0.7.2","purescript-sets":"0.5.3","purescript-lists":"0.7.7","purescript-nullable":"0.2.1","purescript-datetime":"0.9.1","purescript-functions":"0.1.0"},"bookmarks":[{"package":"purescript-unsafe-coerce","item":["Unsafe.Coerce","unsafeCoerce"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy2"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy3"]},{"package":"purescript-prelude","item":["Prelude","Unit"]},{"package":"purescript-prelude","item":["Prelude","unit"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","flip"]},{"package":"purescript-prelude","item":["Prelude","const"]},{"package":"purescript-prelude","item":["Prelude","asTypeOf"]},{"package":"purescript-prelude","item":["Prelude","otherwise"]},{"package":"purescript-prelude","item":["Prelude","Semigroupoid"]},{"package":"purescript-prelude","item":["Prelude","semigroupoidFn"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","Category"]},{"package":"purescript-prelude","item":["Prelude","categoryFn"]},{"package":"purescript-prelude","item":["Prelude","Functor"]},{"package":"purescript-prelude","item":["Prelude","functorFn"]},{"package":"purescript-prelude","item":["Prelude","functorArray"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","void"]},{"package":"purescript-prelude","item":["Prelude","Apply"]},{"package":"purescript-prelude","item":["Prelude","applyFn"]},{"package":"purescript-prelude","item":["Prelude","applyArray"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","Applicative"]},{"package":"purescript-prelude","item":["Prelude","applicativeFn"]},{"package":"purescript-prelude","item":["Prelude","applicativeArray"]},{"package":"purescript-prelude","item":["Prelude","return"]},{"package":"purescript-prelude","item":["Prelude","liftA1"]},{"package":"purescript-prelude","item":["Prelude","Bind"]},{"package":"purescript-prelude","item":["Prelude","bindFn"]},{"package":"purescript-prelude","item":["Prelude","bindArray"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","Monad"]},{"package":"purescript-prelude","item":["Prelude","monadFn"]},{"package":"purescript-prelude","item":["Prelude","monadArray"]},{"package":"purescript-prelude","item":["Prelude","liftM1"]},{"package":"purescript-prelude","item":["Prelude","ap"]},{"package":"purescript-prelude","item":["Prelude","Semigroup"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","semigroupString"]},{"package":"purescript-prelude","item":["Prelude","semigroupUnit"]},{"package":"purescript-prelude","item":["Prelude","semigroupFn"]},{"package":"purescript-prelude","item":["Prelude","semigroupOrdering"]},{"package":"purescript-prelude","item":["Prelude","semigroupArray"]},{"package":"purescript-prelude","item":["Prelude","Semiring"]},{"package":"purescript-prelude","item":["Prelude","semiringInt"]},{"package":"purescript-prelude","item":["Prelude","semiringNumber"]},{"package":"purescript-prelude","item":["Prelude","semiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","Ring"]},{"package":"purescript-prelude","item":["Prelude","ringInt"]},{"package":"purescript-prelude","item":["Prelude","ringNumber"]},{"package":"purescript-prelude","item":["Prelude","ringUnit"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","negate"]},{"package":"purescript-prelude","item":["Prelude","ModuloSemiring"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringInt"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringNumber"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","DivisionRing"]},{"package":"purescript-prelude","item":["Prelude","divisionRingNumber"]},{"package":"purescript-prelude","item":["Prelude","divisionRingUnit"]},{"package":"purescript-prelude","item":["Prelude","Num"]},{"package":"purescript-prelude","item":["Prelude","numNumber"]},{"package":"purescript-prelude","item":["Prelude","numUnit"]},{"package":"purescript-prelude","item":["Prelude","Eq"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","eqBoolean"]},{"package":"purescript-prelude","item":["Prelude","eqInt"]},{"package":"purescript-prelude","item":["Prelude","eqNumber"]},{"package":"purescript-prelude","item":["Prelude","eqChar"]},{"package":"purescript-prelude","item":["Prelude","eqString"]},{"package":"purescript-prelude","item":["Prelude","eqUnit"]},{"package":"purescript-prelude","item":["Prelude","eqArray"]},{"package":"purescript-prelude","item":["Prelude","eqOrdering"]},{"package":"purescript-prelude","item":["Prelude","Ordering"]},{"package":"purescript-prelude","item":["Prelude","Ord"]},{"package":"purescript-prelude","item":["Prelude","ordBoolean"]},{"package":"purescript-prelude","item":["Prelude","ordInt"]},{"package":"purescript-prelude","item":["Prelude","ordNumber"]},{"package":"purescript-prelude","item":["Prelude","ordString"]},{"package":"purescript-prelude","item":["Prelude","ordChar"]},{"package":"purescript-prelude","item":["Prelude","ordUnit"]},{"package":"purescript-prelude","item":["Prelude","ordArray"]},{"package":"purescript-prelude","item":["Prelude","ordOrdering"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","unsafeCompare"]},{"package":"purescript-prelude","item":["Prelude","Bounded"]},{"package":"purescript-prelude","item":["Prelude","boundedBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedUnit"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdering"]},{"package":"purescript-prelude","item":["Prelude","boundedInt"]},{"package":"purescript-prelude","item":["Prelude","boundedChar"]},{"package":"purescript-prelude","item":["Prelude","boundedFn"]},{"package":"purescript-prelude","item":["Prelude","BoundedOrd"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdUnit"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdOrdering"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdInt"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdChar"]},{"package":"purescript-prelude","item":["Prelude","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraBoolean"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraUnit"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraFn"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","Show"]},{"package":"purescript-prelude","item":["Prelude","showBoolean"]},{"package":"purescript-prelude","item":["Prelude","showInt"]},{"package":"purescript-prelude","item":["Prelude","showNumber"]},{"package":"purescript-prelude","item":["Prelude","showChar"]},{"package":"purescript-prelude","item":["Prelude","showString"]},{"package":"purescript-prelude","item":["Prelude","showUnit"]},{"package":"purescript-prelude","item":["Prelude","showArray"]},{"package":"purescript-prelude","item":["Prelude","showOrdering"]},{"package":null,"item":["Neon.Types.HasToArray","HasToArray"]},{"package":null,"item":["Neon.Types.HasToArray","stringHasToArray"]},{"package":null,"item":["Neon.Types.HasShow","HasShow"]},{"package":null,"item":["Neon.Types.HasShow","arrayHasShow"]},{"package":null,"item":["Neon.Types.HasShow","booleanHasShow"]},{"package":null,"item":["Neon.Types.HasShow","charHasShow"]},{"package":null,"item":["Neon.Types.HasShow","intHasShow"]},{"package":null,"item":["Neon.Types.HasShow","numberHasShow"]},{"package":null,"item":["Neon.Types.HasShow","stringHasShow"]},{"package":null,"item":["Neon.Types.HasFromArray","HasFromArray"]},{"package":null,"item":["Neon.Types.HasFromArray","stringHasFromArray"]},{"package":null,"item":["Neon.Types.HasEqual","HasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","arrayHasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","booleanHasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","charHasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","functionHasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","intHasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","numberHasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","stringHasEqual"]},{"package":null,"item":["Neon.Types.HasEqual","(==)"]},{"package":null,"item":["Neon.Types.HasEqual","(==)"]},{"package":null,"item":["Neon.Values.Ordering","Ordering"]},{"package":null,"item":["Neon.Values.Ordering","orderingHasEqual"]},{"package":null,"item":["Neon.Values.Ordering","orderingHasShow"]},{"package":null,"item":["Neon.Values.Proxy","Proxy"]},{"package":null,"item":["Neon.Values.Proxy","proxyHasEqual"]},{"package":null,"item":["Neon.Values.Proxy","proxyHasShow"]},{"package":null,"item":["Neon.Values.Regex","Regex"]},{"package":null,"item":["Neon.Values.Regex","regexHasEqual"]},{"package":null,"item":["Neon.Values.Regex","regexHasShow"]},{"package":null,"item":["Neon.Values.Regex","RegexFlags"]},{"package":null,"item":["Neon.Values.Regex","regex"]},{"package":null,"item":["Neon.Values.Regex","regexFlags"]},{"package":null,"item":["Neon.Values.Regex","test"]},{"package":null,"item":["Neon.Types.HasCompose","HasCompose"]},{"package":null,"item":["Neon.Types.HasCompose","functionHasCompose"]},{"package":null,"item":["Neon.Types.HasCompose","(>>)"]},{"package":null,"item":["Neon.Types.HasCompose","(>>)"]},{"package":null,"item":["Neon.Types.HasCompose","(<<)"]},{"package":null,"item":["Neon.Types.HasCompose","(<<)"]},{"package":null,"item":["Neon.Types.HasIdentity","HasIdentity"]},{"package":null,"item":["Neon.Types.HasIdentity","functionHasIdentity"]},{"package":null,"item":["Neon.Types.HasCompare","HasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","arrayHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","booleanHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","charHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","functionHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","intHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","numberHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","orderingHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","stringHasCompare"]},{"package":null,"item":["Neon.Types.HasCompare","lessThan"]},{"package":null,"item":["Neon.Types.HasCompare","(<)"]},{"package":null,"item":["Neon.Types.HasCompare","(<)"]},{"package":null,"item":["Neon.Types.HasCompare","lessThanOrEqualTo"]},{"package":null,"item":["Neon.Types.HasCompare","(<=)"]},{"package":null,"item":["Neon.Types.HasCompare","(<=)"]},{"package":null,"item":["Neon.Types.HasCompare","greaterThanOrEqualTo"]},{"package":null,"item":["Neon.Types.HasCompare","(>=)"]},{"package":null,"item":["Neon.Types.HasCompare","(>=)"]},{"package":null,"item":["Neon.Types.HasCompare","greaterThan"]},{"package":null,"item":["Neon.Types.HasCompare","(>)"]},{"package":null,"item":["Neon.Types.HasCompare","(>)"]},{"package":null,"item":["Neon.Types.HasCompare","min"]},{"package":null,"item":["Neon.Types.HasCompare","max"]},{"package":null,"item":["Neon.Types.HasCompare","clamp"]},{"package":null,"item":["Neon.Types.HasCompare","comparing"]},{"package":null,"item":["Neon.Types.HasAdd","HasAdd"]},{"package":null,"item":["Neon.Types.HasAdd","arrayHasAdd"]},{"package":null,"item":["Neon.Types.HasAdd","booleanHasAdd"]},{"package":null,"item":["Neon.Types.HasAdd","functionHasAdd"]},{"package":null,"item":["Neon.Types.HasAdd","intHasAdd"]},{"package":null,"item":["Neon.Types.HasAdd","numberHasAdd"]},{"package":null,"item":["Neon.Types.HasAdd","stringHasAdd"]},{"package":null,"item":["Neon.Types.HasAdd","(+)"]},{"package":null,"item":["Neon.Types.HasAdd","(+)"]},{"package":null,"item":["Neon.Primitives.Number","nan"]},{"package":null,"item":["Neon.Primitives.Number","isNaN"]},{"package":null,"item":["Neon.Primitives.Number","infinity"]},{"package":null,"item":["Neon.Primitives.Number","isFinite"]},{"package":null,"item":["Neon.Primitives.Number","round"]},{"package":null,"item":["Neon.Primitives.Number","ceiling"]},{"package":null,"item":["Neon.Primitives.Number","floor"]},{"package":null,"item":["Neon.Primitives.Number","truncate"]},{"package":null,"item":["Neon.Primitives.Int","toNumber"]},{"package":null,"item":["Neon.Primitives.Function","always"]},{"package":null,"item":["Neon.Primitives.Function","flip"]},{"package":null,"item":["Neon.Primitives.Function","on"]},{"package":null,"item":["Neon.Primitives.Function","(|>)"]},{"package":null,"item":["Neon.Primitives.Function","(|>)"]},{"package":null,"item":["Neon.Primitives.Function","(<|)"]},{"package":null,"item":["Neon.Primitives.Function","(<|)"]},{"package":null,"item":["Neon.Types.HasTop","HasTop"]},{"package":null,"item":["Neon.Types.HasTop","booleanHasTop"]},{"package":null,"item":["Neon.Types.HasTop","charHasTop"]},{"package":null,"item":["Neon.Types.HasTop","functionHasTop"]},{"package":null,"item":["Neon.Types.HasTop","intHasTop"]},{"package":null,"item":["Neon.Types.HasTop","numberHasTop"]},{"package":null,"item":["Neon.Types.HasTop","orderingHasTop"]},{"package":null,"item":["Neon.Types.HasZero","HasZero"]},{"package":null,"item":["Neon.Types.HasZero","arrayHasZero"]},{"package":null,"item":["Neon.Types.HasZero","booleanHasZero"]},{"package":null,"item":["Neon.Types.HasZero","functionHasZero"]},{"package":null,"item":["Neon.Types.HasZero","intHasZero"]},{"package":null,"item":["Neon.Types.HasZero","numberHasZero"]},{"package":null,"item":["Neon.Types.HasZero","stringHasZero"]},{"package":null,"item":["Neon.Types.HasMultiply","HasMultiply"]},{"package":null,"item":["Neon.Types.HasMultiply","booleanHasMultiply"]},{"package":null,"item":["Neon.Types.HasMultiply","functionHasMultiply"]},{"package":null,"item":["Neon.Types.HasMultiply","intHasMultiply"]},{"package":null,"item":["Neon.Types.HasMultiply","numberHasMultiply"]},{"package":null,"item":["Neon.Types.HasMultiply","(*)"]},{"package":null,"item":["Neon.Types.HasMultiply","(*)"]},{"package":null,"item":["Neon.Types.HasSubtract","HasSubtract"]},{"package":null,"item":["Neon.Types.HasSubtract","functionHasSubtract"]},{"package":null,"item":["Neon.Types.HasSubtract","intHasSubtract"]},{"package":null,"item":["Neon.Types.HasSubtract","numberHasSubtract"]},{"package":null,"item":["Neon.Types.HasSubtract","(-)"]},{"package":null,"item":["Neon.Types.HasSubtract","(-)"]},{"package":null,"item":["Neon.Types.HasSubtract","negate"]},{"package":null,"item":["Neon.Types.HasSubtract","abs"]},{"package":null,"item":["Neon.Types.HasBottom","HasBottom"]},{"package":null,"item":["Neon.Types.HasBottom","booleanHasBottom"]},{"package":null,"item":["Neon.Types.HasBottom","charHasBottom"]},{"package":null,"item":["Neon.Types.HasBottom","functionHasBottom"]},{"package":null,"item":["Neon.Types.HasBottom","intHasBottom"]},{"package":null,"item":["Neon.Types.HasBottom","numberHasBottom"]},{"package":null,"item":["Neon.Types.HasBottom","orderingHasBottom"]},{"package":null,"item":["Neon.Types.HasAnd","HasAnd"]},{"package":null,"item":["Neon.Types.HasAnd","booleanHasAnd"]},{"package":null,"item":["Neon.Types.HasAnd","functionHasAnd"]},{"package":null,"item":["Neon.Types.HasAnd","(&&)"]},{"package":null,"item":["Neon.Types.HasAnd","(&&)"]},{"package":null,"item":["Neon.Types.HasNot","HasNot"]},{"package":null,"item":["Neon.Types.HasNot","booleanHasNot"]},{"package":null,"item":["Neon.Types.HasNot","functionHasNot"]},{"package":null,"item":["Neon.Types.HasNot","isInfinite"]},{"package":null,"item":["Neon.Types.HasNot","notEqual"]},{"package":null,"item":["Neon.Types.HasNot","(!=)"]},{"package":null,"item":["Neon.Types.HasNot","(!=)"]},{"package":null,"item":["Neon.Types.HasOr","HasOr"]},{"package":null,"item":["Neon.Types.HasOr","booleanHasOr"]},{"package":null,"item":["Neon.Types.HasOr","functionHasOr"]},{"package":null,"item":["Neon.Types.HasOr","(||)"]},{"package":null,"item":["Neon.Types.HasOr","(||)"]},{"package":null,"item":["Neon.Types.HasOne","HasOne"]},{"package":null,"item":["Neon.Types.HasOne","booleanHasOne"]},{"package":null,"item":["Neon.Types.HasOne","functionHasOne"]},{"package":null,"item":["Neon.Types.HasOne","intHasOne"]},{"package":null,"item":["Neon.Types.HasOne","numberHasOne"]},{"package":null,"item":["Neon.Types.HasOne","sign"]},{"package":null,"item":["Neon.Types.HasDivide","HasDivide"]},{"package":null,"item":["Neon.Types.HasDivide","functionHasDivide"]},{"package":null,"item":["Neon.Types.HasDivide","intHasDivide"]},{"package":null,"item":["Neon.Types.HasDivide","numberHasDivide"]},{"package":null,"item":["Neon.Types.HasDivide","(/)"]},{"package":null,"item":["Neon.Types.HasDivide","(/)"]},{"package":null,"item":["Neon.Types.HasDivide","(%)"]},{"package":null,"item":["Neon.Types.HasDivide","(%)"]},{"package":null,"item":["Neon.Types.HasDivide","reciprocal"]},{"package":null,"item":["Neon.Types.HasFold","HasFold"]},{"package":null,"item":["Neon.Types.HasFold","arrayHasFold"]},{"package":null,"item":["Neon.Types.HasFold","foldMap"]},{"package":null,"item":["Neon.Types.HasFold","length"]},{"package":null,"item":["Neon.Types.HasFold","isPresent"]},{"package":null,"item":["Neon.Types.HasFold","isBlank"]},{"package":null,"item":["Neon.Types.HasFold","contains"]},{"package":null,"item":["Neon.Types.HasFold","sum"]},{"package":null,"item":["Neon.Types.HasFold","product"]},{"package":null,"item":["Neon.Types.HasPower","HasPower"]},{"package":null,"item":["Neon.Types.HasPower","intHasPower"]},{"package":null,"item":["Neon.Types.HasPower","numberHasPower"]},{"package":null,"item":["Neon.Types.HasPower","(^)"]},{"package":null,"item":["Neon.Types.HasPower","(^)"]},{"package":null,"item":["Neon.Types.HasLogarithm","HasLogarithm"]},{"package":null,"item":["Neon.Types.HasLogarithm","intHasLogarithm"]},{"package":null,"item":["Neon.Types.HasLogarithm","numberHasLogarithm"]},{"package":null,"item":["Neon.Types.HasRoot","HasRoot"]},{"package":null,"item":["Neon.Types.HasRoot","intHasRoot"]},{"package":null,"item":["Neon.Types.HasRoot","numberHasRoot"]},{"package":null,"item":["Neon.Values.Unit","Unit"]},{"package":null,"item":["Neon.Values.Unit","unitHasAdd"]},{"package":null,"item":["Neon.Values.Unit","unitHasAnd"]},{"package":null,"item":["Neon.Values.Unit","unitHasBottom"]},{"package":null,"item":["Neon.Values.Unit","unitHasCompare"]},{"package":null,"item":["Neon.Values.Unit","unitHasDivide"]},{"package":null,"item":["Neon.Values.Unit","unitHasEqual"]},{"package":null,"item":["Neon.Values.Unit","unitHasMultiply"]},{"package":null,"item":["Neon.Values.Unit","unitHasNot"]},{"package":null,"item":["Neon.Values.Unit","unitHasOne"]},{"package":null,"item":["Neon.Values.Unit","unitHasOr"]},{"package":null,"item":["Neon.Values.Unit","unitHasShow"]},{"package":null,"item":["Neon.Values.Unit","unitHasSubtract"]},{"package":null,"item":["Neon.Values.Unit","unitHasTop"]},{"package":null,"item":["Neon.Values.Unit","unitHasZero"]},{"package":null,"item":["Neon.Values.Unit","unit"]},{"package":null,"item":["Neon.Types.HasMap","HasMap"]},{"package":null,"item":["Neon.Types.HasMap","arrayHasMap"]},{"package":null,"item":["Neon.Types.HasMap","functionHasMap"]},{"package":null,"item":["Neon.Types.HasMap","(<$>)"]},{"package":null,"item":["Neon.Types.HasMap","(<$>)"]},{"package":null,"item":["Neon.Types.HasMap","($>)"]},{"package":null,"item":["Neon.Types.HasMap","($>)"]},{"package":null,"item":["Neon.Types.HasMap","(<$)"]},{"package":null,"item":["Neon.Types.HasMap","(<$)"]},{"package":null,"item":["Neon.Types.HasMap","void"]},{"package":null,"item":["Neon.Types.HasMap","for"]},{"package":null,"item":["Neon.Types.HasAlternative","HasAlternative"]},{"package":null,"item":["Neon.Types.HasAlternative","arrayHasAlternative"]},{"package":null,"item":["Neon.Types.HasApply","HasApply"]},{"package":null,"item":["Neon.Types.HasApply","arrayHasApply"]},{"package":null,"item":["Neon.Types.HasApply","functionHasApply"]},{"package":null,"item":["Neon.Types.HasApply","(<*>)"]},{"package":null,"item":["Neon.Types.HasApply","(<*>)"]},{"package":null,"item":["Neon.Types.HasApply","(*>)"]},{"package":null,"item":["Neon.Types.HasApply","(*>)"]},{"package":null,"item":["Neon.Types.HasApply","(<*)"]},{"package":null,"item":["Neon.Types.HasApply","(<*)"]},{"package":null,"item":["Neon.Values.List","List"]},{"package":null,"item":["Neon.Values.List","listHasEqual"]},{"package":null,"item":["Neon.Values.List","listHasFold"]},{"package":null,"item":["Neon.Values.List","listHasMap"]},{"package":null,"item":["Neon.Values.List","listHasShow"]},{"package":null,"item":["Neon.Values.List","listHasToArray"]},{"package":null,"item":["Neon.Values.List","toList"]},{"package":null,"item":["Neon.Types.HasPure","HasPure"]},{"package":null,"item":["Neon.Types.HasPure","arrayHasPure"]},{"package":null,"item":["Neon.Types.HasPure","functionHasPure"]},{"package":null,"item":["Neon.Types.HasPure","when"]},{"package":null,"item":["Neon.Types.HasPure","unless"]},{"package":null,"item":["Neon.Types.HasBind","HasBind"]},{"package":null,"item":["Neon.Types.HasBind","arrayHasBind"]},{"package":null,"item":["Neon.Types.HasBind","functionHasbind"]},{"package":null,"item":["Neon.Types.HasBind","(>>=)"]},{"package":null,"item":["Neon.Types.HasBind","(>>=)"]},{"package":null,"item":["Neon.Types.HasBind","(=<<)"]},{"package":null,"item":["Neon.Types.HasBind","(=<<)"]},{"package":null,"item":["Neon.Types.HasBind","join"]},{"package":null,"item":["Neon.Types.HasLift","HasLift"]},{"package":null,"item":["Neon.Types.HasEmpty","HasEmpty"]},{"package":null,"item":["Neon.Types.HasEmpty","arrayHasEmpty"]},{"package":null,"item":["Neon.Types.HasEmpty","guard"]},{"package":null,"item":["Neon.Values.Pair","Pair"]},{"package":null,"item":["Neon.Values.Pair","pairHasAdd"]},{"package":null,"item":["Neon.Values.Pair","pairHasAnd"]},{"package":null,"item":["Neon.Values.Pair","pairHasApply"]},{"package":null,"item":["Neon.Values.Pair","pairHasBind"]},{"package":null,"item":["Neon.Values.Pair","pairHasBottom"]},{"package":null,"item":["Neon.Values.Pair","pairHasCompare"]},{"package":null,"item":["Neon.Values.Pair","pairHasCompose"]},{"package":null,"item":["Neon.Values.Pair","pairHasDivide"]},{"package":null,"item":["Neon.Values.Pair","pairHasEqual"]},{"package":null,"item":["Neon.Values.Pair","pairHasFold"]},{"package":null,"item":["Neon.Values.Pair","pairHasMap"]},{"package":null,"item":["Neon.Values.Pair","pairHasMultiply"]},{"package":null,"item":["Neon.Values.Pair","pairHasNot"]},{"package":null,"item":["Neon.Values.Pair","pairHasOne"]},{"package":null,"item":["Neon.Values.Pair","pairHasOr"]},{"package":null,"item":["Neon.Values.Pair","pairHasPure"]},{"package":null,"item":["Neon.Values.Pair","pairHasShow"]},{"package":null,"item":["Neon.Values.Pair","pairHasSubtract"]},{"package":null,"item":["Neon.Values.Pair","pairHasTop"]},{"package":null,"item":["Neon.Values.Pair","pairHasZero"]},{"package":null,"item":["Neon.Values.Pair","pair"]},{"package":null,"item":["Neon.Values.Pair","curry"]},{"package":null,"item":["Neon.Values.Pair","uncurry"]},{"package":null,"item":["Neon.Values.Pair","swap"]},{"package":null,"item":["Neon.Values.Dictionary","Dictionary"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasAdd"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasAlternative"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasApply"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasEmpty"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasEqual"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasFold"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasFromArray"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasMap"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasShow"]},{"package":null,"item":["Neon.Values.Dictionary","dictionaryHasZero"]},{"package":null,"item":["Neon.Values.These","These"]},{"package":null,"item":["Neon.Values.These","theseHasAdd"]},{"package":null,"item":["Neon.Values.These","theseHasApply"]},{"package":null,"item":["Neon.Values.These","theseHasBind"]},{"package":null,"item":["Neon.Values.These","theseHasEqual"]},{"package":null,"item":["Neon.Values.These","theseHasFold"]},{"package":null,"item":["Neon.Values.These","theseHasMap"]},{"package":null,"item":["Neon.Values.These","theseHasPure"]},{"package":null,"item":["Neon.Values.These","theseHasShow"]},{"package":null,"item":["Neon.Values.These","these"]},{"package":null,"item":["Neon.Values.These","isThis"]},{"package":null,"item":["Neon.Values.These","isThat"]},{"package":null,"item":["Neon.Values.These","isBoth"]},{"package":null,"item":["Neon.Types.HasState","HasState"]},{"package":null,"item":["Neon.Types.HasState","getState"]},{"package":null,"item":["Neon.Types.HasState","setState"]},{"package":null,"item":["Neon.Transformers.StateT","StateT"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasAlternative"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasApply"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasBind"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasEmpty"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasLift"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasMap"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasPure"]},{"package":null,"item":["Neon.Transformers.StateT","stateTHasState"]},{"package":null,"item":["Neon.Transformers.StateT","runStateT"]},{"package":null,"item":["Neon.Values.Maybe","Maybe"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasAdd"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasAlternative"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasAnd"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasApply"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasBind"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasBottom"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasCompare"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasDivide"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasEmpty"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasEqual"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasFold"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasMap"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasMultiply"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasNot"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasOne"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasOr"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasPure"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasShow"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasSubtract"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasTop"]},{"package":null,"item":["Neon.Values.Maybe","maybeHasZero"]},{"package":null,"item":["Neon.Values.Maybe","maybe"]},{"package":null,"item":["Neon.Values.Maybe","isJust"]},{"package":null,"item":["Neon.Values.Maybe","isNothing"]},{"package":null,"item":["Neon.Values.Maybe","withDefault"]},{"package":null,"item":["Neon.Transformers.MaybeT","MaybeT"]},{"package":null,"item":["Neon.Transformers.MaybeT","maybeTHasAlternative"]},{"package":null,"item":["Neon.Transformers.MaybeT","maybeTHasApply"]},{"package":null,"item":["Neon.Transformers.MaybeT","maybeTHasBind"]},{"package":null,"item":["Neon.Transformers.MaybeT","maybeTHasEmpty"]},{"package":null,"item":["Neon.Transformers.MaybeT","maybeTHasLift"]},{"package":null,"item":["Neon.Transformers.MaybeT","maybeTHasMap"]},{"package":null,"item":["Neon.Transformers.MaybeT","maybeTHasPure"]},{"package":null,"item":["Neon.Transformers.MaybeT","runMaybeT"]},{"package":null,"item":["Neon.Types.HasTraverse","HasTraverse"]},{"package":null,"item":["Neon.Types.HasTraverse","arrayHasTraverse"]},{"package":null,"item":["Neon.Types.HasTraverse","listHasTraverse"]},{"package":null,"item":["Neon.Types.HasTraverse","maybeHasTraverse"]},{"package":null,"item":["Neon.Types.HasTraverse","sequence"]},{"package":null,"item":["Neon.Types.IsEnumerable","IsEnumerable"]},{"package":null,"item":["Neon.Types.IsEnumerable","booleanIsEnumerable"]},{"package":null,"item":["Neon.Types.IsEnumerable","charIsEnumerable"]},{"package":null,"item":["Neon.Types.IsEnumerable","intIsEnumerable"]},{"package":null,"item":["Neon.Types.IsEnumerable","maybeIsEnumerable"]},{"package":null,"item":["Neon.Types.IsEnumerable","orderingIsEnumerable"]},{"package":null,"item":["Neon.Types.IsEnumerable","unitIsEnumerable"]},{"package":null,"item":["Neon.Types.IsEnumerable","range"]},{"package":null,"item":["Neon.Values.Constant","Constant"]},{"package":null,"item":["Neon.Values.Constant","constantHasAdd"]},{"package":null,"item":["Neon.Values.Constant","constantHasAlternative"]},{"package":null,"item":["Neon.Values.Constant","constantHasAnd"]},{"package":null,"item":["Neon.Values.Constant","constantHasApply"]},{"package":null,"item":["Neon.Values.Constant","constantHasBind"]},{"package":null,"item":["Neon.Values.Constant","constantHasBottom"]},{"package":null,"item":["Neon.Values.Constant","constantHasCompare"]},{"package":null,"item":["Neon.Values.Constant","constantHasDivide"]},{"package":null,"item":["Neon.Values.Constant","constantHasEmpty"]},{"package":null,"item":["Neon.Values.Constant","constantHasEqual"]},{"package":null,"item":["Neon.Values.Constant","constantHasFold"]},{"package":null,"item":["Neon.Values.Constant","constantHasMap"]},{"package":null,"item":["Neon.Values.Constant","constantHasMultiply"]},{"package":null,"item":["Neon.Values.Constant","constantHasNot"]},{"package":null,"item":["Neon.Values.Constant","constantHasOne"]},{"package":null,"item":["Neon.Values.Constant","constantHasOr"]},{"package":null,"item":["Neon.Values.Constant","constantHasPower"]},{"package":null,"item":["Neon.Values.Constant","constantHasPure"]},{"package":null,"item":["Neon.Values.Constant","constantHasShow"]},{"package":null,"item":["Neon.Values.Constant","constantHasSubtract"]},{"package":null,"item":["Neon.Values.Constant","constantHasTop"]},{"package":null,"item":["Neon.Values.Constant","constantHasZero"]},{"package":null,"item":["Neon.Values.Constant","constantIsEnumerable"]},{"package":null,"item":["Neon.Values.Constant","runConstant"]},{"package":null,"item":["Neon.Values.Identity","Identity"]},{"package":null,"item":["Neon.Values.Identity","identityHasAdd"]},{"package":null,"item":["Neon.Values.Identity","identityHasAnd"]},{"package":null,"item":["Neon.Values.Identity","identityHasApply"]},{"package":null,"item":["Neon.Values.Identity","identityHasBind"]},{"package":null,"item":["Neon.Values.Identity","identityHasBottom"]},{"package":null,"item":["Neon.Values.Identity","identityHasCompare"]},{"package":null,"item":["Neon.Values.Identity","identityHasDivide"]},{"package":null,"item":["Neon.Values.Identity","identityHasEqual"]},{"package":null,"item":["Neon.Values.Identity","identityHasFold"]},{"package":null,"item":["Neon.Values.Identity","identityHasMap"]},{"package":null,"item":["Neon.Values.Identity","identityHasMultiply"]},{"package":null,"item":["Neon.Values.Identity","identityHasNot"]},{"package":null,"item":["Neon.Values.Identity","identityHasOne"]},{"package":null,"item":["Neon.Values.Identity","identityHasOr"]},{"package":null,"item":["Neon.Values.Identity","identityHasPure"]},{"package":null,"item":["Neon.Values.Identity","identityHasShow"]},{"package":null,"item":["Neon.Values.Identity","identityHasSubtract"]},{"package":null,"item":["Neon.Values.Identity","identityHasTop"]},{"package":null,"item":["Neon.Values.Identity","identityHasZero"]},{"package":null,"item":["Neon.Values.Identity","identityIsEnumerable"]},{"package":null,"item":["Neon.Values.Identity","runIdentity"]},{"package":null,"item":["Neon.Values.Either","Either"]},{"package":null,"item":["Neon.Values.Either","eitherHasAdd"]},{"package":null,"item":["Neon.Values.Either","eitherHasAlternative"]},{"package":null,"item":["Neon.Values.Either","eitherHasAnd"]},{"package":null,"item":["Neon.Values.Either","eitherHasApply"]},{"package":null,"item":["Neon.Values.Either","eitherHasBind"]},{"package":null,"item":["Neon.Values.Either","eitherHasBottom"]},{"package":null,"item":["Neon.Values.Either","eitherHasCompare"]},{"package":null,"item":["Neon.Values.Either","eitherHasDivide"]},{"package":null,"item":["Neon.Values.Either","eitherHasEqual"]},{"package":null,"item":["Neon.Values.Either","eitherHasFold"]},{"package":null,"item":["Neon.Values.Either","eitherHasMap"]},{"package":null,"item":["Neon.Values.Either","eitherHasMultiply"]},{"package":null,"item":["Neon.Values.Either","eitherHasNot"]},{"package":null,"item":["Neon.Values.Either","eitherHasOne"]},{"package":null,"item":["Neon.Values.Either","eitherHasOr"]},{"package":null,"item":["Neon.Values.Either","eitherHasPure"]},{"package":null,"item":["Neon.Values.Either","eitherHasShow"]},{"package":null,"item":["Neon.Values.Either","eitherHasSubtract"]},{"package":null,"item":["Neon.Values.Either","eitherHasTop"]},{"package":null,"item":["Neon.Values.Either","eitherHasZero"]},{"package":null,"item":["Neon.Values.Either","either"]},{"package":null,"item":["Neon.Values.Either","isLeft"]},{"package":null,"item":["Neon.Values.Either","isRight"]},{"package":null,"item":["Neon.Values.Either","fromEither"]},{"package":null,"item":["Neon.Values.Either","toEither"]},{"package":null,"item":["Neon.Values.Nullable","Nullable"]},{"package":null,"item":["Neon.Values.Nullable","fromNullable"]},{"package":null,"item":["Neon.Values.Nullable","nullableHasEqual"]},{"package":null,"item":["Neon.Values.Nullable","nullableHasShow"]},{"package":null,"item":["Neon.Values.Nullable","toNullable"]},{"package":null,"item":["Neon.Primitives.Char","toLower"]},{"package":null,"item":["Neon.Primitives.Char","toUpper"]},{"package":null,"item":["Neon.Primitives.Boolean","otherwise"]},{"package":null,"item":["Neon.Primitives.Boolean","boolean"]},{"package":null,"item":["Neon.Effects.Effect","Effect"]},{"package":null,"item":["Neon.Effects.Effect","effectHasApply"]},{"package":null,"item":["Neon.Effects.Effect","effectHasBind"]},{"package":null,"item":["Neon.Effects.Effect","effectHasMap"]},{"package":null,"item":["Neon.Effects.Effect","effectHasPure"]},{"package":null,"item":["Neon.Effects.Effect","runPure"]},{"package":null,"item":["Neon.Effects.Effect","unsafeRunEffect"]},{"package":null,"item":["Neon.Effects.Exception","EXCEPTION"]},{"package":null,"item":["Neon.Effects.Exception","Exception"]},{"package":null,"item":["Neon.Effects.Exception","exception"]},{"package":null,"item":["Neon.Effects.Exception","throw"]},{"package":null,"item":["Neon.Effects.Exception","catch"]},{"package":null,"item":["Neon.Effects.Exception","exceptionHasShow"]},{"package":null,"item":["Neon.Effects.Random","RANDOM"]},{"package":null,"item":["Neon.Effects.Random","randomNumber"]},{"package":null,"item":["Neon.Effects.Console","CONSOLE"]},{"package":null,"item":["Neon.Effects.Console","info"]},{"package":null,"item":["Neon.Effects.Console","log"]},{"package":null,"item":["Neon.Effects.Console","warn"]},{"package":null,"item":["Neon.Effects.Console","error"]},{"package":null,"item":["Neon.Effects.Console","print"]},{"package":"purescript-math","item":["Math","Radians"]},{"package":"purescript-math","item":["Math","abs"]},{"package":"purescript-math","item":["Math","acos"]},{"package":"purescript-math","item":["Math","asin"]},{"package":"purescript-math","item":["Math","atan"]},{"package":"purescript-math","item":["Math","atan2"]},{"package":"purescript-math","item":["Math","ceil"]},{"package":"purescript-math","item":["Math","cos"]},{"package":"purescript-math","item":["Math","exp"]},{"package":"purescript-math","item":["Math","floor"]},{"package":"purescript-math","item":["Math","log"]},{"package":"purescript-math","item":["Math","max"]},{"package":"purescript-math","item":["Math","min"]},{"package":"purescript-math","item":["Math","pow"]},{"package":"purescript-math","item":["Math","round"]},{"package":"purescript-math","item":["Math","sin"]},{"package":"purescript-math","item":["Math","sqrt"]},{"package":"purescript-math","item":["Math","tan"]},{"package":"purescript-math","item":["Math","(%)"]},{"package":"purescript-math","item":["Math","(%)"]},{"package":"purescript-math","item":["Math","e"]},{"package":"purescript-math","item":["Math","ln2"]},{"package":"purescript-math","item":["Math","ln10"]},{"package":"purescript-math","item":["Math","log2e"]},{"package":"purescript-math","item":["Math","log10e"]},{"package":"purescript-math","item":["Math","pi"]},{"package":"purescript-math","item":["Math","sqrt1_2"]},{"package":"purescript-math","item":["Math","sqrt2"]},{"package":"purescript-globals","item":["Global.Unsafe","unsafeStringify"]},{"package":"purescript-globals","item":["Global","nan"]},{"package":"purescript-globals","item":["Global","isNaN"]},{"package":"purescript-globals","item":["Global","infinity"]},{"package":"purescript-globals","item":["Global","isFinite"]},{"package":"purescript-globals","item":["Global","readInt"]},{"package":"purescript-globals","item":["Global","readFloat"]},{"package":"purescript-globals","item":["Global","decodeURI"]},{"package":"purescript-globals","item":["Global","encodeURI"]},{"package":"purescript-globals","item":["Global","decodeURIComponent"]},{"package":"purescript-globals","item":["Global","encodeURIComponent"]},{"package":"purescript-validation","item":["Data.Validation","V"]},{"package":"purescript-validation","item":["Data.Validation","invalid"]},{"package":"purescript-validation","item":["Data.Validation","runV"]},{"package":"purescript-validation","item":["Data.Validation","isValid"]},{"package":"purescript-validation","item":["Data.Validation","showV"]},{"package":"purescript-validation","item":["Data.Validation","functorV"]},{"package":"purescript-validation","item":["Data.Validation","applyV"]},{"package":"purescript-validation","item":["Data.Validation","applicativeV"]},{"package":"purescript-datetime","item":["Data.Time","HourOfDay"]},{"package":"purescript-datetime","item":["Data.Time","eqHourOfDay"]},{"package":"purescript-datetime","item":["Data.Time","ordHourOfDay"]},{"package":"purescript-datetime","item":["Data.Time","Hours"]},{"package":"purescript-datetime","item":["Data.Time","eqHours"]},{"package":"purescript-datetime","item":["Data.Time","ordHours"]},{"package":"purescript-datetime","item":["Data.Time","semiringHours"]},{"package":"purescript-datetime","item":["Data.Time","ringHours"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringHours"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingHours"]},{"package":"purescript-datetime","item":["Data.Time","numHours"]},{"package":"purescript-datetime","item":["Data.Time","showHours"]},{"package":"purescript-datetime","item":["Data.Time","MinuteOfHour"]},{"package":"purescript-datetime","item":["Data.Time","eqMinuteOfHour"]},{"package":"purescript-datetime","item":["Data.Time","ordMinuteOfHour"]},{"package":"purescript-datetime","item":["Data.Time","Minutes"]},{"package":"purescript-datetime","item":["Data.Time","eqMinutes"]},{"package":"purescript-datetime","item":["Data.Time","ordMinutes"]},{"package":"purescript-datetime","item":["Data.Time","semiringMinutes"]},{"package":"purescript-datetime","item":["Data.Time","ringMinutes"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringMinutes"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingMinutes"]},{"package":"purescript-datetime","item":["Data.Time","numMinutes"]},{"package":"purescript-datetime","item":["Data.Time","showMinutes"]},{"package":"purescript-datetime","item":["Data.Time","SecondOfMinute"]},{"package":"purescript-datetime","item":["Data.Time","eqSecondOfMinute"]},{"package":"purescript-datetime","item":["Data.Time","ordSecondOfMinute"]},{"package":"purescript-datetime","item":["Data.Time","Seconds"]},{"package":"purescript-datetime","item":["Data.Time","eqSeconds"]},{"package":"purescript-datetime","item":["Data.Time","ordSeconds"]},{"package":"purescript-datetime","item":["Data.Time","semiringSeconds"]},{"package":"purescript-datetime","item":["Data.Time","ringSeconds"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringSeconds"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingSeconds"]},{"package":"purescript-datetime","item":["Data.Time","numSeconds"]},{"package":"purescript-datetime","item":["Data.Time","showSeconds"]},{"package":"purescript-datetime","item":["Data.Time","MillisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Time","eqMillisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Time","ordMillisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Time","Milliseconds"]},{"package":"purescript-datetime","item":["Data.Time","eqMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","ordMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","semiringMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","ringMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","moduloSemiringMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","divisionRingMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","numMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","showMilliseconds"]},{"package":"purescript-datetime","item":["Data.Time","TimeValue"]},{"package":"purescript-datetime","item":["Data.Time","timeValueHours"]},{"package":"purescript-datetime","item":["Data.Time","timeValueMinutes"]},{"package":"purescript-datetime","item":["Data.Time","timeValueSeconds"]},{"package":"purescript-datetime","item":["Data.Time","timeValueMilliseconds"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charCodeAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","char"]},{"package":"purescript-profunctor","item":["Data.Profunctor","Profunctor"]},{"package":"purescript-profunctor","item":["Data.Profunctor","lmap"]},{"package":"purescript-profunctor","item":["Data.Profunctor","rmap"]},{"package":"purescript-profunctor","item":["Data.Profunctor","arr"]},{"package":"purescript-profunctor","item":["Data.Profunctor","profunctorFn"]},{"package":"purescript-free","item":["Data.NaturalTransformation","NaturalTransformation"]},{"package":"purescript-free","item":["Data.NaturalTransformation","Natural"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidUnit"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidString"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidArray"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.&.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.|.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.^.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.&.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.|.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.^.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","shl"]},{"package":"purescript-integers","item":["Data.Int.Bits","shr"]},{"package":"purescript-integers","item":["Data.Int.Bits","zshr"]},{"package":"purescript-integers","item":["Data.Int.Bits","complement"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","runEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant","Contravariant"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant","(>$<)"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant","(>#<)"]},{"package":"purescript-contravariant","item":["Data.Op","Op"]},{"package":"purescript-contravariant","item":["Data.Op","runOp"]},{"package":"purescript-contravariant","item":["Data.Op","semigroupoidOp"]},{"package":"purescript-contravariant","item":["Data.Op","categoryOp"]},{"package":"purescript-contravariant","item":["Data.Op","contravariantOp"]},{"package":"purescript-contravariant","item":["Data.Op","semigroupOp"]},{"package":"purescript-contravariant","item":["Data.Op","monoidOp"]},{"package":"purescript-contravariant","item":["Data.Predicate","Predicate"]},{"package":"purescript-contravariant","item":["Data.Predicate","runPredicate"]},{"package":"purescript-contravariant","item":["Data.Predicate","contravariantPredicate"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-functions","item":["Data.Function","on"]},{"package":"purescript-functions","item":["Data.Function","Fn0"]},{"package":"purescript-functions","item":["Data.Function","Fn1"]},{"package":"purescript-functions","item":["Data.Function","Fn2"]},{"package":"purescript-functions","item":["Data.Function","Fn3"]},{"package":"purescript-functions","item":["Data.Function","Fn4"]},{"package":"purescript-functions","item":["Data.Function","Fn5"]},{"package":"purescript-functions","item":["Data.Function","Fn6"]},{"package":"purescript-functions","item":["Data.Function","Fn7"]},{"package":"purescript-functions","item":["Data.Function","Fn8"]},{"package":"purescript-functions","item":["Data.Function","Fn9"]},{"package":"purescript-functions","item":["Data.Function","Fn10"]},{"package":"purescript-functions","item":["Data.Function","mkFn0"]},{"package":"purescript-functions","item":["Data.Function","mkFn1"]},{"package":"purescript-functions","item":["Data.Function","mkFn2"]},{"package":"purescript-functions","item":["Data.Function","mkFn3"]},{"package":"purescript-functions","item":["Data.Function","mkFn4"]},{"package":"purescript-functions","item":["Data.Function","mkFn5"]},{"package":"purescript-functions","item":["Data.Function","mkFn6"]},{"package":"purescript-functions","item":["Data.Function","mkFn7"]},{"package":"purescript-functions","item":["Data.Function","mkFn8"]},{"package":"purescript-functions","item":["Data.Function","mkFn9"]},{"package":"purescript-functions","item":["Data.Function","mkFn10"]},{"package":"purescript-functions","item":["Data.Function","runFn0"]},{"package":"purescript-functions","item":["Data.Function","runFn1"]},{"package":"purescript-functions","item":["Data.Function","runFn2"]},{"package":"purescript-functions","item":["Data.Function","runFn3"]},{"package":"purescript-functions","item":["Data.Function","runFn4"]},{"package":"purescript-functions","item":["Data.Function","runFn5"]},{"package":"purescript-functions","item":["Data.Function","runFn6"]},{"package":"purescript-functions","item":["Data.Function","runFn7"]},{"package":"purescript-functions","item":["Data.Function","runFn8"]},{"package":"purescript-functions","item":["Data.Function","runFn9"]},{"package":"purescript-functions","item":["Data.Function","runFn10"]},{"package":"purescript-orders","item":["Data.Ord","invert"]},{"package":"purescript-orders","item":["Data.Ord","comparing"]},{"package":"purescript-orders","item":["Data.Ord","Down"]},{"package":"purescript-orders","item":["Data.Ord","eqDown"]},{"package":"purescript-orders","item":["Data.Ord","showDown"]},{"package":"purescript-orders","item":["Data.Ord","ordDown"]},{"package":"purescript-orders","item":["Data.Ord","clamp"]},{"package":"purescript-orders","item":["Data.Ord","between"]},{"package":"purescript-orders","item":["Data.Ord","min"]},{"package":"purescript-orders","item":["Data.Ord","max"]},{"package":"purescript-orders","item":["Data.Ord","Min"]},{"package":"purescript-orders","item":["Data.Ord","runMin"]},{"package":"purescript-orders","item":["Data.Ord","eqMin"]},{"package":"purescript-orders","item":["Data.Ord","showMin"]},{"package":"purescript-orders","item":["Data.Ord","ordMin"]},{"package":"purescript-orders","item":["Data.Ord","semigroupMin"]},{"package":"purescript-orders","item":["Data.Ord","monoidMin"]},{"package":"purescript-orders","item":["Data.Ord","Max"]},{"package":"purescript-orders","item":["Data.Ord","runMax"]},{"package":"purescript-orders","item":["Data.Ord","eqMax"]},{"package":"purescript-orders","item":["Data.Ord","showMax"]},{"package":"purescript-orders","item":["Data.Ord","ordMax"]},{"package":"purescript-orders","item":["Data.Ord","semigroupMax"]},{"package":"purescript-orders","item":["Data.Ord","monoidMax"]},{"package":"purescript-exists","item":["Data.Exists","Exists"]},{"package":"purescript-exists","item":["Data.Exists","mkExists"]},{"package":"purescript-exists","item":["Data.Exists","runExists"]},{"package":"purescript-contravariant","item":["Data.Comparison","Comparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","runComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","contravariantComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","semigroupComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","monoidComparison"]},{"package":"purescript-contravariant","item":["Data.Comparison","defaultComparison"]},{"package":"purescript-contravariant","item":["Data.Equivalence","Equivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","runEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","contravariantEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","semigroupEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","monoidEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","defaultEquivalence"]},{"package":"purescript-contravariant","item":["Data.Equivalence","comparisonEquivalence"]},{"package":"purescript-strings","item":["Data.Char","toString"]},{"package":"purescript-strings","item":["Data.Char","toCharCode"]},{"package":"purescript-strings","item":["Data.Char","fromCharCode"]},{"package":"purescript-strings","item":["Data.Char","toLower"]},{"package":"purescript-strings","item":["Data.Char","toUpper"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","Bifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","lmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","rmap"]},{"package":"purescript-transformers","item":["Control.Monad.Trans","MonadTrans"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","MonadReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","reader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","monadReaderFun"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","functorEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","applyEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","applicativeEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","bindEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","monadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","monadEffEff"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","print"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","logAny"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","errorAny"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","EXCEPTION"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","Error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","showError"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","message"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","throwException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","catchException"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","REF"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","Ref"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","newRef"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","readRef"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","modifyRef'"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","modifyRef"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref","writeRef"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeInterleaveEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafePerformEff"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrowException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrow"]},{"package":"purescript-refs","item":["Control.Monad.Eff.Ref.Unsafe","unsafeRunRef"]},{"package":"purescript-st","item":["Control.Monad.ST","ST"]},{"package":"purescript-st","item":["Control.Monad.ST","STRef"]},{"package":"purescript-st","item":["Control.Monad.ST","newSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","readSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","modifySTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","writeSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","runST"]},{"package":"purescript-st","item":["Control.Monad.ST","pureST"]},{"package":"purescript-assert","item":["Test.Assert","ASSERT"]},{"package":"purescript-assert","item":["Test.Assert","assert"]},{"package":"purescript-assert","item":["Test.Assert","assert'"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows'"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Class","MonadCont"]},{"package":"purescript-control","item":["Control.Monad","when"]},{"package":"purescript-control","item":["Control.Monad","unless"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","extendFn"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-transformers","item":["Control.Comonad.Trans","ComonadTrans"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","TracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","runTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","functorTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","extendTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTransTracedT"]},{"package":"purescript-free","item":["Data.Coyoneda","CoyonedaF"]},{"package":"purescript-free","item":["Data.Coyoneda","Coyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","functorCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","applyCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","applicativeCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","bindCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","monadCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","monadTransCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","extendCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","comonadCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","coyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","liftCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","lowerCoyoneda"]},{"package":"purescript-free","item":["Data.Coyoneda","liftCoyonedaT"]},{"package":"purescript-free","item":["Data.Coyoneda","liftCoyonedaTF"]},{"package":"purescript-lazy","item":["Data.Lazy","Lazy"]},{"package":"purescript-lazy","item":["Data.Lazy","defer"]},{"package":"purescript-lazy","item":["Data.Lazy","force"]},{"package":"purescript-lazy","item":["Data.Lazy","semiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","moduloSemiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","divisionRingLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","numLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","eqLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ordLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedOrdLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","semigroupLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monoidLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","booleanAlgebraLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","functorLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applyLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applicativeLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","bindLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","extendLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","comonadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","showLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","lazyLazy"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","runAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","runConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semiringConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","runDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semiringDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","runDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","runMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-free","item":["Data.Yoneda","Yoneda"]},{"package":"purescript-free","item":["Data.Yoneda","functorYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","applyYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","applicativeYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","bindYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","monadYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","monadTransYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","extendYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","comonadYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","runYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","liftYoneda"]},{"package":"purescript-free","item":["Data.Yoneda","lowerYoneda"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","join"]},{"package":"purescript-control","item":["Control.Bind","ifM"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","Biapply"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift2"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift3"]},{"package":"purescript-bifunctors","item":["Control.Biapplicative","Biapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","Clown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","runClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","Flip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","runFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","Join"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","runJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","Joker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","runJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","Product"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","Wrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","unwrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapplicative"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","lift2"]},{"package":"purescript-control","item":["Control.Apply","lift3"]},{"package":"purescript-control","item":["Control.Apply","lift4"]},{"package":"purescript-control","item":["Control.Apply","lift5"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","Bifoldable"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifold"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bitraverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifor_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bisequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biany"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biall"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","Bitraversable"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bitraverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bisequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bifor"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","altArray"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.Plus","plusArray"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alternative","alternativeArray"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.MonadPlus","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","monadPlusArray"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadPlusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","moduloSemiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","divisionRingMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","numMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedOrdMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","booleanAlgebraMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-arrays","item":["Data.Array.ST","STArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","Assoc"]},{"package":"purescript-arrays","item":["Data.Array.ST","runSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","emptySTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","thaw"]},{"package":"purescript-arrays","item":["Data.Array.ST","freeze"]},{"package":"purescript-arrays","item":["Data.Array.ST","peekSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pokeSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushAllSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","spliceSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","toAssocArray"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","runFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","runLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","Foldable"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableArray"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableMaybe"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableFirst"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableLast"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableAdditive"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableDual"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableDisj"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableConj"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableMultiplicative"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","fold"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","traverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","for_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","mconcat"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","intercalate"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","and"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","or"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","any"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","all"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","product"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","elem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","notElem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","find"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","unsafeThrow"]},{"package":"purescript-integers","item":["Data.Int","fromNumber"]},{"package":"purescript-integers","item":["Data.Int","floor"]},{"package":"purescript-integers","item":["Data.Int","ceil"]},{"package":"purescript-integers","item":["Data.Int","round"]},{"package":"purescript-integers","item":["Data.Int","toNumber"]},{"package":"purescript-integers","item":["Data.Int","fromString"]},{"package":"purescript-integers","item":["Data.Int","even"]},{"package":"purescript-integers","item":["Data.Int","odd"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","RANDOM"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","random"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomInt"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomRange"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomBool"]},{"package":"purescript-nullable","item":["Data.Nullable","Nullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toNullable"]},{"package":"purescript-nullable","item":["Data.Nullable","toMaybe"]},{"package":"purescript-nullable","item":["Data.Nullable","showNullable"]},{"package":"purescript-nullable","item":["Data.Nullable","eqNullable"]},{"package":"purescript-nullable","item":["Data.Nullable","ordNullable"]},{"package":"purescript-maps","item":["Data.StrMap.ST","STStrMap"]},{"package":"purescript-maps","item":["Data.StrMap.ST","new"]},{"package":"purescript-maps","item":["Data.StrMap.ST","peek"]},{"package":"purescript-maps","item":["Data.StrMap.ST","poke"]},{"package":"purescript-maps","item":["Data.StrMap.ST","delete"]},{"package":"purescript-strings","item":["Data.String","charAt"]},{"package":"purescript-strings","item":["Data.String","fromChar"]},{"package":"purescript-strings","item":["Data.String","singleton"]},{"package":"purescript-strings","item":["Data.String","charCodeAt"]},{"package":"purescript-strings","item":["Data.String","toChar"]},{"package":"purescript-strings","item":["Data.String","null"]},{"package":"purescript-strings","item":["Data.String","uncons"]},{"package":"purescript-strings","item":["Data.String","takeWhile"]},{"package":"purescript-strings","item":["Data.String","dropWhile"]},{"package":"purescript-strings","item":["Data.String","stripPrefix"]},{"package":"purescript-strings","item":["Data.String","stripSuffix"]},{"package":"purescript-strings","item":["Data.String","fromCharArray"]},{"package":"purescript-strings","item":["Data.String","contains"]},{"package":"purescript-strings","item":["Data.String","indexOf"]},{"package":"purescript-strings","item":["Data.String","indexOf'"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf'"]},{"package":"purescript-strings","item":["Data.String","length"]},{"package":"purescript-strings","item":["Data.String","localeCompare"]},{"package":"purescript-strings","item":["Data.String","replace"]},{"package":"purescript-strings","item":["Data.String","take"]},{"package":"purescript-strings","item":["Data.String","drop"]},{"package":"purescript-strings","item":["Data.String","count"]},{"package":"purescript-strings","item":["Data.String","split"]},{"package":"purescript-strings","item":["Data.String","toCharArray"]},{"package":"purescript-strings","item":["Data.String","toLower"]},{"package":"purescript-strings","item":["Data.String","toUpper"]},{"package":"purescript-strings","item":["Data.String","trim"]},{"package":"purescript-strings","item":["Data.String","joinWith"]},{"package":"purescript-strings","item":["Data.String.Regex","Regex"]},{"package":"purescript-strings","item":["Data.String.Regex","showRegex"]},{"package":"purescript-strings","item":["Data.String.Regex","RegexFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","noFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","regex"]},{"package":"purescript-strings","item":["Data.String.Regex","source"]},{"package":"purescript-strings","item":["Data.String.Regex","flags"]},{"package":"purescript-strings","item":["Data.String.Regex","renderFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","parseFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","test"]},{"package":"purescript-strings","item":["Data.String.Regex","match"]},{"package":"purescript-strings","item":["Data.String.Regex","replace"]},{"package":"purescript-strings","item":["Data.String.Regex","replace'"]},{"package":"purescript-strings","item":["Data.String.Regex","search"]},{"package":"purescript-strings","item":["Data.String.Regex","split"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Traversable"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","sequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableArray"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableMaybe"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableFirst"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableLast"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableAdditive"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableDual"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableConj"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableDisj"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableMultiplicative"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","for"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Accum"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","functorStateL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applyStateL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applicativeStateL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanl"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","functorStateR"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applyStateR"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applicativeStateR"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanr"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumR"]},{"package":"purescript-const","item":["Data.Const","Const"]},{"package":"purescript-const","item":["Data.Const","getConst"]},{"package":"purescript-const","item":["Data.Const","eqConst"]},{"package":"purescript-const","item":["Data.Const","ordConst"]},{"package":"purescript-const","item":["Data.Const","boundedConst"]},{"package":"purescript-const","item":["Data.Const","showConst"]},{"package":"purescript-const","item":["Data.Const","semigroupoidConst"]},{"package":"purescript-const","item":["Data.Const","semigroupConst"]},{"package":"purescript-const","item":["Data.Const","monoidConst"]},{"package":"purescript-const","item":["Data.Const","functorConst"]},{"package":"purescript-const","item":["Data.Const","invariantConst"]},{"package":"purescript-const","item":["Data.Const","applyConst"]},{"package":"purescript-const","item":["Data.Const","bindConst"]},{"package":"purescript-const","item":["Data.Const","applicativeConst"]},{"package":"purescript-const","item":["Data.Const","contravariantConst"]},{"package":"purescript-const","item":["Data.Const","foldableConst"]},{"package":"purescript-const","item":["Data.Const","traversableConst"]},{"package":"purescript-either","item":["Data.Either","Either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","isLeft"]},{"package":"purescript-either","item":["Data.Either","isRight"]},{"package":"purescript-either","item":["Data.Either","functorEither"]},{"package":"purescript-either","item":["Data.Either","bifunctorEither"]},{"package":"purescript-either","item":["Data.Either","applyEither"]},{"package":"purescript-either","item":["Data.Either","applicativeEither"]},{"package":"purescript-either","item":["Data.Either","altEither"]},{"package":"purescript-either","item":["Data.Either","bindEither"]},{"package":"purescript-either","item":["Data.Either","monadEither"]},{"package":"purescript-either","item":["Data.Either","extendEither"]},{"package":"purescript-either","item":["Data.Either","showEither"]},{"package":"purescript-either","item":["Data.Either","eqEither"]},{"package":"purescript-either","item":["Data.Either","ordEither"]},{"package":"purescript-either","item":["Data.Either","boundedEither"]},{"package":"purescript-either","item":["Data.Either","foldableEither"]},{"package":"purescript-either","item":["Data.Either","bifoldableEither"]},{"package":"purescript-either","item":["Data.Either","traversableEither"]},{"package":"purescript-either","item":["Data.Either","bitraversableEither"]},{"package":"purescript-either","item":["Data.Either","semiringEither"]},{"package":"purescript-either","item":["Data.Either","semigroupEither"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","MonadError"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","catchJust"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorEither"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorMaybe"]},{"package":"purescript-either","item":["Data.Either.Nested","Either2"]},{"package":"purescript-either","item":["Data.Either.Nested","Either3"]},{"package":"purescript-either","item":["Data.Either.Nested","Either4"]},{"package":"purescript-either","item":["Data.Either.Nested","Either5"]},{"package":"purescript-either","item":["Data.Either.Nested","Either6"]},{"package":"purescript-either","item":["Data.Either.Nested","Either7"]},{"package":"purescript-either","item":["Data.Either.Nested","Either8"]},{"package":"purescript-either","item":["Data.Either.Nested","Either9"]},{"package":"purescript-either","item":["Data.Either.Nested","Either10"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either10of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2"]},{"package":"purescript-either","item":["Data.Either.Nested","either3"]},{"package":"purescript-either","item":["Data.Either.Nested","either4"]},{"package":"purescript-either","item":["Data.Either.Nested","either5"]},{"package":"purescript-either","item":["Data.Either.Nested","either6"]},{"package":"purescript-either","item":["Data.Either.Nested","either7"]},{"package":"purescript-either","item":["Data.Either.Nested","either8"]},{"package":"purescript-either","item":["Data.Either.Nested","either9"]},{"package":"purescript-either","item":["Data.Either.Nested","either10"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromLeft"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromRight"]},{"package":"purescript-foreign","item":["Data.Foreign","Foreign"]},{"package":"purescript-foreign","item":["Data.Foreign","ForeignError"]},{"package":"purescript-foreign","item":["Data.Foreign","showForeignError"]},{"package":"purescript-foreign","item":["Data.Foreign","eqForeignError"]},{"package":"purescript-foreign","item":["Data.Foreign","F"]},{"package":"purescript-foreign","item":["Data.Foreign","parseJSON"]},{"package":"purescript-foreign","item":["Data.Foreign","toForeign"]},{"package":"purescript-foreign","item":["Data.Foreign","unsafeFromForeign"]},{"package":"purescript-foreign","item":["Data.Foreign","typeOf"]},{"package":"purescript-foreign","item":["Data.Foreign","tagOf"]},{"package":"purescript-foreign","item":["Data.Foreign","unsafeReadTagged"]},{"package":"purescript-foreign","item":["Data.Foreign","isNull"]},{"package":"purescript-foreign","item":["Data.Foreign","isUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign","isArray"]},{"package":"purescript-foreign","item":["Data.Foreign","readString"]},{"package":"purescript-foreign","item":["Data.Foreign","readChar"]},{"package":"purescript-foreign","item":["Data.Foreign","readBoolean"]},{"package":"purescript-foreign","item":["Data.Foreign","readNumber"]},{"package":"purescript-foreign","item":["Data.Foreign","readInt"]},{"package":"purescript-foreign","item":["Data.Foreign","readArray"]},{"package":"purescript-foreign","item":["Data.Foreign.Null","Null"]},{"package":"purescript-foreign","item":["Data.Foreign.Null","runNull"]},{"package":"purescript-foreign","item":["Data.Foreign.Null","readNull"]},{"package":"purescript-foreign","item":["Data.Foreign.NullOrUndefined","NullOrUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.NullOrUndefined","runNullOrUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.NullOrUndefined","readNullOrUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Undefined","Undefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Undefined","runUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Undefined","readUndefined"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","Index"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","(!)"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","(!)"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","prop"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","index"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","indexString"]},{"package":"purescript-foreign","item":["Data.Foreign.Index","indexInt"]},{"package":"purescript-foreign","item":["Data.Foreign.Keys","keys"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","Choice"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","choiceFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(+++)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(|||)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(+++)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Choice","(|||)"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","Market"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","MarketP"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","functorMarket"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","profunctorMarket"]},{"package":"purescript-lens","item":["Optic.Internal.Prism","choiceMarket"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","Coproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","runCoproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","left"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","right"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","coproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","functorCoproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","foldableCoproduct"]},{"package":"purescript-coproducts","item":["Data.Functor.Coproduct","traversableCoproduct"]},{"package":"purescript-inject","item":["Data.Inject","Inject"]},{"package":"purescript-inject","item":["Data.Inject","injectReflexive"]},{"package":"purescript-inject","item":["Data.Inject","injectLeft"]},{"package":"purescript-inject","item":["Data.Inject","injectRight"]},{"package":"purescript-identity","item":["Data.Identity","Identity"]},{"package":"purescript-identity","item":["Data.Identity","runIdentity"]},{"package":"purescript-identity","item":["Data.Identity","eqIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ordIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedOrdIdentity"]},{"package":"purescript-identity","item":["Data.Identity","booleanAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semigroupIdenity"]},{"package":"purescript-identity","item":["Data.Identity","monoidIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","moduloSemiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","divisionRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","numIdentity"]},{"package":"purescript-identity","item":["Data.Identity","showIdentity"]},{"package":"purescript-identity","item":["Data.Identity","functorIdentity"]},{"package":"purescript-identity","item":["Data.Identity","invariantIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applyIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applicativeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","bindIdentity"]},{"package":"purescript-identity","item":["Data.Identity","monadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","extendIdentity"]},{"package":"purescript-identity","item":["Data.Identity","comonadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","foldableIdentity"]},{"package":"purescript-identity","item":["Data.Identity","traversableIdentity"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","Traced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","runTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","traced"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","MonadRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM2"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM3"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","monadRecIdentity"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","monadRecEff"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","forever"]},{"package":"purescript-aff","item":["Control.Monad.Aff","Aff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","PureAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","Canceler"]},{"package":"purescript-aff","item":["Control.Monad.Aff","cancel"]},{"package":"purescript-aff","item":["Control.Monad.Aff","cancelWith"]},{"package":"purescript-aff","item":["Control.Monad.Aff","launchAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","runAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","makeAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","makeAff'"]},{"package":"purescript-aff","item":["Control.Monad.Aff","later"]},{"package":"purescript-aff","item":["Control.Monad.Aff","later'"]},{"package":"purescript-aff","item":["Control.Monad.Aff","finally"]},{"package":"purescript-aff","item":["Control.Monad.Aff","forkAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","attempt"]},{"package":"purescript-aff","item":["Control.Monad.Aff","apathize"]},{"package":"purescript-aff","item":["Control.Monad.Aff","liftEff'"]},{"package":"purescript-aff","item":["Control.Monad.Aff","nonCanceler"]},{"package":"purescript-aff","item":["Control.Monad.Aff","semigroupAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monoidAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","functorAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","applyAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","applicativeAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","bindAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monadAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monadEffAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monadErrorAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","altAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","plusAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","alternativeAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monadPlusAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monadRecAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monadContAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff","semigroupCanceler"]},{"package":"purescript-aff","item":["Control.Monad.Aff","monoidCanceler"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","AVAR"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","AVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","AffAVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","makeVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","makeVar'"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","takeVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","putVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","modifyVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.AVar","killVar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Console","log"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Console","print"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","Par"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","runPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","semigroupPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","monoidPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","functorPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","applyPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","applicativePar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","altPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","plusPar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Par","alternativePar"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Unsafe","unsafeTrace"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Unsafe","unsafeInterleaveAff"]},{"package":"purescript-distributive","item":["Data.Distributive","Distributive"]},{"package":"purescript-distributive","item":["Data.Distributive","cotraverse"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveIdentity"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveFunction"]},{"package":"purescript-lens","item":["Optic.Internal.Setter","Settable"]},{"package":"purescript-lens","item":["Optic.Internal.Setter","settableIdentity"]},{"package":"purescript-lens","item":["Optic.Types","Accessing"]},{"package":"purescript-lens","item":["Optic.Types","APrism"]},{"package":"purescript-lens","item":["Optic.Types","APrismP"]},{"package":"purescript-lens","item":["Optic.Types","ASetter"]},{"package":"purescript-lens","item":["Optic.Types","ASetterP"]},{"package":"purescript-lens","item":["Optic.Types","Getting"]},{"package":"purescript-lens","item":["Optic.Types","Getter"]},{"package":"purescript-lens","item":["Optic.Types","Lens"]},{"package":"purescript-lens","item":["Optic.Types","LensP"]},{"package":"purescript-lens","item":["Optic.Types","Optical"]},{"package":"purescript-lens","item":["Optic.Types","OpticalP"]},{"package":"purescript-lens","item":["Optic.Types","Prism"]},{"package":"purescript-lens","item":["Optic.Types","PrismP"]},{"package":"purescript-lens","item":["Optic.Types","Setter"]},{"package":"purescript-lens","item":["Optic.Types","SetterP"]},{"package":"purescript-lens","item":["Optic.Types","Setting"]},{"package":"purescript-lens","item":["Optic.Types","SettingP"]},{"package":"purescript-lens","item":["Optic.Getter","(^.)"]},{"package":"purescript-lens","item":["Optic.Getter","to"]},{"package":"purescript-lens","item":["Optic.Getter","view"]},{"package":"purescript-lens","item":["Optic.Getter","(^.)"]},{"package":"purescript-lens","item":["Optic.Lens","(??)"]},{"package":"purescript-lens","item":["Optic.Lens","lens"]},{"package":"purescript-lens","item":["Optic.Lens","(??)"]},{"package":"purescript-tuples","item":["Data.Tuple","Tuple"]},{"package":"purescript-tuples","item":["Data.Tuple","showTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","eqTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ordTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedOrdTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","moduloSemiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","divisionRingTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","numTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","booleanAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","functorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","invariantTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifunctorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bindTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","extendTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","comonadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","lazyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","foldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifoldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","traversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bitraversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","fst"]},{"package":"purescript-tuples","item":["Data.Tuple","snd"]},{"package":"purescript-tuples","item":["Data.Tuple","curry"]},{"package":"purescript-tuples","item":["Data.Tuple","uncurry"]},{"package":"purescript-tuples","item":["Data.Tuple","swap"]},{"package":"purescript-tuples","item":["Data.Tuple","lookup"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","EnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","runEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","withEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","mapEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","functorEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","extendEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadTransEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","Env"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","runEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","withEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","mapEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","env"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","ComonadEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","asks"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvTuple"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","StoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","runStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","functorStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","extendStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadTransStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","Store"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","runStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","store"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","ComonadStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","experiment"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","peeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seek"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","comonadStoreStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","ComonadTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","tracks"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listen"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listens"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","censor"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","comonadTracedTracedT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","MonadState"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","get"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","gets"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","put"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","modify"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","ContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","runContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","mapContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","withContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","monadContContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","functorContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","applyContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","applicativeContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","bindContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","monadContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","monadTransContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","monadEffContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","monadReaderContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","monadStateContT"]},{"package":"purescript-parallel","item":["Control.Parallel","par"]},{"package":"purescript-parallel","item":["Control.Parallel","race"]},{"package":"purescript-parallel","item":["Control.Parallel","Parallel"]},{"package":"purescript-parallel","item":["Control.Parallel","inParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","withCallback"]},{"package":"purescript-parallel","item":["Control.Parallel","runParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","runParallelWith"]},{"package":"purescript-parallel","item":["Control.Parallel","functorParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","applyParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","applicativeParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","altParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","plusParallel"]},{"package":"purescript-parallel","item":["Control.Parallel","alternativeParallel"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","MonadWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","tell"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","listens"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","censor"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Class","MonadRWS"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","ExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","runExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","withExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","mapExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","functorExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","applyExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","applicativeExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","bindExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadRecExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","altExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","plusExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","alternativeExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadPlusExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadTransExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadEffExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadContExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadErrorExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadReaderExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadStateExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadWriterExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","monadRWSExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except","Except"]},{"package":"purescript-transformers","item":["Control.Monad.Except","except"]},{"package":"purescript-transformers","item":["Control.Monad.Except","runExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","mapExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","withExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","MaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","runMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","mapMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","functorMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","applyMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","applicativeMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","bindMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadTransMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","altMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","plusMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","alternativeMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadPlusMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadRecMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadEffMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadContMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadErrorMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadReaderMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadStateMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadWriterMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","monadRWSMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","RWSResult"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","RWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","runRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","evalRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","execRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","mapRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","withRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","functorRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","applyRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","bindRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","applicativeRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadTransRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadEffRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadReaderRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadStateRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadWriterRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadRWSRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadErrorRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","monadRecRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","RWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","rws"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","runRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","evalRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","execRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","mapRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","withRWS"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","ReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","runReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","mapReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","withReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","functorReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","applyReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","applicativeReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","altReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","plusReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","alternativeReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","bindReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadPlusReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadTransReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadEffReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadContReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadErrorReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadReaderReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadStateReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadWriterReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","distributiveReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","monadRecReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","Reader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","runReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","withReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","mapReader"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","StateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","runStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","evalStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","execStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","mapStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","withStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","functorStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","applyStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","applicativeStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","altStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","plusStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","alternativeStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","bindStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadRecStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadPlusStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadTransStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","lazyStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadEffState"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadContStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadErrorStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadReaderStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadStateStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","monadWriterStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State","State"]},{"package":"purescript-transformers","item":["Control.Monad.State","runState"]},{"package":"purescript-transformers","item":["Control.Monad.State","evalState"]},{"package":"purescript-transformers","item":["Control.Monad.State","execState"]},{"package":"purescript-transformers","item":["Control.Monad.State","mapState"]},{"package":"purescript-transformers","item":["Control.Monad.State","withState"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","WriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","runWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","execWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","mapWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","functorWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","applyWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","applicativeWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","altWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","plusWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","alternativeWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","bindWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadRecWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadPlusWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadTransWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadEffWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadContWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadErrorWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadReaderWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadStateWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","monadWriterWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","Writer"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","runWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","execWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","mapWriter"]},{"package":"purescript-arrays","item":["Data.Array","singleton"]},{"package":"purescript-arrays","item":["Data.Array","range"]},{"package":"purescript-arrays","item":["Data.Array","(..)"]},{"package":"purescript-arrays","item":["Data.Array","(..)"]},{"package":"purescript-arrays","item":["Data.Array","replicate"]},{"package":"purescript-arrays","item":["Data.Array","replicateM"]},{"package":"purescript-arrays","item":["Data.Array","some"]},{"package":"purescript-arrays","item":["Data.Array","many"]},{"package":"purescript-arrays","item":["Data.Array","null"]},{"package":"purescript-arrays","item":["Data.Array","length"]},{"package":"purescript-arrays","item":["Data.Array","cons"]},{"package":"purescript-arrays","item":["Data.Array","(:)"]},{"package":"purescript-arrays","item":["Data.Array","(:)"]},{"package":"purescript-arrays","item":["Data.Array","snoc"]},{"package":"purescript-arrays","item":["Data.Array","insert"]},{"package":"purescript-arrays","item":["Data.Array","insertBy"]},{"package":"purescript-arrays","item":["Data.Array","head"]},{"package":"purescript-arrays","item":["Data.Array","last"]},{"package":"purescript-arrays","item":["Data.Array","tail"]},{"package":"purescript-arrays","item":["Data.Array","init"]},{"package":"purescript-arrays","item":["Data.Array","uncons"]},{"package":"purescript-arrays","item":["Data.Array","index"]},{"package":"purescript-arrays","item":["Data.Array","(!!)"]},{"package":"purescript-arrays","item":["Data.Array","(!!)"]},{"package":"purescript-arrays","item":["Data.Array","elemIndex"]},{"package":"purescript-arrays","item":["Data.Array","elemLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","findIndex"]},{"package":"purescript-arrays","item":["Data.Array","findLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","insertAt"]},{"package":"purescript-arrays","item":["Data.Array","deleteAt"]},{"package":"purescript-arrays","item":["Data.Array","updateAt"]},{"package":"purescript-arrays","item":["Data.Array","modifyAt"]},{"package":"purescript-arrays","item":["Data.Array","alterAt"]},{"package":"purescript-arrays","item":["Data.Array","reverse"]},{"package":"purescript-arrays","item":["Data.Array","concat"]},{"package":"purescript-arrays","item":["Data.Array","concatMap"]},{"package":"purescript-arrays","item":["Data.Array","filter"]},{"package":"purescript-arrays","item":["Data.Array","filterM"]},{"package":"purescript-arrays","item":["Data.Array","mapMaybe"]},{"package":"purescript-arrays","item":["Data.Array","catMaybes"]},{"package":"purescript-arrays","item":["Data.Array","sort"]},{"package":"purescript-arrays","item":["Data.Array","sortBy"]},{"package":"purescript-arrays","item":["Data.Array","slice"]},{"package":"purescript-arrays","item":["Data.Array","take"]},{"package":"purescript-arrays","item":["Data.Array","takeWhile"]},{"package":"purescript-arrays","item":["Data.Array","drop"]},{"package":"purescript-arrays","item":["Data.Array","dropWhile"]},{"package":"purescript-arrays","item":["Data.Array","span"]},{"package":"purescript-arrays","item":["Data.Array","group"]},{"package":"purescript-arrays","item":["Data.Array","group'"]},{"package":"purescript-arrays","item":["Data.Array","groupBy"]},{"package":"purescript-arrays","item":["Data.Array","nub"]},{"package":"purescript-arrays","item":["Data.Array","nubBy"]},{"package":"purescript-arrays","item":["Data.Array","union"]},{"package":"purescript-arrays","item":["Data.Array","unionBy"]},{"package":"purescript-arrays","item":["Data.Array","delete"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","(\\\\)"]},{"package":"purescript-arrays","item":["Data.Array","(\\\\)"]},{"package":"purescript-arrays","item":["Data.Array","intersect"]},{"package":"purescript-arrays","item":["Data.Array","intersectBy"]},{"package":"purescript-arrays","item":["Data.Array","zipWith"]},{"package":"purescript-arrays","item":["Data.Array","zipWithA"]},{"package":"purescript-arrays","item":["Data.Array","zip"]},{"package":"purescript-arrays","item":["Data.Array","unzip"]},{"package":"purescript-arrays","item":["Data.Array","foldM"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","unsafeIndex"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","head"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","tail"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","last"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","init"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","(!)"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","(<$$>)"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","(<$$$>)"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","strJoin"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","Measured"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","measuredArray"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","measuredLazy"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","Elem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","getElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","mapElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","mapGetElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","lift2Elem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","liftElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","measuredElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","showElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","eqElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","ordElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","foldableElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","functorElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","traversableElem"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","Key"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","eqKey"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","showKey"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","semigroupKey"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","ordKey"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","monoidKey"]},{"package":"purescript-sequences","item":["Data.Sequence.Internal","measuredElemKey"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","IsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","foreignIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","stringIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","charIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","booleanIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","numberIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","intIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","arrayIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","nullIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","undefinedIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","nullOrUndefinedIsForeign"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","readJSON"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","readWith"]},{"package":"purescript-foreign","item":["Data.Foreign.Class","readProp"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Divide"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Divisible"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divideComparison"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divisibleComparison"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divideEquivalence"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divisibleEquivalence"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","dividePredicate"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divisiblePredicate"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divideOp"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divisibleOp"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","divided"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Decide"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","Decidable"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decided"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decideComparison"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decidableComparison"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decideEquivalence"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decidableEquivalence"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decidePredicate"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decidablePredicate"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decideOp"]},{"package":"purescript-contravariant","item":["Data.Functor.Contravariant.Divisible","decidableOp"]},{"package":"purescript-generics","item":["Data.Generic","GenericSpine"]},{"package":"purescript-generics","item":["Data.Generic","GenericSignature"]},{"package":"purescript-generics","item":["Data.Generic","Proxy"]},{"package":"purescript-generics","item":["Data.Generic","anyProxy"]},{"package":"purescript-generics","item":["Data.Generic","Generic"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","genericNumber"]},{"package":"purescript-generics","item":["Data.Generic","genericInt"]},{"package":"purescript-generics","item":["Data.Generic","genericString"]},{"package":"purescript-generics","item":["Data.Generic","genericChar"]},{"package":"purescript-generics","item":["Data.Generic","genericBool"]},{"package":"purescript-generics","item":["Data.Generic","genericArray"]},{"package":"purescript-generics","item":["Data.Generic","genericTuple"]},{"package":"purescript-generics","item":["Data.Generic","genericMaybe"]},{"package":"purescript-generics","item":["Data.Generic","genericEither"]},{"package":"purescript-generics","item":["Data.Generic","gShow"]},{"package":"purescript-generics","item":["Data.Generic","eqGeneric"]},{"package":"purescript-generics","item":["Data.Generic","gEq"]},{"package":"purescript-generics","item":["Data.Generic","ordGeneric"]},{"package":"purescript-generics","item":["Data.Generic","gCompare"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","Strong"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","strongFn"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(***)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(&&&)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(***)"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Strong","(&&&)"]},{"package":"purescript-arrows","item":["Control.Arrow","Arrow"]},{"package":"purescript-arrows","item":["Control.Arrow","arrowFunction"]},{"package":"purescript-arrows","item":["Control.Arrow","ArrowZero"]},{"package":"purescript-arrows","item":["Control.Arrow","(<+>)"]},{"package":"purescript-arrows","item":["Control.Arrow","ArrowPlus"]},{"package":"purescript-arrows","item":["Control.Arrow","(<+>)"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","Cokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","runCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","semigroupoidCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","categoryCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","profunctorCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","strongCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Cokleisli","arrowCokleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","Kleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","runKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","semigroupoidKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","categoryKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","profunctorKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","strongKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","arrowKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","arrowZeroKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Kleisli","arrowPlusKleisli"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","Static"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","runStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","semigroupoidStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","categoryStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","profunctorStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","strongStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","choiceStatic"]},{"package":"purescript-arrows","item":["Control.Arrow.Static","arrowStatic"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","Star"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","runStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","profunctorStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","strongStar"]},{"package":"purescript-profunctor","item":["Data.Profunctor.Star","choiceStar"]},{"package":"purescript-these","item":["Data.These","These"]},{"package":"purescript-these","item":["Data.These","semigroupThese"]},{"package":"purescript-these","item":["Data.These","functorThese"]},{"package":"purescript-these","item":["Data.These","foldableThese"]},{"package":"purescript-these","item":["Data.These","traversableThese"]},{"package":"purescript-these","item":["Data.These","bifunctorThese"]},{"package":"purescript-these","item":["Data.These","bifoldableThese"]},{"package":"purescript-these","item":["Data.These","bitraversableThese"]},{"package":"purescript-these","item":["Data.These","applyThese"]},{"package":"purescript-these","item":["Data.These","applicativeThese"]},{"package":"purescript-these","item":["Data.These","bindThese"]},{"package":"purescript-these","item":["Data.These","monadThese"]},{"package":"purescript-these","item":["Data.These","these"]},{"package":"purescript-these","item":["Data.These","thisOrBoth"]},{"package":"purescript-these","item":["Data.These","thatOrBoth"]},{"package":"purescript-these","item":["Data.These","fromThese"]},{"package":"purescript-these","item":["Data.These","theseLeft"]},{"package":"purescript-these","item":["Data.These","theseRight"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","Unfoldable"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","unfoldableArray"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicate"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicateA"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","none"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","singleton"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","ListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","nil"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","cons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","singleton"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","fromEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapLazy"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","unfold"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","iterate"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","repeat"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","take"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","takeWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","drop"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","dropWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","filter"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","mapMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","catMaybes"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","uncons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","head"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","tail"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","scanl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","semigroupListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","monoidListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","functorListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","unfoldableListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","applyListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","applicativeListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","bindListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","monadListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","monadTransListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","altListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","plusListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","alternativeListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","monadPlusListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","monadEffListT"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","MonadAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffAff"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffContT"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffExceptT"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffListT"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffMaybe"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffReader"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffRWS"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffState"]},{"package":"purescript-aff","item":["Control.Monad.Aff.Class","monadAffWriter"]},{"package":"purescript-enums","item":["Data.Enum","Cardinality"]},{"package":"purescript-enums","item":["Data.Enum","runCardinality"]},{"package":"purescript-enums","item":["Data.Enum","Enum"]},{"package":"purescript-enums","item":["Data.Enum","defaultSucc"]},{"package":"purescript-enums","item":["Data.Enum","defaultPred"]},{"package":"purescript-enums","item":["Data.Enum","defaultToEnum"]},{"package":"purescript-enums","item":["Data.Enum","defaultFromEnum"]},{"package":"purescript-enums","item":["Data.Enum","enumFromTo"]},{"package":"purescript-enums","item":["Data.Enum","enumFromThenTo"]},{"package":"purescript-enums","item":["Data.Enum","intFromTo"]},{"package":"purescript-enums","item":["Data.Enum","intStepFromTo"]},{"package":"purescript-enums","item":["Data.Enum","enumChar"]},{"package":"purescript-enums","item":["Data.Enum","enumMaybe"]},{"package":"purescript-enums","item":["Data.Enum","enumBoolean"]},{"package":"purescript-enums","item":["Data.Enum","enumTuple"]},{"package":"purescript-enums","item":["Data.Enum","enumEither"]},{"package":"purescript-datetime","item":["Data.Date","JSDate"]},{"package":"purescript-datetime","item":["Data.Date","Date"]},{"package":"purescript-datetime","item":["Data.Date","eqDate"]},{"package":"purescript-datetime","item":["Data.Date","ordDate"]},{"package":"purescript-datetime","item":["Data.Date","showDate"]},{"package":"purescript-datetime","item":["Data.Date","fromJSDate"]},{"package":"purescript-datetime","item":["Data.Date","toJSDate"]},{"package":"purescript-datetime","item":["Data.Date","fromEpochMilliseconds"]},{"package":"purescript-datetime","item":["Data.Date","toEpochMilliseconds"]},{"package":"purescript-datetime","item":["Data.Date","fromString"]},{"package":"purescript-datetime","item":["Data.Date","fromStringStrict"]},{"package":"purescript-datetime","item":["Data.Date","Now"]},{"package":"purescript-datetime","item":["Data.Date","now"]},{"package":"purescript-datetime","item":["Data.Date","nowEpochMilliseconds"]},{"package":"purescript-datetime","item":["Data.Date","LocaleOffset"]},{"package":"purescript-datetime","item":["Data.Date","timezoneOffset"]},{"package":"purescript-datetime","item":["Data.Date","Year"]},{"package":"purescript-datetime","item":["Data.Date","eqYear"]},{"package":"purescript-datetime","item":["Data.Date","ordYear"]},{"package":"purescript-datetime","item":["Data.Date","semiringYear"]},{"package":"purescript-datetime","item":["Data.Date","ringYear"]},{"package":"purescript-datetime","item":["Data.Date","showYear"]},{"package":"purescript-datetime","item":["Data.Date","Month"]},{"package":"purescript-datetime","item":["Data.Date","eqMonth"]},{"package":"purescript-datetime","item":["Data.Date","ordMonth"]},{"package":"purescript-datetime","item":["Data.Date","boundedMonth"]},{"package":"purescript-datetime","item":["Data.Date","boundedOrdMonth"]},{"package":"purescript-datetime","item":["Data.Date","showMonth"]},{"package":"purescript-datetime","item":["Data.Date","enumMonth"]},{"package":"purescript-datetime","item":["Data.Date","DayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date","eqDayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date","ordDayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date","DayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date","eqDayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date","ordDayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date","boundedDayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date","boundedOrdDayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date","showDayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date","enumDayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date.Locale","Locale"]},{"package":"purescript-datetime","item":["Data.Date.Locale","dateTime"]},{"package":"purescript-datetime","item":["Data.Date.Locale","date"]},{"package":"purescript-datetime","item":["Data.Date.Locale","year"]},{"package":"purescript-datetime","item":["Data.Date.Locale","month"]},{"package":"purescript-datetime","item":["Data.Date.Locale","dayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date.Locale","dayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date.Locale","hourOfDay"]},{"package":"purescript-datetime","item":["Data.Date.Locale","minuteOfHour"]},{"package":"purescript-datetime","item":["Data.Date.Locale","secondOfMinute"]},{"package":"purescript-datetime","item":["Data.Date.Locale","millisecondOfSecond"]},{"package":"purescript-datetime","item":["Data.Date.Locale","toLocaleString"]},{"package":"purescript-datetime","item":["Data.Date.Locale","toLocaleTimeString"]},{"package":"purescript-datetime","item":["Data.Date.Locale","toLocaleDateString"]},{"package":"purescript-datetime","item":["Data.Date.UTC","dateTime"]},{"package":"purescript-datetime","item":["Data.Date.UTC","date"]},{"package":"purescript-datetime","item":["Data.Date.UTC","year"]},{"package":"purescript-datetime","item":["Data.Date.UTC","month"]},{"package":"purescript-datetime","item":["Data.Date.UTC","dayOfMonth"]},{"package":"purescript-datetime","item":["Data.Date.UTC","dayOfWeek"]},{"package":"purescript-datetime","item":["Data.Date.UTC","hourOfDay"]},{"package":"purescript-datetime","item":["Data.Date.UTC","minuteOfHour"]},{"package":"purescript-datetime","item":["Data.Date.UTC","secondOfMinute"]},{"package":"purescript-datetime","item":["Data.Date.UTC","millisecondOfSecond"]},{"package":"purescript-sequences","item":["Data.FingerTree","Node"]},{"package":"purescript-sequences","item":["Data.FingerTree","showNode"]},{"package":"purescript-sequences","item":["Data.FingerTree","node2"]},{"package":"purescript-sequences","item":["Data.FingerTree","node3"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodeToDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","functorNode"]},{"package":"purescript-sequences","item":["Data.FingerTree","foldableNode"]},{"package":"purescript-sequences","item":["Data.FingerTree","traversableNode"]},{"package":"purescript-sequences","item":["Data.FingerTree","measuredNode"]},{"package":"purescript-sequences","item":["Data.FingerTree","FingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","lazyEmpty"]},{"package":"purescript-sequences","item":["Data.FingerTree","deep"]},{"package":"purescript-sequences","item":["Data.FingerTree","Digit"]},{"package":"purescript-sequences","item":["Data.FingerTree","showFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","semigroupFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","eqFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","compareFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","functorFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","foldableFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","traversableFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","measuredFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","cons"]},{"package":"purescript-sequences","item":["Data.FingerTree","snoc"]},{"package":"purescript-sequences","item":["Data.FingerTree","consAll"]},{"package":"purescript-sequences","item":["Data.FingerTree","snocAll"]},{"package":"purescript-sequences","item":["Data.FingerTree","toFingerTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","ViewL"]},{"package":"purescript-sequences","item":["Data.FingerTree","functorViewL"]},{"package":"purescript-sequences","item":["Data.FingerTree","headDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","tailDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewL"]},{"package":"purescript-sequences","item":["Data.FingerTree","deepL"]},{"package":"purescript-sequences","item":["Data.FingerTree","isEmpty"]},{"package":"purescript-sequences","item":["Data.FingerTree","head"]},{"package":"purescript-sequences","item":["Data.FingerTree","tail"]},{"package":"purescript-sequences","item":["Data.FingerTree","lastDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","initDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","ViewR"]},{"package":"purescript-sequences","item":["Data.FingerTree","viewR"]},{"package":"purescript-sequences","item":["Data.FingerTree","deepR"]},{"package":"purescript-sequences","item":["Data.FingerTree","last"]},{"package":"purescript-sequences","item":["Data.FingerTree","init"]},{"package":"purescript-sequences","item":["Data.FingerTree","app3"]},{"package":"purescript-sequences","item":["Data.FingerTree","nodes"]},{"package":"purescript-sequences","item":["Data.FingerTree","append"]},{"package":"purescript-sequences","item":["Data.FingerTree","Split"]},{"package":"purescript-sequences","item":["Data.FingerTree","LazySplit"]},{"package":"purescript-sequences","item":["Data.FingerTree","unsafeSplitDigit"]},{"package":"purescript-sequences","item":["Data.FingerTree","unsafeSplitTree"]},{"package":"purescript-sequences","item":["Data.FingerTree","split"]},{"package":"purescript-sequences","item":["Data.FingerTree","filter"]},{"package":"purescript-sequences","item":["Data.FingerTree","unfoldLeft"]},{"package":"purescript-sequences","item":["Data.FingerTree","unfoldRight"]},{"package":"purescript-sequences","item":["Data.FingerTree","fullyForce"]},{"package":"purescript-lists","item":["Data.List","List"]},{"package":"purescript-lists","item":["Data.List","fromList"]},{"package":"purescript-lists","item":["Data.List","toList"]},{"package":"purescript-lists","item":["Data.List","singleton"]},{"package":"purescript-lists","item":["Data.List","(..)"]},{"package":"purescript-lists","item":["Data.List","(..)"]},{"package":"purescript-lists","item":["Data.List","range"]},{"package":"purescript-lists","item":["Data.List","replicate"]},{"package":"purescript-lists","item":["Data.List","replicateM"]},{"package":"purescript-lists","item":["Data.List","some"]},{"package":"purescript-lists","item":["Data.List","many"]},{"package":"purescript-lists","item":["Data.List","null"]},{"package":"purescript-lists","item":["Data.List","length"]},{"package":"purescript-lists","item":["Data.List","(:)"]},{"package":"purescript-lists","item":["Data.List","(:)"]},{"package":"purescript-lists","item":["Data.List","snoc"]},{"package":"purescript-lists","item":["Data.List","insert"]},{"package":"purescript-lists","item":["Data.List","insertBy"]},{"package":"purescript-lists","item":["Data.List","head"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","tail"]},{"package":"purescript-lists","item":["Data.List","init"]},{"package":"purescript-lists","item":["Data.List","uncons"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","(!!)"]},{"package":"purescript-lists","item":["Data.List","(!!)"]},{"package":"purescript-lists","item":["Data.List","elemIndex"]},{"package":"purescript-lists","item":["Data.List","elemLastIndex"]},{"package":"purescript-lists","item":["Data.List","findIndex"]},{"package":"purescript-lists","item":["Data.List","findLastIndex"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","modifyAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","reverse"]},{"package":"purescript-lists","item":["Data.List","concat"]},{"package":"purescript-lists","item":["Data.List","concatMap"]},{"package":"purescript-lists","item":["Data.List","filter"]},{"package":"purescript-lists","item":["Data.List","filterM"]},{"package":"purescript-lists","item":["Data.List","mapMaybe"]},{"package":"purescript-lists","item":["Data.List","catMaybes"]},{"package":"purescript-lists","item":["Data.List","sort"]},{"package":"purescript-lists","item":["Data.List","sortBy"]},{"package":"purescript-lists","item":["Data.List","slice"]},{"package":"purescript-lists","item":["Data.List","take"]},{"package":"purescript-lists","item":["Data.List","takeWhile"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","dropWhile"]},{"package":"purescript-lists","item":["Data.List","span"]},{"package":"purescript-lists","item":["Data.List","group"]},{"package":"purescript-lists","item":["Data.List","group'"]},{"package":"purescript-lists","item":["Data.List","groupBy"]},{"package":"purescript-lists","item":["Data.List","nub"]},{"package":"purescript-lists","item":["Data.List","nubBy"]},{"package":"purescript-lists","item":["Data.List","union"]},{"package":"purescript-lists","item":["Data.List","unionBy"]},{"package":"purescript-lists","item":["Data.List","delete"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","(\\\\)"]},{"package":"purescript-lists","item":["Data.List","(\\\\)"]},{"package":"purescript-lists","item":["Data.List","intersect"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","zipWith"]},{"package":"purescript-lists","item":["Data.List","zipWithA"]},{"package":"purescript-lists","item":["Data.List","zip"]},{"package":"purescript-lists","item":["Data.List","unzip"]},{"package":"purescript-lists","item":["Data.List","foldM"]},{"package":"purescript-lists","item":["Data.List","showList"]},{"package":"purescript-lists","item":["Data.List","eqList"]},{"package":"purescript-lists","item":["Data.List","ordList"]},{"package":"purescript-lists","item":["Data.List","semigroupList"]},{"package":"purescript-lists","item":["Data.List","monoidList"]},{"package":"purescript-lists","item":["Data.List","functorList"]},{"package":"purescript-lists","item":["Data.List","foldableList"]},{"package":"purescript-lists","item":["Data.List","unfoldableList"]},{"package":"purescript-lists","item":["Data.List","traversableList"]},{"package":"purescript-lists","item":["Data.List","applyList"]},{"package":"purescript-lists","item":["Data.List","applicativeList"]},{"package":"purescript-lists","item":["Data.List","bindList"]},{"package":"purescript-lists","item":["Data.List","monadList"]},{"package":"purescript-lists","item":["Data.List","altList"]},{"package":"purescript-lists","item":["Data.List","plusList"]},{"package":"purescript-lists","item":["Data.List","alternativeList"]},{"package":"purescript-lists","item":["Data.List","monadPlusList"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","CatQueue"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","empty"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","null"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","snoc"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","uncons"]},{"package":"purescript-catenable-lists","item":["Data.CatQueue","showCatQueue"]},{"package":"purescript-catenable-lists","item":["Data.CatList","CatList"]},{"package":"purescript-catenable-lists","item":["Data.CatList","empty"]},{"package":"purescript-catenable-lists","item":["Data.CatList","null"]},{"package":"purescript-catenable-lists","item":["Data.CatList","append"]},{"package":"purescript-catenable-lists","item":["Data.CatList","cons"]},{"package":"purescript-catenable-lists","item":["Data.CatList","snoc"]},{"package":"purescript-catenable-lists","item":["Data.CatList","uncons"]},{"package":"purescript-catenable-lists","item":["Data.CatList","semigroupCatList"]},{"package":"purescript-catenable-lists","item":["Data.CatList","monoidCatList"]},{"package":"purescript-catenable-lists","item":["Data.CatList","showCatList"]},{"package":"purescript-free","item":["Control.Monad.Free","Free"]},{"package":"purescript-free","item":["Control.Monad.Free","freeFunctor"]},{"package":"purescript-free","item":["Control.Monad.Free","freeBind"]},{"package":"purescript-free","item":["Control.Monad.Free","freeApplicative"]},{"package":"purescript-free","item":["Control.Monad.Free","freeApply"]},{"package":"purescript-free","item":["Control.Monad.Free","freeMonad"]},{"package":"purescript-free","item":["Control.Monad.Free","freeMonadTrans"]},{"package":"purescript-free","item":["Control.Monad.Free","freeMonadRec"]},{"package":"purescript-free","item":["Control.Monad.Free","liftF"]},{"package":"purescript-free","item":["Control.Monad.Free","liftFI"]},{"package":"purescript-free","item":["Control.Monad.Free","suspendF"]},{"package":"purescript-free","item":["Control.Monad.Free","mapF"]},{"package":"purescript-free","item":["Control.Monad.Free","injF"]},{"package":"purescript-free","item":["Control.Monad.Free","foldFree"]},{"package":"purescript-free","item":["Control.Monad.Free","runFree"]},{"package":"purescript-free","item":["Control.Monad.Free","runFreeM"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","Trampoline"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","done"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","suspend"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","delay'"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","delay"]},{"package":"purescript-free","item":["Control.Monad.Trampoline","runTrampoline"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","Cofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","mkCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","head"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","tail"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","functorCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","foldableCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","traversableCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","extendCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","comonadCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","applyCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","applicativeCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","bindCofree"]},{"package":"purescript-free","item":["Control.Comonad.Cofree","monadCofree"]},{"package":"purescript-lists","item":["Data.List.Unsafe","head"]},{"package":"purescript-lists","item":["Data.List.Unsafe","tail"]},{"package":"purescript-lists","item":["Data.List.Unsafe","last"]},{"package":"purescript-lists","item":["Data.List.Unsafe","init"]},{"package":"purescript-maps","item":["Data.Map","Map"]},{"package":"purescript-maps","item":["Data.Map","eqMap"]},{"package":"purescript-maps","item":["Data.Map","showMap"]},{"package":"purescript-maps","item":["Data.Map","ordMap"]},{"package":"purescript-maps","item":["Data.Map","semigroupMap"]},{"package":"purescript-maps","item":["Data.Map","monoidMap"]},{"package":"purescript-maps","item":["Data.Map","functorMap"]},{"package":"purescript-maps","item":["Data.Map","foldableMap"]},{"package":"purescript-maps","item":["Data.Map","traversableMap"]},{"package":"purescript-maps","item":["Data.Map","showTree"]},{"package":"purescript-maps","item":["Data.Map","empty"]},{"package":"purescript-maps","item":["Data.Map","isEmpty"]},{"package":"purescript-maps","item":["Data.Map","singleton"]},{"package":"purescript-maps","item":["Data.Map","checkValid"]},{"package":"purescript-maps","item":["Data.Map","lookup"]},{"package":"purescript-maps","item":["Data.Map","member"]},{"package":"purescript-maps","item":["Data.Map","insert"]},{"package":"purescript-maps","item":["Data.Map","delete"]},{"package":"purescript-maps","item":["Data.Map","alter"]},{"package":"purescript-maps","item":["Data.Map","update"]},{"package":"purescript-maps","item":["Data.Map","toList"]},{"package":"purescript-maps","item":["Data.Map","fromList"]},{"package":"purescript-maps","item":["Data.Map","fromListWith"]},{"package":"purescript-maps","item":["Data.Map","keys"]},{"package":"purescript-maps","item":["Data.Map","values"]},{"package":"purescript-maps","item":["Data.Map","unionWith"]},{"package":"purescript-maps","item":["Data.Map","union"]},{"package":"purescript-maps","item":["Data.Map","unions"]},{"package":"purescript-maps","item":["Data.Map","size"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","Free"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","runFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","free"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","liftFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","lowerFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","showFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","eqFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","ordFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","semiringFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","functorFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","applyFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","applicativeFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","foldableFree"]},{"package":"purescript-semirings","item":["Data.Semiring.Free","traversableFree"]},{"package":"purescript-sets","item":["Data.Set","Set"]},{"package":"purescript-sets","item":["Data.Set","eqSet"]},{"package":"purescript-sets","item":["Data.Set","showSet"]},{"package":"purescript-sets","item":["Data.Set","ordSet"]},{"package":"purescript-sets","item":["Data.Set","monoidSet"]},{"package":"purescript-sets","item":["Data.Set","semigroupSet"]},{"package":"purescript-sets","item":["Data.Set","foldableSet"]},{"package":"purescript-sets","item":["Data.Set","empty"]},{"package":"purescript-sets","item":["Data.Set","isEmpty"]},{"package":"purescript-sets","item":["Data.Set","singleton"]},{"package":"purescript-sets","item":["Data.Set","checkValid"]},{"package":"purescript-sets","item":["Data.Set","member"]},{"package":"purescript-sets","item":["Data.Set","insert"]},{"package":"purescript-sets","item":["Data.Set","delete"]},{"package":"purescript-sets","item":["Data.Set","toList"]},{"package":"purescript-sets","item":["Data.Set","fromList"]},{"package":"purescript-sets","item":["Data.Set","size"]},{"package":"purescript-sets","item":["Data.Set","union"]},{"package":"purescript-sets","item":["Data.Set","unions"]},{"package":"purescript-sets","item":["Data.Set","difference"]},{"package":"purescript-maps","item":["Data.StrMap","StrMap"]},{"package":"purescript-maps","item":["Data.StrMap","thawST"]},{"package":"purescript-maps","item":["Data.StrMap","freezeST"]},{"package":"purescript-maps","item":["Data.StrMap","runST"]},{"package":"purescript-maps","item":["Data.StrMap","functorStrMap"]},{"package":"purescript-maps","item":["Data.StrMap","fold"]},{"package":"purescript-maps","item":["Data.StrMap","foldMap"]},{"package":"purescript-maps","item":["Data.StrMap","foldM"]},{"package":"purescript-maps","item":["Data.StrMap","foldableStrMap"]},{"package":"purescript-maps","item":["Data.StrMap","traversableStrMap"]},{"package":"purescript-maps","item":["Data.StrMap","foldMaybe"]},{"package":"purescript-maps","item":["Data.StrMap","all"]},{"package":"purescript-maps","item":["Data.StrMap","eqStrMap"]},{"package":"purescript-maps","item":["Data.StrMap","showStrMap"]},{"package":"purescript-maps","item":["Data.StrMap","empty"]},{"package":"purescript-maps","item":["Data.StrMap","isSubmap"]},{"package":"purescript-maps","item":["Data.StrMap","isEmpty"]},{"package":"purescript-maps","item":["Data.StrMap","size"]},{"package":"purescript-maps","item":["Data.StrMap","singleton"]},{"package":"purescript-maps","item":["Data.StrMap","lookup"]},{"package":"purescript-maps","item":["Data.StrMap","member"]},{"package":"purescript-maps","item":["Data.StrMap","insert"]},{"package":"purescript-maps","item":["Data.StrMap","delete"]},{"package":"purescript-maps","item":["Data.StrMap","alter"]},{"package":"purescript-maps","item":["Data.StrMap","update"]},{"package":"purescript-maps","item":["Data.StrMap","fromList"]},{"package":"purescript-maps","item":["Data.StrMap","fromListWith"]},{"package":"purescript-maps","item":["Data.StrMap","toList"]},{"package":"purescript-maps","item":["Data.StrMap","keys"]},{"package":"purescript-maps","item":["Data.StrMap","values"]},{"package":"purescript-maps","item":["Data.StrMap","union"]},{"package":"purescript-maps","item":["Data.StrMap","unions"]},{"package":"purescript-maps","item":["Data.StrMap","semigroupStrMap"]},{"package":"purescript-maps","item":["Data.StrMap","monoidStrMap"]},{"package":"purescript-maps","item":["Data.StrMap.ST.Unsafe","unsafeGet"]},{"package":"purescript-maps","item":["Data.StrMap.Unsafe","unsafeIndex"]},{"package":"purescript-lists","item":["Data.List.Lazy","List"]},{"package":"purescript-lists","item":["Data.List.Lazy","runList"]},{"package":"purescript-lists","item":["Data.List.Lazy","fromList"]},{"package":"purescript-lists","item":["Data.List.Lazy","toList"]},{"package":"purescript-lists","item":["Data.List.Lazy","Step"]},{"package":"purescript-lists","item":["Data.List.Lazy","step"]},{"package":"purescript-lists","item":["Data.List.Lazy","nil"]},{"package":"purescript-lists","item":["Data.List.Lazy","singleton"]},{"package":"purescript-lists","item":["Data.List.Lazy","(..)"]},{"package":"purescript-lists","item":["Data.List.Lazy","range"]},{"package":"purescript-lists","item":["Data.List.Lazy","repeat"]},{"package":"purescript-lists","item":["Data.List.Lazy","iterate"]},{"package":"purescript-lists","item":["Data.List.Lazy","cycle"]},{"package":"purescript-lists","item":["Data.List.Lazy","null"]},{"package":"purescript-lists","item":["Data.List.Lazy","length"]},{"package":"purescript-lists","item":["Data.List.Lazy","cons"]},{"package":"purescript-lists","item":["Data.List.Lazy","(:)"]},{"package":"purescript-lists","item":["Data.List.Lazy","(:)"]},{"package":"purescript-lists","item":["Data.List.Lazy","insert"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","head"]},{"package":"purescript-lists","item":["Data.List.Lazy","last"]},{"package":"purescript-lists","item":["Data.List.Lazy","tail"]},{"package":"purescript-lists","item":["Data.List.Lazy","init"]},{"package":"purescript-lists","item":["Data.List.Lazy","uncons"]},{"package":"purescript-lists","item":["Data.List.Lazy","index"]},{"package":"purescript-lists","item":["Data.List.Lazy","(!!)"]},{"package":"purescript-lists","item":["Data.List.Lazy","(!!)"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","updateAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","modifyAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","alterAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","reverse"]},{"package":"purescript-lists","item":["Data.List.Lazy","concat"]},{"package":"purescript-lists","item":["Data.List.Lazy","concatMap"]},{"package":"purescript-lists","item":["Data.List.Lazy","filter"]},{"package":"purescript-lists","item":["Data.List.Lazy","mapMaybe"]},{"package":"purescript-lists","item":["Data.List.Lazy","catMaybes"]},{"package":"purescript-lists","item":["Data.List.Lazy","take"]},{"package":"purescript-lists","item":["Data.List.Lazy","takeWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","drop"]},{"package":"purescript-lists","item":["Data.List.Lazy","dropWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","span"]},{"package":"purescript-lists","item":["Data.List.Lazy","group"]},{"package":"purescript-lists","item":["Data.List.Lazy","groupBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","nub"]},{"package":"purescript-lists","item":["Data.List.Lazy","nubBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","union"]},{"package":"purescript-lists","item":["Data.List.Lazy","unionBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","delete"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","(\\\\)"]},{"package":"purescript-lists","item":["Data.List.Lazy","(\\\\)"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersect"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersectBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","zipWith"]},{"package":"purescript-lists","item":["Data.List.Lazy","zip"]},{"package":"purescript-lists","item":["Data.List.Lazy","showList"]},{"package":"purescript-lists","item":["Data.List.Lazy","eqList"]},{"package":"purescript-lists","item":["Data.List.Lazy","ordList"]},{"package":"purescript-lists","item":["Data.List.Lazy","lazyList"]},{"package":"purescript-lists","item":["Data.List.Lazy","semigroupList"]},{"package":"purescript-lists","item":["Data.List.Lazy","monoidList"]},{"package":"purescript-lists","item":["Data.List.Lazy","functorList"]},{"package":"purescript-lists","item":["Data.List.Lazy","foldableList"]},{"package":"purescript-lists","item":["Data.List.Lazy","unfoldableList"]},{"package":"purescript-lists","item":["Data.List.Lazy","traversableList"]},{"package":"purescript-lists","item":["Data.List.Lazy","applyList"]},{"package":"purescript-lists","item":["Data.List.Lazy","applicativeList"]},{"package":"purescript-lists","item":["Data.List.Lazy","bindList"]},{"package":"purescript-lists","item":["Data.List.Lazy","monadList"]},{"package":"purescript-lists","item":["Data.List.Lazy","altList"]},{"package":"purescript-lists","item":["Data.List.Lazy","plusList"]},{"package":"purescript-lists","item":["Data.List.Lazy","alternativeList"]},{"package":"purescript-lists","item":["Data.List.Lazy","monadPlusList"]},{"package":"purescript-lists","item":["Data.List.ZipList","ZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","runZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","showZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","eqZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","ordZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","semigroupZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","monoidZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","foldableZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","traversableZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","functorZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","applyZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","applicativeZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","altZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","plusZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","alternativeZipList"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","OrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","empty"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","eqOrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","showOrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","semigroupOrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","monoidOrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","foldableOrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","null"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","length"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","partition"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","insert"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","deleteAll"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","merge"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","intersection"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","least"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","popLeast"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","greatest"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","popGreatest"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","toOrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","fromOrdSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","fromOrdSeqDescending"]},{"package":"purescript-sequences","item":["Data.Sequence.Ordered","sort"]},{"package":"purescript-lens","item":["Optic.Prism","clonePrism"]},{"package":"purescript-lens","item":["Optic.Prism","is"]},{"package":"purescript-lens","item":["Optic.Prism","isn't"]},{"package":"purescript-lens","item":["Optic.Prism","matching"]},{"package":"purescript-lens","item":["Optic.Prism","nearly"]},{"package":"purescript-lens","item":["Optic.Prism","only"]},{"package":"purescript-lens","item":["Optic.Prism","prism"]},{"package":"purescript-lens","item":["Optic.Prism","prism'"]},{"package":"purescript-lens","item":["Optic.Prism","withPrism"]},{"package":"purescript-lens","item":["Optic.Setter","(%~)"]},{"package":"purescript-lens","item":["Optic.Setter","(.~)"]},{"package":"purescript-lens","item":["Optic.Setter","(+~)"]},{"package":"purescript-lens","item":["Optic.Setter","(-~)"]},{"package":"purescript-lens","item":["Optic.Setter","(*~)"]},{"package":"purescript-lens","item":["Optic.Setter","(//~)"]},{"package":"purescript-lens","item":["Optic.Setter","(||~)"]},{"package":"purescript-lens","item":["Optic.Setter","(&&~)"]},{"package":"purescript-lens","item":["Optic.Setter","(<>~)"]},{"package":"purescript-lens","item":["Optic.Setter","(++~)"]},{"package":"purescript-lens","item":["Optic.Setter","(?~)"]},{"package":"purescript-lens","item":["Optic.Setter","argument"]},{"package":"purescript-lens","item":["Optic.Setter","contramapped"]},{"package":"purescript-lens","item":["Optic.Setter","mapped"]},{"package":"purescript-lens","item":["Optic.Setter","over"]},{"package":"purescript-lens","item":["Optic.Setter","set"]},{"package":"purescript-lens","item":["Optic.Setter","set'"]},{"package":"purescript-lens","item":["Optic.Setter","sets"]},{"package":"purescript-lens","item":["Optic.Setter","(%~)"]},{"package":"purescript-lens","item":["Optic.Setter","(.~)"]},{"package":"purescript-lens","item":["Optic.Setter","(+~)"]},{"package":"purescript-lens","item":["Optic.Setter","(-~)"]},{"package":"purescript-lens","item":["Optic.Setter","(*~)"]},{"package":"purescript-lens","item":["Optic.Setter","(//~)"]},{"package":"purescript-lens","item":["Optic.Setter","(||~)"]},{"package":"purescript-lens","item":["Optic.Setter","(&&~)"]},{"package":"purescript-lens","item":["Optic.Setter","(<>~)"]},{"package":"purescript-lens","item":["Optic.Setter","(++~)"]},{"package":"purescript-lens","item":["Optic.Setter","(?~)"]},{"package":"purescript-lens","item":["Optic.Core","(..)"]},{"package":"purescript-lens","item":["Optic.Core","(..)"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","validLens"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","getSet"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","setGet"]},{"package":"purescript-lens","item":["Optic.Laws.Lens","setSet"]},{"package":"purescript-sequences","item":["Data.Sequence","Seq"]},{"package":"purescript-sequences","item":["Data.Sequence","ordSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","eqSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","showSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","semigroupSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","monoidSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","foldableSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","traversableSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","unfoldableSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","functorSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","applySeq"]},{"package":"purescript-sequences","item":["Data.Sequence","applicativeSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","bindSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","monadSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","altSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","plusSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","alternativeSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","monadPlusSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","empty"]},{"package":"purescript-sequences","item":["Data.Sequence","singleton"]},{"package":"purescript-sequences","item":["Data.Sequence","cons"]},{"package":"purescript-sequences","item":["Data.Sequence","snoc"]},{"package":"purescript-sequences","item":["Data.Sequence","append"]},{"package":"purescript-sequences","item":["Data.Sequence","concat"]},{"package":"purescript-sequences","item":["Data.Sequence","concatMap"]},{"package":"purescript-sequences","item":["Data.Sequence","length"]},{"package":"purescript-sequences","item":["Data.Sequence","null"]},{"package":"purescript-sequences","item":["Data.Sequence","uncons"]},{"package":"purescript-sequences","item":["Data.Sequence","unsnoc"]},{"package":"purescript-sequences","item":["Data.Sequence","splitAt"]},{"package":"purescript-sequences","item":["Data.Sequence","take"]},{"package":"purescript-sequences","item":["Data.Sequence","drop"]},{"package":"purescript-sequences","item":["Data.Sequence","inBounds"]},{"package":"purescript-sequences","item":["Data.Sequence","index"]},{"package":"purescript-sequences","item":["Data.Sequence","adjust"]},{"package":"purescript-sequences","item":["Data.Sequence","replace"]},{"package":"purescript-sequences","item":["Data.Sequence","map"]},{"package":"purescript-sequences","item":["Data.Sequence","head"]},{"package":"purescript-sequences","item":["Data.Sequence","tail"]},{"package":"purescript-sequences","item":["Data.Sequence","init"]},{"package":"purescript-sequences","item":["Data.Sequence","last"]},{"package":"purescript-sequences","item":["Data.Sequence","toSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","fromSeq"]},{"package":"purescript-sequences","item":["Data.Sequence","filter"]},{"package":"purescript-sequences","item":["Data.Sequence","sort"]},{"package":"purescript-sequences","item":["Data.Sequence","fullyForce"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","Seq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","singleton"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","cons"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","snoc"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","append"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","length"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","inBounds"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","uncons"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","unsnoc"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","head"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","tail"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","init"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","last"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","toPlain"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","splitAt"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","take"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","drop"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","filter"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","index"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","adjust"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","replace"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","fromSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","showSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","eqSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","ordSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","functorSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","applySeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","applicativeSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","bindSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","monadSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","semigroupSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","altSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","foldableSeq"]},{"package":"purescript-sequences","item":["Data.Sequence.NonEmpty","traversableSeq"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","V"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","invalid"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","runV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","isValid"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","showV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","functorV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","applyV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","applicativeV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","altV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","plusV"]},{"package":"purescript-validation","item":["Data.Validation.Semiring","alernativeV"]}],"version":"0.0.34","github":["tfausak","purescript-neon"],"versionTag":"v0.0.34","compilerVersion":"0.7.1.0"}