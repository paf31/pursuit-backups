{"uploader":"owickstrom","packageMeta":{"repository":{"url":"git://github.com/owickstrom/purescript-node-crypto.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-spec-discovery":"^0.4.0","purescript-spec":"^0.12.4","purescript-psci-support":"^2.0.0","purescript-spec-quickcheck":"^0.10.0"},"dependencies":{"purescript-prelude":"^2.5.0","purescript-node-buffer":"^2.0.1"},"name":"purescript-node-crypto","license":["MPL-2.0"]},"tagTime":"2017-03-12T12:00:34+0000","modules":[{"reExports":[],"name":"Node.Crypto","comments":null,"declarations":[{"children":[],"comments":"The effect of functions using the Crypto library in NodeJS.\n","title":"CRYPTO","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"src/Node/Crypto.purs","end":[15,32]}},{"children":[],"comments":"Algoritms are dependent on OpenSSL in NodeJS, and are thus represented as\nstrings.\n","title":"Algorithm","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[19,1],"name":"src/Node/Crypto.purs","end":[19,24]}},{"children":[],"comments":"Generate a buffer of the specified length, filled with random bytes.\n","title":"randomBytes","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"RCons","contents":["buffer",{"tag":"TypeConstructor","contents":[["Node","Buffer"],"BUFFER"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},null]}},"sourceSpan":{"start":[22,1],"name":"src/Node/Crypto.purs","end":[25,57]}},{"children":[],"comments":"Returns true if the buffers are equal, without leaking timing information\nthat would allow an attacker to guess one of the values.\n\nRead more details in the NodeJS docs about\n[timingSafeEqual](https://nodejs.org/api/crypto.html#crypto_crypto_timingsafeequal_a_b).\n","title":"timingSafeEqual","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}},"sourceSpan":{"start":[39,1],"name":"src/Node/Crypto.purs","end":[42,26]}}]},{"reExports":[],"name":"Node.Crypto.Cipher","comments":"This module is used to encrypt data, wrapping\nhttps://nodejs.org/api/crypto.html#crypto_class_cipher.\n","declarations":[{"children":[],"comments":"The Cipher type represents instances of the [Cipher\nclass](https://nodejs.org/api/crypto.html#crypto_class_cipher)\nin NodeJS.\n","title":"Cipher","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[18,1],"name":"src/Node/Crypto/Cipher.purs","end":[18,32]}},{"children":[],"comments":"Create a new [Cipher](#cipher) using the specified algoritm and password.\n\nThe possible values for the algorithm depends on the OpenSSL version of\nthe platform. Some examples are `\"sha256\"` and `\"sha512\"`.\n","title":"createCipher","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto"],"Algorithm"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Cipher"],"Cipher"]}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"src/Node/Crypto/Cipher.purs","end":[28,39]}},{"children":[],"comments":"Create a new [Cipher](#cipher) using the specified algoritm, key, and\ninitialization vector.\n\nThe possible values for the algorithm depends on the OpenSSL version of\nthe platform. Some examples are `\"sha256\"` and `\"sha512\"`.\n\nNote that the key and IV buffer lengths need to match the specified\nalgorithm.\n","title":"createCipherIV","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto"],"Algorithm"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Cipher"],"Cipher"]}]}]}]}]},null]}},"sourceSpan":{"start":[38,1],"name":"src/Node/Crypto/Cipher.purs","end":[43,39]}},{"children":[],"comments":"Update the [Cipher](#cipher) with the specified buffer contents. Returns\na buffer of enciphered data. Cannot be called if the cipher has been\n[finalized](#final).\n","title":"update","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Cipher"],"Cipher"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"src/Node/Crypto/Cipher.purs","end":[52,39]}},{"children":[],"comments":"Finalize the cipher and return any remaining enciphered data.\n\nThe [Cipher](#cipher) value cannot be updated or finalized again after\nthis operation.\n","title":"final","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Cipher"],"Cipher"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},null]}},"sourceSpan":{"start":[58,1],"name":"src/Node/Crypto/Cipher.purs","end":[61,33]}}]},{"reExports":[],"name":"Node.Crypto.Decipher","comments":"This module is used to decrypt data, wrapping\nhttps://nodejs.org/api/crypto.html#crypto_class_decipher.\n","declarations":[{"children":[],"comments":"The Decipher type represents instances of the [Decipher\nclass](https://nodejs.org/api/crypto.html#crypto_class_decipher)\nin NodeJS.\n","title":"Decipher","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[17,1],"name":"src/Node/Crypto/Decipher.purs","end":[17,34]}},{"children":[],"comments":"Create a new [Decipher](#decipher) using the specified algoritm and\npassword.\n\nThe possible values for the algorithm depends on the OpenSSL version of\nthe platform. Some examples are `\"sha256\"` and `\"sha512\"`.\n","title":"createDecipher","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto"],"Algorithm"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Decipher"],"Decipher"]}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"src/Node/Crypto/Decipher.purs","end":[28,41]}},{"children":[],"comments":"Update the [Decipher](#decipher) with the specified buffer contents.\nReturns a buffer of deciphered data. Cannot be called if the decipher has\nbeen [finalized](#final).\n","title":"update","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Decipher"],"Decipher"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"src/Node/Crypto/Decipher.purs","end":[52,39]}},{"children":[],"comments":"Finalize the decipher and return any remaining deciphered data.\n\nThe [Decipher](#decipher) value cannot be updated or finalized again after\nthis operation.\n","title":"final","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Decipher"],"Decipher"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},null]}},"sourceSpan":{"start":[58,1],"name":"src/Node/Crypto/Decipher.purs","end":[61,33]}}]},{"reExports":[],"name":"Node.Crypto.Hash","comments":"This module is used to hash data, wrapping\nhttps://nodejs.org/api/crypto.html#crypto_class_hash.\n","declarations":[{"children":[],"comments":"The Hash type represents instances of the [Hash\nclass](https://nodejs.org/api/crypto.html#crypto_class_hash)\nin NodeJS.\n","title":"Hash","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[13,1],"name":"src/Node/Crypto/Hash.purs","end":[13,30]}},{"children":[],"comments":"Create a new [Hash](#hash) using the specified algoritm. The possible\nvalues for the algorithm depends on the OpenSSL version of the platform.\nSome examples are `\"sha256\"` and `\"sha512\"`.\n","title":"createHash","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto"],"Algorithm"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Hash"],"Hash"]}]}]},null]}},"sourceSpan":{"start":[18,1],"name":"src/Node/Crypto/Hash.purs","end":[21,37]}},{"children":[],"comments":null,"title":"_update","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Hash"],"Hash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Hash"],"Hash"]}]}]}]},null]}},"sourceSpan":{"start":[23,1],"name":"src/Node/Crypto/Hash.purs","end":[27,37]}},{"children":[],"comments":"Update the [Hash](#hash) with the specified buffer contents.\n","title":"update","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Hash"],"Hash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[30,1],"name":"src/Node/Crypto/Hash.purs","end":[34,37]}},{"children":[],"comments":"Calculate the digest of all data passed to be hashed, using the\n[update](#update) function. The [Hash](#hash) value cannot be updated or\ndigested again after this operation.\n","title":"digest","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Crypto","Hash"],"Hash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["crypto",{"tag":"TypeConstructor","contents":[["Node","Crypto"],"CRYPTO"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Node/Crypto/Hash.purs","end":[43,34]}}]}],"resolvedDependencies":{"purescript-proxy":"1.0.0","purescript-exceptions":"2.0.0","purescript-newtype":"1.3.0","purescript-maps":"2.1.2","purescript-control":"2.0.0","purescript-console":"2.0.0","purescript-either":"2.2.1","purescript-node-streams":"2.0.0","purescript-spec-discovery":"0.4.0","purescript-arrays":"3.2.1","purescript-maybe":"2.1.1","purescript-js-timers":"2.0.0","purescript-node-path":"1.0.0","purescript-distributive":"2.0.0","purescript-unfoldable":"2.0.0","purescript-invariant":"2.0.0","purescript-lazy":"2.0.0","purescript-node-process":"3.0.0","purescript-monoid":"2.2.0","purescript-aff":"2.0.3","purescript-foldable-traversable":"2.2.0","purescript-tailrec":"2.0.2","purescript-functors":"1.1.0","purescript-prelude":"2.5.0","purescript-st":"2.0.0","purescript-bifunctors":"2.0.0","purescript-pipes":"2.2.0","purescript-nonempty":"3.0.0","purescript-contravariant":"2.0.0","purescript-generics":"3.3.0","purescript-unsafe-coerce":"2.0.0","purescript-refs":"2.0.0","purescript-integers":"2.1.1","purescript-eff":"2.0.0","purescript-const":"2.0.0","purescript-spec":"0.12.4","purescript-node-buffer":"2.0.1","purescript-node-fs":"3.0.0","purescript-transformers":"2.2.0","purescript-globals":"2.0.0","purescript-js-date":"3.0.0","purescript-math":"2.0.0","purescript-enums":"2.0.1","purescript-psci-support":"2.0.0","purescript-random":"2.0.0","purescript-parallel":"2.1.0","purescript-posix-types":"2.0.0","purescript-tuples":"3.2.0","purescript-spec-quickcheck":"0.10.0","purescript-partial":"1.2.0","purescript-quickcheck":"3.1.1","purescript-strings":"2.1.0","purescript-identity":"2.0.0","purescript-foreign":"3.2.0","purescript-lists":"3.4.0","purescript-nullable":"2.0.0","purescript-datetime":"2.1.1","purescript-functions":"2.0.0"},"version":"0.2.1","github":["owickstrom","purescript-node-crypto"],"versionTag":"v0.2.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Test.Spec.Console":"purescript-spec","Control.Monad.Eff.Ref":"purescript-refs","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Test.Spec.Summary":"purescript-spec","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Data.Foreign.NullOrUndefined":"purescript-foreign","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Pipes.Core":"purescript-pipes","Data.Array.ST.Iterator":"purescript-arrays","Test.Spec.Assertions.Aff":"purescript-spec","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Foreign.Null":"purescript-foreign","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Foreign.Index":"purescript-foreign","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Data.Foreign.Class":"purescript-foreign","Control.Monad.Cont":"purescript-transformers","Test.Spec.QuickCheck":"purescript-spec-quickcheck","Data.List.ZipList":"purescript-lists","Node.FS":"purescript-node-fs","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Test.Spec.Reporter.Console":"purescript-spec","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Node.FS.Async":"purescript-node-fs","Test.Spec.Reporter.Dot":"purescript-spec","Data.StrMap.Unsafe":"purescript-maps","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Pipes.Prelude":"purescript-pipes","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Control.Monad.Aff.Internal":"purescript-aff","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Test.Spec.Discovery":"purescript-spec-discovery","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Test.Spec.Reporter.Base":"purescript-spec","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Foreign.Undefined":"purescript-foreign","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Node.Buffer.Unsafe":"purescript-node-buffer","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Node.Process":"purescript-node-process","Control.Monad.Except.Trans":"purescript-transformers","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Posix":"purescript-posix-types","Control.Monad.Eff.Class":"purescript-eff","Data.Posix.Signal":"purescript-posix-types","Test.QuickCheck":"purescript-quickcheck","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Node.Globals":"purescript-node-process","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Test.Spec.Color":"purescript-spec","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Node.Platform":"purescript-node-process","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.10.7"}