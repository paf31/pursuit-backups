{"uploader":"paf31","packageMeta":{"homepage":"https://github.com/purescript-node/purescript-node-path","repository":{"url":"git://github.com/purescript-node/purescript-node-path.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","bower.json","gulpfile.js","package.json"],"devDependencies":{"purescript-console":"^3.0.0","purescript-assert":"^3.0.0"},"name":"purescript-node-path","keywords":["purescript"],"license":["MIT"],"description":"PureScript type definitions for Node's path module"},"tagTime":"2017-04-04T03:54:21+0000","modules":[{"reExports":[],"name":"Node.Path","comments":null,"declarations":[{"children":[],"comments":"Type for strings representing file paths.\n","title":"FilePath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[4,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[4,23]}},{"children":[],"comments":"Normalize a string path, taking care of `..` and `.`, duplicated slashes,\netc. If the path contains a trailing slash it is preserved. On Windows\nbackslashes are used.\n","title":"normalize","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[9,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[9,49]}},{"children":[],"comments":"Concatenates multiple path segments together and normalizes the resulting path.\n","title":"concat","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[12,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[12,52]}},{"children":[],"comments":"Resolves `to` to an absolute path ([from...], to).\n","title":"resolve","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}},"sourceSpan":{"start":[15,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[15,65]}},{"children":[],"comments":"Solve the relative path from `from` to `to`.\n","title":"relative","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}},"sourceSpan":{"start":[18,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[18,60]}},{"children":[],"comments":"Return the directory name of a path.\n","title":"dirname","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[21,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[21,47]}},{"children":[],"comments":"Return the last portion of a path.\n","title":"basename","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[24,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[24,48]}},{"children":[],"comments":"Return the last portion of a path, also dropping a specific file extension\nif it matches the end of the name.\n","title":"basenameWithoutExt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}},"sourceSpan":{"start":[28,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[28,70]}},{"children":[],"comments":"Return the extension of the path, from the last `.` to end of string in the\nlast portion of the path. If there is no `.` in the last portion of the\npath or the first character of it is `.`, then it returns an empty string.\n","title":"extname","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[33,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[33,47]}},{"children":[],"comments":"The platform-specific file separator. `\\\\` or `/`.\n","title":"sep","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[36,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[36,29]}},{"children":[],"comments":"The platform-specific path delimiter, `;` or `:`.\n","title":"delimiter","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[39,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[39,35]}},{"children":[],"comments":"Parse a path into components.\n","title":"parse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["root",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["dir",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["base",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["ext",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["name",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[42,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[42,115]}},{"children":[],"comments":"Determines whether path is an absolute path\n","title":"isAbsolute","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[45,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/node-path/v2.0.0/src/Node/Path.purs","end":[45,40]}}]}],"resolvedDependencies":{},"version":"2.0.0","github":["purescript-node","purescript-node-path"],"versionTag":"v2.0.0","moduleMap":{},"compilerVersion":"0.11.3"}