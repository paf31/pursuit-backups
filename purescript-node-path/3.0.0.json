{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/purescript-node/purescript-node-path","repository":{"url":"git://github.com/purescript-node/purescript-node-path.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","bower.json","gulpfile.js","package.json"],"devDependencies":{"purescript-console":"^4.1.0","purescript-assert":"^4.0.0"},"dependencies":{"purescript-effect":"^2.0.0"},"name":"purescript-node-path","keywords":["purescript"],"license":["MIT"],"description":"PureScript type definitions for Node's path module"},"tagTime":"2018-05-27T00:08:26+0000","modules":[{"reExports":[],"name":"Node.Path","comments":null,"declarations":[{"children":[],"comments":"Type for strings representing file paths.\n","title":"FilePath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[7,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[7,23]}},{"children":[],"comments":"Normalize a string path, taking care of `..` and `.`, duplicated slashes,\netc. If the path contains a trailing slash it is preserved. On Windows\nbackslashes are used.\n","title":"normalize","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[12,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[12,49]}},{"children":[],"comments":"Concatenates multiple path segments together and normalizes the resulting path.\n","title":"concat","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[15,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[15,52]}},{"children":[],"comments":"Resolves `to` to an absolute path ([from...], to).\n","title":"resolve","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[18,72]}},{"children":[],"comments":"Solve the relative path from `from` to `to`.\n","title":"relative","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}},"sourceSpan":{"start":[21,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[21,60]}},{"children":[],"comments":"Return the directory name of a path.\n","title":"dirname","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[24,47]}},{"children":[],"comments":"Return the last portion of a path.\n","title":"basename","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[27,48]}},{"children":[],"comments":"Return the last portion of a path, also dropping a specific file extension\nif it matches the end of the name.\n","title":"basenameWithoutExt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[31,70]}},{"children":[],"comments":"Return the extension of the path, from the last `.` to end of string in the\nlast portion of the path. If there is no `.` in the last portion of the\npath or the first character of it is `.`, then it returns an empty string.\n","title":"extname","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}},"sourceSpan":{"start":[36,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[36,47]}},{"children":[],"comments":"The platform-specific file separator. `\\\\` or `/`.\n","title":"sep","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[39,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[39,29]}},{"children":[],"comments":"The platform-specific path delimiter, `;` or `:`.\n","title":"delimiter","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[42,35]}},{"children":[],"comments":"Parse a path into components.\n","title":"parse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["root",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["dir",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["base",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["ext",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["name",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[45,115]}},{"children":[],"comments":"Determines whether path is an absolute path\n","title":"isAbsolute","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/purescript-node/purescript-node-path/src/Node/Path.purs","end":[48,40]}}]}],"resolvedDependencies":{"purescript-effect":"2.0.0","purescript-console":"4.1.0","purescript-prelude":"4.0.0","purescript-assert":"4.0.0"},"version":"3.0.0","github":["purescript-node","purescript-node-path"],"versionTag":"v3.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Type.Data.RowList":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Effect.Unsafe":"purescript-effect","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Eq":"purescript-prelude","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Data.Void":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Monoid.Endo":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.11.7"}