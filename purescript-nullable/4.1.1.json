{"uploader":"hdgarrood","packageMeta":{"repository":{"url":"git://github.com/purescript-contrib/purescript-nullable.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","bower.json","package.json"],"devDependencies":{"purescript-assert":"^4.0.0"},"authors":[{"email":"paf31@cantab.net","name":"Phil Freeman"}],"dependencies":{"purescript-maybe":"^4.0.0","purescript-functions":"^4.0.0"},"name":"purescript-nullable","license":["MIT"],"description":"A library for dealing with nulls"},"tagTime":"2019-01-12T20:33:14+0000","modules":[{"reExports":[],"name":"Data.Nullable","comments":"This module defines types and functions for working with nullable types\nusing the FFI.\n","declarations":[{"children":[{"comments":null,"title":"showNullable","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[64,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[64,53]}},{"comments":null,"title":"eqNullable","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[67,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[67,47]}},{"comments":null,"title":"eq1Nullable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq1"]},{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[70,37]}},{"comments":null,"title":"ordNullable","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[73,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[73,50]}},{"comments":null,"title":"ord1Nullable","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord1"]},{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[76,39]}}],"comments":"A nullable type. This type constructor is intended to be used for\ninteroperating with JavaScript functions which accept or return null\nvalues.\n\nThe runtime representation of `Nullable T` is the same as that of `T`,\nexcept that it may also be `null`. For example, the JavaScript values\n`null`, `[]`, and `[1,2,3]` may all be given the type\n`Nullable (Array Int)`. Similarly, the JavaScript values `[]`, `[null]`,\nand `[1,2,null,3]` may all be given the type `Array (Nullable Int)`.\n\nThere is one pitfall with `Nullable`, which is that values of the type\n`Nullable T` will not function as you might expect if the type `T` happens\nto itself permit `null` as a valid runtime representation.\n\nIn particular, values of the type `Nullable (Nullable T)` will ‘collapse’,\nin the sense that the PureScript expressions `notNull null` and `null`\nwill both leave you with a value whose runtime representation is just\n`null`. Therefore it is important to avoid using `Nullable T` in\nsituations where `T` itself can take `null` as a runtime representation.\nIf in doubt, use `Maybe` instead.\n\n`Nullable` does not permit lawful `Functor`, `Applicative`, or `Monad`\ninstances as a result of this pitfall, which is why these instances are\nnot provided.\n","title":"Nullable","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[44,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[44,45]}},{"children":[],"comments":"The null value.\n","title":"null","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[47,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[47,44]}},{"children":[],"comments":"Wrap a non-null value.\n","title":"notNull","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[52,52]}},{"children":[],"comments":"Represent `null` using `Maybe a` as `Nothing`. Note that this function\ncan violate parametricity, as it inspects the runtime representation of\nits argument (see the warning about the pitfall of `Nullable` above).\n","title":"toMaybe","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[61,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[61,43]}},{"children":[],"comments":"Takes `Nothing` to `null`, and `Just a` to `a`.\n","title":"toNullable","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[55,1],"name":"/home/harry/code/purescript-nullable/src/Data/Nullable.purs","end":[55,46]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-control":"4.1.0","purescript-console":"4.2.0","purescript-maybe":"4.0.1","purescript-invariant":"4.1.0","purescript-prelude":"4.1.0","purescript-assert":"4.0.0","purescript-functions":"4.0.0"},"version":"4.1.1","github":["purescript-contrib","purescript-nullable"],"versionTag":"v4.1.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Type.Data.RowList":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Effect.Unsafe":"purescript-effect","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DivisionRing":"purescript-prelude","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Plus":"purescript-control","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Effect.Class.Console":"purescript-console","Data.Monoid.Endo":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.12.0"}