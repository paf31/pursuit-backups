{"uploader":"Proclivis","packageMeta":{"homepage":"https://github.com/proclivis/purescript-numerics","repository":{"url":"git://github.com/proclivis/purescript-numerics.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","test","bower.json","package.json"],"devDependencies":{"purescript-console":"^3.0.0","purescript-assert":"^3.0.0","purescript-psci-support":"^3.0.0"},"authors":[{"email":"proclivis@gmail.com","name":"Michael Jones"}],"dependencies":{"purescript-bigints":"^3.1.0","purescript-uint":"^0.5.0","purescript-rationals":"^3.1.1","purescript-prelude":"^3.1.0","purescript-integers":"^3.1.0"},"name":"purescript-numerics","license":["MIT"],"description":"Fixed width word and operations"},"tagTime":"2017-07-14T13:04:30+0000","modules":[{"reExports":[],"name":"Data.Fractional","comments":"A `Fractional` typeclass.\n","declarations":[{"children":[{"comments":null,"title":"fromRational","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Rational"],"Rational"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":"`Fractional` instance for `Int`.\n`Fractional` instance for `Number`.\n","title":"fractionalNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Fractional"],"Fractional"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Fractional.purs","end":[29,20]}}],"comments":"The `Fractional` class represents fractional numbers, similar to the Haskell version.\n","title":"Fractional","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Real"],"Real"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","DivisionRing"],"DivisionRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[16,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Fractional.purs","end":[17,34]}},{"children":[],"comments":"A helper function for general conversion between `Fractional` values.\n","title":"fromFractional","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Fractional"],"Fractional"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Fractional"],"Fractional"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Fractional.purs","end":[20,69]}}]},{"reExports":[],"name":"Data.Integral","comments":"A `Integral` typeclass.\n","declarations":[{"children":[{"comments":null,"title":"toBigInt","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":null},{"comments":"`Integral` instance for `Int`.\n","title":"integralInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Integral"],"Integral"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Integral.purs","end":[27,30]}},{"comments":"`Integral` instance for `Number`.\n","title":"integralNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Integral"],"Integral"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Integral.purs","end":[31,59]}},{"comments":"`Integral` instance for `BigInt`.\n","title":"integralBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Integral"],"Integral"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[34,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Integral.purs","end":[35,16]}}],"comments":"The `Integral` class represents integral numbers, similar to the Haskell version.\n","title":"Integral","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Real"],"Real"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[16,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Integral.purs","end":[19,31]}},{"children":[],"comments":"A helper function for general conversion between `Integral` values.\n","title":"fromIntegral","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Integral"],"Integral"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Integral"],"Integral"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Integral.purs","end":[22,63]}}]},{"reExports":[],"name":"Data.Num","comments":"A `Num` typeclass.\n","declarations":[{"children":[{"comments":null,"title":"negate","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"abs","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"signum","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":null,"title":"fromBigInt","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":null},{"comments":"`Num` instance for `Int`.\n","title":"numInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Num"],"Num"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[23,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Num.purs","end":[27,68]}},{"comments":"`Num` instance for `Number`.\n","title":"numNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Num"],"Num"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Num.purs","end":[34,35]}},{"comments":"`Num` instance for `BigInt`.\n","title":"numBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Num"],"Num"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[37,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Num.purs","end":[41,18]}}],"comments":"The `Num` class represents general numbers, similar to the Haskell version.\n","title":"Num","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","CommutativeRing"],"CommutativeRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[16,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Num.purs","end":[20,33]}}]},{"reExports":[],"name":"Data.Real","comments":"A `Real` typeclass.\n","declarations":[{"children":[{"comments":null,"title":"toRational","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Rational"],"Rational"]}]}},"sourceSpan":null},{"comments":"`Real` instance for `Int`.\n","title":"realInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Real"],"Real"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[19,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Real.purs","end":[20,25]}},{"comments":"`Real` instance for `Number`.\n","title":"realNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Real"],"Real"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[23,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Real.purs","end":[24,56]}},{"comments":"`Real` instance for `BigInt`.\n","title":"realBigInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Real"],"Real"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[27,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Real.purs","end":[28,66]}}],"comments":"The `Real` class represents real numbers, similar to the Haskell version.\n","title":"Real","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Num"],"Num"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[15,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Real.purs","end":[16,32]}}]},{"reExports":[],"name":"Data.Shift","comments":"A `Shift` typeclass that defines bitwise shifting operations.\n","declarations":[{"children":[{"comments":null,"title":"shr","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"zshr","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"shl","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"cshr","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"cshl","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null}],"comments":"The `Shift` typeclass that requires the internal type to be both `Bounded` and `Ord`.\n","title":"Shift","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[38,1],"name":"/home/ubuntu/purescript-numerics/src/Data/Shift.purs","end":[52,26]}}]}],"resolvedDependencies":{"purescript-bigints":"3.1.0","purescript-newtype":"2.0.0","purescript-control":"3.3.0","purescript-console":"3.0.0","purescript-maybe":"3.0.0","purescript-invariant":"3.0.0","purescript-uint":"0.5.0","purescript-monoid":"3.1.0","purescript-rationals":"3.1.1","purescript-prelude":"3.1.0","purescript-assert":"3.0.0","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-globals":"3.0.0","purescript-math":"2.1.0","purescript-psci-support":"3.0.0","purescript-partial":"1.2.1"},"version":"0.1.1","github":["proclivis","purescript-numerics"],"versionTag":"v0.1.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Rational":"purescript-rationals","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.UInt":"purescript-uint","Data.Monoid.Additive":"purescript-monoid","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Global.Unsafe":"purescript-globals","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Ratio":"purescript-rationals","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DivisionRing":"purescript-prelude","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Math":"purescript-math","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Partial":"purescript-partial","Global":"purescript-globals","Data.Monoid.Multiplicative":"purescript-monoid","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Monoid.Endo":"purescript-monoid","Control.Applicative":"purescript-prelude","Data.BigInt":"purescript-bigints"},"compilerVersion":"0.11.4"}