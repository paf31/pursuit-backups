{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/purescript/purescript-orders","repository":{"url":"git://github.com/purescript/purescript-orders","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-console":"^4.0.0","purescript-assert":"^4.0.0"},"dependencies":{"purescript-newtype":"^3.0.0","purescript-prelude":"^4.0.0"},"name":"purescript-orders","license":["BSD-3-Clause"]},"tagTime":"2018-05-23T01:06:34+0000","modules":[{"reExports":[],"name":"Data.Ord.Down","comments":null,"declarations":[{"children":[{"comments":null,"title":"Down","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeDown","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Down"],"Down"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeWildcard","contents":{"start":[14,49],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Down.purs","end":[14,50]}}]}},"sourceSpan":{"start":[14,8],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Down.purs","end":[14,50]}},{"comments":null,"title":"eqDown","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Down"],"Down"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[16,16],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Down.purs","end":[16,54]}},{"comments":null,"title":"ordDown","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Down"],"Down"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Down.purs","end":[18,42]}},{"comments":null,"title":"boundedDown","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Down"],"Down"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[21,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Down.purs","end":[21,54]}},{"comments":null,"title":"showDown","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Down"],"Down"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Down.purs","end":[25,45]}}],"comments":"A newtype wrapper which provides a reversed `Ord` instance. For example:\n\n    sortBy (comparing Down) [1,2,3] = [3,2,1]\n\n","title":"Down","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[12,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Down.purs","end":[12,24]}}]},{"reExports":[],"name":"Data.Ord.Max","comments":null,"declarations":[{"children":[{"comments":null,"title":"Max","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeMax","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Max"],"Max"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeWildcard","contents":{"start":[15,47],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[15,48]}}]}},"sourceSpan":{"start":[15,8],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[15,48]}},{"comments":null,"title":"eqMax","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Max"],"Max"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[17,16],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[17,52]}},{"comments":null,"title":"ordMax","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Max"],"Max"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[19,40]}},{"comments":null,"title":"semigroupMax","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Max"],"Max"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[22,52]}},{"comments":null,"title":"monoidMax","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Max"],"Max"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[25,50]}},{"comments":null,"title":"showMax","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Max"],"Max"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[28,43]}}],"comments":"Provides a `Semigroup` based on the `max` function. If the type has a\n`Bounded` instance, then a `Monoid` instance is provided too. For example:\n\n    unwrap (Max 5 <> Max 6) = 6\n    mempty :: Max Ordering = Max LT\n\n","title":"Max","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[13,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Max.purs","end":[13,22]}}]},{"reExports":[],"name":"Data.Ord.Min","comments":null,"declarations":[{"children":[{"comments":null,"title":"Min","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeMin","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Min"],"Min"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeWildcard","contents":{"start":[15,47],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[15,48]}}]}},"sourceSpan":{"start":[15,8],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[15,48]}},{"comments":null,"title":"eqMin","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Min"],"Min"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[17,16],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[17,52]}},{"comments":null,"title":"ordMin","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Min"],"Min"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[19,40]}},{"comments":null,"title":"semigroupMin","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Min"],"Min"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[22,52]}},{"comments":null,"title":"monoidMin","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Min"],"Min"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[25,50]}},{"comments":null,"title":"showMin","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord","Min"],"Min"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[28,43]}}],"comments":"Provides a `Semigroup` based on the `min` function. If the type has a\n`Bounded` instance, then a `Monoid` instance is provided too. For example:\n\n    unwrap (Min 5 <> Min 6) = 5\n    mempty :: Min Ordering = Min GT\n\n","title":"Min","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[13,1],"name":"/home/travis/build/purescript/purescript-orders/src/Data/Ord/Min.purs","end":[13,22]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-console":"4.0.0","purescript-prelude":"4.0.0","purescript-assert":"4.0.0"},"version":"4.0.0","github":["purescript","purescript-orders"],"versionTag":"v4.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Type.Data.RowList":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Effect.Unsafe":"purescript-effect","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Data.Void":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.11.7"}