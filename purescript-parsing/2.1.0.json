{"uploader":"paf31","packageMeta":{"homepage":"https://github.com/purescript-contrib/purescript-parsing","repository":{"url":"git://github.com/purescript-contrib/purescript-parsing.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-console":"^2.0.0","purescript-assert":"^2.0.0"},"dependencies":{"purescript-unicode":"^2.0.0","purescript-either":"^2.0.0","purescript-arrays":"^3.0.0","purescript-maybe":"^2.0.0","purescript-foldable-traversable":"^2.0.0","purescript-integers":"^2.0.0","purescript-transformers":"^2.0.0","purescript-strings":"^2.0.0","purescript-identity":"^2.0.0","purescript-lists":"^2.0.0"},"name":"purescript-parsing","keywords":["purescript"],"license":["BSD-3-Clause"],"description":"Parser combinator library"},"modules":[{"reExports":[],"name":"Text.Parsing.Indent","comments":"This is purescript-port of Text.Parsing.Indent\n<https://hackage.haskell.org/package/indents-0.3.3/docs/Text-Parsec-Indent.html>, 05.07.2016.\nA module to construct indentation aware parsers. Many programming\nlanguage have indentation based syntax rules e.g. python and Haskell.\nThis module exports combinators to create such parsers.\n\nThe input source can be thought of as a list of tokens. Abstractly\neach token occurs at a line and a column and has a width. The column\nnumber of a token measures is indentation. If t1 and t2 are two tokens\nthen we say that indentation of t1 is more than t2 if the column\nnumber of occurrence of t1 is greater than that of t2.\n\nCurrently this module supports two kind of indentation based syntactic\nstructures which we now describe:\n\n- **Block**\n\n  A block of indentation /c/ is a sequence of tokens with\n  indentation at least /c/.  Examples for a block is a where clause of\n  Haskell with no explicit braces.\n\n- **Line fold**\n\n  A line fold starting at line /l/ and indentation /c/ is a\n  sequence of tokens that start at line /l/ and possibly continue to\n  subsequent lines as long as the indentation is greater than /c/. Such\n  a sequence of lines need to be /folded/ to a single line. An example\n  is MIME headers. Line folding based binding separation is used in\n  Haskell as well.\n","declarations":[{"children":[],"comments":"Indentation sensitive parser type. Usually @ m @ will\nbe @ Identity @ as with any @ ParserT @\n","title":"IndentParser","info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[69,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[69,53]}},{"children":[],"comments":"`withBlock f a p` parses `a`\nfollowed by an indented block of `p`\ncombining them with `f`.\n","title":"withBlock","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[108,108]}},{"children":[],"comments":"Like 'withBlock', but throws away initial parse result\n","title":"withBlock'","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[117,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[117,92]}},{"children":[],"comments":"Parses only when indented past the level of the reference\n","title":"indented","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[121,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[121,42]}},{"children":[],"comments":"Same as `indented`, but does not change internal state\n","title":"indented'","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[130,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[130,43]}},{"children":[],"comments":"Parses only when indented past the level of the reference or on the same line\n","title":"sameOrIndented","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[137,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[137,48]}},{"children":[],"comments":"Parses only on the same line as the reference\n","title":"sameLine","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[141,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[141,42]}},{"children":[],"comments":"Parses a block of lines at the same indentation level\n","title":"block1","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[148,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[148,66]}},{"children":[],"comments":"Parses a block of lines at the same indentation level , empty Blocks allowed\n","title":"block","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[154,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[154,65]}},{"children":[],"comments":"Parses using the current location for indentation reference\n","title":"withPos","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[160,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[160,60]}},{"children":[],"comments":"Ensures the current indentation level matches that of the reference\n","title":"checkIndent","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[168,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[168,45]}},{"children":[],"comments":"Run the result of an indentation sensitive parse\n","title":"runIndent","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[175,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[175,45]}},{"children":[],"comments":"`<+/>` is to indentation sensitive parsers what `ap` is to monads\n","title":"indentAp","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[179,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[179,90]}},{"children":[],"comments":null,"title":"(<+/>)","info":{"declType":"alias","alias":[["Text","Parsing","Indent"],{"Right":{"Left":{"Ident":"indentAp"}}}],"fixity":{"associativity":"infixl","precedence":9}},"sourceSpan":{"start":[182,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[182,26]}},{"children":[],"comments":"Like `<+/>` but doesn't apply the function to the parsed value\n","title":"indentNoAp","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[185,85]}},{"children":[],"comments":null,"title":"(<-/>)","info":{"declType":"alias","alias":[["Text","Parsing","Indent"],{"Right":{"Left":{"Ident":"indentNoAp"}}}],"fixity":{"associativity":"infixl","precedence":10}},"sourceSpan":{"start":[188,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[188,29]}},{"children":[],"comments":"Like `<+/>` but applies the second parser many times\n","title":"indentMany","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[191,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[191,97]}},{"children":[],"comments":null,"title":"(<*/>)","info":{"declType":"alias","alias":[["Text","Parsing","Indent"],{"Right":{"Left":{"Ident":"indentMany"}}}],"fixity":{"associativity":"infixl","precedence":11}},"sourceSpan":{"start":[194,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[194,29]}},{"children":[{"comments":null,"title":"Opt","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Data type used to optional parsing\n","title":"Optional","info":{"declType":"data","dataDeclType":"data","typeArguments":[["s",null],["a",null]]},"sourceSpan":{"start":[197,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[197,45]}},{"children":[],"comments":"Like `<+/>` but applies the second parser optionally using the `Optional` datatype\n","title":"indentOp","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"Optional"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[200,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[200,86]}},{"children":[],"comments":null,"title":"(<?/>)","info":{"declType":"alias","alias":[["Text","Parsing","Indent"],{"Right":{"Left":{"Ident":"indentOp"}}}],"fixity":{"associativity":"infixl","precedence":12}},"sourceSpan":{"start":[203,1],"name":"src/Text/Parsing/Parser/Indent.purs","end":[203,27]}}]},{"reExports":[],"name":"Text.Parsing.Parser","comments":null,"declarations":[{"children":[{"comments":null,"title":"showParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]}},"sourceSpan":{"start":[37,1],"name":"src/Text/Parsing/Parser.purs","end":[41,1]}},{"comments":null,"title":"eqParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]}},"sourceSpan":{"start":[41,1],"name":"src/Text/Parsing/Parser.purs","end":[41,46]}},{"comments":null,"title":"ordParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]}},"sourceSpan":{"start":[42,1],"name":"src/Text/Parsing/Parser.purs","end":[42,48]}},{"comments":null,"title":"monadErrorParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[77,1],"name":"src/Text/Parsing/Parser.purs","end":[77,92]}}],"comments":"A parsing error, consisting of a message and position information.\n","title":"ParseError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[29,1],"name":"src/Text/Parsing/Parser.purs","end":[29,45]}},{"children":[],"comments":null,"title":"parseErrorMessage","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[31,1],"name":"src/Text/Parsing/Parser.purs","end":[31,42]}},{"children":[],"comments":null,"title":"parseErrorPosition","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}},"sourceSpan":{"start":[34,1],"name":"src/Text/Parsing/Parser.purs","end":[34,45]}},{"children":[{"comments":null,"title":"ParseState","info":{"arguments":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"monadStateParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseState"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[76,1],"name":"src/Text/Parsing/Parser.purs","end":[76,96]}}],"comments":"Contains the remaining input and current position.\n","title":"ParseState","info":{"declType":"data","dataDeclType":"data","typeArguments":[["s",null]]},"sourceSpan":{"start":[45,1],"name":"src/Text/Parsing/Parser.purs","end":[45,50]}},{"children":[{"comments":null,"title":"ParserT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseState"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeWildcard","contents":{"start":[53,59],"name":"src/Text/Parsing/Parser.purs","end":[53,60]}}]}},"sourceSpan":{"start":[53,1],"name":"src/Text/Parsing/Parser.purs","end":[53,60]}},{"comments":null,"title":"lazyParserT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[67,1],"name":"src/Text/Parsing/Parser.purs","end":[68,68]}},{"comments":null,"title":"functorParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[70,1],"name":"src/Text/Parsing/Parser.purs","end":[70,77]}},{"comments":null,"title":"applyParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[71,1],"name":"src/Text/Parsing/Parser.purs","end":[71,71]}},{"comments":null,"title":"applicativeParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[72,1],"name":"src/Text/Parsing/Parser.purs","end":[72,83]}},{"comments":null,"title":"bindParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[73,1],"name":"src/Text/Parsing/Parser.purs","end":[73,69]}},{"comments":null,"title":"monadParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[74,1],"name":"src/Text/Parsing/Parser.purs","end":[74,71]}},{"comments":null,"title":"monadRecParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[75,1],"name":"src/Text/Parsing/Parser.purs","end":[75,80]}},{"comments":null,"title":"monadStateParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Class"],"MonadState"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseState"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[76,1],"name":"src/Text/Parsing/Parser.purs","end":[76,96]}},{"comments":null,"title":"monadErrorParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadError"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[77,1],"name":"src/Text/Parsing/Parser.purs","end":[77,92]}},{"comments":null,"title":"altParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[79,1],"name":"src/Text/Parsing/Parser.purs","end":[85,29]}},{"comments":null,"title":"plusParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[87,1],"name":"src/Text/Parsing/Parser.purs","end":[90,1]}},{"comments":null,"title":"alternativeParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[90,1],"name":"src/Text/Parsing/Parser.purs","end":[90,68]}},{"comments":null,"title":"monadZeroParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadZero"],"MonadZero"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[92,1],"name":"src/Text/Parsing/Parser.purs","end":[92,64]}},{"comments":null,"title":"monadPlusParserT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}}]}},"sourceSpan":{"start":[94,1],"name":"src/Text/Parsing/Parser.purs","end":[94,64]}},{"comments":null,"title":"monadTransParserT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trans","Class"],"MonadTrans"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]}}]}},"sourceSpan":{"start":[96,1],"name":"src/Text/Parsing/Parser.purs","end":[97,35]}}],"comments":"The Parser monad transformer.\n\nThe first type argument is the stream type. Typically, this is either `String`,\nor some sort of token stream.\n","title":"ParserT","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["m",null],["a",null]]},"sourceSpan":{"start":[51,1],"name":"src/Text/Parsing/Parser.purs","end":[51,81]}},{"children":[],"comments":"Apply a parser, keeping only the parsed result.\n","title":"runParserT","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"src/Text/Parsing/Parser.purs","end":[56,85]}},{"children":[],"comments":"The `Parser` monad is a synonym for the parser monad transformer applied to the `Identity` monad.\n","title":"Parser","info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[61,1],"name":"src/Text/Parsing/Parser.purs","end":[61,39]}},{"children":[],"comments":"Apply a parser, keeping only the parsed result.\n","title":"runParser","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"src/Text/Parsing/Parser.purs","end":[64,64]}},{"children":[],"comments":"Set the consumed flag.\n","title":"consume","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[100,1],"name":"src/Text/Parsing/Parser.purs","end":[100,51]}},{"children":[],"comments":"Fail with a message.\n","title":"fail","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[105,1],"name":"src/Text/Parsing/Parser.purs","end":[105,57]}}]},{"reExports":[],"name":"Text.Parsing.Parser.Combinators","comments":"Combinators for creating parsers.\n\n### Notes\n\nA few of the known combinators from Parsec are missing in this module. That\nis because they have already been defined in other libraries.\n\n```purescript\nText.Parsec.many  = Data.(Array|List).many\nText.Parsec.many1 = Data.(Array|List).some\nText.Parsec.(<|>) = Control.Alt.alt (<|>)\n```\n\nBecause Strings are not Char Arrays in PureScript `many` and `some` on Char Parsers need to\nbe used in conjunction with `Data.String.fromCharArray` to achieve \"Parsec-like\" results.\n\n```purescript\nText.Parsec.many  (char 'x') <=> fromCharArray <$> Data.Array.many (char 'x')\n```\n","declarations":[{"children":[],"comments":"Provide an error message in the case of failure.\n","title":"withErrorMessage","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[36,86]}},{"children":[],"comments":null,"title":"(<?>)","info":{"declType":"alias","alias":[["Text","Parsing","Parser","Combinators"],{"Right":{"Left":{"Ident":"withErrorMessage"}}}],"fixity":{"associativity":"infix","precedence":3}},"sourceSpan":{"start":[39,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[39,32]}},{"children":[],"comments":"Flipped `(<?>)`.\n","title":"asErrorMessage","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[42,84]}},{"children":[],"comments":null,"title":"(<??>)","info":{"declType":"alias","alias":[["Text","Parsing","Parser","Combinators"],{"Right":{"Left":{"Ident":"asErrorMessage"}}}],"fixity":{"associativity":"infix","precedence":3}},"sourceSpan":{"start":[45,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[45,31]}},{"children":[],"comments":"Wrap a parser with opening and closing markers.\n\nFor example:\n\n```purescript\nparens = between (string \"(\") (string \")\")\n```\n","title":"between","info":{"declType":"value","type":{"tag":"ForAll","contents":["close",{"tag":"ForAll","contents":["open",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"open"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"close"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[54,119]}},{"children":[],"comments":"Provide a default result in the case where a parser fails without consuming input.\n","title":"option","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[62,71]}},{"children":[],"comments":"Optionally parse something, failing quietly.\n","title":"optional","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[66,71]}},{"children":[],"comments":"pure `Nothing` in the case where a parser fails without consuming input.\n","title":"optionMaybe","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[71,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[71,79]}},{"children":[],"comments":"In case of failure, reset the stream to the unconsumed state.\n","title":"try","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[75,63]}},{"children":[],"comments":"Parse a phrase, without modifying the consumed state or stream position.\n","title":"lookAhead","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[83,69]}},{"children":[],"comments":"Parse phrases delimited by a separator.\n\nFor example:\n\n```purescript\ndigit `sepBy` string \",\"\n```\n","title":"sepBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["sep",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[95,95]}},{"children":[],"comments":"Parse phrases delimited by a separator, requiring at least one match.\n","title":"sepBy1","info":{"declType":"value","type":{"tag":"ForAll","contents":["sep",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[99,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[99,96]}},{"children":[],"comments":"Parse phrases delimited and optionally terminated by a separator.\n","title":"sepEndBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["sep",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[108,98]}},{"children":[],"comments":"Parse phrases delimited and optionally terminated by a separator, requiring at least one match.\n","title":"sepEndBy1","info":{"declType":"value","type":{"tag":"ForAll","contents":["sep",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[112,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[112,99]}},{"children":[],"comments":"Parse phrases delimited and terminated by a separator, requiring at least one match.\n","title":"endBy1","info":{"declType":"value","type":{"tag":"ForAll","contents":["sep",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[120,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[120,96]}},{"children":[],"comments":"Parse phrases delimited and terminated by a separator.\n","title":"endBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["sep",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[127,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[127,95]}},{"children":[],"comments":"Parse phrases delimited by a right-associative operator.\n\nFor example:\n\n```purescript\nchainr digit (string \"+\" *> add) 0\n```\n","title":"chainr","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[140,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[140,100]}},{"children":[],"comments":"Parse phrases delimited by a left-associative operator.\n","title":"chainl","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[144,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[144,100]}},{"children":[],"comments":"Parse phrases delimited by a left-associative operator, requiring at least one match.\n","title":"chainl1","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[148,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[148,96]}},{"children":[],"comments":null,"title":"chainl1'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[153,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[153,102]}},{"children":[],"comments":"Parse phrases delimited by a right-associative operator, requiring at least one match.\n","title":"chainr1","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[159,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[159,96]}},{"children":[],"comments":null,"title":"chainr1'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[164,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[164,102]}},{"children":[],"comments":"Parse one of a set of alternatives.\n","title":"choice","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[170,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[170,86]}},{"children":[],"comments":"Skip many instances of a phrase.\n","title":"skipMany","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[174,71]}},{"children":[],"comments":"Skip at least one instance of a phrase.\n","title":"skipMany1","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[178,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[178,72]}},{"children":[],"comments":"Fail if the specified parser matches.\n","title":"notFollowedBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[185,76]}},{"children":[],"comments":"Parse several phrases until the specified terminator matches.\n","title":"manyTill","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[189,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[189,94]}},{"children":[],"comments":"Parse several phrases until the specified terminator matches, requiring at least one match.\n","title":"many1Till","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[201,1],"name":"src/Text/Parsing/Parser/Combinators.purs","end":[201,95]}}]},{"reExports":[],"name":"Text.Parsing.Parser.Expr","comments":null,"declarations":[{"children":[{"comments":null,"title":"AssocNone","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AssocLeft","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AssocRight","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Assoc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[16,1],"name":"src/Text/Parsing/Parser/Expr.purs","end":[16,48]}},{"children":[{"comments":null,"title":"Infix","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]}},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Expr"],"Assoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Prefix","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Postfix","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Operator","info":{"declType":"data","dataDeclType":"data","typeArguments":[["m",null],["s",null],["a",null]]},"sourceSpan":{"start":[18,1],"name":"src/Text/Parsing/Parser/Expr.purs","end":[20,53]}},{"children":[],"comments":null,"title":"OperatorTable","info":{"arguments":[["m",null],["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Expr"],"Operator"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}},"sourceSpan":{"start":[22,1],"name":"src/Text/Parsing/Parser/Expr.purs","end":[22,58]}},{"children":[],"comments":"Build a parser from an `OperatorTable`.\n\nFor example:\n\n```purescript\nbuildExprParser [ [ Infix (string \"/\" $> div) AssocRight ]\n                , [ Infix (string \"*\" $> mul) AssocRight ]\n                , [ Infix (string \"-\" $> sub) AssocRight ]\n                , [ Infix (string \"+\" $> add) AssocRight ]\n                ] digit\n```\n","title":"buildExprParser","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Expr"],"OperatorTable"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Text/Parsing/Parser/Expr.purs","end":[41,98]}}]},{"reExports":[],"name":"Text.Parsing.Parser.Language","comments":null,"declarations":[{"children":[],"comments":"This is a minimal token definition for Haskell style languages. It\ndefines the style of comments, valid identifiers and case\nsensitivity. It does not define any reserved words or operators.\n","title":"haskellStyle","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"LanguageDef"]}},"sourceSpan":{"start":[25,1],"name":"src/Text/Parsing/Parser/Language.purs","end":[25,28]}},{"children":[],"comments":"This is a minimal token definition for Java style languages. It\ndefines the style of comments, valid identifiers and case\nsensitivity. It does not define any reserved words or operators.\n","title":"javaStyle","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"LanguageDef"]}},"sourceSpan":{"start":[46,1],"name":"src/Text/Parsing/Parser/Language.purs","end":[46,26]}},{"children":[],"comments":"This is the most minimal token definition. It is recommended to use\nthis definition as the basis for other definitions. `emptyDef` has\nno reserved names or operators, is case sensitive and doesn't accept\ncomments, identifiers or operators.\n","title":"emptyDef","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"LanguageDef"]}},"sourceSpan":{"start":[67,1],"name":"src/Text/Parsing/Parser/Language.purs","end":[67,24]}},{"children":[],"comments":"A lexer for the haskell language.\n","title":"haskell","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"TokenParser"]}},"sourceSpan":{"start":[90,1],"name":"src/Text/Parsing/Parser/Language.purs","end":[90,23]}},{"children":[],"comments":"The language definition for the Haskell language.\n","title":"haskellDef","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"LanguageDef"]}},"sourceSpan":{"start":[94,1],"name":"src/Text/Parsing/Parser/Language.purs","end":[94,27]}}]},{"reExports":[],"name":"Text.Parsing.Parser.Pos","comments":null,"declarations":[{"children":[{"comments":null,"title":"Position","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["line",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["column",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":[]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showPosition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}},"sourceSpan":{"start":[17,1],"name":"src/Text/Parsing/Parser/Pos.purs","end":[21,1]}},{"comments":null,"title":"eqPosition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}},"sourceSpan":{"start":[21,1],"name":"src/Text/Parsing/Parser/Pos.purs","end":[21,42]}},{"comments":null,"title":"ordPosition","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}},"sourceSpan":{"start":[22,1],"name":"src/Text/Parsing/Parser/Pos.purs","end":[22,44]}}],"comments":"`Position` represents the position of the parser in the input.\n\n- `line` is the current line in the input\n- `column` is the column of the next character in the current line that will be parsed\n","title":"Position","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"src/Text/Parsing/Parser/Pos.purs","end":[15,4]}},{"children":[],"comments":"The `Position` before any input has been parsed.\n","title":"initialPos","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}},"sourceSpan":{"start":[25,1],"name":"src/Text/Parsing/Parser/Pos.purs","end":[25,23]}},{"children":[],"comments":"Updates a `Position` by adding the columns and lines in `String`.\n","title":"updatePosString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}]}},"sourceSpan":{"start":[29,1],"name":"src/Text/Parsing/Parser/Pos.purs","end":[29,50]}}]},{"reExports":[],"name":"Text.Parsing.Parser.String","comments":"Primitive parsers for working with an input stream of type `String`.\n","declarations":[{"children":[{"comments":null,"title":"drop","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":null},{"comments":null,"title":"indexOf","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":null},{"comments":null,"title":"null","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":null},{"comments":null,"title":"uncons","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["head",{"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"tag":"RCons","contents":["tail",{"tag":"TypeVar","contents":"s"},{"tag":"REmpty","contents":[]}]}]}]}]}]}},"sourceSpan":null},{"comments":null,"title":"stringLikeString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","String"],"StringLike"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[25,1],"name":"src/Text/Parsing/Parser/String.purs","end":[29,16]}}],"comments":"This class exists to abstract over streams which support the string-like\noperations which this modules needs.\n","title":"StringLike","info":{"arguments":[["s",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[19,1],"name":"src/Text/Parsing/Parser/String.purs","end":[23,51]}},{"children":[],"comments":"Match end-of-file.\n","title":"eof","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[32,1],"name":"src/Text/Parsing/Parser/String.purs","end":[32,63]}},{"children":[],"comments":"Match the specified string.\n","title":"string","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"src/Text/Parsing/Parser/String.purs","end":[38,78]}},{"children":[],"comments":"Match any character.\n","title":"anyChar","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]},null]}},"sourceSpan":{"start":[51,1],"name":"src/Text/Parsing/Parser/String.purs","end":[51,67]}},{"children":[],"comments":"Match a character satisfying the specified predicate.\n","title":"satisfy","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]},null]},null]}},"sourceSpan":{"start":[64,1],"name":"src/Text/Parsing/Parser/String.purs","end":[64,88]}},{"children":[],"comments":"Match the specified character\n","title":"char","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]},null]},null]}},"sourceSpan":{"start":[71,1],"name":"src/Text/Parsing/Parser/String.purs","end":[71,72]}},{"children":[],"comments":"Match a whitespace character.\n","title":"whiteSpace","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]}},"sourceSpan":{"start":[75,1],"name":"src/Text/Parsing/Parser/String.purs","end":[75,72]}},{"children":[],"comments":"Skip whitespace characters.\n","title":"skipSpaces","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"src/Text/Parsing/Parser/String.purs","end":[81,70]}},{"children":[],"comments":"Match one of the characters in the array.\n","title":"oneOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]},null]},null]}},"sourceSpan":{"start":[87,1],"name":"src/Text/Parsing/Parser/String.purs","end":[87,79]}},{"children":[],"comments":"Match any character not in the array.\n","title":"noneOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}],"constraintData":null},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"src/Text/Parsing/Parser/String.purs","end":[91,80]}}]},{"reExports":[],"name":"Text.Parsing.Parser.Token","comments":"Functions for working with streams of tokens.\n","declarations":[{"children":[],"comments":"Create a parser which Returns the first token in the stream.\n","title":"token","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[48,72]}},{"children":[],"comments":"Create a parser which matches any token satisfying the predicate.\n","title":"when","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[59,89]}},{"children":[],"comments":"Match the specified token at the head of the stream.\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[66,85]}},{"children":[],"comments":null,"title":"LanguageDef","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[69,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[69,50]}},{"children":[{"comments":null,"title":"LanguageDef","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["commentStart",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["commentEnd",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["commentLine",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["nestedComments",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["identStart",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["identLetter",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["opStart",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["opLetter",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["reservedNames",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["reservedOpNames",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["caseSensitive",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":[]}]}]}]}]}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"The `GenLanguageDef` type is a record that contains all parameterizable\nfeatures of the \"Text.Parsec.Token\" module. The module `Text.Parsec.Languager`\ncontains some default definitions.\n","title":"GenLanguageDef","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["m",null]]},"sourceSpan":{"start":[74,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[107,6]}},{"children":[],"comments":null,"title":"unGenLanguageDef","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["caseSensitive",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["reservedOpNames",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["reservedNames",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["opLetter",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["opStart",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["identLetter",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["identStart",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["nestedComments",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["commentLine",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["commentEnd",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["commentStart",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":[]}]}]}]}]}]}]}]}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[109,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[120,57]}},{"children":[],"comments":null,"title":"TokenParser","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenTokenParser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}},"sourceSpan":{"start":[127,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[127,50]}},{"children":[],"comments":"The type of the record that holds lexical parsers that work on\n`s` streams over a monad `m`.\n","title":"GenTokenParser","info":{"arguments":[["s",null],["m",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["identifier",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["reserved",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"RCons","contents":["operator",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["reservedOp",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"RCons","contents":["charLiteral",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["stringLiteral",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["natural",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["integer",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["float",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["naturalOrFloat",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}]},{"tag":"RCons","contents":["decimal",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["hexadecimal",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["octal",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["symbol",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"RCons","contents":["lexeme",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},{"tag":"RCons","contents":["whiteSpace",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"RCons","contents":["parens",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},{"tag":"RCons","contents":["braces",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},{"tag":"RCons","contents":["angles",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},{"tag":"RCons","contents":["brackets",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},{"tag":"RCons","contents":["semi",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["comma",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["colon",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["dot",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["semiSep",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},{"tag":"RCons","contents":["semiSep1",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},{"tag":"RCons","contents":["commaSep",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},{"tag":"RCons","contents":["commaSep1",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},{"tag":"REmpty","contents":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}},"sourceSpan":{"start":[131,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[268,6]}},{"children":[],"comments":"The expression `makeTokenParser language` creates a `GenTokenParser`\nrecord that contains lexical parsers that are\ndefined using the definitions in the `language` record.\n\nThe use of this function is quite stylized - one imports the\nappropiate language definition and selects the lexical parsers that\nare needed from the resulting `GenTokenParser`.\n\n```purescript\nmodule Main where\n\nimport Text.Parsing.Parser.Language (haskellDef)\nimport Text.Parsing.Parser.Token (makeTokenParser)\n\n-- The parser\nexpr = parens expr\n   <|> identifier\n   <|> ...\n\n\n-- The lexer\ntokenParser = makeTokenParser haskellDef\nparens      = tokenParser.parens\nbraces      = tokenParser.braces\nidentifier  = tokenParser.identifier\nreserved    = tokenParser.reserved\n...\n```\n","title":"makeTokenParser","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenTokenParser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}},"sourceSpan":{"start":[302,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[302,92]}},{"children":[],"comments":"Parse a digit.  Matches any char that satisfies `Data.Char.Unicode.isDigit`.\n","title":"digit","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[777,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[777,53]}},{"children":[],"comments":"Parse a hex digit.  Matches any char that satisfies `Data.Char.Unicode.isHexDigit`.\n","title":"hexDigit","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[781,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[781,56]}},{"children":[],"comments":"Parse an octal digit.  Matches any char that satisfies `Data.Char.Unicode.isOctDigit`.\n","title":"octDigit","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[785,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[785,56]}},{"children":[],"comments":"Parse an uppercase letter.  Matches any char that satisfies `Data.Char.Unicode.isUpper`.\n","title":"upper","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[789,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[789,53]}},{"children":[],"comments":"Parse a space character.  Matches any char that satisfies `Data.Char.Unicode.isSpace`.\n","title":"space","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[793,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[793,53]}},{"children":[],"comments":"Parse an alphabetical character.  Matches any char that satisfies `Data.Char.Unicode.isAlpha`.\n","title":"letter","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[797,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[797,54]}},{"children":[],"comments":"Parse an alphabetical or numerical character.\nMatches any char that satisfies `Data.Char.Unicode.isAlphaNum`.\n","title":"alphaNum","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null}],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[802,1],"name":"src/Text/Parsing/Parser/Token.purs","end":[802,56]}}]}],"resolvedDependencies":{"purescript-proxy":"1.0.0","purescript-newtype":"1.0.0","purescript-unicode":"2.0.0","purescript-control":"2.0.0","purescript-console":"2.0.0","purescript-either":"2.0.0","purescript-arrays":"3.0.0","purescript-maybe":"2.0.1","purescript-distributive":"2.0.0","purescript-unfoldable":"2.0.0","purescript-invariant":"2.0.0","purescript-lazy":"2.0.0","purescript-monoid":"2.0.0","purescript-foldable-traversable":"2.0.0","purescript-tailrec":"2.0.0","purescript-prelude":"2.1.0","purescript-st":"2.0.0","purescript-bifunctors":"2.0.0","purescript-nonempty":"3.0.0","purescript-assert":"2.0.0","purescript-generics":"3.0.0","purescript-integers":"2.0.0","purescript-eff":"2.0.0","purescript-transformers":"2.0.1","purescript-math":"2.0.0","purescript-tuples":"3.0.0","purescript-partial":"1.1.2","purescript-strings":"2.0.2","purescript-identity":"2.0.0","purescript-lists":"2.1.0"},"bookmarks":[{"package":null,"item":["Text.Parsing.Parser","ParseError"]},{"package":null,"item":["Text.Parsing.Parser","parseErrorMessage"]},{"package":null,"item":["Text.Parsing.Parser","parseErrorPosition"]},{"package":null,"item":["Text.Parsing.Parser","ParseState"]},{"package":null,"item":["Text.Parsing.Parser","ParserT"]},{"package":null,"item":["Text.Parsing.Parser","runParserT"]},{"package":null,"item":["Text.Parsing.Parser","Parser"]},{"package":null,"item":["Text.Parsing.Parser","runParser"]},{"package":null,"item":["Text.Parsing.Parser","consume"]},{"package":null,"item":["Text.Parsing.Parser","fail"]},{"package":null,"item":["Text.Parsing.Parser.Token","token"]},{"package":null,"item":["Text.Parsing.Parser.Token","when"]},{"package":null,"item":["Text.Parsing.Parser.Token","match"]},{"package":null,"item":["Text.Parsing.Parser.Token","LanguageDef"]},{"package":null,"item":["Text.Parsing.Parser.Token","GenLanguageDef"]},{"package":null,"item":["Text.Parsing.Parser.Token","unGenLanguageDef"]},{"package":null,"item":["Text.Parsing.Parser.Token","TokenParser"]},{"package":null,"item":["Text.Parsing.Parser.Token","GenTokenParser"]},{"package":null,"item":["Text.Parsing.Parser.Token","makeTokenParser"]},{"package":null,"item":["Text.Parsing.Parser.Token","digit"]},{"package":null,"item":["Text.Parsing.Parser.Token","hexDigit"]},{"package":null,"item":["Text.Parsing.Parser.Token","octDigit"]},{"package":null,"item":["Text.Parsing.Parser.Token","upper"]},{"package":null,"item":["Text.Parsing.Parser.Token","space"]},{"package":null,"item":["Text.Parsing.Parser.Token","letter"]},{"package":null,"item":["Text.Parsing.Parser.Token","alphaNum"]},{"package":null,"item":["Text.Parsing.Parser.String","StringLike"]},{"package":null,"item":["Text.Parsing.Parser.String","stringLikeString"]},{"package":null,"item":["Text.Parsing.Parser.String","eof"]},{"package":null,"item":["Text.Parsing.Parser.String","string"]},{"package":null,"item":["Text.Parsing.Parser.String","anyChar"]},{"package":null,"item":["Text.Parsing.Parser.String","satisfy"]},{"package":null,"item":["Text.Parsing.Parser.String","char"]},{"package":null,"item":["Text.Parsing.Parser.String","whiteSpace"]},{"package":null,"item":["Text.Parsing.Parser.String","skipSpaces"]},{"package":null,"item":["Text.Parsing.Parser.String","oneOf"]},{"package":null,"item":["Text.Parsing.Parser.String","noneOf"]},{"package":null,"item":["Text.Parsing.Parser.Pos","Position"]},{"package":null,"item":["Text.Parsing.Parser.Pos","showPosition"]},{"package":null,"item":["Text.Parsing.Parser.Pos","eqPosition"]},{"package":null,"item":["Text.Parsing.Parser.Pos","ordPosition"]},{"package":null,"item":["Text.Parsing.Parser.Pos","initialPos"]},{"package":null,"item":["Text.Parsing.Parser.Pos","updatePosString"]},{"package":null,"item":["Text.Parsing.Parser.Language","haskellStyle"]},{"package":null,"item":["Text.Parsing.Parser.Language","javaStyle"]},{"package":null,"item":["Text.Parsing.Parser.Language","emptyDef"]},{"package":null,"item":["Text.Parsing.Parser.Language","haskell"]},{"package":null,"item":["Text.Parsing.Parser.Language","haskellDef"]},{"package":null,"item":["Text.Parsing.Indent","IndentParser"]},{"package":null,"item":["Text.Parsing.Indent","withBlock"]},{"package":null,"item":["Text.Parsing.Indent","withBlock'"]},{"package":null,"item":["Text.Parsing.Indent","indented"]},{"package":null,"item":["Text.Parsing.Indent","indented'"]},{"package":null,"item":["Text.Parsing.Indent","sameOrIndented"]},{"package":null,"item":["Text.Parsing.Indent","sameLine"]},{"package":null,"item":["Text.Parsing.Indent","block1"]},{"package":null,"item":["Text.Parsing.Indent","block"]},{"package":null,"item":["Text.Parsing.Indent","withPos"]},{"package":null,"item":["Text.Parsing.Indent","checkIndent"]},{"package":null,"item":["Text.Parsing.Indent","runIndent"]},{"package":null,"item":["Text.Parsing.Indent","indentAp"]},{"package":null,"item":["Text.Parsing.Indent","(<+/>)"]},{"package":null,"item":["Text.Parsing.Indent","indentNoAp"]},{"package":null,"item":["Text.Parsing.Indent","(<-/>)"]},{"package":null,"item":["Text.Parsing.Indent","indentMany"]},{"package":null,"item":["Text.Parsing.Indent","(<*/>)"]},{"package":null,"item":["Text.Parsing.Indent","Optional"]},{"package":null,"item":["Text.Parsing.Indent","indentOp"]},{"package":null,"item":["Text.Parsing.Indent","(<?/>)"]},{"package":null,"item":["Text.Parsing.Parser.Expr","Assoc"]},{"package":null,"item":["Text.Parsing.Parser.Expr","Operator"]},{"package":null,"item":["Text.Parsing.Parser.Expr","OperatorTable"]},{"package":null,"item":["Text.Parsing.Parser.Expr","buildExprParser"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","withErrorMessage"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","(<?>)"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","asErrorMessage"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","(<??>)"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","between"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","option"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","optional"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","optionMaybe"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","try"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","lookAhead"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","sepBy"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","sepBy1"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","sepEndBy"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","sepEndBy1"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","endBy1"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","endBy"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","chainr"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","chainl"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","chainl1"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","chainl1'"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","chainr1"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","chainr1'"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","choice"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","skipMany"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","skipMany1"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","notFollowedBy"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","manyTill"]},{"package":null,"item":["Text.Parsing.Parser.Combinators","many1Till"]},{"package":"purescript-arrays","item":["Data.Array","toUnfoldable"]},{"package":"purescript-arrays","item":["Data.Array","fromFoldable"]},{"package":"purescript-arrays","item":["Data.Array","singleton"]},{"package":"purescript-arrays","item":["Data.Array","range"]},{"package":"purescript-arrays","item":["Data.Array","replicate"]},{"package":"purescript-arrays","item":["Data.Array","(..)"]},{"package":"purescript-arrays","item":["Data.Array","some"]},{"package":"purescript-arrays","item":["Data.Array","many"]},{"package":"purescript-arrays","item":["Data.Array","null"]},{"package":"purescript-arrays","item":["Data.Array","length"]},{"package":"purescript-arrays","item":["Data.Array","cons"]},{"package":"purescript-arrays","item":["Data.Array","(:)"]},{"package":"purescript-arrays","item":["Data.Array","snoc"]},{"package":"purescript-arrays","item":["Data.Array","insert"]},{"package":"purescript-arrays","item":["Data.Array","insertBy"]},{"package":"purescript-arrays","item":["Data.Array","head"]},{"package":"purescript-arrays","item":["Data.Array","last"]},{"package":"purescript-arrays","item":["Data.Array","tail"]},{"package":"purescript-arrays","item":["Data.Array","init"]},{"package":"purescript-arrays","item":["Data.Array","uncons"]},{"package":"purescript-arrays","item":["Data.Array","index"]},{"package":"purescript-arrays","item":["Data.Array","(!!)"]},{"package":"purescript-arrays","item":["Data.Array","elemIndex"]},{"package":"purescript-arrays","item":["Data.Array","elemLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","findIndex"]},{"package":"purescript-arrays","item":["Data.Array","findLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","insertAt"]},{"package":"purescript-arrays","item":["Data.Array","deleteAt"]},{"package":"purescript-arrays","item":["Data.Array","updateAt"]},{"package":"purescript-arrays","item":["Data.Array","modifyAt"]},{"package":"purescript-arrays","item":["Data.Array","alterAt"]},{"package":"purescript-arrays","item":["Data.Array","reverse"]},{"package":"purescript-arrays","item":["Data.Array","concat"]},{"package":"purescript-arrays","item":["Data.Array","concatMap"]},{"package":"purescript-arrays","item":["Data.Array","filter"]},{"package":"purescript-arrays","item":["Data.Array","partition"]},{"package":"purescript-arrays","item":["Data.Array","filterM"]},{"package":"purescript-arrays","item":["Data.Array","mapMaybe"]},{"package":"purescript-arrays","item":["Data.Array","catMaybes"]},{"package":"purescript-arrays","item":["Data.Array","mapWithIndex"]},{"package":"purescript-arrays","item":["Data.Array","sort"]},{"package":"purescript-arrays","item":["Data.Array","sortBy"]},{"package":"purescript-arrays","item":["Data.Array","slice"]},{"package":"purescript-arrays","item":["Data.Array","take"]},{"package":"purescript-arrays","item":["Data.Array","takeWhile"]},{"package":"purescript-arrays","item":["Data.Array","drop"]},{"package":"purescript-arrays","item":["Data.Array","dropWhile"]},{"package":"purescript-arrays","item":["Data.Array","span"]},{"package":"purescript-arrays","item":["Data.Array","group"]},{"package":"purescript-arrays","item":["Data.Array","group'"]},{"package":"purescript-arrays","item":["Data.Array","groupBy"]},{"package":"purescript-arrays","item":["Data.Array","nub"]},{"package":"purescript-arrays","item":["Data.Array","nubBy"]},{"package":"purescript-arrays","item":["Data.Array","union"]},{"package":"purescript-arrays","item":["Data.Array","unionBy"]},{"package":"purescript-arrays","item":["Data.Array","delete"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","difference"]},{"package":"purescript-arrays","item":["Data.Array","(\\\\)"]},{"package":"purescript-arrays","item":["Data.Array","intersect"]},{"package":"purescript-arrays","item":["Data.Array","intersectBy"]},{"package":"purescript-arrays","item":["Data.Array","zipWith"]},{"package":"purescript-arrays","item":["Data.Array","zipWithA"]},{"package":"purescript-arrays","item":["Data.Array","zip"]},{"package":"purescript-arrays","item":["Data.Array","unzip"]},{"package":"purescript-arrays","item":["Data.Array","foldM"]},{"package":"purescript-arrays","item":["Data.Array","foldRecM"]},{"package":"purescript-arrays","item":["Data.Array","unsafeIndex"]},{"package":"purescript-arrays","item":["Data.Array.ST","STArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","Assoc"]},{"package":"purescript-arrays","item":["Data.Array.ST","runSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","emptySTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","thaw"]},{"package":"purescript-arrays","item":["Data.Array.ST","freeze"]},{"package":"purescript-arrays","item":["Data.Array.ST","peekSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pokeSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushAllSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","spliceSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","toAssocArray"]},{"package":"purescript-arrays","item":["Data.Array.Partial","head"]},{"package":"purescript-arrays","item":["Data.Array.Partial","tail"]},{"package":"purescript-arrays","item":["Data.Array.Partial","last"]},{"package":"purescript-arrays","item":["Data.Array.Partial","init"]},{"package":"purescript-assert","item":["Test.Assert","ASSERT"]},{"package":"purescript-assert","item":["Test.Assert","assert"]},{"package":"purescript-assert","item":["Test.Assert","assert'"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows"]},{"package":"purescript-assert","item":["Test.Assert","assertThrows'"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","Biapply"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","biapplyFirst"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","biapplySecond"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift2"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift3"]},{"package":"purescript-bifunctors","item":["Control.Biapplicative","Biapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","Bifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","lmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","rmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","Wrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","newtypeWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","eqWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","ordWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","showWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","functorWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","bifunctorWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","biapplyWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","biapplicativeWrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","Product"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","eqProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","ordProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","showProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","bifunctorProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","biapplyProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","biapplicativeProduct"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","Joker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","newtypeJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","eqJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","ordJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","showJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","functorJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","bifunctorJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","biapplyJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","biapplicativeJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","Join"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","newtypeJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","eqJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","ordJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","showJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","bifunctorJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","biapplyJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","biapplicativeJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","Flip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","newtypeFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","eqFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","ordFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","showFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","functorFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","bifunctorFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","biapplyFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","biapplicativeFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","Clown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","newtypeClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","eqClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","ordClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","showClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","functorClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","bifunctorClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","biapplyClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","biapplicativeClown"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","logShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warn"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","warnShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","errorShow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","info"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","infoShow"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.MonadZero","MonadZero"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadZero","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","extendFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisli"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","composeCoKleisliFlipped"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-distributive","item":["Data.Distributive","Distributive"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveIdentity"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveFunction"]},{"package":"purescript-distributive","item":["Data.Distributive","distributeDefault"]},{"package":"purescript-distributive","item":["Data.Distributive","collectDefault"]},{"package":"purescript-distributive","item":["Data.Distributive","cotraverse"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeCoerceEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafePerformEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","monadEffEff"]},{"package":"purescript-either","item":["Data.Either","Either"]},{"package":"purescript-either","item":["Data.Either","functorEither"]},{"package":"purescript-either","item":["Data.Either","invariantEither"]},{"package":"purescript-either","item":["Data.Either","bifunctorEither"]},{"package":"purescript-either","item":["Data.Either","applyEither"]},{"package":"purescript-either","item":["Data.Either","applicativeEither"]},{"package":"purescript-either","item":["Data.Either","altEither"]},{"package":"purescript-either","item":["Data.Either","bindEither"]},{"package":"purescript-either","item":["Data.Either","monadEither"]},{"package":"purescript-either","item":["Data.Either","extendEither"]},{"package":"purescript-either","item":["Data.Either","showEither"]},{"package":"purescript-either","item":["Data.Either","eqEither"]},{"package":"purescript-either","item":["Data.Either","ordEither"]},{"package":"purescript-either","item":["Data.Either","boundedEither"]},{"package":"purescript-either","item":["Data.Either","foldableEither"]},{"package":"purescript-either","item":["Data.Either","bifoldableEither"]},{"package":"purescript-either","item":["Data.Either","traversableEither"]},{"package":"purescript-either","item":["Data.Either","bitraversableEither"]},{"package":"purescript-either","item":["Data.Either","semiringEither"]},{"package":"purescript-either","item":["Data.Either","semigroupEither"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","isLeft"]},{"package":"purescript-either","item":["Data.Either","isRight"]},{"package":"purescript-either","item":["Data.Either","fromLeft"]},{"package":"purescript-either","item":["Data.Either","fromRight"]},{"package":"purescript-either","item":["Data.Either.Nested","Either1"]},{"package":"purescript-either","item":["Data.Either.Nested","Either2"]},{"package":"purescript-either","item":["Data.Either.Nested","Either3"]},{"package":"purescript-either","item":["Data.Either.Nested","Either4"]},{"package":"purescript-either","item":["Data.Either.Nested","Either5"]},{"package":"purescript-either","item":["Data.Either.Nested","Either6"]},{"package":"purescript-either","item":["Data.Either.Nested","Either7"]},{"package":"purescript-either","item":["Data.Either.Nested","Either8"]},{"package":"purescript-either","item":["Data.Either.Nested","Either9"]},{"package":"purescript-either","item":["Data.Either.Nested","Either10"]},{"package":"purescript-either","item":["Data.Either.Nested","E2"]},{"package":"purescript-either","item":["Data.Either.Nested","E3"]},{"package":"purescript-either","item":["Data.Either.Nested","E4"]},{"package":"purescript-either","item":["Data.Either.Nested","E5"]},{"package":"purescript-either","item":["Data.Either.Nested","E6"]},{"package":"purescript-either","item":["Data.Either.Nested","E7"]},{"package":"purescript-either","item":["Data.Either.Nested","E8"]},{"package":"purescript-either","item":["Data.Either.Nested","E9"]},{"package":"purescript-either","item":["Data.Either.Nested","E10"]},{"package":"purescript-either","item":["Data.Either.Nested","E11"]},{"package":"purescript-either","item":["Data.Either.Nested","in1"]},{"package":"purescript-either","item":["Data.Either.Nested","in2"]},{"package":"purescript-either","item":["Data.Either.Nested","in3"]},{"package":"purescript-either","item":["Data.Either.Nested","in4"]},{"package":"purescript-either","item":["Data.Either.Nested","in5"]},{"package":"purescript-either","item":["Data.Either.Nested","in6"]},{"package":"purescript-either","item":["Data.Either.Nested","in7"]},{"package":"purescript-either","item":["Data.Either.Nested","in8"]},{"package":"purescript-either","item":["Data.Either.Nested","in9"]},{"package":"purescript-either","item":["Data.Either.Nested","in10"]},{"package":"purescript-either","item":["Data.Either.Nested","at1"]},{"package":"purescript-either","item":["Data.Either.Nested","at2"]},{"package":"purescript-either","item":["Data.Either.Nested","at3"]},{"package":"purescript-either","item":["Data.Either.Nested","at4"]},{"package":"purescript-either","item":["Data.Either.Nested","at5"]},{"package":"purescript-either","item":["Data.Either.Nested","at6"]},{"package":"purescript-either","item":["Data.Either.Nested","at7"]},{"package":"purescript-either","item":["Data.Either.Nested","at8"]},{"package":"purescript-either","item":["Data.Either.Nested","at9"]},{"package":"purescript-either","item":["Data.Either.Nested","at10"]},{"package":"purescript-either","item":["Data.Either.Nested","either1"]},{"package":"purescript-either","item":["Data.Either.Nested","either2"]},{"package":"purescript-either","item":["Data.Either.Nested","either3"]},{"package":"purescript-either","item":["Data.Either.Nested","either4"]},{"package":"purescript-either","item":["Data.Either.Nested","either5"]},{"package":"purescript-either","item":["Data.Either.Nested","either6"]},{"package":"purescript-either","item":["Data.Either.Nested","either7"]},{"package":"purescript-either","item":["Data.Either.Nested","either8"]},{"package":"purescript-either","item":["Data.Either.Nested","either9"]},{"package":"purescript-either","item":["Data.Either.Nested","either10"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Traversable"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","sequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","for"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Accum"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanl"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanr"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","Foldable"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","fold"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","traverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","for_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","oneOf"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","intercalate"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","and"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","or"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","all"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","any"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","product"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","elem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","notElem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","find"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","findMap"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","Bitraversable"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bitraverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bisequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bifor"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","Bifoldable"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifold"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bitraverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifor_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bisequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biany"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biall"]},{"package":"purescript-generics","item":["Data.Generic","Generic"]},{"package":"purescript-generics","item":["Data.Generic","GenericSpine"]},{"package":"purescript-generics","item":["Data.Generic","GenericSignature"]},{"package":"purescript-generics","item":["Data.Generic","DataConstructor"]},{"package":"purescript-generics","item":["Data.Generic","showDataConstructor"]},{"package":"purescript-generics","item":["Data.Generic","showSignature"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","isValidSpine"]},{"package":"purescript-generics","item":["Data.Generic","gShow"]},{"package":"purescript-generics","item":["Data.Generic","gEq"]},{"package":"purescript-generics","item":["Data.Generic","gCompare"]},{"package":"purescript-identity","item":["Data.Identity","Identity"]},{"package":"purescript-identity","item":["Data.Identity","newtypeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","eqIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ordIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedIdentity"]},{"package":"purescript-identity","item":["Data.Identity","heytingAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","booleanAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semigroupIdenity"]},{"package":"purescript-identity","item":["Data.Identity","monoidIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","euclideanRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","commutativeRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","fieldIdentity"]},{"package":"purescript-identity","item":["Data.Identity","showIdentity"]},{"package":"purescript-identity","item":["Data.Identity","functorIdentity"]},{"package":"purescript-identity","item":["Data.Identity","invariantIdentity"]},{"package":"purescript-identity","item":["Data.Identity","altIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applyIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applicativeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","bindIdentity"]},{"package":"purescript-identity","item":["Data.Identity","monadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","extendIdentity"]},{"package":"purescript-identity","item":["Data.Identity","comonadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","foldableIdentity"]},{"package":"purescript-identity","item":["Data.Identity","traversableIdentity"]},{"package":"purescript-integers","item":["Data.Int","fromNumber"]},{"package":"purescript-integers","item":["Data.Int","floor"]},{"package":"purescript-integers","item":["Data.Int","ceil"]},{"package":"purescript-integers","item":["Data.Int","round"]},{"package":"purescript-integers","item":["Data.Int","toNumber"]},{"package":"purescript-integers","item":["Data.Int","fromString"]},{"package":"purescript-integers","item":["Data.Int","even"]},{"package":"purescript-integers","item":["Data.Int","odd"]},{"package":"purescript-integers","item":["Data.Int","Radix"]},{"package":"purescript-integers","item":["Data.Int","binary"]},{"package":"purescript-integers","item":["Data.Int","octal"]},{"package":"purescript-integers","item":["Data.Int","decimal"]},{"package":"purescript-integers","item":["Data.Int","hexadecimal"]},{"package":"purescript-integers","item":["Data.Int","base36"]},{"package":"purescript-integers","item":["Data.Int","radix"]},{"package":"purescript-integers","item":["Data.Int","fromStringAs"]},{"package":"purescript-integers","item":["Data.Int","toStringAs"]},{"package":"purescript-integers","item":["Data.Int.Bits","and"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.&.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","or"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.|.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","xor"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.^.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","shl"]},{"package":"purescript-integers","item":["Data.Int.Bits","shr"]},{"package":"purescript-integers","item":["Data.Int.Bits","zshr"]},{"package":"purescript-integers","item":["Data.Int.Bits","complement"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-lazy","item":["Data.Lazy","Lazy"]},{"package":"purescript-lazy","item":["Data.Lazy","defer"]},{"package":"purescript-lazy","item":["Data.Lazy","force"]},{"package":"purescript-lazy","item":["Data.Lazy","semiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","commutativeRingLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","euclideanRingLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","fieldLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","eqLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ordLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","semigroupLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monoidLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","heytingAlgebraLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","booleanAlgebraLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","functorLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applyLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applicativeLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","bindLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","extendLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","comonadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","showLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","lazyLazy"]},{"package":"purescript-lists","item":["Data.List","List"]},{"package":"purescript-lists","item":["Data.List","toUnfoldable"]},{"package":"purescript-lists","item":["Data.List","fromFoldable"]},{"package":"purescript-lists","item":["Data.List","singleton"]},{"package":"purescript-lists","item":["Data.List","(..)"]},{"package":"purescript-lists","item":["Data.List","range"]},{"package":"purescript-lists","item":["Data.List","some"]},{"package":"purescript-lists","item":["Data.List","many"]},{"package":"purescript-lists","item":["Data.List","null"]},{"package":"purescript-lists","item":["Data.List","null"]},{"package":"purescript-lists","item":["Data.List","length"]},{"package":"purescript-lists","item":["Data.List","(:)"]},{"package":"purescript-lists","item":["Data.List","snoc"]},{"package":"purescript-lists","item":["Data.List","insert"]},{"package":"purescript-lists","item":["Data.List","insertBy"]},{"package":"purescript-lists","item":["Data.List","insertBy"]},{"package":"purescript-lists","item":["Data.List","head"]},{"package":"purescript-lists","item":["Data.List","head"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","tail"]},{"package":"purescript-lists","item":["Data.List","tail"]},{"package":"purescript-lists","item":["Data.List","init"]},{"package":"purescript-lists","item":["Data.List","init"]},{"package":"purescript-lists","item":["Data.List","uncons"]},{"package":"purescript-lists","item":["Data.List","uncons"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","(!!)"]},{"package":"purescript-lists","item":["Data.List","elemIndex"]},{"package":"purescript-lists","item":["Data.List","elemLastIndex"]},{"package":"purescript-lists","item":["Data.List","findIndex"]},{"package":"purescript-lists","item":["Data.List","findLastIndex"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","modifyAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","reverse"]},{"package":"purescript-lists","item":["Data.List","concat"]},{"package":"purescript-lists","item":["Data.List","concatMap"]},{"package":"purescript-lists","item":["Data.List","concatMap"]},{"package":"purescript-lists","item":["Data.List","filter"]},{"package":"purescript-lists","item":["Data.List","filterM"]},{"package":"purescript-lists","item":["Data.List","filterM"]},{"package":"purescript-lists","item":["Data.List","mapMaybe"]},{"package":"purescript-lists","item":["Data.List","catMaybes"]},{"package":"purescript-lists","item":["Data.List","mapWithIndex"]},{"package":"purescript-lists","item":["Data.List","sort"]},{"package":"purescript-lists","item":["Data.List","sortBy"]},{"package":"purescript-lists","item":["Data.List","slice"]},{"package":"purescript-lists","item":["Data.List","take"]},{"package":"purescript-lists","item":["Data.List","takeWhile"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","dropWhile"]},{"package":"purescript-lists","item":["Data.List","span"]},{"package":"purescript-lists","item":["Data.List","span"]},{"package":"purescript-lists","item":["Data.List","group"]},{"package":"purescript-lists","item":["Data.List","group'"]},{"package":"purescript-lists","item":["Data.List","groupBy"]},{"package":"purescript-lists","item":["Data.List","groupBy"]},{"package":"purescript-lists","item":["Data.List","nub"]},{"package":"purescript-lists","item":["Data.List","nubBy"]},{"package":"purescript-lists","item":["Data.List","nubBy"]},{"package":"purescript-lists","item":["Data.List","union"]},{"package":"purescript-lists","item":["Data.List","unionBy"]},{"package":"purescript-lists","item":["Data.List","delete"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","(\\\\)"]},{"package":"purescript-lists","item":["Data.List","difference"]},{"package":"purescript-lists","item":["Data.List","intersect"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","zipWith"]},{"package":"purescript-lists","item":["Data.List","zipWithA"]},{"package":"purescript-lists","item":["Data.List","zip"]},{"package":"purescript-lists","item":["Data.List","unzip"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","foldM"]},{"package":"purescript-lists","item":["Data.List","foldM"]},{"package":"purescript-lists","item":["Data.List.ZipList","ZipList"]},{"package":"purescript-lists","item":["Data.List.Partial","head"]},{"package":"purescript-lists","item":["Data.List.Partial","tail"]},{"package":"purescript-lists","item":["Data.List.Partial","last"]},{"package":"purescript-lists","item":["Data.List.Partial","last"]},{"package":"purescript-lists","item":["Data.List.Partial","init"]},{"package":"purescript-lists","item":["Data.List.Partial","init"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","NonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","toUnfoldable"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","fromFoldable"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","fromList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","fromList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","toList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","singleton"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","head"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","last"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","tail"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","init"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","uncons"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","length"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","concatMap"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","newtypeNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","eqNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","ordNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","genericEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","showNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","functorNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","applyNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","applicativeNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","bindList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","monadNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","altNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","extendNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","comonadNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","semigroupNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","foldableNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.NonEmpty","traversableNonEmptyList"]},{"package":"purescript-lists","item":["Data.List.Lazy","List"]},{"package":"purescript-lists","item":["Data.List.Lazy","runList"]},{"package":"purescript-lists","item":["Data.List.Lazy","toUnfoldable"]},{"package":"purescript-lists","item":["Data.List.Lazy","fromFoldable"]},{"package":"purescript-lists","item":["Data.List.Lazy","Step"]},{"package":"purescript-lists","item":["Data.List.Lazy","step"]},{"package":"purescript-lists","item":["Data.List.Lazy","nil"]},{"package":"purescript-lists","item":["Data.List.Lazy","singleton"]},{"package":"purescript-lists","item":["Data.List.Lazy","(..)"]},{"package":"purescript-lists","item":["Data.List.Lazy","range"]},{"package":"purescript-lists","item":["Data.List.Lazy","replicate"]},{"package":"purescript-lists","item":["Data.List.Lazy","replicateM"]},{"package":"purescript-lists","item":["Data.List.Lazy","repeat"]},{"package":"purescript-lists","item":["Data.List.Lazy","iterate"]},{"package":"purescript-lists","item":["Data.List.Lazy","cycle"]},{"package":"purescript-lists","item":["Data.List.Lazy","null"]},{"package":"purescript-lists","item":["Data.List.Lazy","length"]},{"package":"purescript-lists","item":["Data.List.Lazy","cons"]},{"package":"purescript-lists","item":["Data.List.Lazy","(:)"]},{"package":"purescript-lists","item":["Data.List.Lazy","snoc"]},{"package":"purescript-lists","item":["Data.List.Lazy","insert"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","head"]},{"package":"purescript-lists","item":["Data.List.Lazy","last"]},{"package":"purescript-lists","item":["Data.List.Lazy","tail"]},{"package":"purescript-lists","item":["Data.List.Lazy","init"]},{"package":"purescript-lists","item":["Data.List.Lazy","uncons"]},{"package":"purescript-lists","item":["Data.List.Lazy","index"]},{"package":"purescript-lists","item":["Data.List.Lazy","(!!)"]},{"package":"purescript-lists","item":["Data.List.Lazy","elemIndex"]},{"package":"purescript-lists","item":["Data.List.Lazy","elemLastIndex"]},{"package":"purescript-lists","item":["Data.List.Lazy","findIndex"]},{"package":"purescript-lists","item":["Data.List.Lazy","findLastIndex"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","updateAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","modifyAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","alterAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","reverse"]},{"package":"purescript-lists","item":["Data.List.Lazy","concat"]},{"package":"purescript-lists","item":["Data.List.Lazy","concatMap"]},{"package":"purescript-lists","item":["Data.List.Lazy","filter"]},{"package":"purescript-lists","item":["Data.List.Lazy","filterM"]},{"package":"purescript-lists","item":["Data.List.Lazy","mapMaybe"]},{"package":"purescript-lists","item":["Data.List.Lazy","catMaybes"]},{"package":"purescript-lists","item":["Data.List.Lazy","slice"]},{"package":"purescript-lists","item":["Data.List.Lazy","take"]},{"package":"purescript-lists","item":["Data.List.Lazy","takeWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","drop"]},{"package":"purescript-lists","item":["Data.List.Lazy","dropWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","span"]},{"package":"purescript-lists","item":["Data.List.Lazy","group"]},{"package":"purescript-lists","item":["Data.List.Lazy","groupBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","nub"]},{"package":"purescript-lists","item":["Data.List.Lazy","nubBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","union"]},{"package":"purescript-lists","item":["Data.List.Lazy","unionBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","delete"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","difference"]},{"package":"purescript-lists","item":["Data.List.Lazy","(\\\\)"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersect"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersectBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","zipWith"]},{"package":"purescript-lists","item":["Data.List.Lazy","zipWithA"]},{"package":"purescript-lists","item":["Data.List.Lazy","zip"]},{"package":"purescript-lists","item":["Data.List.Lazy","unzip"]},{"package":"purescript-lists","item":["Data.List.Lazy","transpose"]},{"package":"purescript-lists","item":["Data.List.Lazy","foldM"]},{"package":"purescript-lists","item":["Data.List.Lazy","lazyList"]},{"package":"purescript-math","item":["Math","Radians"]},{"package":"purescript-math","item":["Math","abs"]},{"package":"purescript-math","item":["Math","acos"]},{"package":"purescript-math","item":["Math","asin"]},{"package":"purescript-math","item":["Math","atan"]},{"package":"purescript-math","item":["Math","atan2"]},{"package":"purescript-math","item":["Math","ceil"]},{"package":"purescript-math","item":["Math","cos"]},{"package":"purescript-math","item":["Math","exp"]},{"package":"purescript-math","item":["Math","floor"]},{"package":"purescript-math","item":["Math","log"]},{"package":"purescript-math","item":["Math","max"]},{"package":"purescript-math","item":["Math","min"]},{"package":"purescript-math","item":["Math","pow"]},{"package":"purescript-math","item":["Math","round"]},{"package":"purescript-math","item":["Math","sin"]},{"package":"purescript-math","item":["Math","sqrt"]},{"package":"purescript-math","item":["Math","tan"]},{"package":"purescript-math","item":["Math","trunc"]},{"package":"purescript-math","item":["Math","remainder"]},{"package":"purescript-math","item":["Math","(%)"]},{"package":"purescript-math","item":["Math","e"]},{"package":"purescript-math","item":["Math","ln2"]},{"package":"purescript-math","item":["Math","ln10"]},{"package":"purescript-math","item":["Math","log2e"]},{"package":"purescript-math","item":["Math","log10e"]},{"package":"purescript-math","item":["Math","pi"]},{"package":"purescript-math","item":["Math","sqrt1_2"]},{"package":"purescript-math","item":["Math","sqrt2"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadZeroMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","newtypeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","newtypeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","newtypeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","boundedMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","newtypeEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","newtypeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","boundedDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","newtypeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","invariantDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semiringDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","newtypeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","invariantConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semiringConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","newtypeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","boundedAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-newtype","item":["Data.Newtype","Newtype"]},{"package":"purescript-newtype","item":["Data.Newtype","op"]},{"package":"purescript-newtype","item":["Data.Newtype","ala"]},{"package":"purescript-newtype","item":["Data.Newtype","alaF"]},{"package":"purescript-newtype","item":["Data.Newtype","over"]},{"package":"purescript-newtype","item":["Data.Newtype","overF"]},{"package":"purescript-newtype","item":["Data.Newtype","under"]},{"package":"purescript-newtype","item":["Data.Newtype","underF"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","NonEmpty"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","(:|)"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","singleton"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","foldl1"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","foldMap1"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","fold1"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","fromNonEmpty"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","oneOf"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","head"]},{"package":"purescript-nonempty","item":["Data.NonEmpty","tail"]},{"package":"purescript-partial","item":["Partial.Unsafe","unsafePartial"]},{"package":"purescript-partial","item":["Partial.Unsafe","unsafeCrashWith"]},{"package":"purescript-partial","item":["Partial","crash"]},{"package":"purescript-partial","item":["Partial","crashWith"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","Semigroupoid"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","semigroupoidFn"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(<<<)"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","composeFlipped"]},{"package":"purescript-prelude","item":["Control.Semigroupoid","(>>>)"]},{"package":"purescript-prelude","item":["Control.Monad","Monad"]},{"package":"purescript-prelude","item":["Control.Monad","monadFn"]},{"package":"purescript-prelude","item":["Control.Monad","liftM1"]},{"package":"purescript-prelude","item":["Control.Monad","ap"]},{"package":"purescript-prelude","item":["Control.Monad","whenM"]},{"package":"purescript-prelude","item":["Control.Monad","unlessM"]},{"package":"purescript-prelude","item":["Control.Category","Category"]},{"package":"purescript-prelude","item":["Control.Category","categoryFn"]},{"package":"purescript-prelude","item":["Control.Bind","Bind"]},{"package":"purescript-prelude","item":["Control.Bind","(>>=)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(=<<)"]},{"package":"purescript-prelude","item":["Control.Bind","bindFn"]},{"package":"purescript-prelude","item":["Control.Bind","join"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisli"]},{"package":"purescript-prelude","item":["Control.Bind","(>=>)"]},{"package":"purescript-prelude","item":["Control.Bind","composeKleisliFlipped"]},{"package":"purescript-prelude","item":["Control.Bind","(<=<)"]},{"package":"purescript-prelude","item":["Control.Bind","ifM"]},{"package":"purescript-prelude","item":["Control.Apply","Apply"]},{"package":"purescript-prelude","item":["Control.Apply","(<*>)"]},{"package":"purescript-prelude","item":["Control.Apply","applyFn"]},{"package":"purescript-prelude","item":["Control.Apply","applyFirst"]},{"package":"purescript-prelude","item":["Control.Apply","(<*)"]},{"package":"purescript-prelude","item":["Control.Apply","applySecond"]},{"package":"purescript-prelude","item":["Control.Apply","(*>)"]},{"package":"purescript-prelude","item":["Control.Apply","lift2"]},{"package":"purescript-prelude","item":["Control.Apply","lift3"]},{"package":"purescript-prelude","item":["Control.Apply","lift4"]},{"package":"purescript-prelude","item":["Control.Apply","lift5"]},{"package":"purescript-prelude","item":["Control.Applicative","Applicative"]},{"package":"purescript-prelude","item":["Control.Applicative","applicativeFn"]},{"package":"purescript-prelude","item":["Control.Applicative","liftA1"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","when"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Control.Applicative","unless"]},{"package":"purescript-prelude","item":["Data.Void","Void"]},{"package":"purescript-prelude","item":["Data.Void","absurd"]},{"package":"purescript-prelude","item":["Data.Unit","Unit"]},{"package":"purescript-prelude","item":["Data.Unit","unit"]},{"package":"purescript-prelude","item":["Data.Unit","showUnit"]},{"package":"purescript-prelude","item":["Data.Show","Show"]},{"package":"purescript-prelude","item":["Data.Semiring","Semiring"]},{"package":"purescript-prelude","item":["Data.Semiring","(+)"]},{"package":"purescript-prelude","item":["Data.Semiring","(*)"]},{"package":"purescript-prelude","item":["Data.Semigroup","Semigroup"]},{"package":"purescript-prelude","item":["Data.Semigroup","(<>)"]},{"package":"purescript-prelude","item":["Data.Semigroup","semigroupFn"]},{"package":"purescript-prelude","item":["Data.Ring","Ring"]},{"package":"purescript-prelude","item":["Data.Ring","(-)"]},{"package":"purescript-prelude","item":["Data.Ring","negate"]},{"package":"purescript-prelude","item":["Data.Ordering","Ordering"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ordering","invert"]},{"package":"purescript-prelude","item":["Data.Ord","Ord"]},{"package":"purescript-prelude","item":["Data.Ord","lessThan"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThan"]},{"package":"purescript-prelude","item":["Data.Ord","lessThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","greaterThanOrEq"]},{"package":"purescript-prelude","item":["Data.Ord","(<)"]},{"package":"purescript-prelude","item":["Data.Ord","(<=)"]},{"package":"purescript-prelude","item":["Data.Ord","(>)"]},{"package":"purescript-prelude","item":["Data.Ord","(>=)"]},{"package":"purescript-prelude","item":["Data.Ord","comparing"]},{"package":"purescript-prelude","item":["Data.Ord","min"]},{"package":"purescript-prelude","item":["Data.Ord","max"]},{"package":"purescript-prelude","item":["Data.Ord","clamp"]},{"package":"purescript-prelude","item":["Data.Ord","between"]},{"package":"purescript-prelude","item":["Data.Ord","abs"]},{"package":"purescript-prelude","item":["Data.Ord","signum"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","NaturalTransformation"]},{"package":"purescript-prelude","item":["Data.NaturalTransformation","type (~>)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","HeytingAlgebra"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(&&)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","(||)"]},{"package":"purescript-prelude","item":["Data.HeytingAlgebra","heytingAlgebraFunction"]},{"package":"purescript-prelude","item":["Data.Functor","Functor"]},{"package":"purescript-prelude","item":["Data.Functor","(<$>)"]},{"package":"purescript-prelude","item":["Data.Functor","mapFlipped"]},{"package":"purescript-prelude","item":["Data.Functor","(<#>)"]},{"package":"purescript-prelude","item":["Data.Functor","functorFn"]},{"package":"purescript-prelude","item":["Data.Functor","void"]},{"package":"purescript-prelude","item":["Data.Functor","voidRight"]},{"package":"purescript-prelude","item":["Data.Functor","(<$)"]},{"package":"purescript-prelude","item":["Data.Functor","voidLeft"]},{"package":"purescript-prelude","item":["Data.Functor","($>)"]},{"package":"purescript-prelude","item":["Data.Functor","flap"]},{"package":"purescript-prelude","item":["Data.Functor","(<@>)"]},{"package":"purescript-prelude","item":["Data.Function","flip"]},{"package":"purescript-prelude","item":["Data.Function","const"]},{"package":"purescript-prelude","item":["Data.Function","apply"]},{"package":"purescript-prelude","item":["Data.Function","($)"]},{"package":"purescript-prelude","item":["Data.Function","applyFlipped"]},{"package":"purescript-prelude","item":["Data.Function","(#)"]},{"package":"purescript-prelude","item":["Data.Function","on"]},{"package":"purescript-prelude","item":["Data.Field","Field"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","EuclideanRing"]},{"package":"purescript-prelude","item":["Data.EuclideanRing","(/)"]},{"package":"purescript-prelude","item":["Data.Eq","Eq"]},{"package":"purescript-prelude","item":["Data.Eq","(==)"]},{"package":"purescript-prelude","item":["Data.Eq","notEq"]},{"package":"purescript-prelude","item":["Data.Eq","(/=)"]},{"package":"purescript-prelude","item":["Data.CommutativeRing","CommutativeRing"]},{"package":"purescript-prelude","item":["Data.Bounded","Bounded"]},{"package":"purescript-prelude","item":["Data.BooleanAlgebra","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Data.Boolean","otherwise"]},{"package":"purescript-prelude","item":["Data.Ord.Unsafe","unsafeCompare"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy2"]},{"package":"purescript-proxy","item":["Type.Proxy","Proxy3"]},{"package":"purescript-st","item":["Control.Monad.ST","ST"]},{"package":"purescript-st","item":["Control.Monad.ST","STRef"]},{"package":"purescript-st","item":["Control.Monad.ST","newSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","readSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","modifySTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","writeSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","runST"]},{"package":"purescript-st","item":["Control.Monad.ST","pureST"]},{"package":"purescript-strings","item":["Data.String","Pattern"]},{"package":"purescript-strings","item":["Data.String","Replacement"]},{"package":"purescript-strings","item":["Data.String","charAt"]},{"package":"purescript-strings","item":["Data.String","singleton"]},{"package":"purescript-strings","item":["Data.String","charCodeAt"]},{"package":"purescript-strings","item":["Data.String","toChar"]},{"package":"purescript-strings","item":["Data.String","null"]},{"package":"purescript-strings","item":["Data.String","uncons"]},{"package":"purescript-strings","item":["Data.String","uncons"]},{"package":"purescript-strings","item":["Data.String","takeWhile"]},{"package":"purescript-strings","item":["Data.String","dropWhile"]},{"package":"purescript-strings","item":["Data.String","stripPrefix"]},{"package":"purescript-strings","item":["Data.String","stripSuffix"]},{"package":"purescript-strings","item":["Data.String","fromCharArray"]},{"package":"purescript-strings","item":["Data.String","contains"]},{"package":"purescript-strings","item":["Data.String","indexOf"]},{"package":"purescript-strings","item":["Data.String","indexOf'"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf'"]},{"package":"purescript-strings","item":["Data.String","length"]},{"package":"purescript-strings","item":["Data.String","localeCompare"]},{"package":"purescript-strings","item":["Data.String","replace"]},{"package":"purescript-strings","item":["Data.String","replaceAll"]},{"package":"purescript-strings","item":["Data.String","take"]},{"package":"purescript-strings","item":["Data.String","drop"]},{"package":"purescript-strings","item":["Data.String","count"]},{"package":"purescript-strings","item":["Data.String","split"]},{"package":"purescript-strings","item":["Data.String","splitAt"]},{"package":"purescript-strings","item":["Data.String","toCharArray"]},{"package":"purescript-strings","item":["Data.String","toLower"]},{"package":"purescript-strings","item":["Data.String","toUpper"]},{"package":"purescript-strings","item":["Data.String","trim"]},{"package":"purescript-strings","item":["Data.String","joinWith"]},{"package":"purescript-strings","item":["Data.Char","toCharCode"]},{"package":"purescript-strings","item":["Data.Char","fromCharCode"]},{"package":"purescript-strings","item":["Data.Char","toLower"]},{"package":"purescript-strings","item":["Data.Char","toUpper"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charCodeAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","char"]},{"package":"purescript-strings","item":["Data.String.Regex","Regex"]},{"package":"purescript-strings","item":["Data.String.Regex","regex"]},{"package":"purescript-strings","item":["Data.String.Regex","source"]},{"package":"purescript-strings","item":["Data.String.Regex","flags"]},{"package":"purescript-strings","item":["Data.String.Regex","renderFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","parseFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","test"]},{"package":"purescript-strings","item":["Data.String.Regex","match"]},{"package":"purescript-strings","item":["Data.String.Regex","replace"]},{"package":"purescript-strings","item":["Data.String.Regex","replace'"]},{"package":"purescript-strings","item":["Data.String.Regex","search"]},{"package":"purescript-strings","item":["Data.String.Regex","split"]},{"package":"purescript-strings","item":["Data.String.CaseInsensitive","CaseInsensitiveString"]},{"package":"purescript-strings","item":["Data.String.CaseInsensitive","eqCaseInsensitiveString"]},{"package":"purescript-strings","item":["Data.String.CaseInsensitive","ordCaseInsensitiveString"]},{"package":"purescript-strings","item":["Data.String.CaseInsensitive","showCaseInsensitiveString"]},{"package":"purescript-strings","item":["Data.String.CaseInsensitive","newtypeCaseInsensitiveString"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","RegexFlagsRec"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","RegexFlags"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","noFlags"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","global"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","ignoreCase"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","multiline"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","sticky"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","unicode"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","semigroupRegexFlags"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","monoidRegexFlags"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","eqRegexFlags"]},{"package":"purescript-strings","item":["Data.String.Regex.Flags","showRegexFlags"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","Step"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","MonadRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM2"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM3"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","forever"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","Writer"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","runWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","execWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","mapWriter"]},{"package":"purescript-transformers","item":["Control.Monad.State","State"]},{"package":"purescript-transformers","item":["Control.Monad.State","runState"]},{"package":"purescript-transformers","item":["Control.Monad.State","evalState"]},{"package":"purescript-transformers","item":["Control.Monad.State","execState"]},{"package":"purescript-transformers","item":["Control.Monad.State","mapState"]},{"package":"purescript-transformers","item":["Control.Monad.State","withState"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","RWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","rws"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","runRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","evalRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","execRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","mapRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","withRWS"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","Reader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","runReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","withReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","mapReader"]},{"package":"purescript-transformers","item":["Control.Monad.Except","Except"]},{"package":"purescript-transformers","item":["Control.Monad.Except","runExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","mapExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","withExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Cont","Cont"]},{"package":"purescript-transformers","item":["Control.Monad.Cont","cont"]},{"package":"purescript-transformers","item":["Control.Monad.Cont","runCont"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","WriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","runWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","execWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","mapWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","MonadTell"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","MonadWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","listens"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","censor"]},{"package":"purescript-transformers","item":["Control.Monad.Trans.Class","MonadTrans"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","StateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","runStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","evalStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","execStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","mapStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","withStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","MonadState"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","get"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","gets"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","put"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","modify"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","RWSResult"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","RWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","runRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","evalRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","execRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","mapRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","withRWST"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","ReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","runReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","mapReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","withReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","MonadAsk"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","monadAskFun"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","asks"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","MonadReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","monadReaderFun"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","MaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","runMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","mapMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","ListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","nil"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","cons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","singleton"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","fromEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapLazy"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","unfold"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","iterate"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","repeat"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","take"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","take"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","takeWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","drop"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","drop"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","dropWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","filter"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","mapMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","catMaybes"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","uncons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","head"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","tail"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","scanl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","ExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","runExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","withExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","mapExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","except"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","MonadError"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","catchJust"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorEither"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","ContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","runContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","mapContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","withContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Class","MonadCont"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","Traced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","runTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","traced"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","Store"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","runStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","store"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","Env"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","runEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","withEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","mapEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","env"]},{"package":"purescript-transformers","item":["Control.Comonad.Trans.Class","ComonadTrans"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","TracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","runTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","newtypeTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","functorTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","extendTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTransTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","ComonadTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","tracks"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listen"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listens"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","censor"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","comonadTracedTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","StoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","runStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","newtypeStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","functorStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","extendStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadTransStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","ComonadStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","experiment"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","peeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seek"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","comonadStoreStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","EnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","runEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","withEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","mapEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","newtypeEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","functorEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","extendEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadTransEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","ComonadAsk"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","asks"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","ComonadEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadAskTuple"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvTuple"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadAskEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvEnvT"]},{"package":"purescript-tuples","item":["Data.Tuple","Tuple"]},{"package":"purescript-tuples","item":["Data.Tuple","showTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","eqTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ordTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","commutativeRingTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","heytingAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","booleanAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","functorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","invariantTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifunctorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bindTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","extendTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","comonadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","lazyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","foldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifoldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","traversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bitraversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","fst"]},{"package":"purescript-tuples","item":["Data.Tuple","snd"]},{"package":"purescript-tuples","item":["Data.Tuple","curry"]},{"package":"purescript-tuples","item":["Data.Tuple","uncurry"]},{"package":"purescript-tuples","item":["Data.Tuple","swap"]},{"package":"purescript-tuples","item":["Data.Tuple","lookup"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","T11"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","get10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","over10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry1"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry10"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","Unfoldable"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicate"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicateA"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","none"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","singleton"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","fromMaybe"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","GeneralCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCatToUnicodeCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","unicodeCatToGeneralCat"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","showGeneralCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","eqGeneralCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","ordGeneralCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","boundedGeneralCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","generalCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isAscii"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isLatin1"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isAsciiLower"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isAsciiUpper"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isControl"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isPrint"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isSpace"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isUpper"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isLower"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isAlpha"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isAlphaNum"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isDigit"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isOctDigit"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isHexDigit"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isPunctuation"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isSymbol"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","toUpper"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","toLower"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","toTitle"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","digitToInt"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isLetter"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isMark"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isNumber"]},{"package":"purescript-unicode","item":["Data.Char.Unicode","isSeparator"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","UnicodeCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","showUnicodeCategory"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","ConversionRule"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","showConversionRule"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","CharBlock"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","showCharBlock"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatZP"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatMC"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatNO"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatSK"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatCO"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatME"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatND"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatPO"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatLT"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatPC"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatSM"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatZS"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatCC"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatLU"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatPD"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatSO"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatPE"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatCS"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatPF"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatCF"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatPS"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatSC"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatLL"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatZL"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatLM"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatPI"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatNL"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatMN"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","gencatLO"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","maxUniChar"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","numBlocks"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","numConvBlocks"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","numSpaceBlocks"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","numLat1Blocks"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","numRules"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule123"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule107"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule98"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule116"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule135"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule99"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule114"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule7"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule5"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule81"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule66"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule33"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule16"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule153"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule108"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule147"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule164"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule112"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule94"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule74"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule2"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule137"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule43"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule40"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule142"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule70"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule14"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule144"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule60"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule8"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule26"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule111"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule57"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule47"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule156"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule76"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule54"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule151"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule102"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule23"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule139"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule134"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule48"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule19"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule92"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule115"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule84"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule41"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule51"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule31"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule90"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule24"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule83"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule21"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule82"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule130"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule62"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule150"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule117"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule143"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule56"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule100"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule79"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule20"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule44"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule17"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule109"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule159"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule105"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule126"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule71"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule36"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule155"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule75"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule157"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule131"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule22"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule132"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule96"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule163"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule97"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule30"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule118"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule45"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule18"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule68"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule78"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule27"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule53"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule15"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule154"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule140"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule127"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule10"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule160"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule88"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule32"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule85"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule46"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule91"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule4"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule39"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule38"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule86"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule67"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule52"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule125"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule34"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule35"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule80"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule3"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule104"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule58"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule146"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule124"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule25"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule28"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule122"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule158"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule106"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule95"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule69"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule72"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule129"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule162"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule149"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule113"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule145"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule59"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule110"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule73"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule63"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule138"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule0"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule42"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule93"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule50"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule6"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule128"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule37"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule133"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule55"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule9"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule152"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule136"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule120"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule103"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule49"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule148"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule65"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule141"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule64"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule11"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule101"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule12"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule77"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule119"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule87"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule1"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule29"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule121"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule13"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule161"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule89"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule165"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule166"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","rule61"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","allchars"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","convchars"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","spacechars"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","nullrule"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","blkCmp"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","getRule"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","bsearch"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","checkAttr"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","checkAttrS"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswcntrl"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswprint"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswupper"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswlower"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswalpha"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswdigit"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswalnum"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uIswspace"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","caseConv"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uTowupper"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uTowlower"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uTowtitle"]},{"package":"purescript-unicode","item":["Data.Char.Unicode.Internal","uGencat"]}],"version":"2.1.0","github":["purescript-contrib","purescript-parsing"],"versionTag":"v2.1.0","compilerVersion":"0.9.1"}