{"uploader":"hdgarrood","packageMeta":{"repository":{"url":"https://github.com/hdgarrood/purescript-polynomials","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-quickcheck-laws":"^3.0.0","purescript-psci-support":"^3.0.0","purescript-quickcheck":"^4.0.0","purescript-modular-arithmetic":"^2.0.0"},"dependencies":{"purescript-newtype":"^2.0.0","purescript-console":"^3.0.0","purescript-arrays":"^4.0.1","purescript-prelude":"^3.0.0","purescript-generics-rep":"^5.0.0","purescript-strings":"^3.1.0"},"name":"purescript-polynomials","license":["MIT"]},"tagTime":"2017-05-01T11:40:41+0000","modules":[{"reExports":[],"name":"Data.Polynomial","comments":null,"declarations":[{"children":[{"comments":null,"title":"functorPolynomial","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]}]}},"sourceSpan":{"start":[42,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[42,64]}},{"comments":null,"title":"eqPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[43,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[43,66]}},{"comments":null,"title":"arbitraryPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","QuickCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[49,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[50,55]}},{"comments":null,"title":"semiringPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[68,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[78,75]}},{"comments":null,"title":"ringPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[80,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[82,62]}},{"comments":null,"title":"commutativeRingPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","CommutativeRing"],"CommutativeRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[84,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[84,98]}},{"comments":null,"title":"euclideanRingPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Field"],"Field"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[86,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[89,39]}},{"comments":null,"title":"semigroupPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[101,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[102,29]}},{"comments":null,"title":"monoidPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[104,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[105,20]}},{"comments":null,"title":"showPolynomial","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[195,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[196,16]}}],"comments":"Finite-degree polynomials, with coefficients given by the type argument.\nSo for example, a `Polynomial Int` is a polynomial with integer\ncoefficients.\n\nThe `Monoid` instance works by considering polynomials as functions, where\n`<>` corresponds to function composition and the identity polynomial\n`mempty` is nothing more than the identity function `P(x) = x`.\n","title":"Polynomial","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[40,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[40,44]}},{"children":[],"comments":"Construct a polynomial from coefficients. The constant coefficient comes\nfirst, so for example the polynomial `x^4 + 2x^3 + 3x^2 + 4` could be\nconstructed by writing `fromCoefficients [4,3,2,1]`. Any trailing zeros\nare ignored.\n","title":"fromCoefficients","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[56,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[56,76]}},{"children":[],"comments":"Inverse of `fromCoefficients`, up to trailing zeros.\n","title":"coefficients","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[60,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[60,50]}},{"children":[],"comments":"Create a polynomial with a single (given) term and no dependence in x:\nthat is, a constant polynomial; one of degree 0.\n","title":"constant","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[65,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[65,62]}},{"children":[],"comments":"The identity polynomial; `P(x) = x`.\n","title":"identity","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[108,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[108,49]}},{"children":[],"comments":"Evaluate a polynomial by supplying a value for x.\n","title":"evaluate","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[165,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[165,59]}},{"children":[],"comments":null,"title":"pretty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}]},null]}},"sourceSpan":{"start":[176,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[176,75]}},{"children":[],"comments":"We can consider the set of polynomials with real coefficients as a real vector\nspace. In this case, this function defines an inner product given by the\nintegral of the product of the arguments between 0 and 1.\n","title":"innerProduct","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[207,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[207,65]}},{"children":[],"comments":"The square root of the inner product of a polynomial with itself.\n","title":"norm","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[211,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[211,36]}},{"children":[],"comments":"Considering polynomials as vectors, `projection p q` gives the orthogonal\nprojection of `q` onto `p`. If we let `r = projection p q`, then `r`\nsatisfies the following properties:\n\n* `innerProduct (q - r) p == 0` (approximately)\n* `innerProduct p r ==  norm p * norm r i.e. `p` and `r` are linearly\n   dependent.\n","title":"projection","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[221,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[221,74]}},{"children":[],"comments":"Gives the derivative of a polynomial. For example, the derivative of `x^2\n+ 3x + 2` is `2x + 3`.\n\n```purescript\nantiderivative (fromCoefficients [2.0,3.0,1.0])\n  == fromCoefficients [3.0,2.0]\n```\n","title":"derivative","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[231,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[231,53]}},{"children":[],"comments":"Gives the antiderivative of a particular polynomial having a constant\nterm of 0. For example, an antiderivative of `2x + 3` is `x^2 + 3x`.\n\n```purescript\nantiderivative (fromCoefficients [3.0,2.0])\n  == fromCoefficients [0.0,3.0,1.0]\n```\n","title":"antiderivative","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Polynomial"],"Polynomial"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[244,1],"name":"/home/harry/code/purescript-polynomials/src/Data/Polynomial.purs","end":[244,57]}}]}],"resolvedDependencies":{"purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-quickcheck-laws":"3.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-typelevel":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.1.0","purescript-gen":"1.1.0","purescript-typelevel-prelude":"2.0.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-psci-support":"3.0.0","purescript-random":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-quickcheck":"4.0.0","purescript-strings":"3.1.0","purescript-identity":"3.1.0","purescript-lists":"4.1.0","purescript-modular-arithmetic":"2.0.0"},"version":"1.0.0","github":["hdgarrood","purescript-polynomials"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Test.QuickCheck.Laws.Control.Semigroupoid":"purescript-quickcheck-laws","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Char.Gen":"purescript-strings","Data.Typelevel.Undefined":"purescript-typelevel","Test.QuickCheck.Laws.Data.Foldable":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Bounded":"purescript-quickcheck-laws","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Typelevel.Num.Sets":"purescript-typelevel","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Test.QuickCheck.Laws.Control.Apply":"purescript-quickcheck-laws","Control.Monad.Gen":"purescript-gen","Data.Typelevel.Num.Reps":"purescript-typelevel","Test.QuickCheck.Laws.Control.Alt":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Monoid":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.HeytingAlgebra":"purescript-quickcheck-laws","Data.ModularArithmetic":"purescript-modular-arithmetic","Test.QuickCheck.Laws.Data":"purescript-quickcheck-laws","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Test.QuickCheck.Laws.Control.Bind":"purescript-quickcheck-laws","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Test.QuickCheck.Laws.Control.Monad":"purescript-quickcheck-laws","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Test.QuickCheck.Laws.Data.Ord":"purescript-quickcheck-laws","Data.Bounded":"purescript-prelude","Test.QuickCheck.Laws.Control":"purescript-quickcheck-laws","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Typelevel.Num":"purescript-typelevel","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Test.QuickCheck.Laws.Data.Functor":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Control.Category":"purescript-quickcheck-laws","Control.Monad.Reader":"purescript-transformers","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Generic.Rep.Show":"purescript-generics-rep","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Test.QuickCheck.Laws.Data.EuclideanRing":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Field":"purescript-quickcheck-laws","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Data.Typelevel.Num.Aliases":"purescript-typelevel","Test.QuickCheck.Laws.Control.Comonad":"purescript-quickcheck-laws","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Test.QuickCheck.Laws.Data.Semigroup":"purescript-quickcheck-laws","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Laws":"purescript-quickcheck-laws","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Test.QuickCheck.Laws.Data.CommutativeRing":"purescript-quickcheck-laws","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Control.Alternative":"purescript-quickcheck-laws","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Test.QuickCheck.Laws.Data.Semiring":"purescript-quickcheck-laws","Data.Field":"purescript-prelude","Test.QuickCheck.Laws.Data.BoundedEnum":"purescript-quickcheck-laws","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Typelevel.Num.Ops":"purescript-typelevel","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Extend":"purescript-quickcheck-laws","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","Test.QuickCheck.Laws.Control.MonadPlus":"purescript-quickcheck-laws","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Test.QuickCheck.Laws.Control.MonadZero":"purescript-quickcheck-laws","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Typelevel.Bool":"purescript-typelevel","Data.Identity":"purescript-identity","Test.QuickCheck.Laws.Data.Eq":"purescript-quickcheck-laws","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Applicative":"purescript-quickcheck-laws","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Test.QuickCheck.Laws.Data.BooleanAlgebra":"purescript-quickcheck-laws","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Test.QuickCheck.Laws.Data.Ring":"purescript-quickcheck-laws","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Test.QuickCheck.Laws.Control.Plus":"purescript-quickcheck-laws","Data.Either":"purescript-either","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}