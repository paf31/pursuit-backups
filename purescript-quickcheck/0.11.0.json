{"uploader":"hdgarrood","packageMeta":{"repository":{"url":"git://github.com/purescript/purescript-quickcheck.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"authors":[{"homepage":"http://degoes.net","email":"john@degoes.net","name":"John A. De Goes"},{"email":"freeman.phil@gmail.com","name":"Phil Freeman"}],"dependencies":{"purescript-exceptions":"^0.3.0","purescript-console":"^0.1.0","purescript-either":"^0.2.0","purescript-transformers":"^0.7.1","purescript-random":"^0.2.0","purescript-strings":"^0.7.0","purescript-lists":"^0.7.0"},"name":"purescript-quickcheck","license":["MIT"]},"modules":[{"reExports":[],"name":"Test.QuickCheck","comments":"This module is a partial port of the Haskell QuickCheck library.\n\nQuickCheck provides a way to write _property-based_ tests.\n\nThe `Arbitrary` and `CoArbitrary` type classes allow us to create\nrandom data with which we can run our tests. This module provides\ninstances of both classes for PureScript's core data structures,\nas well as functions for writing new instances.\n\nTest suites can use the `quickCheck` and `quickCheckPure` functions\nto test properties.\n\nFor example:\n\n```purescript\nmain = quickCheck \\n -> n + 1 > n\n```\n","declarations":[{"children":[],"comments":"A type synonym which represents the effects used by the `quickCheck` function.\n","title":"QC","fixity":null,"info":{"arguments":[["eff",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"RCons","contents":["err",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]}]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[33,1],"name":"src/Test/QuickCheck.purs","end":[39,1]}},{"children":[],"comments":"Test a property.\n\nThis function generates a new random seed, runs 100 tests and\nprints the test results to the console.\n","title":"quickCheck","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ForAll","contents":["eff",{"tag":"ConstrainedType","contents":[[[[["Test","QuickCheck"],"Testable"],[{"tag":"TypeVar","contents":"prop"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"QC"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"src/Test/QuickCheck.purs","end":[40,1]}},{"children":[],"comments":"A variant of the `quickCheck` function which accepts an extra parameter\nrepresenting the number of tests which should be run.\n","title":"quickCheck'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ForAll","contents":["eff",{"tag":"ConstrainedType","contents":[[[[["Test","QuickCheck"],"Testable"],[{"tag":"TypeVar","contents":"prop"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"QC"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"src/Test/QuickCheck.purs","end":[45,1]}},{"children":[],"comments":"Test a property, returning all test results as an array.\n\nThe first argument is the _random seed_ to be passed to the random generator.\nThe second argument is the number of tests to run.\n","title":"quickCheckPure","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[[[[["Test","QuickCheck"],"Testable"],[{"tag":"TypeVar","contents":"prop"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[68,1],"name":"src/Test/QuickCheck.purs","end":[69,1]}},{"children":[{"comments":null,"title":"test","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}},"sourceSpan":null},{"comments":null,"title":"testableResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Testable"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}},"sourceSpan":{"start":[80,1],"name":"src/Test/QuickCheck.purs","end":[83,1]}},{"comments":null,"title":"testableBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Testable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[83,1],"name":"src/Test/QuickCheck.purs","end":[87,1]}},{"comments":null,"title":"testableFunction","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"t"}]],[[["Test","QuickCheck"],"Testable"],[{"tag":"TypeVar","contents":"prop"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Testable"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"prop"}]}}]}},"sourceSpan":{"start":[87,1],"name":"src/Test/QuickCheck.purs","end":[91,1]}}],"comments":"The `Testable` class represents _testable properties_.\n\nA testable property is a function of zero or more `Arbitrary` arguments,\nreturning a `Boolean` or `Result`.\n\nTestable properties can be passed to the `quickCheck` function.\n","title":"Testable","fixity":null,"info":{"arguments":[["prop",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[77,1],"name":"src/Test/QuickCheck.purs","end":[80,1]}},{"children":[{"comments":null,"title":"Success","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Failed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"testableResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Testable"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}},"sourceSpan":{"start":[80,1],"name":"src/Test/QuickCheck.purs","end":[83,1]}},{"comments":null,"title":"showResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}},"sourceSpan":{"start":[93,1],"name":"src/Test/QuickCheck.purs","end":[104,1]}}],"comments":"The result of a test: success or failure (with an error message).\n","title":"Result","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[91,1],"name":"src/Test/QuickCheck.purs","end":[93,1]}},{"children":[],"comments":"This operator attaches an error message to a failed test.\n\nFor example:\n\n```purescript\ntest x = myProperty x <?> (\"myProperty did not hold for \" <> show x)\n```\n","title":"(<?>)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}},"sourceSpan":{"start":[104,1],"name":"src/Test/QuickCheck.purs","end":[105,1]}},{"children":[],"comments":"Self-documenting equality assertion\n","title":"(===)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]},null]},null]}},"sourceSpan":{"start":[109,1],"name":"src/Test/QuickCheck.purs","end":[110,1]}},{"children":[],"comments":"Self-documenting inequality assertion\n","title":"(/==)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[[[[["Prelude"],"Eq"],[{"tag":"TypeVar","contents":"a"}]],[[["Prelude"],"Show"],[{"tag":"TypeVar","contents":"a"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"src/Test/QuickCheck.purs","end":[114,1]}}]},{"reExports":[],"name":"Test.QuickCheck.Arbitrary","comments":null,"declarations":[{"children":[{"comments":null,"title":"arbitrary","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"t"}]}},"sourceSpan":null},{"comments":null,"title":"arbBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[37,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[42,1]}},{"comments":null,"title":"arbNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[46,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[49,1]}},{"comments":null,"title":"arbInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[52,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[55,1]}},{"comments":null,"title":"arbString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[58,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[61,1]}},{"comments":null,"title":"arbChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[64,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[67,1]}},{"comments":null,"title":"arbUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[70,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[73,1]}},{"comments":null,"title":"arbOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[76,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[79,1]}},{"comments":null,"title":"arbArray","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[84,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[87,1]}},{"comments":null,"title":"arbFunction","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]],[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[90,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[93,1]}},{"comments":null,"title":"arbTuple","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]],[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[98,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[101,1]}},{"comments":null,"title":"arbMaybe","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[104,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[109,1]}},{"comments":null,"title":"arbEither","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]],[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[113,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[118,1]}},{"comments":null,"title":"arbitraryList","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[122,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[125,1]}},{"comments":null,"title":"arbitraryIdentity","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[128,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[131,1]}},{"comments":null,"title":"arbitraryLazy","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[134,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[137,1]}}],"comments":"The `Arbitrary` class represents those types whose values can be\n_randomly-generated_.\n\n`arbitrary` uses the `Gen` monad to express a random generator for\nthe type `t`. Combinators in the `Test.QuickCheck.Gen`\nmodule can be used to construct random generators.\n","title":"Arbitrary","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[23,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[34,1]}},{"children":[{"comments":null,"title":"coarbitrary","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"coarbBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[42,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[46,1]}},{"comments":null,"title":"coarbNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[49,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[52,1]}},{"comments":null,"title":"coarbInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[55,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[58,1]}},{"comments":null,"title":"coarbString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[61,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[64,1]}},{"comments":null,"title":"coarbChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[67,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[70,1]}},{"comments":null,"title":"coarbUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Unit"]}]}},"sourceSpan":{"start":[73,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[76,1]}},{"comments":null,"title":"coarbOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prelude"],"Ordering"]}]}},"sourceSpan":{"start":[79,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[84,1]}},{"comments":null,"title":"coarbArray","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[87,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[90,1]}},{"comments":null,"title":"coarbFunction","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Arbitrary"],[{"tag":"TypeVar","contents":"a"}]],[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[93,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[98,1]}},{"comments":null,"title":"coarbTuple","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]],[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[101,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[104,1]}},{"comments":null,"title":"coarbMaybe","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[109,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[113,1]}},{"comments":null,"title":"coarbEither","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]],[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"b"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[118,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[122,1]}},{"comments":null,"title":"coarbList","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[125,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[128,1]}},{"comments":null,"title":"coarbIdentity","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[131,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[134,1]}},{"comments":null,"title":"coarbLazy","info":{"declType":"instance","dependencies":[[[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],[{"tag":"TypeVar","contents":"a"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[137,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[138,39]}}],"comments":"The `Coarbitrary` class represents types which appear on the left of\nan `Arbitrary` function arrow.\n\nTo construct an `Arbitrary` instance for the type `a -> b`, we need to\nuse the input of type `a` to _perturb_ a random generator for `b`. This\nis the role of the `coarbitrary` function.\n\n`Coarbitrary` instances can be written using the `perturbGen` function.\n","title":"Coarbitrary","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[34,1],"name":"src/Test/QuickCheck/Arbitrary.purs","end":[37,1]}}]},{"reExports":[],"name":"Test.QuickCheck.Data.AlphaNumString","comments":null,"declarations":[{"children":[{"comments":null,"title":"AlphaNumString","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"arbAlphaNumString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","AlphaNumString"],"AlphaNumString"]}]}},"sourceSpan":{"start":[19,1],"name":"src/Test/QuickCheck/Data/AlphaNumString.purs","end":[28,1]}},{"comments":null,"title":"coarbAlphaNumString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","AlphaNumString"],"AlphaNumString"]}]}},"sourceSpan":{"start":[28,1],"name":"src/Test/QuickCheck/Data/AlphaNumString.purs","end":[29,48]}}],"comments":"A newtype for `String` whose `Arbitrary` instance generated random\nalphanumeric strings.\n","title":"AlphaNumString","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[14,1],"name":"src/Test/QuickCheck/Data/AlphaNumString.purs","end":[16,1]}},{"children":[],"comments":null,"title":"runAlphaNumString","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","AlphaNumString"],"AlphaNumString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[16,1],"name":"src/Test/QuickCheck/Data/AlphaNumString.purs","end":[17,1]}}]},{"reExports":[],"name":"Test.QuickCheck.Data.ApproxNumber","comments":null,"declarations":[{"children":[{"comments":null,"title":"ApproxNumber","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"arbitraryApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[17,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[20,1]}},{"comments":null,"title":"coarbitraryApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[20,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[23,1]}},{"comments":null,"title":"eqApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[23,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[26,1]}},{"comments":null,"title":"ordApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[26,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[29,1]}},{"comments":null,"title":"semiringApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[29,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[35,1]}},{"comments":null,"title":"moduloSemiringApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"ModuloSemiring"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[35,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[39,1]}},{"comments":null,"title":"ringApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Ring"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[39,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[42,1]}},{"comments":null,"title":"divisionRingApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[42,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[43,1]}},{"comments":null,"title":"numApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Num"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[43,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[43,33]}}],"comments":"A newtype for `Number` whose `Eq` instance uses an epsilon value to allow\nfor precision erros when comparing.\n","title":"ApproxNumber","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[9,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[12,1]}},{"children":[],"comments":null,"title":"(=~=)","fixity":{"associativity":"infixl","precedence":-1},"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[12,1],"name":"src/Test/QuickCheck/Data/ApproxNumber.purs","end":[13,1]}}]},{"reExports":[],"name":"Test.QuickCheck.Gen","comments":"This module defines the random generator monad used by the `Test.QuickCheck`\nmodule, as well as helper functions for constructing random generators.\n","declarations":[{"children":[],"comments":"Tests are parameterized by the `Size` of the randomly-generated data,\nthe meaning of which depends on the particular generator used.\n","title":"Size","fixity":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[52,1],"name":"src/Test/QuickCheck/Gen.purs","end":[55,1]}},{"children":[],"comments":"The state of the random generator monad\n","title":"GenState","fixity":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Object"]},{"tag":"RCons","contents":["newSeed",{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]},{"tag":"RCons","contents":["size",{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]},{"tag":"REmpty","contents":[]}]}]}]}},"sourceSpan":{"start":[55,1],"name":"src/Test/QuickCheck/Gen.purs","end":[60,1]}},{"children":[],"comments":"The random generator monad\n\n`Gen` is a state monad which encodes a linear congruential generator.\n","title":"Gen","fixity":null,"info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"GenState"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[60,1],"name":"src/Test/QuickCheck/Gen.purs","end":[63,1]}},{"children":[],"comments":"Create a random generator for a function type.\n","title":"repeatable","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"src/Test/QuickCheck/Gen.purs","end":[64,1]}},{"children":[],"comments":"Create a random generator which uses the generator state explicitly.\n","title":"stateful","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[67,1],"name":"src/Test/QuickCheck/Gen.purs","end":[68,1]}},{"children":[],"comments":"Modify a random generator by setting a new random seed.\n","title":"variant","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[71,1],"name":"src/Test/QuickCheck/Gen.purs","end":[72,1]}},{"children":[],"comments":"Create a random generator which depends on the size parameter.\n","title":"sized","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[75,1],"name":"src/Test/QuickCheck/Gen.purs","end":[76,1]}},{"children":[],"comments":"Modify a random generator by setting a new size parameter.\n","title":"resize","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[79,1],"name":"src/Test/QuickCheck/Gen.purs","end":[80,1]}},{"children":[],"comments":"Create a random generator which samples a range of `Number`s i\nwith uniform probability.\n","title":"choose","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[84,1],"name":"src/Test/QuickCheck/Gen.purs","end":[85,1]}},{"children":[],"comments":"Create a random generator which chooses uniformly distributed\nintegers from the closed interval `[a, b]`.\n","title":"chooseInt","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[91,1],"name":"src/Test/QuickCheck/Gen.purs","end":[92,1]}},{"children":[],"comments":"Create a random generator which selects and executes a random generator from\na non-empty collection of random generators with uniform probability.\n","title":"oneOf","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[101,1],"name":"src/Test/QuickCheck/Gen.purs","end":[102,1]}},{"children":[],"comments":"Create a random generator which selects and executes a random generator from\na non-empty, weighted collection of random generators.\n","title":"frequency","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[108,1],"name":"src/Test/QuickCheck/Gen.purs","end":[109,1]}},{"children":[],"comments":"Create a random generator which generates an array of random values.\n","title":"arrayOf","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[119,1],"name":"src/Test/QuickCheck/Gen.purs","end":[120,1]}},{"children":[],"comments":"Create a random generator which generates a non-empty array of random values.\n","title":"arrayOf1","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},null]}},"sourceSpan":{"start":[125,1],"name":"src/Test/QuickCheck/Gen.purs","end":[126,1]}},{"children":[],"comments":"Create a random generator which generates a list of random values of the specified size.\n","title":"listOf","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[141,1],"name":"src/Test/QuickCheck/Gen.purs","end":[142,1]}},{"children":[],"comments":"Create a random generator which generates a vector of random values of a specified size.\n","title":"vectorOf","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"src/Test/QuickCheck/Gen.purs","end":[146,1]}},{"children":[],"comments":"Create a random generator which selects a value from a non-empty collection with\nuniform probability.\n","title":"elements","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[150,1],"name":"src/Test/QuickCheck/Gen.purs","end":[151,1]}},{"children":[],"comments":"Run a random generator\n","title":"runGen","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"GenState"]}]}]}]},null]}},"sourceSpan":{"start":[156,1],"name":"src/Test/QuickCheck/Gen.purs","end":[157,1]}},{"children":[],"comments":"Run a random generator, keeping only the randomly-generated result\n","title":"evalGen","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"GenState"]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[160,1],"name":"src/Test/QuickCheck/Gen.purs","end":[161,1]}},{"children":[],"comments":"Sample a random generator\n","title":"sample","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[164,1],"name":"src/Test/QuickCheck/Gen.purs","end":[165,1]}},{"children":[],"comments":"Sample a random generator, using a randomly generated seed\n","title":"randomSample'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[168,1],"name":"src/Test/QuickCheck/Gen.purs","end":[169,1]}},{"children":[],"comments":"Get a random sample of 10 values\n","title":"randomSample","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"src/Test/QuickCheck/Gen.purs","end":[175,1]}},{"children":[],"comments":"A random generator which approximates a uniform random variable on `[0, 1]`\n","title":"uniform","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[183,1],"name":"src/Test/QuickCheck/Gen.purs","end":[184,1]}},{"children":[],"comments":"Perturb a random generator by modifying the current seed\n","title":"perturbGen","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[189,1],"name":"src/Test/QuickCheck/Gen.purs","end":[190,1]}}]},{"reExports":[],"name":"Test.QuickCheck.LCG","comments":null,"declarations":[{"children":[],"comments":"The *multiplier*: a magic constant for the linear congruential generator\n","title":"lcgM","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[22,1],"name":"src/Test/QuickCheck/LCG.purs","end":[23,1]}},{"children":[],"comments":"The *increment*: a magic constant for the linear congruential generator\n","title":"lcgC","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[26,1],"name":"src/Test/QuickCheck/LCG.purs","end":[27,1]}},{"children":[],"comments":"The *modulus*: a magic constant for the linear congruential generator.\nIt is equal to 2^31 - 1, a Mersenne prime. It is useful for this value to\nbe prime, because then the requirement of the initial seed being coprime\nto the modulus is satisfied when the seed is between 1 and lcgN - 1.\n","title":"lcgN","fixity":null,"info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[33,1],"name":"src/Test/QuickCheck/LCG.purs","end":[34,1]}},{"children":[],"comments":"Step the linear congruential generator\n","title":"lcgNext","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[37,1],"name":"src/Test/QuickCheck/LCG.purs","end":[38,1]}},{"children":[],"comments":"Create a random seed\n","title":"randomSeed","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]},null]}},"sourceSpan":{"start":[43,1],"name":"src/Test/QuickCheck/LCG.purs","end":[44,1]}},{"children":[{"comments":null,"title":"showSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Show"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[70,1],"name":"src/Test/QuickCheck/LCG.purs","end":[73,1]}},{"comments":null,"title":"eqSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prelude"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[73,1],"name":"src/Test/QuickCheck/LCG.purs","end":[74,31]}}],"comments":"A seed for the linear congruential generator. We omit a `Semiring`\ninstance because there is no `zero` value, as 0 is not an acceptable\nseed for the generator.\n","title":"Seed","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[57,1],"name":"src/Test/QuickCheck/LCG.purs","end":[59,1]}},{"children":[],"comments":null,"title":"mkSeed","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[59,1],"name":"src/Test/QuickCheck/LCG.purs","end":[60,1]}},{"children":[],"comments":null,"title":"runSeed","fixity":null,"info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[62,1],"name":"src/Test/QuickCheck/LCG.purs","end":[63,1]}}]}],"resolvedDependencies":{"purescript-exceptions":"0.3.4","purescript-control":"0.3.2","purescript-console":"0.1.1","purescript-either":"0.2.3","purescript-arrays":"0.4.5","purescript-maybe":"0.3.5","purescript-distributive":"0.5.1","purescript-unfoldable":"0.4.1","purescript-invariant":"0.3.0","purescript-lazy":"0.4.1","purescript-monoid":"0.3.2","purescript-foldable-traversable":"0.4.2","purescript-tailrec":"0.3.1","purescript-prelude":"0.1.5","purescript-st":"0.1.1","purescript-bifunctors":"0.4.0","purescript-integers":"0.2.1","purescript-eff":"0.1.2","purescript-transformers":"0.7.2","purescript-math":"0.2.0","purescript-random":"0.2.3","purescript-tuples":"0.4.0","purescript-strings":"0.7.1","purescript-identity":"0.4.1","purescript-lists":"0.7.10"},"bookmarks":[{"package":null,"item":["Test.QuickCheck","QC"]},{"package":null,"item":["Test.QuickCheck","quickCheck"]},{"package":null,"item":["Test.QuickCheck","quickCheck'"]},{"package":null,"item":["Test.QuickCheck","quickCheckPure"]},{"package":null,"item":["Test.QuickCheck","Testable"]},{"package":null,"item":["Test.QuickCheck","testableResult"]},{"package":null,"item":["Test.QuickCheck","testableBoolean"]},{"package":null,"item":["Test.QuickCheck","testableFunction"]},{"package":null,"item":["Test.QuickCheck","Result"]},{"package":null,"item":["Test.QuickCheck","showResult"]},{"package":null,"item":["Test.QuickCheck","(<?>)"]},{"package":null,"item":["Test.QuickCheck","(<?>)"]},{"package":null,"item":["Test.QuickCheck","(===)"]},{"package":null,"item":["Test.QuickCheck","(/==)"]},{"package":null,"item":["Test.QuickCheck.LCG","lcgM"]},{"package":null,"item":["Test.QuickCheck.LCG","lcgC"]},{"package":null,"item":["Test.QuickCheck.LCG","lcgN"]},{"package":null,"item":["Test.QuickCheck.LCG","lcgNext"]},{"package":null,"item":["Test.QuickCheck.LCG","randomSeed"]},{"package":null,"item":["Test.QuickCheck.LCG","Seed"]},{"package":null,"item":["Test.QuickCheck.LCG","mkSeed"]},{"package":null,"item":["Test.QuickCheck.LCG","runSeed"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","Arbitrary"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","Coarbitrary"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbBoolean"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbBoolean"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbNumber"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbNumber"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbInt"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbInt"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbString"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbString"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbChar"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbChar"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbUnit"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbUnit"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbOrdering"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbOrdering"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbArray"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbArray"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbFunction"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbFunction"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbTuple"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbTuple"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbMaybe"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbMaybe"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbEither"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbEither"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbitraryList"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbList"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbitraryIdentity"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbIdentity"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","arbitraryLazy"]},{"package":null,"item":["Test.QuickCheck.Arbitrary","coarbLazy"]},{"package":null,"item":["Test.QuickCheck.Gen","Size"]},{"package":null,"item":["Test.QuickCheck.Gen","GenState"]},{"package":null,"item":["Test.QuickCheck.Gen","Gen"]},{"package":null,"item":["Test.QuickCheck.Gen","repeatable"]},{"package":null,"item":["Test.QuickCheck.Gen","stateful"]},{"package":null,"item":["Test.QuickCheck.Gen","variant"]},{"package":null,"item":["Test.QuickCheck.Gen","sized"]},{"package":null,"item":["Test.QuickCheck.Gen","resize"]},{"package":null,"item":["Test.QuickCheck.Gen","choose"]},{"package":null,"item":["Test.QuickCheck.Gen","chooseInt"]},{"package":null,"item":["Test.QuickCheck.Gen","oneOf"]},{"package":null,"item":["Test.QuickCheck.Gen","frequency"]},{"package":null,"item":["Test.QuickCheck.Gen","arrayOf"]},{"package":null,"item":["Test.QuickCheck.Gen","arrayOf1"]},{"package":null,"item":["Test.QuickCheck.Gen","listOf"]},{"package":null,"item":["Test.QuickCheck.Gen","vectorOf"]},{"package":null,"item":["Test.QuickCheck.Gen","elements"]},{"package":null,"item":["Test.QuickCheck.Gen","runGen"]},{"package":null,"item":["Test.QuickCheck.Gen","evalGen"]},{"package":null,"item":["Test.QuickCheck.Gen","sample"]},{"package":null,"item":["Test.QuickCheck.Gen","randomSample'"]},{"package":null,"item":["Test.QuickCheck.Gen","randomSample"]},{"package":null,"item":["Test.QuickCheck.Gen","uniform"]},{"package":null,"item":["Test.QuickCheck.Gen","perturbGen"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","ApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","(=~=)"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","arbitraryApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","coarbitraryApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","eqApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","ordApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","semiringApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","moduloSemiringApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","ringApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","divisionRingApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.ApproxNumber","numApproxNumber"]},{"package":null,"item":["Test.QuickCheck.Data.AlphaNumString","AlphaNumString"]},{"package":null,"item":["Test.QuickCheck.Data.AlphaNumString","runAlphaNumString"]},{"package":null,"item":["Test.QuickCheck.Data.AlphaNumString","arbAlphaNumString"]},{"package":null,"item":["Test.QuickCheck.Data.AlphaNumString","coarbAlphaNumString"]},{"package":"purescript-prelude","item":["Prelude","Unit"]},{"package":"purescript-prelude","item":["Prelude","unit"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","flip"]},{"package":"purescript-prelude","item":["Prelude","const"]},{"package":"purescript-prelude","item":["Prelude","asTypeOf"]},{"package":"purescript-prelude","item":["Prelude","otherwise"]},{"package":"purescript-prelude","item":["Prelude","Semigroupoid"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","Category"]},{"package":"purescript-prelude","item":["Prelude","Functor"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","void"]},{"package":"purescript-prelude","item":["Prelude","Apply"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","Applicative"]},{"package":"purescript-prelude","item":["Prelude","return"]},{"package":"purescript-prelude","item":["Prelude","liftA1"]},{"package":"purescript-prelude","item":["Prelude","Bind"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","Monad"]},{"package":"purescript-prelude","item":["Prelude","liftM1"]},{"package":"purescript-prelude","item":["Prelude","ap"]},{"package":"purescript-prelude","item":["Prelude","Semigroup"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","Semiring"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","Ring"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","negate"]},{"package":"purescript-prelude","item":["Prelude","ModuloSemiring"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","DivisionRing"]},{"package":"purescript-prelude","item":["Prelude","Num"]},{"package":"purescript-prelude","item":["Prelude","Eq"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","Ordering"]},{"package":"purescript-prelude","item":["Prelude","Ord"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","unsafeCompare"]},{"package":"purescript-prelude","item":["Prelude","Bounded"]},{"package":"purescript-prelude","item":["Prelude","BoundedOrd"]},{"package":"purescript-prelude","item":["Prelude","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","Show"]},{"package":"purescript-either","item":["Data.Either","Either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","isLeft"]},{"package":"purescript-either","item":["Data.Either","isRight"]},{"package":"purescript-either","item":["Data.Either","functorEither"]},{"package":"purescript-either","item":["Data.Either","bifunctorEither"]},{"package":"purescript-either","item":["Data.Either","applyEither"]},{"package":"purescript-either","item":["Data.Either","applicativeEither"]},{"package":"purescript-either","item":["Data.Either","altEither"]},{"package":"purescript-either","item":["Data.Either","bindEither"]},{"package":"purescript-either","item":["Data.Either","monadEither"]},{"package":"purescript-either","item":["Data.Either","extendEither"]},{"package":"purescript-either","item":["Data.Either","showEither"]},{"package":"purescript-either","item":["Data.Either","eqEither"]},{"package":"purescript-either","item":["Data.Either","ordEither"]},{"package":"purescript-either","item":["Data.Either","boundedEither"]},{"package":"purescript-either","item":["Data.Either","foldableEither"]},{"package":"purescript-either","item":["Data.Either","bifoldableEither"]},{"package":"purescript-either","item":["Data.Either","traversableEither"]},{"package":"purescript-either","item":["Data.Either","bitraversableEither"]},{"package":"purescript-either","item":["Data.Either","semiringEither"]},{"package":"purescript-either","item":["Data.Either","semigroupEither"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromLeft"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromLeft"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromRight"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromRight"]},{"package":"purescript-either","item":["Data.Either.Nested","Either2"]},{"package":"purescript-either","item":["Data.Either.Nested","Either3"]},{"package":"purescript-either","item":["Data.Either.Nested","Either4"]},{"package":"purescript-either","item":["Data.Either.Nested","Either5"]},{"package":"purescript-either","item":["Data.Either.Nested","Either6"]},{"package":"purescript-either","item":["Data.Either.Nested","Either7"]},{"package":"purescript-either","item":["Data.Either.Nested","Either8"]},{"package":"purescript-either","item":["Data.Either.Nested","Either9"]},{"package":"purescript-either","item":["Data.Either.Nested","Either10"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either10of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2"]},{"package":"purescript-either","item":["Data.Either.Nested","either3"]},{"package":"purescript-either","item":["Data.Either.Nested","either4"]},{"package":"purescript-either","item":["Data.Either.Nested","either5"]},{"package":"purescript-either","item":["Data.Either.Nested","either6"]},{"package":"purescript-either","item":["Data.Either.Nested","either7"]},{"package":"purescript-either","item":["Data.Either.Nested","either8"]},{"package":"purescript-either","item":["Data.Either.Nested","either9"]},{"package":"purescript-either","item":["Data.Either.Nested","either10"]},{"package":"purescript-integers","item":["Data.Int","fromNumber"]},{"package":"purescript-integers","item":["Data.Int","floor"]},{"package":"purescript-integers","item":["Data.Int","ceil"]},{"package":"purescript-integers","item":["Data.Int","round"]},{"package":"purescript-integers","item":["Data.Int","toNumber"]},{"package":"purescript-integers","item":["Data.Int","fromString"]},{"package":"purescript-integers","item":["Data.Int","even"]},{"package":"purescript-integers","item":["Data.Int","odd"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.&.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.|.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","(.^.)"]},{"package":"purescript-integers","item":["Data.Int.Bits","shl"]},{"package":"purescript-integers","item":["Data.Int.Bits","shr"]},{"package":"purescript-integers","item":["Data.Int.Bits","zshr"]},{"package":"purescript-integers","item":["Data.Int.Bits","complement"]},{"package":"purescript-st","item":["Control.Monad.ST","ST"]},{"package":"purescript-st","item":["Control.Monad.ST","STRef"]},{"package":"purescript-st","item":["Control.Monad.ST","newSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","readSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","modifySTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","writeSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","runST"]},{"package":"purescript-st","item":["Control.Monad.ST","pureST"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","EXCEPTION"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","Error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","error"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","message"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","stack"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","throwException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","catchException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception","throw"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrowException"]},{"package":"purescript-exceptions","item":["Control.Monad.Eff.Exception.Unsafe","unsafeThrow"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","print"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","logAny"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","errorAny"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeInterleaveEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafePerformEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-identity","item":["Data.Identity","Identity"]},{"package":"purescript-identity","item":["Data.Identity","runIdentity"]},{"package":"purescript-identity","item":["Data.Identity","eqIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ordIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedOrdIdentity"]},{"package":"purescript-identity","item":["Data.Identity","booleanAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semigroupIdenity"]},{"package":"purescript-identity","item":["Data.Identity","monoidIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","moduloSemiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","divisionRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","numIdentity"]},{"package":"purescript-identity","item":["Data.Identity","showIdentity"]},{"package":"purescript-identity","item":["Data.Identity","functorIdentity"]},{"package":"purescript-identity","item":["Data.Identity","invariantIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applyIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applicativeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","bindIdentity"]},{"package":"purescript-identity","item":["Data.Identity","monadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","extendIdentity"]},{"package":"purescript-identity","item":["Data.Identity","comonadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","foldableIdentity"]},{"package":"purescript-identity","item":["Data.Identity","traversableIdentity"]},{"package":"purescript-arrays","item":["Data.Array","singleton"]},{"package":"purescript-arrays","item":["Data.Array","range"]},{"package":"purescript-arrays","item":["Data.Array","(..)"]},{"package":"purescript-arrays","item":["Data.Array","replicate"]},{"package":"purescript-arrays","item":["Data.Array","replicateM"]},{"package":"purescript-arrays","item":["Data.Array","some"]},{"package":"purescript-arrays","item":["Data.Array","many"]},{"package":"purescript-arrays","item":["Data.Array","null"]},{"package":"purescript-arrays","item":["Data.Array","length"]},{"package":"purescript-arrays","item":["Data.Array","cons"]},{"package":"purescript-arrays","item":["Data.Array","(:)"]},{"package":"purescript-arrays","item":["Data.Array","snoc"]},{"package":"purescript-arrays","item":["Data.Array","insert"]},{"package":"purescript-arrays","item":["Data.Array","insertBy"]},{"package":"purescript-arrays","item":["Data.Array","head"]},{"package":"purescript-arrays","item":["Data.Array","last"]},{"package":"purescript-arrays","item":["Data.Array","tail"]},{"package":"purescript-arrays","item":["Data.Array","init"]},{"package":"purescript-arrays","item":["Data.Array","uncons"]},{"package":"purescript-arrays","item":["Data.Array","index"]},{"package":"purescript-arrays","item":["Data.Array","(!!)"]},{"package":"purescript-arrays","item":["Data.Array","elemIndex"]},{"package":"purescript-arrays","item":["Data.Array","elemLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","findIndex"]},{"package":"purescript-arrays","item":["Data.Array","findLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","insertAt"]},{"package":"purescript-arrays","item":["Data.Array","deleteAt"]},{"package":"purescript-arrays","item":["Data.Array","updateAt"]},{"package":"purescript-arrays","item":["Data.Array","modifyAt"]},{"package":"purescript-arrays","item":["Data.Array","alterAt"]},{"package":"purescript-arrays","item":["Data.Array","reverse"]},{"package":"purescript-arrays","item":["Data.Array","concat"]},{"package":"purescript-arrays","item":["Data.Array","concatMap"]},{"package":"purescript-arrays","item":["Data.Array","filter"]},{"package":"purescript-arrays","item":["Data.Array","partition"]},{"package":"purescript-arrays","item":["Data.Array","filterM"]},{"package":"purescript-arrays","item":["Data.Array","mapMaybe"]},{"package":"purescript-arrays","item":["Data.Array","catMaybes"]},{"package":"purescript-arrays","item":["Data.Array","sort"]},{"package":"purescript-arrays","item":["Data.Array","sortBy"]},{"package":"purescript-arrays","item":["Data.Array","slice"]},{"package":"purescript-arrays","item":["Data.Array","take"]},{"package":"purescript-arrays","item":["Data.Array","takeWhile"]},{"package":"purescript-arrays","item":["Data.Array","drop"]},{"package":"purescript-arrays","item":["Data.Array","dropWhile"]},{"package":"purescript-arrays","item":["Data.Array","span"]},{"package":"purescript-arrays","item":["Data.Array","group"]},{"package":"purescript-arrays","item":["Data.Array","group'"]},{"package":"purescript-arrays","item":["Data.Array","groupBy"]},{"package":"purescript-arrays","item":["Data.Array","nub"]},{"package":"purescript-arrays","item":["Data.Array","nubBy"]},{"package":"purescript-arrays","item":["Data.Array","union"]},{"package":"purescript-arrays","item":["Data.Array","unionBy"]},{"package":"purescript-arrays","item":["Data.Array","delete"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","(\\\\)"]},{"package":"purescript-arrays","item":["Data.Array","intersect"]},{"package":"purescript-arrays","item":["Data.Array","intersectBy"]},{"package":"purescript-arrays","item":["Data.Array","zipWith"]},{"package":"purescript-arrays","item":["Data.Array","zipWithA"]},{"package":"purescript-arrays","item":["Data.Array","zip"]},{"package":"purescript-arrays","item":["Data.Array","unzip"]},{"package":"purescript-arrays","item":["Data.Array","foldM"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","unsafeIndex"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","head"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","tail"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","last"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","init"]},{"package":"purescript-arrays","item":["Data.Array.ST","STArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","Assoc"]},{"package":"purescript-arrays","item":["Data.Array.ST","runSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","emptySTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","thaw"]},{"package":"purescript-arrays","item":["Data.Array.ST","freeze"]},{"package":"purescript-arrays","item":["Data.Array.ST","peekSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pokeSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushAllSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","spliceSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","toAssocArray"]},{"package":"purescript-lists","item":["Data.List","List"]},{"package":"purescript-lists","item":["Data.List","toUnfoldable"]},{"package":"purescript-lists","item":["Data.List","fromFoldable"]},{"package":"purescript-lists","item":["Data.List","singleton"]},{"package":"purescript-lists","item":["Data.List","(..)"]},{"package":"purescript-lists","item":["Data.List","range"]},{"package":"purescript-lists","item":["Data.List","replicate"]},{"package":"purescript-lists","item":["Data.List","replicateM"]},{"package":"purescript-lists","item":["Data.List","some"]},{"package":"purescript-lists","item":["Data.List","many"]},{"package":"purescript-lists","item":["Data.List","null"]},{"package":"purescript-lists","item":["Data.List","null"]},{"package":"purescript-lists","item":["Data.List","length"]},{"package":"purescript-lists","item":["Data.List","(:)"]},{"package":"purescript-lists","item":["Data.List","snoc"]},{"package":"purescript-lists","item":["Data.List","insert"]},{"package":"purescript-lists","item":["Data.List","insertBy"]},{"package":"purescript-lists","item":["Data.List","insertBy"]},{"package":"purescript-lists","item":["Data.List","head"]},{"package":"purescript-lists","item":["Data.List","head"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","last"]},{"package":"purescript-lists","item":["Data.List","tail"]},{"package":"purescript-lists","item":["Data.List","tail"]},{"package":"purescript-lists","item":["Data.List","init"]},{"package":"purescript-lists","item":["Data.List","init"]},{"package":"purescript-lists","item":["Data.List","uncons"]},{"package":"purescript-lists","item":["Data.List","uncons"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","index"]},{"package":"purescript-lists","item":["Data.List","(!!)"]},{"package":"purescript-lists","item":["Data.List","elemIndex"]},{"package":"purescript-lists","item":["Data.List","elemLastIndex"]},{"package":"purescript-lists","item":["Data.List","findIndex"]},{"package":"purescript-lists","item":["Data.List","findLastIndex"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","insertAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","deleteAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","updateAt"]},{"package":"purescript-lists","item":["Data.List","modifyAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","alterAt"]},{"package":"purescript-lists","item":["Data.List","reverse"]},{"package":"purescript-lists","item":["Data.List","concat"]},{"package":"purescript-lists","item":["Data.List","concatMap"]},{"package":"purescript-lists","item":["Data.List","concatMap"]},{"package":"purescript-lists","item":["Data.List","filter"]},{"package":"purescript-lists","item":["Data.List","filterM"]},{"package":"purescript-lists","item":["Data.List","filterM"]},{"package":"purescript-lists","item":["Data.List","mapMaybe"]},{"package":"purescript-lists","item":["Data.List","catMaybes"]},{"package":"purescript-lists","item":["Data.List","sort"]},{"package":"purescript-lists","item":["Data.List","sortBy"]},{"package":"purescript-lists","item":["Data.List","slice"]},{"package":"purescript-lists","item":["Data.List","take"]},{"package":"purescript-lists","item":["Data.List","takeWhile"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","drop"]},{"package":"purescript-lists","item":["Data.List","dropWhile"]},{"package":"purescript-lists","item":["Data.List","span"]},{"package":"purescript-lists","item":["Data.List","span"]},{"package":"purescript-lists","item":["Data.List","group"]},{"package":"purescript-lists","item":["Data.List","group'"]},{"package":"purescript-lists","item":["Data.List","groupBy"]},{"package":"purescript-lists","item":["Data.List","groupBy"]},{"package":"purescript-lists","item":["Data.List","nub"]},{"package":"purescript-lists","item":["Data.List","nubBy"]},{"package":"purescript-lists","item":["Data.List","nubBy"]},{"package":"purescript-lists","item":["Data.List","union"]},{"package":"purescript-lists","item":["Data.List","unionBy"]},{"package":"purescript-lists","item":["Data.List","delete"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","deleteBy"]},{"package":"purescript-lists","item":["Data.List","(\\\\)"]},{"package":"purescript-lists","item":["Data.List","intersect"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","intersectBy"]},{"package":"purescript-lists","item":["Data.List","zipWith"]},{"package":"purescript-lists","item":["Data.List","zipWithA"]},{"package":"purescript-lists","item":["Data.List","zip"]},{"package":"purescript-lists","item":["Data.List","unzip"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","transpose"]},{"package":"purescript-lists","item":["Data.List","foldM"]},{"package":"purescript-lists","item":["Data.List","foldM"]},{"package":"purescript-lists","item":["Data.List","toList"]},{"package":"purescript-lists","item":["Data.List","fromList"]},{"package":"purescript-lists","item":["Data.List.Unsafe","head"]},{"package":"purescript-lists","item":["Data.List.Unsafe","head"]},{"package":"purescript-lists","item":["Data.List.Unsafe","tail"]},{"package":"purescript-lists","item":["Data.List.Unsafe","tail"]},{"package":"purescript-lists","item":["Data.List.Unsafe","last"]},{"package":"purescript-lists","item":["Data.List.Unsafe","last"]},{"package":"purescript-lists","item":["Data.List.Unsafe","last"]},{"package":"purescript-lists","item":["Data.List.Unsafe","init"]},{"package":"purescript-lists","item":["Data.List.Unsafe","init"]},{"package":"purescript-lists","item":["Data.List.Unsafe","init"]},{"package":"purescript-lists","item":["Data.List.Lazy","List"]},{"package":"purescript-lists","item":["Data.List.Lazy","runList"]},{"package":"purescript-lists","item":["Data.List.Lazy","toUnfoldable"]},{"package":"purescript-lists","item":["Data.List.Lazy","fromFoldable"]},{"package":"purescript-lists","item":["Data.List.Lazy","Step"]},{"package":"purescript-lists","item":["Data.List.Lazy","step"]},{"package":"purescript-lists","item":["Data.List.Lazy","nil"]},{"package":"purescript-lists","item":["Data.List.Lazy","singleton"]},{"package":"purescript-lists","item":["Data.List.Lazy","(..)"]},{"package":"purescript-lists","item":["Data.List.Lazy","range"]},{"package":"purescript-lists","item":["Data.List.Lazy","repeat"]},{"package":"purescript-lists","item":["Data.List.Lazy","iterate"]},{"package":"purescript-lists","item":["Data.List.Lazy","cycle"]},{"package":"purescript-lists","item":["Data.List.Lazy","null"]},{"package":"purescript-lists","item":["Data.List.Lazy","length"]},{"package":"purescript-lists","item":["Data.List.Lazy","cons"]},{"package":"purescript-lists","item":["Data.List.Lazy","(:)"]},{"package":"purescript-lists","item":["Data.List.Lazy","insert"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","head"]},{"package":"purescript-lists","item":["Data.List.Lazy","last"]},{"package":"purescript-lists","item":["Data.List.Lazy","tail"]},{"package":"purescript-lists","item":["Data.List.Lazy","init"]},{"package":"purescript-lists","item":["Data.List.Lazy","uncons"]},{"package":"purescript-lists","item":["Data.List.Lazy","index"]},{"package":"purescript-lists","item":["Data.List.Lazy","(!!)"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","insertAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","updateAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","modifyAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","alterAt"]},{"package":"purescript-lists","item":["Data.List.Lazy","reverse"]},{"package":"purescript-lists","item":["Data.List.Lazy","concat"]},{"package":"purescript-lists","item":["Data.List.Lazy","concatMap"]},{"package":"purescript-lists","item":["Data.List.Lazy","filter"]},{"package":"purescript-lists","item":["Data.List.Lazy","mapMaybe"]},{"package":"purescript-lists","item":["Data.List.Lazy","catMaybes"]},{"package":"purescript-lists","item":["Data.List.Lazy","take"]},{"package":"purescript-lists","item":["Data.List.Lazy","takeWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","drop"]},{"package":"purescript-lists","item":["Data.List.Lazy","dropWhile"]},{"package":"purescript-lists","item":["Data.List.Lazy","span"]},{"package":"purescript-lists","item":["Data.List.Lazy","group"]},{"package":"purescript-lists","item":["Data.List.Lazy","groupBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","nub"]},{"package":"purescript-lists","item":["Data.List.Lazy","nubBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","union"]},{"package":"purescript-lists","item":["Data.List.Lazy","unionBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","delete"]},{"package":"purescript-lists","item":["Data.List.Lazy","deleteBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","(\\\\)"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersect"]},{"package":"purescript-lists","item":["Data.List.Lazy","intersectBy"]},{"package":"purescript-lists","item":["Data.List.Lazy","zipWith"]},{"package":"purescript-lists","item":["Data.List.Lazy","zip"]},{"package":"purescript-lists","item":["Data.List.Lazy","transpose"]},{"package":"purescript-lists","item":["Data.List.Lazy","toList"]},{"package":"purescript-lists","item":["Data.List.Lazy","fromList"]},{"package":"purescript-lists","item":["Data.List.Lazy","lazyList"]},{"package":"purescript-lists","item":["Data.List.ZipList","ZipList"]},{"package":"purescript-lists","item":["Data.List.ZipList","runZipList"]},{"package":"purescript-transformers","item":["Control.Monad.State","State"]},{"package":"purescript-transformers","item":["Control.Monad.State","runState"]},{"package":"purescript-transformers","item":["Control.Monad.State","evalState"]},{"package":"purescript-transformers","item":["Control.Monad.State","execState"]},{"package":"purescript-transformers","item":["Control.Monad.State","mapState"]},{"package":"purescript-transformers","item":["Control.Monad.State","withState"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","Writer"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","runWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","execWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer","mapWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Except","Except"]},{"package":"purescript-transformers","item":["Control.Monad.Except","except"]},{"package":"purescript-transformers","item":["Control.Monad.Except","runExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","mapExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Except","withExcept"]},{"package":"purescript-transformers","item":["Control.Monad.Trans","MonadTrans"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","RWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","rws"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","runRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","evalRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","execRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","mapRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS","withRWS"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","Reader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","runReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","withReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader","mapReader"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","ListT"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","nil"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","cons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","prepend"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","singleton"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","fromEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapEffect"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","wrapLazy"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","unfold"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","iterate"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","repeat"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","take"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","take"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","takeWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","drop"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","drop"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","dropWhile"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","filter"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","mapMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","catMaybes"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","uncons"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","head"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","tail"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","foldl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","scanl"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith'"]},{"package":"purescript-transformers","item":["Control.Monad.List.Trans","zipWith"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","MonadState"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","get"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","gets"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","put"]},{"package":"purescript-transformers","item":["Control.Monad.State.Class","modify"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","StateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","runStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","evalStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","execStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","mapStateT"]},{"package":"purescript-transformers","item":["Control.Monad.State.Trans","withStateT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","ExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","runExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","withExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Except.Trans","mapExceptT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Class","MonadCont"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","ContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","runContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","mapContT"]},{"package":"purescript-transformers","item":["Control.Monad.Cont.Trans","withContT"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Class","MonadRWS"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","See"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","mkSee"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","RWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","runRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","evalRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","execRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","mapRWST"]},{"package":"purescript-transformers","item":["Control.Monad.RWS.Trans","withRWST"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","MonadReader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","reader"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Class","monadReaderFun"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","ReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","runReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","mapReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Reader.Trans","withReaderT"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","MonadError"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","catchJust"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorEither"]},{"package":"purescript-transformers","item":["Control.Monad.Error.Class","monadErrorMaybe"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","MaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","runMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Maybe.Trans","mapMaybeT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","MonadWriter"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","tell"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","listens"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Class","censor"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","WriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","runWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","execWriterT"]},{"package":"purescript-transformers","item":["Control.Monad.Writer.Trans","mapWriterT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","Traced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","runTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced","traced"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","Store"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","runStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store","store"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","Env"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","runEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","withEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","mapEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env","env"]},{"package":"purescript-transformers","item":["Control.Comonad.Trans","ComonadTrans"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","ComonadStore"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","experiment"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","peeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seek"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","seeks"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Class","comonadStoreStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","StoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","runStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","functorStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","extendStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Store.Trans","comonadTransStoreT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","ComonadTraced"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","tracks"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listen"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","listens"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","censor"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Class","comonadTracedTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","TracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","runTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","functorTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","extendTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Traced.Trans","comonadTransTracedT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","ComonadEnv"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","asks"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvTuple"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Class","comonadEnvEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","EnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","runEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","withEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","mapEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","functorEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","extendEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadEnvT"]},{"package":"purescript-transformers","item":["Control.Comonad.Env.Trans","comonadTransEnvT"]},{"package":"purescript-strings","item":["Data.String","charAt"]},{"package":"purescript-strings","item":["Data.String","fromChar"]},{"package":"purescript-strings","item":["Data.String","singleton"]},{"package":"purescript-strings","item":["Data.String","charCodeAt"]},{"package":"purescript-strings","item":["Data.String","toChar"]},{"package":"purescript-strings","item":["Data.String","null"]},{"package":"purescript-strings","item":["Data.String","uncons"]},{"package":"purescript-strings","item":["Data.String","uncons"]},{"package":"purescript-strings","item":["Data.String","takeWhile"]},{"package":"purescript-strings","item":["Data.String","dropWhile"]},{"package":"purescript-strings","item":["Data.String","stripPrefix"]},{"package":"purescript-strings","item":["Data.String","stripSuffix"]},{"package":"purescript-strings","item":["Data.String","fromCharArray"]},{"package":"purescript-strings","item":["Data.String","contains"]},{"package":"purescript-strings","item":["Data.String","indexOf"]},{"package":"purescript-strings","item":["Data.String","indexOf'"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf"]},{"package":"purescript-strings","item":["Data.String","lastIndexOf'"]},{"package":"purescript-strings","item":["Data.String","length"]},{"package":"purescript-strings","item":["Data.String","localeCompare"]},{"package":"purescript-strings","item":["Data.String","replace"]},{"package":"purescript-strings","item":["Data.String","take"]},{"package":"purescript-strings","item":["Data.String","drop"]},{"package":"purescript-strings","item":["Data.String","count"]},{"package":"purescript-strings","item":["Data.String","split"]},{"package":"purescript-strings","item":["Data.String","toCharArray"]},{"package":"purescript-strings","item":["Data.String","toLower"]},{"package":"purescript-strings","item":["Data.String","toUpper"]},{"package":"purescript-strings","item":["Data.String","trim"]},{"package":"purescript-strings","item":["Data.String","joinWith"]},{"package":"purescript-strings","item":["Data.Char","toString"]},{"package":"purescript-strings","item":["Data.Char","toCharCode"]},{"package":"purescript-strings","item":["Data.Char","fromCharCode"]},{"package":"purescript-strings","item":["Data.Char","toLower"]},{"package":"purescript-strings","item":["Data.Char","toUpper"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charCodeAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","charAt"]},{"package":"purescript-strings","item":["Data.String.Unsafe","char"]},{"package":"purescript-strings","item":["Data.String.Regex","Regex"]},{"package":"purescript-strings","item":["Data.String.Regex","RegexFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","noFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","regex"]},{"package":"purescript-strings","item":["Data.String.Regex","source"]},{"package":"purescript-strings","item":["Data.String.Regex","flags"]},{"package":"purescript-strings","item":["Data.String.Regex","renderFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","parseFlags"]},{"package":"purescript-strings","item":["Data.String.Regex","test"]},{"package":"purescript-strings","item":["Data.String.Regex","match"]},{"package":"purescript-strings","item":["Data.String.Regex","replace"]},{"package":"purescript-strings","item":["Data.String.Regex","replace'"]},{"package":"purescript-strings","item":["Data.String.Regex","search"]},{"package":"purescript-strings","item":["Data.String.Regex","split"]},{"package":"purescript-tuples","item":["Data.Tuple","Tuple"]},{"package":"purescript-tuples","item":["Data.Tuple","showTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","eqTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ordTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedOrdTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","moduloSemiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","divisionRingTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","numTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","booleanAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","functorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","invariantTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifunctorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bindTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","extendTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","comonadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","lazyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","foldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifoldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","traversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bitraversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","fst"]},{"package":"purescript-tuples","item":["Data.Tuple","snd"]},{"package":"purescript-tuples","item":["Data.Tuple","curry"]},{"package":"purescript-tuples","item":["Data.Tuple","uncurry"]},{"package":"purescript-tuples","item":["Data.Tuple","swap"]},{"package":"purescript-tuples","item":["Data.Tuple","lookup"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-math","item":["Math","Radians"]},{"package":"purescript-math","item":["Math","abs"]},{"package":"purescript-math","item":["Math","acos"]},{"package":"purescript-math","item":["Math","asin"]},{"package":"purescript-math","item":["Math","atan"]},{"package":"purescript-math","item":["Math","atan2"]},{"package":"purescript-math","item":["Math","ceil"]},{"package":"purescript-math","item":["Math","cos"]},{"package":"purescript-math","item":["Math","exp"]},{"package":"purescript-math","item":["Math","floor"]},{"package":"purescript-math","item":["Math","log"]},{"package":"purescript-math","item":["Math","max"]},{"package":"purescript-math","item":["Math","min"]},{"package":"purescript-math","item":["Math","pow"]},{"package":"purescript-math","item":["Math","round"]},{"package":"purescript-math","item":["Math","sin"]},{"package":"purescript-math","item":["Math","sqrt"]},{"package":"purescript-math","item":["Math","tan"]},{"package":"purescript-math","item":["Math","(%)"]},{"package":"purescript-math","item":["Math","(%)"]},{"package":"purescript-math","item":["Math","e"]},{"package":"purescript-math","item":["Math","ln2"]},{"package":"purescript-math","item":["Math","ln10"]},{"package":"purescript-math","item":["Math","log2e"]},{"package":"purescript-math","item":["Math","log10e"]},{"package":"purescript-math","item":["Math","pi"]},{"package":"purescript-math","item":["Math","sqrt1_2"]},{"package":"purescript-math","item":["Math","sqrt2"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","Bifoldable"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifoldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifold"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bitraverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifor_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bisequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biany"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biall"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","Foldable"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldrDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldlDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultR"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldMapDefaultL"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","fold"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","traverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","for_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","mconcat"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","intercalate"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","and"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","or"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","any"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","all"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","product"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","elem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","notElem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","find"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","maximumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","minimumBy"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","Bitraversable"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bitraverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bisequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bifor"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Traversable"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traverseDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","sequenceDefault"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","for"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Accum"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanl"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanr"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumR"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","Biapply"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift2"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift3"]},{"package":"purescript-bifunctors","item":["Control.Biapplicative","Biapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","Bifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","lmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","rmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","Join"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","runJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","Clown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","runClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","Joker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","runJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","Product"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","Flip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","runFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","Wrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","unwrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapplicative"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","Unfoldable"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","unfoldableArray"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicate"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","replicateA"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","none"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","singleton"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","extendFn"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alternative","alternativeArray"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","lift2"]},{"package":"purescript-control","item":["Control.Apply","lift3"]},{"package":"purescript-control","item":["Control.Apply","lift4"]},{"package":"purescript-control","item":["Control.Apply","lift5"]},{"package":"purescript-control","item":["Control.Monad","when"]},{"package":"purescript-control","item":["Control.Monad","when"]},{"package":"purescript-control","item":["Control.Monad","unless"]},{"package":"purescript-control","item":["Control.Monad","unless"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","join"]},{"package":"purescript-control","item":["Control.Bind","ifM"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","altArray"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.MonadPlus","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","monadPlusArray"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.Plus","plusArray"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidUnit"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidString"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidArray"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","runConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semiringConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","runMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","runAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","runEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","runDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","runDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semiringDisj"]},{"package":"purescript-distributive","item":["Data.Distributive","Distributive"]},{"package":"purescript-distributive","item":["Data.Distributive","cotraverse"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveIdentity"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveFunction"]},{"package":"purescript-lazy","item":["Data.Lazy","Lazy"]},{"package":"purescript-lazy","item":["Data.Lazy","defer"]},{"package":"purescript-lazy","item":["Data.Lazy","force"]},{"package":"purescript-lazy","item":["Data.Lazy","semiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","moduloSemiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","divisionRingLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","numLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","eqLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ordLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedOrdLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","semigroupLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monoidLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","booleanAlgebraLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","functorLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applyLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applicativeLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","bindLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","extendLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","comonadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","showLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","lazyLazy"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadPlusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","moduloSemiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","divisionRingMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","numMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedOrdMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","booleanAlgebraMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","unsafeThrow"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","runFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","runLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","RANDOM"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","random"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomInt"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomRange"]},{"package":"purescript-random","item":["Control.Monad.Eff.Random","randomBool"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","MonadRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM2"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM3"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","forever"]}],"version":"0.11.0","github":["purescript","purescript-quickcheck"],"versionTag":"v0.11.0","compilerVersion":"0.8.5.0"}