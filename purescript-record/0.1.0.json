{"uploader":"paf31","packageMeta":{"homepage":"https://github.com/purescript/purescript-record","repository":{"url":"git://github.com/purescript/purescript-record.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-assert":"^3.0.0"},"dependencies":{"purescript-symbols":"^3.0.0","purescript-typelevel-prelude":"^2.3.1","purescript-functions":"^3.0.0"},"name":"purescript-record","license":["MIT"],"description":"Functions for working with records and polymorphic labels"},"tagTime":"2017-07-19T02:57:59+0000","modules":[{"reExports":[],"name":"Data.Record","comments":null,"declarations":[{"children":[],"comments":"Get a property for a label which is specified using a value-level proxy for\na type-level string.\n\nFor example:\n\n```purescript\nget (SProxy :: SProxy \"x\") :: forall r a. { x :: a | r } -> a\n```\n","title":"get","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r'",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r'"},{"tag":"TypeVar","contents":"r"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"/Users/phil/Documents/Code/purescript/purescript-record/src/Data/Record.purs","end":[31,7]}},{"children":[],"comments":"Set a property for a label which is specified using a value-level proxy for\na type-level string.\n\nFor example:\n\n```purescript\nset (SProxy :: SProxy \"x\")\n  :: forall r a b. a -> { x :: b | r } -> { x :: a | r }\n```\n","title":"set","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/Users/phil/Documents/Code/purescript/purescript-record/src/Data/Record.purs","end":[51,15]}},{"children":[],"comments":"Modify a property for a label which is specified using a value-level proxy for\na type-level string.\n\nFor example:\n\n```purescript\nmodify (SProxy :: SProxy \"x\")\n  :: forall r a b. (a -> b) -> { x :: a | r } -> { x :: b | r }\n```\n","title":"modify","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/Users/phil/Documents/Code/purescript/purescript-record/src/Data/Record.purs","end":[71,15]}},{"children":[],"comments":"Insert a new property for a label which is specified using a value-level proxy for\na type-level string.\n\nFor example:\n\n```purescript\ninsert (SProxy :: SProxy \"x\")\n  :: forall r a. a -> { | r } -> { x :: a | r }\n```\n","title":"insert","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowLacks"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"/Users/phil/Documents/Code/purescript/purescript-record/src/Data/Record.purs","end":[91,15]}},{"children":[],"comments":"Delete a property for a label which is specified using a value-level proxy for\na type-level string.\n\nNote that the type of the resulting row must _lack_ the specified property.\nSince duplicate labels are allowed, this is checked with a type class constraint.\n\nFor example:\n\n```purescript\ndelete (SProxy :: SProxy \"x\")\n  :: forall r a. RowLacks \"x\" r => { x :: a | r } -> { | r }\n```\n","title":"delete","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowLacks"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[106,1],"name":"/Users/phil/Documents/Code/purescript/purescript-record/src/Data/Record.purs","end":[113,15]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-typelevel-prelude":"2.3.1","purescript-prelude":"3.1.0","purescript-unsafe-coerce":"3.0.0","purescript-eff":"3.1.0","purescript-functions":"3.0.0"},"version":"0.1.0","github":["purescript","purescript-record"],"versionTag":"v0.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Ord":"purescript-prelude","Data.Boolean":"purescript-prelude","Type.Proxy":"purescript-proxy","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Bind":"purescript-prelude","Data.Symbol":"purescript-symbols","Data.HeytingAlgebra":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Type.Data.Ordering":"purescript-typelevel-prelude","Type.Equality":"purescript-type-equality","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Type.Row":"purescript-typelevel-prelude","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Prelude":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Eq":"purescript-prelude","Data.Void":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Type.Data.Symbol":"purescript-typelevel-prelude","Control.Semigroupoid":"purescript-prelude","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude"},"compilerVersion":"0.11.4"}