{"uploader":"paldepind","packageMeta":{"homepage":"https://github.com/funkia/purescript-rrb-list","repository":{"url":"git://github.com/funkia/purescript-rrb-list.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","bower.json","package.json","package-lock.json","psc-package.json"],"devDependencies":{"purescript-spec":"^3.0.0","purescript-psci-support":"^4.0.0"},"dependencies":{"purescript-console":"^4.1.0","purescript-maybe":"^4.0.0","purescript-unfoldable":"^4.0.0","purescript-foldable-traversable":"^4.0.0","purescript-tailrec":"^4.0.0","purescript-prelude":"^4.0.1","purescript-nonempty":"^5.0.0","purescript-tuples":"^5.0.0","purescript-partial":"^2.0.0","purescript-functions":"^4.0.0"},"name":"purescript-rrb-list","license":["MIT"]},"tagTime":"2018-08-02T11:22:36+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-foldable-traversable","item":["Data","Foldable"]},"declarations":[{"children":[],"comments":null,"title":"foldMap","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[null,"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[67,3],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[67,58]}},{"children":[],"comments":null,"title":"foldl","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[null,"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[66,3],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[66,54]}},{"children":[],"comments":null,"title":"foldr","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[null,"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[65,3],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[65,54]}},{"children":[],"comments":"Test whether a value is not an element of a data structure.\n","title":"notElem","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[325,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[325,65]}},{"children":[],"comments":"Fold a data structure, accumulating values in some `Monoid`,\ncombining adjacent elements using the specified separator.\n","title":"intercalate","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[243,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[243,67]}},{"children":[],"comments":"Fold a data structure, accumulating values in some `Monoid`.\n","title":"fold","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]}},"sourceSpan":{"start":[173,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[173,55]}},{"children":[],"comments":"Try to find an element in a data structure which satisfies a predicate mapping.\n","title":"findMap","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[360,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[360,72]}},{"children":[],"comments":"Try to find an element in a data structure which satisfies a predicate.\n","title":"find","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[353,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[353,67]}},{"children":[],"comments":"Test whether a value is an element of a data structure.\n","title":"elem","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[321,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[321,62]}},{"children":[],"comments":"`any f` is the same as `or <<< map f`; map a function over the structure,\nand then get the disjunction of the results.\n","title":"any","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[309,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[309,76]}},{"children":[],"comments":"`all f` is the same as `and <<< map f`; map a function over the structure,\nand then get the conjunction of the results.\n","title":"all","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[304,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs","end":[304,76]}}]},{"moduleName":{"package":"purescript-foldable-traversable","item":["Data","Traversable"]},"declarations":[{"children":[],"comments":"Fold a data structure from the right, keeping all intermediate results\ninstead of only the final result. Note that the initial value does not\nappear in the result (unlike Haskell's `Prelude.scanr`).\n\n```purescript\nscanr (+) 0  [1,2,3] = [1,3,6]\nscanr (flip (-)) 10 [1,2,3] = [4,5,7]\n```\n","title":"scanr","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[175,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[175,73]}},{"children":[],"comments":"Fold a data structure from the left, keeping all intermediate results\ninstead of only the final result. Note that the initial value does not\nappear in the result (unlike Haskell's `Prelude.scanl`).\n\n```purescript\nscanl (+) 0  [1,2,3] = [1,3,6]\nscanl (-) 10 [1,2,3] = [9,7,4]\n```\n","title":"scanl","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[150,1],"name":"/home/simon/projects/purescript-rrb-list/bower_components/purescript-foldable-traversable/src/Data/Traversable.purs","end":[150,73]}}]},{"moduleName":{"package":null,"item":["RRBList","Types"]},"declarations":[{"children":[{"comments":null,"title":"showList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[17,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[17,45]}},{"comments":null,"title":"eqList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[23,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[23,39]}},{"comments":null,"title":"semigroupList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[29,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[29,45]}},{"comments":null,"title":"monoidList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[35,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[35,39]}},{"comments":null,"title":"functorList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[41,37]}},{"comments":null,"title":"applyList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[47,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[47,33]}},{"comments":null,"title":"applicativeList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[53,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[53,45]}},{"comments":null,"title":"bindList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[59,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[59,31]}},{"comments":null,"title":"monadList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[65,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[65,33]}},{"comments":null,"title":"foldableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[68,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[68,39]}},{"comments":null,"title":"unfoldable1List","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable1"],"Unfoldable1"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[77,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[77,45]}},{"comments":null,"title":"unfoldableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable"],"Unfoldable"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[90,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[90,43]}},{"comments":null,"title":"traversableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[103,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[103,45]}}],"comments":null,"title":"List","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[14,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[14,41]}}]}],"name":"RRBList","comments":null,"declarations":[{"children":[],"comments":"Convert a `Foldable` structure into an `List`.\n\nRunning time: `O(n)`.\n","title":"fromFoldable","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}]},null]}},"sourceSpan":{"start":[142,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[142,50]}},{"children":[],"comments":"Convert a `List` into an `Unfoldable` structure.\n","title":"toUnfoldable","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"f"}]}]},null]}},"sourceSpan":{"start":[131,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[131,52]}},{"children":[],"comments":"Create a list of one element\n\nRunning time: `O(1)`.\n","title":"singleton","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[154,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[154,35]}},{"children":[],"comments":"An infix synonym for `range`.\n","title":"(..)","info":{"declType":"alias","alias":[["RRBList"],{"Right":{"Left":{"Ident":"range"}}}],"fixity":{"associativity":"infix","precedence":8}},"sourceSpan":{"start":[174,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[174,20]}},{"children":[],"comments":"Create a list containing a range of integers, including both endpoints.\n\nRunning time: `O(n)`.\n","title":"range","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[160,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[160,32]}},{"children":[],"comments":"Create a list containing a value repeated the specified number of times.\n\nRunning time: `O(n)`.\n","title":"replicate","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[168,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[168,42]}},{"children":[],"comments":"Attempt a computation multiple times, requiring at least one success.\n\nThe `Lazy` constraint is used to generate the result lazily, to ensure\ntermination.\n","title":"some","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Lazy"],"Lazy"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[180,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[180,76]}},{"children":[],"comments":"Attempt a computation multiple times, returning as many successful results\nas possible (possibly zero).\n\nThe `Lazy` constraint is used to generate the result lazily, to ensure\ntermination.\n","title":"many","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Lazy"],"Lazy"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[188,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[188,76]}},{"children":[],"comments":"Test whether a list is empty.\n\nRunning time: `O(1)`.\n","title":"null","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[198,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[198,36]}},{"children":[],"comments":"Get the number of elements in a list.\n","title":"length","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[202,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[202,49]}},{"children":[],"comments":"Create a list of zero elements\n\nRunning time: `O(1)`.\n","title":"nil","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[148,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[148,24]}},{"children":[],"comments":"An infix alias for `cons`.\n\nNote, the running time of this function is `O(log(n))`, practically constant.\n","title":"(:)","info":{"declType":"alias","alias":[["RRBList"],{"Right":{"Left":{"Ident":"cons"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[219,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[219,19]}},{"children":[],"comments":"Attaches an element to the front of a list.\n\nRunning time: `O(1)`.\n","title":"cons","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[211,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[211,40]}},{"children":[],"comments":"Append an element to the end of a list.\n\nRunning time: `O(1)`.\n","title":"snoc","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[224,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[224,40]}},{"children":[],"comments":"Insert an element into a sorted list.\n","title":"insert","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[230,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[230,51]}},{"children":[],"comments":"Insert an element into a sorted list, using the specified function to\ndetermine the ordering of elements.\n","title":"insertBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[235,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[235,68]}},{"children":[],"comments":"Get the first element in a list, or `Nothing` if the list is empty\n\nRunning time: `O(1)`.\n","title":"head","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[247,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[247,36]}},{"children":[],"comments":"Get the last element in a list, or `Nothing` if the list is empty\n\nRunning time: `O(1)`.\n","title":"last","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[255,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[255,36]}},{"children":[],"comments":"Get all but the first element of a list, creating a new list, or\n`Nothing` if the list is empty\n\nRunning time: `O(1)`\n","title":"tail","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[264,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[264,43]}},{"children":[],"comments":"Get all but the last element of a list, creating a new list, or\n`Nothing` if the list is empty.\n\nRunning time: `O(1)`\n","title":"init","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[273,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[273,43]}},{"children":[],"comments":"Break a list into its first element and remaining elements.\n\nRunning time: `O(1)`\n","title":"uncons","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["head",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["tail",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[286,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[286,66]}},{"children":[],"comments":"Break a list into its last element and all preceding elements.\n\nRunning time: `O(1)`\n","title":"unsnoc","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["last",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[302,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[302,66]}},{"children":[],"comments":"An infix version of `index`.\n","title":"(!!)","info":{"declType":"alias","alias":[["RRBList"],{"Right":{"Left":{"Ident":"index"}}}],"fixity":{"associativity":"infixl","precedence":8}},"sourceSpan":{"start":[319,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[319,21]}},{"children":[],"comments":"This function provides a safe way to read a value at a particular index\nfrom a list.\n\nRunning time: `O(log(n))`, effectively constant.\n","title":"index","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[313,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[313,44]}},{"children":[],"comments":"Find the index of the first element equal to the specified element.\n\nRunning time: `O(i)`, where `i` is the index of the element.\n","title":"elemIndex","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}},"sourceSpan":{"start":[324,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[324,56]}},{"children":[],"comments":"Find the index of the last element equal to the specified element.\n","title":"elemLastIndex","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}},"sourceSpan":{"start":[328,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[328,60]}},{"children":[],"comments":"Find the first index for which a predicate holds.\n","title":"findIndex","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[332,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[332,61]}},{"children":[],"comments":"Find the last index for which a predicate holds.\n","title":"findLastIndex","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[340,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[340,65]}},{"children":[],"comments":"Insert an element at the specified index, creating a new list, or\nreturning `Nothing` if the index is out of bounds.\n\nIf the specified index is one greater than the length of the list,\nthe element is appended\n\nRunning time: `O(log(n))`.\n","title":"insertAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[350,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[350,59]}},{"children":[],"comments":"Delete the element at the specified index, creating a new list, or\nreturning `Nothing` if the index is out of bounds.\n\nRunning time: `O(log(n))`.\n","title":"deleteAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[359,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[359,54]}},{"children":[],"comments":"Change the element at the specified index, creating a new list, or\nreturning `Nothing` if the index is out of bounds.\n\nRunning time: `O(log(n))`.\n","title":"updateAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[368,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[368,59]}},{"children":[],"comments":"Change the elements at the specified indices in index/value pairs.\nOut-of-bounds indices will have no effect.\n\nRunning time: `O(m * log(n))`, where `m` is the number of indices\nand `n` is the length of the list.\n","title":"updateAtIndices","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[378,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[378,81]}},{"children":[],"comments":"Apply a function to the element at the specified index, creating a new\nlist, or returning `Nothing` if the index is out of bounds.\n\nRunning time: `O(log(n))`.\n","title":"modifyAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[385,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[385,66]}},{"children":[],"comments":"Apply a function to the element at the specified indices,\ncreating a new array. Out-of-bounds indices will have no effect.\n\nRunning time: `O(m * log(n))`, where `m` is the number of indices\nand `n` is the length of the list.\n","title":"modifyAtIndices","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[395,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[395,83]}},{"children":[],"comments":"Update or delete the element at the specified index by applying a\nfunction to the current value, returning a new list or `Nothing` if the\nindex is out-of-bounds.\n","title":"alterAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[414,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[414,71]}},{"children":[],"comments":"Reverse a list, creating a new list.\n","title":"reverse","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[426,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[426,53]}},{"children":[],"comments":"Flatten a list of lists, creating a new list.\n","title":"concat","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[429,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[429,59]}},{"children":[],"comments":"Apply a function to each element in a list, and flatten the\nresults into a single, new list.\n\nRunning time: `O(n*log(m)`, where `n` is the length of the given\nlist and `m` is the length of the lists returned by the function.\n","title":"concatMap","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[436,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[436,59]}},{"children":[],"comments":"Filter a list, keeping the elements which satisfy a predicate\nfunction, creating a new list.\n\nRunning time: `O(n)`\n","title":"filter","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[443,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[443,55]}},{"children":[],"comments":"Partition a list using a predicate function, creating a set of\nnew lists. One for the values satisfying the predicate function\nand one for values that don't.\n","title":"partition","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[451,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[451,83]}},{"children":[],"comments":"Filter where the predicate returns a `Boolean` in some `Applicative`.\n","title":"filterA","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[458,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[458,81]}},{"children":[],"comments":"Apply a function to each element in a list, keeping only the results\nwhich contain a value, creating a new list.\n","title":"mapMaybe","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[465,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[465,59]}},{"children":[],"comments":"Filter a list of optional values, keeping only the elements which contain\na value, creating a new list.\n","title":"catMaybes","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[470,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[470,48]}},{"children":[],"comments":"Apply a function to each element in a list, supplying a generated\nzero-based index integer along with the element, creating a list\nwith the new elements.\n","title":"mapWithIndex","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[476,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[476,64]}},{"children":[],"comments":"Sort the elements of a list in increasing order, creating a new list.\n\nRunning time: `O(n*log(n))`.\n","title":"sort","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[487,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[487,44]}},{"children":[],"comments":"Sort the elements of a list in increasing order, where elements are\ncompared using the specified partial ordering, creating a new list.\n\nRunning time: `O(n*log(n))`.\n","title":"sortBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[494,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[494,61]}},{"children":[],"comments":"Sort the elements of a list in increasing order, where elements are\nsorted based on a projection\n\nRunning time: `O(n*log(n))`.\n","title":"sortWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[508,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[508,62]}},{"children":[],"comments":"Extract a sublist by a start and end index.\n\nRunning time: `O(log(n))`.\n","title":"slice","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[520,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[520,50]}},{"children":[],"comments":"Keep only a number of elements from the start of a list, creating a new\nlist.\n","title":"take","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[527,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[527,42]}},{"children":[],"comments":"Keep only a number of elements from the end of a list, creating a new\nlist.\n","title":"takeEnd","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[534,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[534,45]}},{"children":[],"comments":"Calculate the longest initial sublist for which all element satisfy the\nspecified predicate, creating a new list.\n","title":"takeWhile","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[541,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[541,58]}},{"children":[],"comments":"Drop a number of elements from the start of a list, creating a new list.\n","title":"drop","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[547,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[547,42]}},{"children":[],"comments":"Drop a number of elements from the start of a list, creating a new list.\n","title":"dropEnd","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[553,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[553,45]}},{"children":[],"comments":"Remove the longest initial sublist for which all element satisfy the\nspecified predicate, creating a new list.\n","title":"dropWhile","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[560,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[560,58]}},{"children":[],"comments":"Split a list into two parts:\n\n1. the longest initial sublist for which all elements satisfy the\n   specified predicate\n2. the remaining elements\n\nRunning time: `O(n)`.\n","title":"span","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["rest",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[572,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[576,40]}},{"children":[],"comments":"Group equal, consecutive elements of a list into lists.\n","title":"group","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[586,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[586,60]}},{"children":[],"comments":"Sort and then group the elements of a list into lists.\n","title":"group'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[590,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[590,62]}},{"children":[],"comments":"Group equal, consecutive elements of a list into lists, using the\nspecified equivalence relation to detemine equality.\n","title":"groupBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[595,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[595,77]}},{"children":[],"comments":"Remove the duplicates from a list, creating a new list.\n\nRunning time: `O(n)`.\n","title":"nub","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[605,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[605,42]}},{"children":[],"comments":"Remove the duplicates from a list, where element equality is determined\nby the specified equivalence relation, creating a new list.\n","title":"nubBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[610,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[610,59]}},{"children":[],"comments":"Calculate the union of two lists. Note that duplicates in the first list\nare preserved while duplicates in the second list are removed.\n\nRunning time: `O(n^2)`\n","title":"union","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[620,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[620,54]}},{"children":[],"comments":"Calculate the union of two lists, using the specified function to\ndetermine equality of elements. Note that duplicates in the first list\nare preserved while duplicates in the second list are removed.\n\nRunning time: `O(n^2)`.\n","title":"unionBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[628,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[628,71]}},{"children":[],"comments":"Delete the first element of a list which is equal to the specified value,\ncreating a new list.\n\nRunning time: `O(n)`\n","title":"delete","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[635,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[635,50]}},{"children":[],"comments":"Delete the first element of a list which matches the specified value,\nunder the equivalence relation provided in the first argument, creating a\nnew list.\n\nRunning time: `O(n)`.\n","title":"deleteBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[643,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[643,67]}},{"children":[],"comments":null,"title":"(\\\\)","info":{"declType":"alias","alias":[["RRBList"],{"Right":{"Left":{"Ident":"difference"}}}],"fixity":{"associativity":"infix","precedence":5}},"sourceSpan":{"start":[656,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[656,25]}},{"children":[],"comments":"Delete the first occurrence of each element in the second list from the\nfirst list, creating a new list.\n\nRunning time: `O(n*m)`, where n is the length of the first list, and m is\nthe length of the second.\n","title":"difference","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[653,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[653,59]}},{"children":[],"comments":"Calculate the intersection of two lists, creating a new list. Note that\nduplicates in the first list are preserved while duplicates in the second\nlist are removed.\n\nRunning time: `O(n*m)`.\n","title":"intersect","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[663,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[663,58]}},{"children":[],"comments":"Calculate the intersection of two lists, using the specified equivalence\nrelation to compare elements, creating a new list. Note that duplicates\nin the first list are preserved while duplicates in the second list are\nremoved.\n\nRunning time: `O(n*m)`.\n","title":"intersectBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[672,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[672,75]}},{"children":[],"comments":"Apply a function to pairs of elements at the same index in two lists,\ncollecting the results in a new list.\n\nIf one list is longer, elements will be discarded from the longer list.\n\nRunning time: `O(n)`.\n","title":"zipWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[681,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[681,69]}},{"children":[],"comments":"A generalization of `zipWith` which accumulates results in some\n`Applicative` functor.\n\nRunning time: `O(n)`.\n","title":"zipWithA","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"c"}]}}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[690,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[696,16]}},{"children":[],"comments":"Takes two lists and returns an list of corresponding pairs.\nIf one input list is short, excess elements of the longer list are\ndiscarded.\n\nRunning time: `O(n)`.\n","title":"zip","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[704,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[704,56]}},{"children":[],"comments":"Transforms a list of pairs into a list of first components and a\nlist of second components.\n\nRunning time: `O(n)`.\n","title":"unzip","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}}]}]},null]},null]}},"sourceSpan":{"start":[711,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[711,65]}},{"children":[],"comments":"Perform a fold using a monadic step function.\n","title":"foldM","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[715,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[715,72]}},{"children":[],"comments":null,"title":"foldRecM","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[719,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[719,78]}},{"children":[],"comments":"Find the element of a list at the specified index.\n\nUsing `unsafeIndex` with an out-of-range index will not immediately raise a runtime error.\nInstead, the result will be undefined. Most attempts to subsequently use the result will\ncause a runtime error, of course, but this is not guaranteed, and is dependent on the backend;\nsome programs will continue to run as if nothing is wrong. For example, in the JavaScript backend,\nthe expression `unsafePartial (unsafeIndex (singleton true) 1)` has type `Boolean`;\nsince this expression evaluates to `undefined`, attempting to use it in an `if` statement will cause\nthe else branch to be taken.\n\nRunning time: `O(log(n))`, effectively constant.\n","title":"unsafeIndex","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[739,1],"name":"/home/simon/projects/purescript-rrb-list/src/List.purs","end":[739,55]}}]},{"reExports":[],"name":"RRBList.Types","comments":null,"declarations":[{"children":[{"comments":null,"title":"showList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[17,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[17,45]}},{"comments":null,"title":"eqList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[23,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[23,39]}},{"comments":null,"title":"semigroupList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[29,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[29,45]}},{"comments":null,"title":"monoidList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[35,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[35,39]}},{"comments":null,"title":"functorList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[41,37]}},{"comments":null,"title":"applyList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[47,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[47,33]}},{"comments":null,"title":"applicativeList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[53,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[53,45]}},{"comments":null,"title":"bindList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[59,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[59,31]}},{"comments":null,"title":"monadList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[65,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[65,33]}},{"comments":null,"title":"foldableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[68,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[68,39]}},{"comments":null,"title":"unfoldable1List","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable1"],"Unfoldable1"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[77,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[77,45]}},{"comments":null,"title":"unfoldableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unfoldable"],"Unfoldable"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[90,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[90,43]}},{"comments":null,"title":"traversableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeConstructor","contents":[["RRBList","Types"],"List"]}]}},"sourceSpan":{"start":[103,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[103,45]}}],"comments":null,"title":"List","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[14,1],"name":"/home/simon/projects/purescript-rrb-list/src/RRBList/Types.purs","end":[14,41]}}]}],"resolvedDependencies":{"purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-ordered-collections":"1.0.0","purescript-control":"4.0.0","purescript-console":"4.1.0","purescript-either":"4.0.0","purescript-arrays":"5.0.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lazy":"4.0.0","purescript-aff":"5.0.0","purescript-foldable-traversable":"4.0.0","purescript-tailrec":"4.0.0","purescript-gen":"2.1.0","purescript-functors":"3.0.1","purescript-prelude":"4.0.1","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-pipes":"6.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-mmorph":"5.0.0","purescript-ansi":"5.0.0","purescript-orders":"4.0.0","purescript-const":"4.0.0","purescript-spec":"3.0.0","purescript-transformers":"4.1.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-psci-support":"4.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-strings":"4.0.0","purescript-identity":"4.0.0","purescript-lists":"5.0.0","purescript-datetime":"4.0.0","purescript-functions":"4.0.0"},"version":"0.0.1","github":["funkia","purescript-rrb-list"],"versionTag":"v0.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Test.Spec.Console":"purescript-spec","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Test.Spec.Summary":"purescript-spec","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Pipes.Core":"purescript-pipes","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Test.Spec.Assertions.Aff":"purescript-spec","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Test.Spec.Reporter.Console":"purescript-spec","Control.Comonad.Traced.Trans":"purescript-transformers","Test.Spec.Reporter.Dot":"purescript-spec","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Pipes.Prelude":"purescript-pipes","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Test.Spec.Reporter.Base":"purescript-spec","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Ansi.Codes":"purescript-ansi","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Test.Spec.Color":"purescript-spec","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}