{"uploader":"natefaubion","packageMeta":{"homepage":"https://github.com/natefaubion/purescript-run","repository":{"url":"git://github.com/natefaubion/purescript-run.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","test"],"devDependencies":{"purescript-control":"^3.3.1","purescript-monad-loops":"^0.4.0","purescript-minibench":"^1.0.0","purescript-identity":"^3.1.0"},"authors":[{"email":"nathan@n-son.com","name":"Nathan Faubion"}],"dependencies":{"purescript-free":"^4.0.0","purescript-newtype":"^2.0.0","purescript-variant":"^4.0.0","purescript-console":"^3.0.0","purescript-either":"^3.0.0","purescript-profunctor":"^3.0.0","purescript-maybe":"^3.0.0","purescript-symbols":"^3.0.0","purescript-type-equality":"^2.0.0","purescript-aff":"^4.0.0","purescript-tailrec":"^3.0.0","purescript-prelude":"^3.0.0","purescript-unsafe-coerce":"^3.0.0","purescript-eff":"^3.1.0","purescript-tuples":"^4.0.0"},"name":"purescript-run","keywords":["purescript","extensible","effects"],"license":["MIT"],"description":"An extensible-effects implementation for PureScript"},"tagTime":"2017-10-10T04:53:56+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-tailrec","item":["Control","Monad","Rec","Class"]},"declarations":[{"children":[{"comments":null,"title":"Loop","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Done","info":{"arguments":[{"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorStep","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"Step"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[28,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[28,41]}},{"comments":null,"title":"bifunctorStep","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"Step"]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[32,41]}}],"comments":"The result of a computation: either `Loop` containing the updated\naccumulator, or `Done` containing the final result of the computation.\n","title":"Step","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[26,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs","end":[26,32]}}]},{"moduleName":{"package":"purescript-variant","item":["Data","Functor","Variant"]},"declarations":[{"children":[{"comments":null,"title":"functorVariantF","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[38,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[38,48]}},{"comments":null,"title":"showVariantF","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Functor","Variant"],"VariantFShows"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[232,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[232,109]}}],"comments":null,"title":"VariantF","info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["a",null]]},"sourceSpan":{"start":[36,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[36,29]}},{"children":[{"comments":null,"title":"FProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Proxy for a `Functor`.\n","title":"FProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]]},"sourceSpan":{"start":[29,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Variant/Internal.purs","end":[29,39]}},{"children":[],"comments":"Match a `VariantF` with a `Record` containing functions for handling cases.\nThis is similar to `on`, except instead of providing a single label and\nhandler, you can provide a record where each field maps to a particular\n`VariantF` case.\n\n```purescript\nonMatch\n { foo: \\foo -> \"Foo: \" <> maybe \"nothing\" id foo\n , bar: \\bar -> \"Bar: \" <> snd bar\n }\n```\n\nPolymorphic functions in records (such as `show` or `id`) can lead\nto inference issues if not all polymorphic variables are specified\nin usage. When in doubt, label methods with specific types, such as\n`show :: Int -> String`, or give the whole record an appropriate type.\n","title":"onMatch","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rl",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[126,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[134,6]}},{"children":[],"comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[90,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[98,6]}},{"children":[],"comments":"Combinator for exhaustive pattern matching using an `onMatch` case record.\n```purescript\nmatchFn :: VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String), baz :: FProxy (Either String)) Int -> String\nmatchFn = case_ # match\n { foo: \\foo -> \"Foo: \" <> maybe \"nothing\" show foo\n , bar: \\bar -> \"Bar: \" <> show (snd bar)\n , baz: \\baz -> \"Baz: \" <> either id show baz\n }\n```\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rl",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"REmpty"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[168,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[175,6]}},{"children":[],"comments":"Inject into the variant at a given label.\n```purescript\nmaybeAtFoo :: forall r. VariantF (foo :: FProxy Maybe | r) Int\nmaybeAtFoo = inj (SProxy :: SProxy \"foo\") (Just 42)\n```\n","title":"inj","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[65,18]}},{"children":[],"comments":"Combinator for partial matching with a default value in case of failure.\n```purescript\ncaseFn :: forall r. VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String) | r) Int -> String\ncaseFn = default \"No match\"\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> maybe \"nothing\" show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> show (snd bar))\n```\n","title":"default","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[185,40]}},{"children":[],"comments":"Combinator for exhaustive pattern matching.\n```purescript\ncaseFn :: VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String), baz :: FProxy (Either String)) Int -> String\ncaseFn = case_\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> maybe \"nothing\" show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> show (snd bar))\n # on (SProxy :: SProxy \"baz\") (\\baz -> \"Baz: \" <> either id show baz)\n```\n","title":"case_","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}},"sourceSpan":{"start":[155,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-variant/src/Data/Functor/Variant.purs","end":[155,33]}}]},{"moduleName":{"package":"purescript-symbols","item":["Data","Symbol"]},"declarations":[{"children":[{"comments":null,"title":"SProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A value-level proxy for a type-level symbol.\n","title":"SProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["sym",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}]]},"sourceSpan":{"start":[12,1],"name":"/Users/nathan/Sites/purescript/purescript-run/bower_components/purescript-symbols/src/Data/Symbol.purs","end":[12,37]}}]}],"name":"Run","comments":null,"declarations":[{"children":[{"comments":null,"title":"Run","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeRun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeWildcard","contents":{"start":[84,48],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[84,49]}}]}},"sourceSpan":{"start":[84,8],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[84,49]}},{"comments":null,"title":"functorRun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[85,16],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[85,54]}},{"comments":null,"title":"applyRun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[86,16],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[86,50]}},{"comments":null,"title":"applicativeRun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[87,16],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[87,62]}},{"comments":null,"title":"bindRun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[88,16],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[88,48]}},{"comments":null,"title":"monadRun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[89,16],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[89,50]}},{"comments":"This instance is provided for compatibility, but is otherwise\nunnecessary. You can use monadic recursion with `Run`, deferring the\n`MonadRec` constraint till it is interpretted.\n","title":"monadRecRun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[94,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[94,40]}},{"comments":null,"title":"runMonadEff","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r1"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"RCons","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"EFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r2"}]}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Class"],"MonadEff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]}}]}},"sourceSpan":{"start":[328,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[328,102]}},{"comments":"This will insert an `EFF` effect because `MonadAff` entails `MonadEff`.\nIf you don't want this, use `Run.liftAff` rather than `Control.Monad.Aff.Class.liftAff`.\n","title":"runMonadAff","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r1"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"RCons","contents":["aff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"AFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"RCons","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"EFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r2"}]}]}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","Class"],"MonadAff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]}}]}},"sourceSpan":{"start":[333,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[333,117]}},{"comments":null,"title":"runAlt","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r1"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r2"}]}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]}}]}},"sourceSpan":{"start":[339,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[339,90]}},{"comments":null,"title":"runPlus","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r1"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r2"}]}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]}}]}},"sourceSpan":{"start":[342,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[342,92]}},{"comments":null,"title":"runAlternative","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r1"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r2"}]}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]}}]}},"sourceSpan":{"start":[345,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[345,105]}}],"comments":"An extensible effect Monad, indexed by a set of effect functors. Effects\nare eliminated by interpretation into a pure value or into some base\neffect Monad.\n\nAn example using `State` and `Except`:\n```purescript\ntype MyEffects =\n  ( state ∷ STATE Int\n  , except ∷ EXCEPT String\n  , eff ∷ EFF (console ∷ CONSOLE)\n  )\n\nyesProgram ∷ Run MyEffects Unit\nyesProgram = do\n  whenM (gets (_ < 0)) do\n    throw \"Number is less than 0\"\n  whileM_ (gets (_ > 0)) do\n    liftEff $ log \"Yes\"\n    modify (_ - 1)\n\nmain =\n  yesProgram\n    # catch (liftEff <<< log)\n    # runState 10\n    # runBaseEff\n    # void\n````\n","title":"Run","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null],["a",null]]},"sourceSpan":{"start":[82,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[82,44]}},{"children":[],"comments":"Lifts an effect functor into the `Run` Monad according to the provided\n`SProxy` slot.\n","title":"lift","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[105,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[112,13]}},{"children":[],"comments":"Reflects the next instruction or the final value if there are no more\ninstructions.\n","title":"peel","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[117,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[120,36]}},{"children":[],"comments":"Eliminator for the `Run` data type.\n","title":"resume","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[124,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[129,6]}},{"children":[],"comments":"Enqueues an instruction in the `Run` Monad.\n","title":"send","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[133,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[136,12]}},{"children":[],"comments":"Casts some set of effects to a wider set of effects via a left-biased\nunion. For example, you could take a closed effect and unify it with\na superset of effects because we know the additional effects never\noccur.\n\n```purescript\ntype LessRows = (foo :: FOO)\ntype MoreRows = (foo :: FOO, bar :: BAR, baz :: BAZ)\n\nfoo :: Run LessRows Unit\nfoo = foo\n\nfoo' :: Run MoreRows Unit\nfoo' = expand foo\n```\n","title":"expand","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["rx",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"rx"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[154,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[158,13]}},{"children":[],"comments":"Extracts the value from a purely interpreted program.\n","title":"extract","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[162,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[162,28]}},{"children":[],"comments":"Extracts the value from a program via some Monad `m`. This assumes\nstack safety under Monadic recursion.\n","title":"interpret","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[167,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[172,8]}},{"children":[],"comments":"Identical to `interpret` but with a less restrictive type signature,\nletting you intercept the rest of the program.\n","title":"run","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[177,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[182,8]}},{"children":[],"comments":"Extracts the value from a program via some MonadRec `m`, preserving\nstack safety.\n","title":"interpretRec","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[190,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[195,8]}},{"children":[],"comments":"Identical to `interpretRec` but with a less restrictive type\nsignature, letting you intercept the rest of the program.\n","title":"runRec","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[200,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[205,8]}},{"children":[],"comments":"Extracts the value from a program via some `m` using continuation passing.\n","title":"runCont","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[213,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[218,8]}},{"children":[],"comments":"Extracts the value from a program via some Monad `m` with an internal\naccumulator. This assumes stack safety under Monadic recursion.\n","title":"runAccum","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[226,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[232,8]}},{"children":[],"comments":"Extracts the value from a program via some MonadRec `m` with an internal\naccumulator.\n","title":"runAccumRec","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[240,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[246,8]}},{"children":[],"comments":"Extracts the value from a program via some `m` using continuation passing\nwith an internal accumulator.\n","title":"runAccumCont","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[254,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[260,8]}},{"children":[],"comments":"Eliminates effects purely. Uses `Step` from `Control.Monad.Rec.Class` to\npreserve stack safety under tail recursion.\n","title":"runPure","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"Step"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[268,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[272,13]}},{"children":[],"comments":"Eliminates effects purely with an internal accumulator. Uses `Step` from\n`Control.Monad.Rec.Class` to preserve stack safety under tail recursion.\n","title":"runAccumPure","info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"Step"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[285,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[291,13]}},{"children":[],"comments":"Type synonym for using `Eff` as an effect.\n","title":"EFF","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[303,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[303,32]}},{"children":[],"comments":null,"title":"liftEff","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["eff",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"EFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]}},"sourceSpan":{"start":[306,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[306,54]}},{"children":[],"comments":"Runs a base `Eff` effect.\n","title":"runBaseEff","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"EFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"REmpty"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]}]},null]}},"sourceSpan":{"start":[310,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[310,51]}},{"children":[],"comments":"Type synonym for using `Aff` as an effect.\n","title":"AFF","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}}]}},"sourceSpan":{"start":[314,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[314,32]}},{"children":[],"comments":"Lift an `Aff` effect into the `Run` Monad via the `aff` label.\n","title":"liftAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["eff",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["aff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"AFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]}},"sourceSpan":{"start":[317,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[317,54]}},{"children":[],"comments":"Runs a base `Aff` effect.\n","title":"runBaseAff","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["aff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"AFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"REmpty"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]},null]}},"sourceSpan":{"start":[321,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[321,51]}},{"children":[],"comments":"Runs base `Aff` and `Eff` together as one effect.\n","title":"runBaseAff'","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["aff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"AFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"RCons","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"EFF"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"REmpty"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}]},null]}},"sourceSpan":{"start":[325,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run.purs","end":[325,67]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Run","Internal"]},"declarations":[{"children":[{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Alt","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorChoose","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Run","Internal"],"Choose"]}]}},"sourceSpan":{"start":[20,8],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[20,47]}}],"comments":null,"title":"Choose","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[16,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[18,22]}},{"children":[],"comments":null,"title":"CHOOSE","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeConstructor","contents":[["Run","Internal"],"Choose"]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[22,28]}},{"children":[],"comments":null,"title":"_choose","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeLevelString","contents":"choose"}]}},"sourceSpan":{"start":[24,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[25,1]}}]}],"name":"Run.Choose","comments":null,"declarations":[{"children":[],"comments":null,"title":"liftChoose","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Internal"],"Choose"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[17,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Choose.purs","end":[17,59]}},{"children":[],"comments":null,"title":"cempty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Choose.purs","end":[20,44]}},{"children":[],"comments":null,"title":"calt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Choose.purs","end":[23,102]}},{"children":[],"comments":null,"title":"runChoose","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["choose",{"tag":"TypeConstructor","contents":[["Run","Internal"],"CHOOSE"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Choose.purs","end":[26,79]}}]},{"reExports":[],"name":"Run.Except","comments":null,"declarations":[{"children":[{"comments":null,"title":"Except","info":{"arguments":[{"tag":"TypeVar","contents":"e"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorExcept","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"Except"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[26,8],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[26,51]}}],"comments":null,"title":"Except","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["a",null]]},"sourceSpan":{"start":[24,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[24,30]}},{"children":[],"comments":null,"title":"EXCEPT","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"Except"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[28,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[28,34]}},{"children":[],"comments":null,"title":"FAIL","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"EXCEPT"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[30,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[30,24]}},{"children":[],"comments":null,"title":"_except","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeLevelString","contents":"except"}]}},"sourceSpan":{"start":[32,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[33,1]}},{"children":[],"comments":null,"title":"liftExcept","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"Except"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"EXCEPT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[35,65]}},{"children":[],"comments":null,"title":"throw","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"EXCEPT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[38,51]}},{"children":[],"comments":null,"title":"fail","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeConstructor","contents":[["Run","Except"],"FAIL"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[41,40]}},{"children":[],"comments":null,"title":"rethrow","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"EXCEPT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[44,62]}},{"children":[],"comments":null,"title":"note","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"EXCEPT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[47,60]}},{"children":[],"comments":null,"title":"fromJust","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeConstructor","contents":[["Run","Except"],"FAIL"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[50,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[50,54]}},{"children":[],"comments":null,"title":"catch","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"EXCEPT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[53,73]}},{"children":[],"comments":null,"title":"runExcept","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Except"],"EXCEPT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[66,72]}},{"children":[],"comments":null,"title":"runFail","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["except",{"tag":"TypeConstructor","contents":[["Run","Except"],"FAIL"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[79,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Except.purs","end":[79,61]}}]},{"reExports":[],"name":"Run.Internal","comments":null,"declarations":[{"children":[{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Alt","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorChoose","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Run","Internal"],"Choose"]}]}},"sourceSpan":{"start":[20,8],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[20,47]}}],"comments":null,"title":"Choose","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[16,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[18,22]}},{"children":[],"comments":null,"title":"CHOOSE","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeConstructor","contents":[["Run","Internal"],"Choose"]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[22,28]}},{"children":[],"comments":null,"title":"_choose","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeLevelString","contents":"choose"}]}},"sourceSpan":{"start":[24,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[25,1]}},{"children":[],"comments":null,"title":"toRows","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r1"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r2"}]}}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[31,11]}},{"children":[],"comments":null,"title":"fromRows","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r1"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"r2"}]}}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Internal.purs","end":[38,11]}}]},{"reExports":[],"name":"Run.Reader","comments":null,"declarations":[{"children":[{"comments":null,"title":"Reader","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorReader","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"Reader"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[18,16],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[18,59]}}],"comments":null,"title":"Reader","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["a",null]]},"sourceSpan":{"start":[16,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[16,36]}},{"children":[],"comments":null,"title":"READER","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"Reader"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[20,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[20,34]}},{"children":[],"comments":null,"title":"_reader","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeLevelString","contents":"reader"}]}},"sourceSpan":{"start":[22,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[23,1]}},{"children":[],"comments":null,"title":"liftReader","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"Reader"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["reader",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"READER"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[25,65]}},{"children":[],"comments":null,"title":"ask","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["reader",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"READER"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"e"}]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[28,43]}},{"children":[],"comments":null,"title":"local","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["reader",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"READER"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["reader",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"READER"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[31,89]}},{"children":[],"comments":null,"title":"runReader","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["reader",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Reader"],"READER"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[46,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Reader.purs","end":[46,65]}}]},{"reExports":[],"name":"Run.State","comments":null,"declarations":[{"children":[{"comments":null,"title":"State","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorState","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"State"]},{"tag":"TypeVar","contents":"s"}]}}]}},"sourceSpan":{"start":[23,8],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[23,49]}}],"comments":null,"title":"State","info":{"declType":"data","dataDeclType":"data","typeArguments":[["s",null],["a",null]]},"sourceSpan":{"start":[21,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[21,39]}},{"children":[],"comments":null,"title":"STATE","info":{"arguments":[["s",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"State"]},{"tag":"TypeVar","contents":"s"}]}}]}},"sourceSpan":{"start":[25,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[25,32]}},{"children":[],"comments":null,"title":"_state","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeLevelString","contents":"state"}]}},"sourceSpan":{"start":[27,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[28,1]}},{"children":[],"comments":null,"title":"liftState","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[30,61]}},{"children":[],"comments":null,"title":"modify","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[33,57]}},{"children":[],"comments":null,"title":"put","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[36,48]}},{"children":[],"comments":null,"title":"get","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"s"}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[39,41]}},{"children":[],"comments":null,"title":"gets","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"t"}]}]},null]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[42,54]}},{"children":[],"comments":null,"title":"runState","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[45,72]}},{"children":[],"comments":null,"title":"evalState","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[59,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[59,63]}},{"children":[],"comments":null,"title":"execState","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","State"],"STATE"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/State.purs","end":[62,63]}}]},{"reExports":[],"name":"Run.Writer","comments":null,"declarations":[{"children":[{"comments":null,"title":"Writer","info":{"arguments":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorWriter","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[21,8],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[21,51]}}],"comments":null,"title":"Writer","info":{"declType":"data","dataDeclType":"data","typeArguments":[["w",null],["a",null]]},"sourceSpan":{"start":[19,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[19,29]}},{"children":[],"comments":null,"title":"WRITER","info":{"arguments":[["w",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w"}]}}]}},"sourceSpan":{"start":[23,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[23,34]}},{"children":[],"comments":null,"title":"_writer","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeLevelString","contents":"writer"}]}},"sourceSpan":{"start":[25,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[26,1]}},{"children":[],"comments":null,"title":"liftWriter","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["writer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"WRITER"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[28,65]}},{"children":[],"comments":null,"title":"tell","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["writer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"WRITER"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[31,51]}},{"children":[],"comments":null,"title":"censor","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"w"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["writer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"WRITER"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["writer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"WRITER"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[34,90]}},{"children":[],"comments":null,"title":"foldWriter","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["writer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"WRITER"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[48,92]}},{"children":[],"comments":null,"title":"runWriter","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"RCons","contents":["writer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run","Writer"],"WRITER"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Run"],"Run"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[61,1],"name":"/Users/nathan/Sites/purescript/purescript-run/src/Run/Writer.purs","end":[61,82]}}]}],"resolvedDependencies":{"purescript-free":"4.1.0","purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-maps":"3.5.2","purescript-control":"3.3.1","purescript-variant":"4.0.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-profunctor":"3.2.0","purescript-arrays":"4.2.0","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-monad-loops":"0.4.0","purescript-lazy":"3.0.0","purescript-monoid":"3.2.0","purescript-minibench":"1.0.0","purescript-aff":"4.0.0","purescript-foldable-traversable":"3.6.1","purescript-tailrec":"3.3.0","purescript-avar":"2.0.1","purescript-gen":"1.1.0","purescript-typelevel-prelude":"2.4.0","purescript-functors":"2.2.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.1.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-const":"3.0.0","purescript-record":"0.2.3","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-catenable-lists":"4.0.0","purescript-parallel":"3.3.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.3.1","purescript-identity":"3.1.0","purescript-lists":"4.10.0","purescript-datetime":"3.4.0","purescript-functions":"3.0.0"},"version":"1.0.0","github":["natefaubion","purescript-run"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Ref":"purescript-refs","Data.Char.Gen":"purescript-strings","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.Record.Unsafe":"purescript-record","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.Time.Component.Gen":"purescript-datetime","Control.Monad.Rec.Loops":"purescript-monad-loops","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Record":"purescript-record","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Profunctor.Clown":"purescript-profunctor","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Record.Builder":"purescript-record","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Performance.Minibench":"purescript-minibench","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Aff.Compat":"purescript-aff","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Variant":"purescript-variant","Data.Functor.Coproduct":"purescript-functors","Data.Variant.Internal":"purescript-variant","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Control.Monad.Eff.Class":"purescript-eff","Data.Time":"purescript-datetime","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Data.Variant":"purescript-variant","Control.Monad.Loops":"purescript-monad-loops","Control.Monad.Eff.AVar":"purescript-avar","Control.Monad.Writer":"purescript-transformers","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}