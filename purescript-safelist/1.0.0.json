{"uploader":"garyb","packageMeta":{"repository":{"url":"git://github.com/garyb/purescript-safelist.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"dependencies":{"purescript-unsafe-coerce":"^3.0.0","purescript-lists":"^4.9.0"},"name":"purescript-safelist","license":["MIT"]},"tagTime":"2017-07-25T12:48:15+0000","modules":[{"reExports":[],"name":"Data.List.Safe","comments":null,"declarations":[{"children":[],"comments":null,"title":"Emptiness","info":{"declType":"kind"},"sourceSpan":{"start":[26,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[26,30]}},{"children":[],"comments":null,"title":"Empty","info":{"kind":{"tag":"NamedKind","contents":[["Data","List","Safe"],"Emptiness"]},"declType":"externData"},"sourceSpan":{"start":[27,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[27,38]}},{"children":[],"comments":null,"title":"NonEmpty","info":{"kind":{"tag":"NamedKind","contents":[["Data","List","Safe"],"Emptiness"]},"declType":"externData"},"sourceSpan":{"start":[28,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[28,41]}},{"children":[{"comments":null,"title":"SafeCons","info":{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeListX"]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","List","Safe"],"~"]},{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"NonEmpty"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SafeNil","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","List","Safe"],"~"]},{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"Empty"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A list type that tracks the emptiness of the list.\n","title":"SafeList","info":{"declType":"data","dataDeclType":"data","typeArguments":[["t",null],["a",null]]},"sourceSpan":{"start":[31,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[33,24]}},{"children":[],"comments":null,"title":"cons","info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"NonEmpty"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[35,53]}},{"children":[],"comments":null,"title":"(:)","info":{"declType":"alias","alias":[["Data","List","Safe"],{"Right":{"Left":{"Ident":"cons"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[38,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[38,19]}},{"children":[],"comments":null,"title":"nil","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"Empty"]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[40,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[40,28]}},{"children":[],"comments":"Converts a known-to-be-non-empty `SafeList` into a `NonEmptyList`.\n","title":"toNEL","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"NonEmpty"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[44,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[44,54]}},{"children":[],"comments":"Converts a `SafeList` into a normal `List`.\n","title":"toList","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[51,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[51,40]}},{"children":[],"comments":"Converts a `SafeList` into some unfoldable structure.\n","title":"toUnfoldable","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[58,58]}},{"children":[{"comments":null,"title":"Leibniz","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},null]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Leibniz equality, specialised to `Emptiness`\n","title":"Leibniz","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",{"tag":"NamedKind","contents":[["Data","List","Safe"],"Emptiness"]}],["b",{"tag":"NamedKind","contents":[["Data","List","Safe"],"Emptiness"]}]]},"sourceSpan":{"start":[67,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[67,81]}},{"children":[],"comments":"A version of `SafeList` with the emptiness variable hidden.\n","title":"SafeListX","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[75,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[75,44]}},{"children":[],"comments":null,"title":"mkSafeListX","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeListX"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[77,48]}},{"children":[],"comments":null,"title":"unSafeListX","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeList"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"r"}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Safe"],"SafeListX"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"D:\\Home\\GitHub\\purescript-safelist\\src\\Data\\List\\Safe.purs","end":[80,63]}}]}],"resolvedDependencies":{"purescript-newtype":"2.0.0","purescript-control":"3.3.0","purescript-either":"3.1.0","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.1.0","purescript-foldable-traversable":"3.4.0","purescript-tailrec":"3.3.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-eff":"3.1.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-identity":"3.1.0","purescript-lists":"4.9.0"},"version":"1.0.0","github":["garyb","purescript-safelist"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Data.Monoid.Multiplicative":"purescript-monoid","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Data.List.Partial":"purescript-lists","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}