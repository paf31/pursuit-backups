{"uploader":"jamieyung","packageMeta":{"repository":{"url":"git://github.com/jamieyung/purescript-strictlypositiveint.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","test","tests"],"dependencies":{"purescript-prelude":"4.1.0"},"name":"purescript-strictlypositiveint","license":["MIT"],"description":"Strictly positive integers (1, 2, 3, ...)"},"tagTime":"2019-08-21T13:23:26+0000","modules":[{"reExports":[],"name":"Data.StrictlyPositiveInt","comments":"A data type for representing positive integers not including zero.\n","declarations":[{"children":[{"comments":null,"title":"eqStrictlyPositiveInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]}},"sourceSpan":{"start":[39,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[40,42]}},{"comments":null,"title":"ordStrictlyPositiveInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]}},"sourceSpan":{"start":[42,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[43,54]}},{"comments":null,"title":"showStrictlyPositiveInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]}},"sourceSpan":{"start":[45,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[46,31]}}],"comments":null,"title":"StrictlyPositiveInt","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[14,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[14,43]}},{"children":[],"comments":"If i is less than one, returns one.\n","title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]}},"sourceSpan":{"start":[17,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[17,38]}},{"children":[],"comments":null,"title":"toInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[20,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[20,36]}},{"children":[],"comments":"Subtract a StrictlyPositiveInt from another, with the result lower-bounded\nby one.\n","title":"minus","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]}]}},"sourceSpan":{"start":[25,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[25,75]}},{"children":[],"comments":"Add a StrictlyPositiveInt to another, with the result lower-bounded by one.\n","title":"plus","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}]}]}},"sourceSpan":{"start":[29,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[29,74]}},{"children":[],"comments":null,"title":"one","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","StrictlyPositiveInt"],"StrictlyPositiveInt"]}},"sourceSpan":{"start":[32,1],"name":"/Users/jamiey/workspace/purescript-strictlypositiveint/src/Data/StrictlyPositiveInt.purs","end":[32,27]}}]}],"resolvedDependencies":{"purescript-prelude":"4.1.0"},"version":"1.0.0","github":["jamieyung","purescript-strictlypositiveint"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Type.Data.RowList":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Prelude":"purescript-prelude","Data.Eq":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Void":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.12.2"}