{"uploader":"zudov","packageMeta":{"moduleType":["node"],"repository":{"url":"git://github.com/zudov/purescript-strongcheck-generics.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-console":"^3.0.0"},"authors":[{"name":"Konstantin Zudov <co@zudov.me"}],"dependencies":{"purescript-strongcheck":"^3.1.0","purescript-generics":"^4.0.0"},"name":"purescript-strongcheck-generics","license":["BSD-3-Clause"]},"tagTime":"2017-04-29T21:28:19+0000","modules":[{"reExports":[],"name":"Test.StrongCheck.Generic","comments":"Generic deriving for `Arbitrary` and `CoArbitrary` instances.\nGeneration of arbitrary `GenericSpine`s with corresponding `GenericSignature`s.\n","declarations":[{"children":[],"comments":"Generate arbitrary values for any `Generic` data structure\n","title":"gArbitrary","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[29,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/Generic.purs","end":[29,38]}},{"children":[],"comments":"Perturb a generator using a `Generic` data structure\n","title":"gCoarbitrary","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/Generic.purs","end":[33,56]}},{"children":[],"comments":"Generates `GenericSignature`s. Size parameter affects how nested the structure is.\n","title":"genGenericSignature","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]}},"sourceSpan":{"start":[51,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/Generic.purs","end":[51,44]}},{"children":[],"comments":"Generates `GenericSpine`s that conform to provided `GenericSignature`.\n","title":"genGenericSpine","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]}]}},"sourceSpan":{"start":[78,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/Generic.purs","end":[78,56]}}]},{"reExports":[],"name":"Test.StrongCheck.GenericValue","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqGenericValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","GenericValue"],"GenericValue"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/GenericValue.purs","end":[33,50]}},{"comments":null,"title":"showGenericValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","GenericValue"],"GenericValue"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/GenericValue.purs","end":[39,34]}},{"comments":null,"title":"arbitraryGenericValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","GenericValue"],"GenericValue"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/GenericValue.purs","end":[45,33]}}],"comments":"Contains a representation of a value in generic form.\nConsists of `GenericSpine` and corresponding `GenericSignature`.\n\nUseful for its `Arbitary` instance.\n","title":"GenericValue","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[21,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/GenericValue.purs","end":[24,7]}},{"children":[],"comments":null,"title":"runGenericValue","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","GenericValue"],"GenericValue"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["signature",{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]},{"tag":"RCons","contents":["spine",{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/GenericValue.purs","end":[30,7]}},{"children":[],"comments":"Constructs generic value. Would return `mzero` if given\n`GenericSpine` doesn't conform to given `GenericSignature`.\n","title":"genericValue","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","MonadZero"],"MonadZero"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSignature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Generic"],"GenericSpine"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","GenericValue"],"GenericValue"]}]}]}]}]},null]}},"sourceSpan":{"start":[49,1],"name":"/home/zudov/prog/purescript/purescript-strongcheck-generics/src/Test/StrongCheck/GenericValue.purs","end":[53,20]}}]}],"resolvedDependencies":{"purescript-free":"4.0.0","purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-profunctor":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-strongcheck":"3.1.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.1.0","purescript-gen":"1.1.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-strings":"3.0.0","purescript-identity":"3.1.0","purescript-machines":"4.0.0","purescript-lists":"4.1.0","purescript-datetime":"3.0.0","purescript-functions":"3.0.0"},"version":"1.0.0","github":["zudov","purescript-strongcheck-generics"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Test.StrongCheck.Gen":"purescript-strongcheck","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Test.StrongCheck.Data.AlphaNumString":"purescript-strongcheck","Test.StrongCheck.Data.ApproxNumber":"purescript-strongcheck","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Type.Proxy":"purescript-proxy","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Test.StrongCheck":"purescript-strongcheck","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Test.StrongCheck.Perturb":"purescript-strongcheck","Control.Monad.Trampoline":"purescript-free","Test.StrongCheck.Data.ArbDateTime":"purescript-strongcheck","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Test.StrongCheck.Landscape":"purescript-strongcheck","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Test.StrongCheck.Data.NonZero":"purescript-strongcheck","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Test.StrongCheck.Data.Signum":"purescript-strongcheck","Test.StrongCheck.Data.Positive":"purescript-strongcheck","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Test.StrongCheck.Data.ArbBoundedEnum":"purescript-strongcheck","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Test.StrongCheck.Arbitrary":"purescript-strongcheck","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Test.StrongCheck.LCG":"purescript-strongcheck","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Test.StrongCheck.Data.Negative":"purescript-strongcheck","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Machine.Mealy":"purescript-machines","Control.Monad.Writer":"purescript-transformers","Data.Profunctor.Choice":"purescript-profunctor","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}