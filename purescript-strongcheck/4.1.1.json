{"uploader":"thomashoneyman","packageMeta":{"repository":{"url":"git://github.com/purescript-contrib/purescript-strongcheck.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","bower.json","package.json"],"authors":[{"homepage":"http://degoes.net","email":"john@degoes.net","name":"John A. De Goes"},{"email":"freeman.phil@gmail.com","name":"Phil Freeman"}],"dependencies":{"purescript-free":"^5.0.0","purescript-exceptions":"^4.0.0","purescript-newtype":"^3.0.0","purescript-effect":"^2.0.0","purescript-control":"^4.0.0","purescript-console":"^4.0.0","purescript-either":"^4.0.0","purescript-profunctor":"^4.0.0","purescript-arrays":"^5.0.0","purescript-invariant":"^4.0.0","purescript-lazy":"^4.0.0","purescript-foldable-traversable":"^4.0.0","purescript-tailrec":"^4.0.0","purescript-gen":"^2.0.0","purescript-prelude":"^4.0.0","purescript-integers":"^4.0.0","purescript-transformers":"^4.0.0","purescript-math":"^2.1.1","purescript-enums":"^4.0.0","purescript-random":"^4.0.0","purescript-tuples":"^5.0.0","purescript-partial":"^2.0.0","purescript-strings":"^4.0.0","purescript-identity":"^4.0.0","purescript-machines":"^5.0.0","purescript-lists":"^5.0.0","purescript-datetime":"^4.0.0"},"name":"purescript-strongcheck","license":["MIT"]},"tagTime":"2018-06-23T00:43:33+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Test","StrongCheck","Arbitrary"]},"declarations":[{"children":[{"comments":null,"title":"arbitrary","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[31,3],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[31,21]}},{"comments":null,"title":"arbBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[44,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[44,41]}},{"comments":null,"title":"arbNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[51,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[51,39]}},{"comments":null,"title":"arbInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[57,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[57,33]}},{"comments":null,"title":"arbString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[65,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[65,39]}},{"comments":null,"title":"arbChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[71,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[71,35]}},{"comments":null,"title":"arbUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[77,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[77,35]}},{"comments":null,"title":"arbOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}},"sourceSpan":{"start":[83,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[83,43]}},{"comments":null,"title":"arbArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[91,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[91,56]}},{"comments":null,"title":"arbFunction","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[107,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[107,75]}},{"comments":null,"title":"arbTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[115,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[115,73]}},{"comments":null,"title":"arbMaybe","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[121,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[121,56]}},{"comments":null,"title":"arbEither","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[128,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[128,75]}},{"comments":null,"title":"arbList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[135,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[135,54]}},{"comments":null,"title":"arbitraryIdentity","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[141,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[141,68]}},{"comments":null,"title":"arbitraryLazy","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[147,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[147,60]}}],"comments":"The `Arbitrary` class represents those types whose values can be\n_randomly-generated_.\n\n`arbitrary` uses the `Gen` monad to express a random generator for\nthe type `t`. Combinators in the `Test.StrongCheck.Gen`\nmodule can be used to construct random generators.\n","title":"Arbitrary","info":{"fundeps":[],"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[30,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[31,21]}},{"children":[{"comments":null,"title":"coarbitrary","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]}]},null]}},"sourceSpan":{"start":[42,3],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[42,47]}},{"comments":null,"title":"coarbBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[47,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[47,45]}},{"comments":null,"title":"coarbNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[54,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[54,43]}},{"comments":null,"title":"coarbInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[62,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[62,37]}},{"comments":null,"title":"coarbString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[68,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[68,43]}},{"comments":null,"title":"coarbChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[74,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[74,39]}},{"comments":null,"title":"coarbUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[80,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[80,39]}},{"comments":null,"title":"coarbOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}},"sourceSpan":{"start":[86,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[86,47]}},{"comments":null,"title":"coarbArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[99,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[99,62]}},{"comments":null,"title":"coarbFunction","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[110,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[110,79]}},{"comments":null,"title":"coarbTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[118,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[118,81]}},{"comments":null,"title":"coarbMaybe","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[124,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[124,62]}},{"comments":null,"title":"coarbEither","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[131,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[131,83]}},{"comments":null,"title":"coarbList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[138,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[138,60]}},{"comments":null,"title":"coarbIdentity","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[144,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[144,68]}},{"comments":null,"title":"coarbLazy","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[150,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[150,60]}}],"comments":"The `Coarbitrary` class represents types which appear on the left of\nan `Arbitrary` function arrow.\n\nTo construct an `Arbitrary` instance for the type `a -> b`, we need to\nuse the input of type `a` to _perturb_ a random generator for `b`. This\nis the role of the `coarbitrary` function.\n\n`Coarbitrary` instances can be written using the `perturbGen` function.\n","title":"Coarbitrary","info":{"fundeps":[],"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[41,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[42,47]}}]},{"moduleName":{"package":null,"item":["Test","StrongCheck","LCG"]},"declarations":[{"children":[{"comments":null,"title":"showSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[82,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[82,31]}},{"comments":null,"title":"eqSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[85,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[85,27]}}],"comments":"A seed for the linear congruential generator. We omit a `Semiring`\ninstance because there is no `zero` value, as 0 is not an acceptable\nseed for the generator.\n","title":"Seed","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[66,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[66,24]}},{"children":[],"comments":null,"title":"mkSeed","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[68,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[68,22]}}]}],"name":"Test.StrongCheck","comments":null,"declarations":[{"children":[{"comments":null,"title":"Success","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Failed","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}},"sourceSpan":{"start":[44,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[44,38]}},{"comments":null,"title":"ordResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}},"sourceSpan":{"start":[45,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[45,40]}},{"comments":null,"title":"showResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}},"sourceSpan":{"start":[47,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[47,35]}},{"comments":null,"title":"semigroupResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}},"sourceSpan":{"start":[51,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[51,45]}},{"comments":null,"title":"monoidResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}},"sourceSpan":{"start":[57,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[57,39]}},{"comments":null,"title":"testableResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Testable"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}},"sourceSpan":{"start":[68,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[68,43]}}],"comments":"The result of a property test.\n","title":"Result","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[42,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[42,38]}},{"children":[{"comments":null,"title":"test","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}]}},"sourceSpan":{"start":[62,3],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[62,29]}},{"comments":null,"title":"testableBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Testable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[64,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[64,45]}},{"comments":null,"title":"testableResult","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Testable"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}},"sourceSpan":{"start":[68,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[68,43]}},{"comments":null,"title":"testableFunction","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Testable"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"prop"}]}]}},"sourceSpan":{"start":[71,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[71,82]}},{"comments":null,"title":"testableGen","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Testable"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"TypeVar","contents":"prop"}]}]}},"sourceSpan":{"start":[74,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[74,85]}}],"comments":"A class for types that can be treated as a property test result.\n","title":"Testable","info":{"fundeps":[],"arguments":[["prop",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[61,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[62,29]}},{"children":[],"comments":"Checks the proposition for 100 random values.\n","title":"quickCheck","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[79,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[79,64]}},{"children":[],"comments":"Checks the proposition for the specified number of random values.\n","title":"quickCheck'","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[83,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[83,72]}},{"children":[],"comments":"Checks the proposition for the specified number of random values, starting with a specific seed.\n","title":"quickCheckWithSeed","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[89,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[89,87]}},{"children":[],"comments":"Checks the proposition for the specified number of random values in a pure\nsetting, returning an array of results.\n","title":"quickCheckPure","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}}]}]}]}]}]},null]}},"sourceSpan":{"start":[94,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[94,97]}},{"children":[],"comments":"Exhaustively checks the proposition for all possible values. Assumes the\ngenerator is a finite generator.\n","title":"smallCheck","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[99,64]}},{"children":[],"comments":"Exhaustively checks the proposition for all possible values in a pure\nsetting, returning an array of results. Assumes the generator is a finite\ngenerator.\n","title":"smallCheckPure","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}}]}]}]}]},null]}},"sourceSpan":{"start":[107,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[107,90]}},{"children":[],"comments":"Checks that the proposition has a certain probability of being true for\narbitrary values.\n","title":"statCheck","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[112,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[112,73]}},{"children":[],"comments":"Checks that the proposition has a certain probability of being true for\narbitrary values in a pure setting, returning a result.\n","title":"statCheckPure","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}]}]}]},null]}},"sourceSpan":{"start":[119,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[119,80]}},{"children":[],"comments":"Checks that the specified proposition holds. Useful for unit tests.\n","title":"assert","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[181,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[181,60]}},{"children":[],"comments":"Asserts that two values are equal, resulting in a `Failure` if they are\nnot, with a message showing the values involved.\n","title":"assertEq","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}]}]}]},null]}},"sourceSpan":{"start":[194,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[194,57]}},{"children":[],"comments":null,"title":"(===)","info":{"declType":"alias","alias":[["Test","StrongCheck"],{"Right":{"Left":{"Ident":"assertEq"}}}],"fixity":{"associativity":"infix","precedence":2}},"sourceSpan":{"start":[199,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[199,24]}},{"children":[],"comments":"Asserts that two values are not equal, resulting in a `Failure` if they\nare, with a message showing the values involved.\n","title":"assertNotEq","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}]}]}]},null]}},"sourceSpan":{"start":[203,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[203,60]}},{"children":[],"comments":null,"title":"(/==)","info":{"declType":"alias","alias":[["Test","StrongCheck"],{"Right":{"Left":{"Ident":"assertNotEq"}}}],"fixity":{"associativity":"infix","precedence":2}},"sourceSpan":{"start":[208,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[208,24]}},{"children":[],"comments":"Converts a `Boolean` into a `Result` by lifting a message into `Failed`\nwhen the boolean is `false`.\n","title":"annotate","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}]}},"sourceSpan":{"start":[186,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[186,40]}},{"children":[],"comments":null,"title":"(<?>)","info":{"declType":"alias","alias":[["Test","StrongCheck"],{"Right":{"Left":{"Ident":"annotate"}}}],"fixity":{"associativity":"infix","precedence":1}},"sourceSpan":{"start":[190,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck.purs","end":[190,24]}}]},{"reExports":[],"name":"Test.StrongCheck.Arbitrary","comments":null,"declarations":[{"children":[{"comments":null,"title":"arbitrary","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[31,3],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[31,21]}},{"comments":null,"title":"arbBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[44,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[44,41]}},{"comments":null,"title":"arbNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[51,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[51,39]}},{"comments":null,"title":"arbInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[57,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[57,33]}},{"comments":null,"title":"arbString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[65,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[65,39]}},{"comments":null,"title":"arbChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[71,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[71,35]}},{"comments":null,"title":"arbUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[77,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[77,35]}},{"comments":null,"title":"arbOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}},"sourceSpan":{"start":[83,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[83,43]}},{"comments":null,"title":"arbArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[91,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[91,56]}},{"comments":null,"title":"arbFunction","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[107,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[107,75]}},{"comments":null,"title":"arbTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[115,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[115,73]}},{"comments":null,"title":"arbMaybe","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[121,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[121,56]}},{"comments":null,"title":"arbEither","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[128,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[128,75]}},{"comments":null,"title":"arbList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[135,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[135,54]}},{"comments":null,"title":"arbitraryIdentity","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[141,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[141,68]}},{"comments":null,"title":"arbitraryLazy","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[147,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[147,60]}}],"comments":"The `Arbitrary` class represents those types whose values can be\n_randomly-generated_.\n\n`arbitrary` uses the `Gen` monad to express a random generator for\nthe type `t`. Combinators in the `Test.StrongCheck.Gen`\nmodule can be used to construct random generators.\n","title":"Arbitrary","info":{"fundeps":[],"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[30,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[31,21]}},{"children":[{"comments":null,"title":"coarbitrary","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]}]},null]}},"sourceSpan":{"start":[42,3],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[42,47]}},{"comments":null,"title":"coarbBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[47,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[47,45]}},{"comments":null,"title":"coarbNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[54,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[54,43]}},{"comments":null,"title":"coarbInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[62,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[62,37]}},{"comments":null,"title":"coarbString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[68,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[68,43]}},{"comments":null,"title":"coarbChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[74,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[74,39]}},{"comments":null,"title":"coarbUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[80,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[80,39]}},{"comments":null,"title":"coarbOrdering","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}},"sourceSpan":{"start":[86,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[86,47]}},{"comments":null,"title":"coarbArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[99,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[99,62]}},{"comments":null,"title":"coarbFunction","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[110,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[110,79]}},{"comments":null,"title":"coarbTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[118,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[118,81]}},{"comments":null,"title":"coarbMaybe","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[124,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[124,62]}},{"comments":null,"title":"coarbEither","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[131,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[131,83]}},{"comments":null,"title":"coarbList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[138,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[138,60]}},{"comments":null,"title":"coarbIdentity","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[144,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[144,68]}},{"comments":null,"title":"coarbLazy","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[150,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[150,60]}}],"comments":"The `Coarbitrary` class represents types which appear on the left of\nan `Arbitrary` function arrow.\n\nTo construct an `Arbitrary` instance for the type `a -> b`, we need to\nuse the input of type `a` to _perturb_ a random generator for `b`. This\nis the role of the `coarbitrary` function.\n\n`Coarbitrary` instances can be written using the `perturbGen` function.\n","title":"Coarbitrary","info":{"fundeps":[],"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[41,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Arbitrary.purs","end":[42,47]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.AlphaNumString","comments":null,"declarations":[{"children":[{"comments":null,"title":"AlphaNumString","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAlphaNumString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","AlphaNumString"],"AlphaNumString"]}]}},"sourceSpan":{"start":[14,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/AlphaNumString.purs","end":[14,54]}},{"comments":null,"title":"ordAlphaNumString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","AlphaNumString"],"AlphaNumString"]}]}},"sourceSpan":{"start":[15,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/AlphaNumString.purs","end":[15,56]}},{"comments":null,"title":"arbAlphaNumString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","AlphaNumString"],"AlphaNumString"]}]}},"sourceSpan":{"start":[17,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/AlphaNumString.purs","end":[17,55]}},{"comments":null,"title":"coarbAlphaNumString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","AlphaNumString"],"AlphaNumString"]}]}},"sourceSpan":{"start":[23,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/AlphaNumString.purs","end":[23,59]}}],"comments":null,"title":"AlphaNumString","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[9,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/AlphaNumString.purs","end":[9,47]}},{"children":[],"comments":null,"title":"runAlphaNumString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","AlphaNumString"],"AlphaNumString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[11,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/AlphaNumString.purs","end":[11,46]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.ApproxNumber","comments":null,"declarations":[{"children":[{"comments":null,"title":"ApproxNumber","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"arbitraryApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[19,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[19,57]}},{"comments":null,"title":"coarbitraryApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[22,61]}},{"comments":null,"title":"eqApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[25,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[25,43]}},{"comments":null,"title":"ordApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[28,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[28,45]}},{"comments":null,"title":"semiringApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[31,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[31,55]}},{"comments":null,"title":"ringApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[37,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[37,47]}},{"comments":null,"title":"commutativeRingApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[40,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[40,69]}},{"comments":null,"title":"divisionRingApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","DivisionRing"],"DivisionRing"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[42,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[42,63]}},{"comments":null,"title":"euclideanRingApproxNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ApproxNumber"],"ApproxNumber"]}]}},"sourceSpan":{"start":[45,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[45,65]}}],"comments":"A newtype for `Number` whose `Eq` instance uses an epsilon value to allow\nfor precision erros when comparing.\n","title":"ApproxNumber","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[9,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[9,43]}},{"children":[],"comments":null,"title":"approximateEqual","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[12,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[12,48]}},{"children":[],"comments":null,"title":"(=~=)","info":{"declType":"alias","alias":[["Test","StrongCheck","Data","ApproxNumber"],{"Right":{"Left":{"Ident":"approximateEqual"}}}],"fixity":{"associativity":"infix","precedence":2}},"sourceSpan":{"start":[17,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ApproxNumber.purs","end":[17,32]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.ArbBoundedEnum","comments":null,"declarations":[{"children":[{"comments":null,"title":"ArbBoundedEnum","info":{"arguments":[{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[16,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[16,66]}},{"comments":null,"title":"ordArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[17,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[17,69]}},{"comments":null,"title":"arbArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[22,76]}},{"comments":null,"title":"coarbArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[28,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[28,80]}},{"comments":null,"title":"showArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[31,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[31,65]}},{"comments":null,"title":"boundedArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[34,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[34,74]}},{"comments":null,"title":"enumHour","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[38,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[38,62]}},{"comments":null,"title":"enumArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Enum"],"BoundedEnum"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[42,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[42,79]}}],"comments":null,"title":"ArbBoundedEnum","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[14,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[14,44]}},{"children":[],"comments":null,"title":"runArbBoundedEnum","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[19,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbBoundedEnum.purs","end":[19,53]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.ArbDateTime","comments":null,"declarations":[{"children":[{"comments":null,"title":"ArbTime","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeArbTime","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbTime"]}]},{"tag":"TypeWildcard","contents":{"start":[18,50],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[18,51]}}]}},"sourceSpan":{"start":[18,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[18,51]}},{"comments":null,"title":"arbitraryArbTime","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbTime"]}]}},"sourceSpan":{"start":[20,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[20,46]}},{"comments":null,"title":"coarbitraryArbTime","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbTime"]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[32,50]}}],"comments":null,"title":"ArbTime","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[13,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[13,34]}},{"children":[],"comments":null,"title":"runArbTime","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbTime"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}},"sourceSpan":{"start":[15,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[15,31]}},{"children":[{"comments":null,"title":"ArbDate","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeArbDate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDate"]}]},{"tag":"TypeWildcard","contents":{"start":[44,50],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[44,51]}}]}},"sourceSpan":{"start":[44,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[44,51]}},{"comments":null,"title":"arbitraryArbDate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDate"]}]}},"sourceSpan":{"start":[46,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[46,46]}},{"comments":null,"title":"coarbitraryArbDate","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDate"]}]}},"sourceSpan":{"start":[56,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[56,50]}}],"comments":null,"title":"ArbDate","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[39,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[39,34]}},{"children":[],"comments":null,"title":"runArbDate","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDate"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}},"sourceSpan":{"start":[41,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[41,31]}},{"children":[{"comments":null,"title":"ArbDateTime","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeArbDateTime","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDateTime"]}]},{"tag":"TypeWildcard","contents":{"start":[67,58],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[67,59]}}]}},"sourceSpan":{"start":[67,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[67,59]}},{"comments":null,"title":"arbitraryArbDateTime","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDateTime"]}]}},"sourceSpan":{"start":[69,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[69,54]}},{"comments":null,"title":"coarbitraryArbDateTime","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDateTime"]}]}},"sourceSpan":{"start":[75,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[75,58]}}],"comments":null,"title":"ArbDateTime","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[62,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[62,46]}},{"children":[],"comments":null,"title":"runArbDateTime","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbDateTime"],"ArbDateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}},"sourceSpan":{"start":[64,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/ArbDateTime.purs","end":[64,43]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.Negative","comments":null,"declarations":[{"children":[{"comments":null,"title":"Negative","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqNegative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Negative"],"Negative"]}]}},"sourceSpan":{"start":[16,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Negative.purs","end":[16,42]}},{"comments":null,"title":"ordNegative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Negative"],"Negative"]}]}},"sourceSpan":{"start":[17,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Negative.purs","end":[17,44]}},{"comments":null,"title":"arbNegative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Negative"],"Negative"]}]}},"sourceSpan":{"start":[19,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Negative.purs","end":[19,43]}},{"comments":null,"title":"coarbNegative","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Negative"],"Negative"]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Negative.purs","end":[22,47]}}],"comments":null,"title":"Negative","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[11,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Negative.purs","end":[11,35]}},{"children":[],"comments":null,"title":"runNegative","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Negative"],"Negative"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[13,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Negative.purs","end":[13,34]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.NonZero","comments":null,"declarations":[{"children":[{"comments":null,"title":"NonZero","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqNonZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","NonZero"],"NonZero"]}]}},"sourceSpan":{"start":[15,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/NonZero.purs","end":[15,40]}},{"comments":null,"title":"ordNonZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","NonZero"],"NonZero"]}]}},"sourceSpan":{"start":[16,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/NonZero.purs","end":[16,42]}},{"comments":null,"title":"arbNonZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","NonZero"],"NonZero"]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/NonZero.purs","end":[18,41]}},{"comments":null,"title":"coarbNonZero","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","NonZero"],"NonZero"]}]}},"sourceSpan":{"start":[25,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/NonZero.purs","end":[25,45]}}],"comments":null,"title":"NonZero","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[10,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/NonZero.purs","end":[10,34]}},{"children":[],"comments":null,"title":"runNonZero","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","NonZero"],"NonZero"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[12,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/NonZero.purs","end":[12,32]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.Positive","comments":null,"declarations":[{"children":[{"comments":null,"title":"Positive","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPositive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Positive"],"Positive"]}]}},"sourceSpan":{"start":[16,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Positive.purs","end":[16,42]}},{"comments":null,"title":"ordPositive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Positive"],"Positive"]}]}},"sourceSpan":{"start":[17,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Positive.purs","end":[17,44]}},{"comments":null,"title":"arbPositive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Positive"],"Positive"]}]}},"sourceSpan":{"start":[19,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Positive.purs","end":[19,43]}},{"comments":null,"title":"coarbPositive","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Positive"],"Positive"]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Positive.purs","end":[22,47]}}],"comments":null,"title":"Positive","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[11,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Positive.purs","end":[11,35]}},{"children":[],"comments":null,"title":"runPositive","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Positive"],"Positive"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[13,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Positive.purs","end":[13,34]}}]},{"reExports":[],"name":"Test.StrongCheck.Data.Signum","comments":null,"declarations":[{"children":[{"comments":null,"title":"Signum","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqSignum","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Signum"],"Signum"]}]}},"sourceSpan":{"start":[12,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Signum.purs","end":[12,38]}},{"comments":null,"title":"ordSignum","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Signum"],"Signum"]}]}},"sourceSpan":{"start":[13,8],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Signum.purs","end":[13,40]}},{"comments":null,"title":"arbSignum","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Arbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Signum"],"Signum"]}]}},"sourceSpan":{"start":[15,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Signum.purs","end":[15,39]}},{"comments":null,"title":"coarbSignum","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Arbitrary"],"Coarbitrary"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Signum"],"Signum"]}]}},"sourceSpan":{"start":[20,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Signum.purs","end":[20,43]}}],"comments":null,"title":"Signum","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[7,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Signum.purs","end":[7,28]}},{"children":[],"comments":null,"title":"runSignum","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","Signum"],"Signum"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[9,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Data/Signum.purs","end":[9,27]}}]},{"reExports":[],"name":"Test.StrongCheck.Gen","comments":null,"declarations":[{"children":[{"comments":null,"title":"GenT","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Machine","Mealy"],"MealyT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[562,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[562,52]}},{"comments":null,"title":"applyGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[565,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[565,48]}},{"comments":null,"title":"applicativeGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[568,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[568,60]}},{"comments":null,"title":"semigroupGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[571,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[571,58]}},{"comments":null,"title":"monoidGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[574,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[574,52]}},{"comments":null,"title":"bindGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[577,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[577,46]}},{"comments":null,"title":"monadGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[582,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[582,48]}},{"comments":null,"title":"altGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[584,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[584,44]}},{"comments":null,"title":"plusGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[587,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[587,46]}},{"comments":null,"title":"alternativeGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[590,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[590,60]}},{"comments":null,"title":"monadZeroGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadZero"],"MonadZero"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[592,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[592,56]}},{"comments":null,"title":"monadPlusGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[594,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[594,56]}},{"comments":null,"title":"monadRecGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Rec","Class"],"MonadRec"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[596,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[596,57]}},{"comments":null,"title":"lazyGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Lazy"],"Lazy"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[601,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[601,51]}},{"comments":null,"title":"monadGenGenT","info":{"declType":"instance","dependencies":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Gen","Class"],"MonadGen"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[604,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[604,58]}}],"comments":null,"title":"GenT","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[107,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[107,61]}},{"children":[],"comments":null,"title":"Gen","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[109,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[109,31]}},{"children":[{"comments":null,"title":"GenState","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["seed",{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]},{"tag":"RCons","contents":["size",{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Size"]},{"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupGenState","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]}},"sourceSpan":{"start":[540,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[540,49]}},{"comments":null,"title":"monoidGenState","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]}},"sourceSpan":{"start":[544,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[544,43]}}],"comments":null,"title":"GenState","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[91,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[91,59]}},{"children":[{"comments":null,"title":"GenOut","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["state",{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupGenOut","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[547,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[547,64]}},{"comments":null,"title":"monoidGenOut","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[551,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[551,55]}},{"comments":null,"title":"functorGenOut","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]}]}},"sourceSpan":{"start":[554,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[554,41]}},{"comments":null,"title":"applyGenOut","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]}]}},"sourceSpan":{"start":[557,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[557,37]}}],"comments":null,"title":"GenOut","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[102,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[102,60]}},{"children":[],"comments":null,"title":"Size","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[89,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[89,16]}},{"children":[],"comments":"A deterministic generator that produces values from the specified array,\nin sequence.\n","title":"allInArray","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[424,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[424,57]}},{"children":[],"comments":"A deterministic generator that produces integers from the specified\ninclusive range, in sequence.\n","title":"allInRange","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}},"sourceSpan":{"start":[414,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[414,60]}},{"children":[],"comments":"Applies a state to a generator to possibly produce the next state,\na value, and the next generator.\n","title":"applyGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[442,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[447,45]}},{"children":[],"comments":"Creates a generator of elements ranging from 0 to the maximum size.\n","title":"arrayOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[226,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[226,63]}},{"children":[],"comments":"Creates a generator of elements ranging from 1 to the maximum size.\n","title":"arrayOf1","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[232,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[232,74]}},{"children":[],"comments":"A generator for characters.\n","title":"charGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}},"sourceSpan":{"start":[176,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[176,44]}},{"children":[],"comments":"Creates a generator that generates real numbers between the specified\ninclusive range.\n","title":"choose","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}]},null]}},"sourceSpan":{"start":[181,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[181,65]}},{"children":[],"comments":"Creates a generator that generates integers between the specified\ninclusive range.\n","title":"chooseInt","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}},"sourceSpan":{"start":[189,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[189,59]}},{"children":[],"comments":"Creates a generator that produces chunks of values in the specified size.\nWill extend the generator if necessary to produce a chunk of the specified\nsize, but will not turn a finite generator into an infinite generator.\n","title":"chunked","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[492,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[492,70]}},{"children":[],"comments":"Drains a finite generator of all values. Or blows up if you called it on\nan infinite generator.\n","title":"collectAll","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[435,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[435,73]}},{"children":[],"comments":null,"title":"decorateSeed","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[114,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[114,73]}},{"children":[],"comments":"Drops a certain number of values from the generator. May produce\nan empty generator if called on a finite generator.\n","title":"dropGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[280,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[280,62]}},{"children":[],"comments":"Creates a generator that chooses an element from among a set of elements.\n","title":"elements","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[248,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[248,61]}},{"children":[],"comments":"Extends a generator to produce *at least* the specified number of values.\nWill not turn a finite generator into an infinite one.\n","title":"extend","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[285,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[285,61]}},{"children":[],"comments":"Folds over a generator to produce a value. Either the generator or the\nuser-defined function may halt the fold.\n","title":"foldGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[324,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[331,9]}},{"children":[],"comments":"Folds over a generator to produce a value. Either the generator or the\nuser-defined function may halt the fold. Returns not just the value\ncreated through folding, but also the successor generator.\n","title":"foldGen'","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[307,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[313,40]}},{"children":[],"comments":"Generates elements by the specified frequencies (which will be normalized).\n","title":"frequency","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[205,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[210,14]}},{"children":[],"comments":"Ensures that a given generator can produce an infinite number of values,\nassuming it can produce at least one.\n","title":"infinite","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[301,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[301,56]}},{"children":[],"comments":"Fairly interleaves two generators.\n","title":"interleave","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[296,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[296,70]}},{"children":[],"comments":"A deterministic generator that produces all possible combinations of\nchoosing exactly k elements from the specified array.\n","title":"nChooseK","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[373,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[373,70]}},{"children":[],"comments":"Creates a generator that chooses another generator from the specified list\nat random, and then generates a value with that generator.\n","title":"oneOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[199,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[199,73]}},{"children":[],"comments":"A deterministic generator that produces all possible permutations of\nthe specified array.\n","title":"perms","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[358,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[358,60]}},{"children":[],"comments":null,"title":"perturbGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[255,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[255,68]}},{"children":[],"comments":"Creates a function generator that will always generate the same output\nfor the same input.\n","title":"repeatable","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},null]},null]}},"sourceSpan":{"start":[153,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[153,55]}},{"children":[],"comments":"Resizes the generator so the size parameter passed into the generator\nwill be equal to the specified size.\n","title":"resize","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[172,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[172,62]}},{"children":[],"comments":"Runs a generator to produce a specified number of values, returning both\nan array containing the values and the successor Gen that can be used to\ncontinue the generation process at a later time.\n","title":"runGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[479,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[484,48]}},{"children":[],"comments":"Samples a generator, producing the specified number of values. Uses\ndefault settings for the initial generator state.\n","title":"sample","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[460,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[460,64]}},{"children":[],"comments":"Samples a generator, producing the specified number of values.\n","title":"sample'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[455,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[455,77]}},{"children":[],"comments":"Shows a sample of values generated from the specified generator.\n","title":"showSample","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[473,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[473,55]}},{"children":[],"comments":"Shows a sample of values generated from the specified generator.\n","title":"showSample'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[464,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[469,17]}},{"children":[],"comments":"Same as shuffle' but with default for the chunk size.\n","title":"shuffle","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[515,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[515,55]}},{"children":[],"comments":"Creates a generator that mixes up the order of the specified generator.\nThis is achieved by chunking the generator with the specified size\nand then shuffling each chunk before continuing to the next.\n","title":"shuffle'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[508,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[508,63]}},{"children":[],"comments":"Creates a generator that produces shuffled versions of the provided array.\n","title":"shuffleArray","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[519,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[519,67]}},{"children":[],"comments":"Creates a generator that depends on the size parameter.\n","title":"sized","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[167,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[167,63]}},{"children":[],"comments":"Creates a generator that depends on access to the generator state.\n","title":"stateful","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[159,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[159,70]}},{"children":[],"comments":"Filters a generator to produce only values satisfying the specified\npredicate.\n","title":"suchThat","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[392,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[392,74]}},{"children":[],"comments":"Tries to filter a generator such that it only produces values satisfying\nthe specified predicate.\n","title":"suchThatMaybe","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[399,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[404,22]}},{"children":[],"comments":"Takes the first number of values from the generator. Will turn an infinite\ngenerator into a finite generator.\n","title":"takeGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[275,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[275,62]}},{"children":[],"comments":"Converts the generator into a function that, given the initial state,\nreturns a lazy list.\n","title":"toLazyList","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[531,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[531,64]}},{"children":[],"comments":"Transforms one gen into another, passing along user-supplied state.\nEither the generator being transformed or the transforming function may\nhalt the transformation.\n","title":"transGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"c"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[337,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[343,14]}},{"children":[],"comments":null,"title":"uniform","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},null]}},"sourceSpan":{"start":[121,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[121,46]}},{"children":[],"comments":null,"title":"unGen","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Machine","Mealy"],"MealyT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[111,68]}},{"children":[],"comments":null,"title":"unGenOut","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenOut"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["state",{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty"}]}]}]}]},null]}},"sourceSpan":{"start":[104,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[104,68]}},{"children":[],"comments":null,"title":"unGenState","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["seed",{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]},{"tag":"RCons","contents":["size",{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Size"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[93,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[93,57]}},{"children":[],"comments":null,"title":"updateSeedState","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]}},"sourceSpan":{"start":[259,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[259,40]}},{"children":[],"comments":"Fixes a generator on a certain variant, given by the specified seed.\n","title":"variant","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[163,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[163,63]}},{"children":[],"comments":"Creates a generator that generates arrays of some specified size.\n","title":"vectorOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[240,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[240,71]}},{"children":[],"comments":"Wraps an effect in a generator that ignores the input state.\n","title":"wrapEffect","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[500,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Gen.purs","end":[500,53]}}]},{"reExports":[],"name":"Test.StrongCheck.LCG","comments":null,"declarations":[{"children":[{"comments":null,"title":"showSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[82,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[82,31]}},{"comments":null,"title":"eqSeed","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[85,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[85,27]}}],"comments":"A seed for the linear congruential generator. We omit a `Semiring`\ninstance because there is no `zero` value, as 0 is not an acceptable\nseed for the generator.\n","title":"Seed","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[66,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[66,24]}},{"children":[],"comments":null,"title":"mkSeed","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[68,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[68,22]}},{"children":[],"comments":null,"title":"runSeed","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[71,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[71,23]}},{"children":[],"comments":"The *multiplier*: a magic constant for the linear congruential generator\n","title":"lcgM","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[26,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[26,12]}},{"children":[],"comments":"The *increment*: a magic constant for the linear congruential generator\n","title":"lcgC","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[30,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[30,12]}},{"children":[],"comments":"The *modulus*: a magic constant for the linear congruential generator.\nIt is equal to 2^31 - 1, a Mersenne prime. It is useful for this value to\nbe prime, because then the requirement of the initial seed being coprime\nto the modulus is satisfied when the seed is between 1 and lcgN - 1.\n","title":"lcgN","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[37,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[37,12]}},{"children":[],"comments":"Step the linear congruential generator\n","title":"lcgNext","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[48,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[48,24]}},{"children":[],"comments":"Perturb a seed value\n","title":"lcgPerturb","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}]}},"sourceSpan":{"start":[41,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[41,37]}},{"children":[],"comments":"Create a random seed\n","title":"randomSeed","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","LCG"],"Seed"]}]}},"sourceSpan":{"start":[52,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/LCG.purs","end":[52,26]}}]},{"reExports":[],"name":"Test.StrongCheck.Landscape","comments":null,"declarations":[{"children":[],"comments":null,"title":"Decay","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[48,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[48,30]}},{"children":[{"comments":null,"title":"DriverState","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"DriverStateRec"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"DriverState","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[44,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[44,55]}},{"children":[],"comments":null,"title":"DriverStateRec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["variance",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["state",{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[40,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[40,78]}},{"children":[],"comments":null,"title":"Variance","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}},"sourceSpan":{"start":[47,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[47,23]}},{"children":[{"comments":null,"title":"Landscape","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"LList"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"DriverState"]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Landscape","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[45,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[45,63]}},{"children":[],"comments":null,"title":"LList","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]}]}},"sourceSpan":{"start":[42,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[42,26]}},{"children":[],"comments":null,"title":"decayHalf","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Decay"]}},"sourceSpan":{"start":[50,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[50,19]}},{"children":[],"comments":null,"title":"decayThird","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Decay"]}},"sourceSpan":{"start":[53,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[53,20]}},{"children":[],"comments":null,"title":"defaultDecay","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Decay"]}},"sourceSpan":{"start":[56,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[56,22]}},{"children":[],"comments":"Creates a landscape whose initial points are randomly chosen across\nthe entire landscape, using the default GenState and Decay.\n","title":"everywhere","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Variance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"LList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[76,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[76,78]}},{"children":[],"comments":"Creates a landscape whose initial points are randomly chosen across\nthe entire landscape.\n","title":"everywhere'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Decay"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Variance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"LList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[64,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[64,100]}},{"children":[],"comments":"Moves to a location in a landscape that was previously sampled.\n","title":"moveTo","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]}]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[111,81]}},{"children":[],"comments":"Creates a landscape that samples the area around a location, using the\ndefault GenState and Decay.\n","title":"nearby","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Variance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[99,62]}},{"children":[],"comments":"Creates a landscape that samples the area around a location.\n","title":"nearby'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Decay"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Variance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[89,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[89,84]}},{"children":[],"comments":"Samples around the current location area, returning just the values.\n","title":"sampleHere","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[107,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[107,67]}},{"children":[],"comments":"Samples around the current location area, returning full state information.\n","title":"sampleHere'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"DriverState"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[103,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[103,82]}},{"children":[],"comments":"Picks somewhere and forms a landscape around that location, using the\ndefault GenState and Decay.\n","title":"somewhere","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Variance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}},"sourceSpan":{"start":[85,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[85,77]}},{"children":[],"comments":"Picks somewhere and forms a landscape around that location.\n","title":"somewhere'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"GenState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Decay"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Variance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[80,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[80,99]}},{"children":[],"comments":null,"title":"unDriverState","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"DriverState"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"DriverStateRec"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[115,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[115,61]}},{"children":[],"comments":null,"title":"unLandscape","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"LList"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"DriverState"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[118,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[118,69]}},{"children":[],"comments":null,"title":"whereAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Landscape"],"Landscape"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[59,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Landscape.purs","end":[59,38]}}]},{"reExports":[],"name":"Test.StrongCheck.Perturb","comments":null,"declarations":[{"children":[{"comments":null,"title":"Attempts","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Attempts","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[41,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[41,32]}},{"children":[{"comments":null,"title":"perturber","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[68,3],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[68,27]}},{"comments":null,"title":"perturbArbBoundedEnum","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturb"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Data","ArbBoundedEnum"],"ArbBoundedEnum"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[187,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[187,86]}},{"comments":null,"title":"perturbNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturb"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[200,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[200,41]}},{"comments":null,"title":"perturbInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturb"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[216,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[216,35]}},{"comments":null,"title":"perturbList","info":{"declType":"instance","dependencies":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturb"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[229,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[229,56]}},{"comments":null,"title":"perturbChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturb"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[240,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[240,37]}},{"comments":null,"title":"perturbBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturb"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[248,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[248,43]}},{"comments":null,"title":"perturbString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturb"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[255,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[255,41]}}],"comments":"The class for things which can be perturbed.\n\nLaws:\n  forall a, 0 >= n <= 1:\n  ((>=) n) <<< dist a <$> (perturb n a) must be an infinite generator of `true` values.\n","title":"Perturb","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[67,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[68,27]}},{"children":[{"comments":null,"title":"Perturber","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"PerturberRec"]},{"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"perturberInvariant","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]}]}},"sourceSpan":{"start":[54,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[54,51]}}],"comments":null,"title":"Perturber","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[43,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[43,49]}},{"children":[],"comments":null,"title":"PerturberRec","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["perturb",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"RCons","contents":["dist",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"tag":"RCons","contents":["dims",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[45,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[49,4]}},{"children":[],"comments":"Combines two perturbers to produce a perturber of the product\n","title":"perturberProduct","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[112,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[112,84]}},{"children":[],"comments":null,"title":"(</\\>)","info":{"declType":"alias","alias":[["Test","StrongCheck","Perturb"],{"Right":{"Left":{"Ident":"perturberProduct"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[124,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[124,34]}},{"children":[],"comments":"Combines two perturbers to produce a perturber of the sum\n","title":"perturberSum","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[127,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[127,81]}},{"children":[],"comments":null,"title":"(<\\/>)","info":{"declType":"alias","alias":[["Test","StrongCheck","Perturb"],{"Right":{"Left":{"Ident":"perturberSum"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[138,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[138,30]}},{"children":[],"comments":"Creates a perturber for numbers that fall within the specified range.\n","title":"bounded","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}},"sourceSpan":{"start":[141,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[141,48]}},{"children":[],"comments":"Creates a perturber for integers that fall within the specified range.\n","title":"boundedInt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[156,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[156,42]}},{"children":[],"comments":null,"title":"dist","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]},null]}},"sourceSpan":{"start":[73,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[73,48]}},{"children":[],"comments":null,"title":"dims","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},null]}},"sourceSpan":{"start":[76,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[76,43]}},{"children":[],"comments":null,"title":"enumerated","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[178,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[178,60]}},{"children":[],"comments":"Creates a perturber that perturbs nothing.\n","title":"nonPerturber","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[80,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[80,38]}},{"children":[],"comments":null,"title":"perturb","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[70,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[70,55]}},{"children":[],"comments":"Given one example, searches for other examples that satisfy a provided\nboolean predicate.\n\nThe search operates out-to-in, in an attempt to find examples that are\nas far removed from the provided example as possible. The sampling size\nparameter determines how many samples to take at every level of\nsearching, while the attempts parameter determines how many levels.\n","title":"searchIn'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Attempts"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]}},"sourceSpan":{"start":[94,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[94,84]}},{"children":[],"comments":"The same as search', but uses defaults for attempt count and sample size.\nWill search a total of 10,000 examples before giving up.\n","title":"searchIn","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[108,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[108,64]}},{"children":[],"comments":null,"title":"unPerturber","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"Perturber"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","StrongCheck","Perturb"],"PerturberRec"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[51,1],"name":"/Users/saylu/Desktop/purescript-strongcheck/src/Test/StrongCheck/Perturb.purs","end":[51,55]}}]}],"resolvedDependencies":{"purescript-free":"5.1.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-ordered-collections":"1.0.0","purescript-control":"4.0.0","purescript-console":"4.1.0","purescript-either":"4.0.0","purescript-profunctor":"4.0.0","purescript-arrays":"5.0.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lazy":"4.0.0","purescript-foldable-traversable":"4.0.0","purescript-tailrec":"4.0.0","purescript-gen":"2.1.0","purescript-prelude":"4.0.1","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-transformers":"4.1.0","purescript-globals":"4.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-catenable-lists":"5.0.0","purescript-random":"4.0.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-strings":"4.0.0","purescript-identity":"4.0.0","purescript-machines":"5.1.0","purescript-lists":"5.0.0","purescript-datetime":"4.0.0","purescript-functions":"4.0.0"},"version":"4.1.1","github":["purescript-contrib","purescript-strongcheck"],"versionTag":"v4.1.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Profunctor.Clown":"purescript-profunctor","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Yoneda":"purescript-free","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Char":"purescript-strings","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Data.Machine.Mealy":"purescript-machines","Control.Monad.Writer":"purescript-transformers","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}