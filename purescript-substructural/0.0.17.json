{"uploader":"rightfold","packageMeta":{"repository":{"url":"git@github.com:rightfold/purescript-substructural.git","type":"git"},"dependencies":{"purescript-prelude":"^3.0.0","purescript-tuples":"^4.1.0"},"name":"purescript-substructural","license":["BSD-3-Clause"]},"tagTime":"2017-06-25T13:31:30+0000","modules":[{"reExports":[],"name":"Data.Array.Unique","comments":null,"declarations":[{"children":[{"comments":null,"title":"cloneUniqueArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[26,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[27,50]}},{"comments":null,"title":"dropUniqueArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[29,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[30,33]}}],"comments":"An array that has at most one live reference to it.\n","title":"UniqueArray","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[24,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[24,48]}},{"children":[],"comments":"O(1) memory. O(1) time. The empty array.\n","title":"empty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[50,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[50,51]}},{"children":[],"comments":"O(1) memory, O(1) time. A singleton array.\n","title":"singleton","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[53,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[53,52]}},{"children":[],"comments":"O(n) memory, O(n) time. Create a unique array from a shared array.\n","title":"fromShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[56,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[56,56]}},{"children":[],"comments":"O(1) memory, O(1) time. Create a shared array from a unique array.\n","title":"toShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[60,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[60,54]}},{"children":[],"comments":"O(1) memory, O(1) time. Append an element to an array.\n","title":"snoc","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[69,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[69,54]}},{"children":[],"comments":"O(1) memory, O(1) time. Return whether the array is empty.\n","title":"isEmpty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[82,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[82,50]}},{"children":[],"comments":"O(1) memory, O(1) time. Return the length of an array.\n","title":"length","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[86,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[86,60]}},{"children":[],"comments":"O(1) memory, O(n) time. Reverse an array.\n","title":"reverse","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[91,1],"name":"/home/r/purescript-linear/src/Data/Array/Unique.purs","end":[91,61]}}]},{"reExports":[],"name":"Data.Function.Sub","comments":null,"declarations":[{"children":[{"comments":null,"title":"semigroupoidLinear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Semigroupoid"],"Semigroupoid"]},{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Sub"]}]}},"sourceSpan":{"start":[27,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[28,23]}},{"comments":null,"title":"categoryLinear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Category"],"Category"]},{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Sub"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[31,13]}}],"comments":"A function.\n","title":"Sub","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]},"declType":"externData"},"sourceSpan":{"start":[25,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[25,48]}},{"children":[],"comments":null,"title":"type (-*)","info":{"declType":"alias","alias":[["Data","Function","Sub"],{"Left":"Sub"}],"fixity":{"associativity":"infixr","precedence":4}},"sourceSpan":{"start":[33,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[33,24]}},{"children":[],"comments":"Run a function over shared values.\n","title":"runShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[36,63]}},{"children":[],"comments":"Lift a function over shared values into a `Sub`.\n","title":"liftShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[40,64]}},{"children":[{"comments":null,"title":"clone","info":{"declType":"typeClassMember","type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"cloneVoid","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[104,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[104,59]}},{"comments":null,"title":"cloneUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[108,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[108,59]}},{"comments":null,"title":"cloneBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[112,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[112,65]}},{"comments":null,"title":"cloneChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[116,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[116,59]}},{"comments":null,"title":"cloneInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[120,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[120,57]}},{"comments":null,"title":"cloneNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[124,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[124,63]}},{"comments":null,"title":"cloneString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[128,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[128,63]}},{"comments":null,"title":"cloneArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[132,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[132,79]}},{"comments":null,"title":"cloneTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[136,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[137,50]}},{"comments":null,"title":"cloneBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[168,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[168,67]}}],"comments":"Values which can be cloned. Instances of `Clone` must satisfy the\nfollowing laws:\n\n- Clone: `fst' <<< clone = snd' <<< clone = id`\n","title":"Clone","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[54,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[55,26]}},{"children":[{"comments":null,"title":"drop","info":{"declType":"typeClassMember","type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":null},{"comments":null,"title":"dropVoid","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[105,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[105,55]}},{"comments":null,"title":"dropUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[109,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[109,55]}},{"comments":null,"title":"dropBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[113,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[113,61]}},{"comments":null,"title":"dropChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[117,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[117,55]}},{"comments":null,"title":"dropInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[121,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[121,53]}},{"comments":null,"title":"dropNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[125,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[125,59]}},{"comments":null,"title":"dropString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[129,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[129,59]}},{"comments":null,"title":"dropArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[133,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[133,75]}},{"comments":null,"title":"dropTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[138,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[139,40]}},{"comments":null,"title":"dropBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[169,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[169,63]}}],"comments":"Values which can be dropped.\n","title":"Drop","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[58,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[59,20]}},{"children":[{"comments":null,"title":"sharedVoid","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[106,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[106,35]}},{"comments":null,"title":"sharedUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[110,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[110,35]}},{"comments":null,"title":"sharedBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[114,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[114,41]}},{"comments":null,"title":"sharedChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[118,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[118,35]}},{"comments":null,"title":"sharedInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[122,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[122,33]}},{"comments":null,"title":"sharedNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[126,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[126,39]}},{"comments":null,"title":"sharedString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[130,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[130,39]}},{"comments":null,"title":"sharedArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[134,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[134,55]}},{"comments":null,"title":"sharedTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[140,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[140,67]}},{"comments":null,"title":"sharedBorrow","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[170,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[170,57]}}],"comments":"Values for which multiple live references can exist. `Clone` and `Drop`\ninstances may be no-ops.\n","title":"Shared","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[63,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[63,36]}},{"children":[],"comments":"Unsafely clone a value.\n","title":"unsafeClone","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[66,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[66,35]}},{"children":[],"comments":"Unsafely drop a value.\n","title":"unsafeDrop","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[70,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[70,44]}},{"children":[],"comments":"Drop the second element of a tuple.\n","title":"fst'","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[73,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[73,40]}},{"children":[],"comments":"Drop the first element of a tuple.\n","title":"snd'","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[77,40]}},{"children":[{"comments":null,"title":"cloneBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[168,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[168,67]}},{"comments":null,"title":"dropBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[169,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[169,63]}},{"comments":null,"title":"sharedBorrow","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[170,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[170,57]}}],"comments":"A `Borrow` is a reference to a value. When a borrow to a value is live,\nthe value cannot be accessed unless it is `Shared`. Some functions take\nborrows to avoid inconvenient tupling.\n","title":"Borrow","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[166,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[166,43]}},{"children":[],"comments":"Borrow a value during the execution of a function.\n","title":"borrow","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[173,1],"name":"/home/r/purescript-linear/src/Data/Function/Sub.purs","end":[173,63]}}]}],"resolvedDependencies":{"purescript-newtype":"2.0.0","purescript-control":"3.3.0","purescript-either":"3.0.0","purescript-arrays":"4.1.1","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-monoid":"3.0.0","purescript-foldable-traversable":"3.3.0","purescript-tailrec":"3.3.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-eff":"3.1.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-identity":"3.1.0"},"version":"0.0.17","github":["rightfold","purescript-substructural"],"versionTag":"v0.0.17","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Eff":"purescript-eff","Data.Array.ST.Partial":"purescript-arrays","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Data.Array.Partial":"purescript-arrays","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}