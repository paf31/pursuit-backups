{"uploader":"rightfold","packageMeta":{"repository":{"url":"git@github.com:rightfold/purescript-substructural.git","type":"git"},"devDependencies":{"purescript-eff":"^3.1.0","purescript-spec":"^1.0.0"},"dependencies":{"purescript-prelude":"^3.0.0","purescript-tuples":"^4.1.0"},"name":"purescript-substructural","license":["BSD-3-Clause"]},"tagTime":"2017-08-05T22:22:53+0000","modules":[{"reExports":[],"name":"Data.Array.Unique","comments":null,"declarations":[{"children":[{"comments":null,"title":"cloneUniqueArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[26,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[27,50]}},{"comments":null,"title":"dropUniqueArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[29,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[30,33]}}],"comments":"An array that has at most one live reference to it.\n","title":"UniqueArray","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[24,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[24,48]}},{"children":[],"comments":"O(1) memory. O(1) time. The empty array.\n","title":"empty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[50,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[50,51]}},{"children":[],"comments":"O(1) memory, O(1) time. A singleton array.\n","title":"singleton","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[53,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[53,52]}},{"children":[],"comments":"O(n) memory, O(n) time. Create a unique array from a shared array.\n","title":"fromShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[56,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[56,56]}},{"children":[],"comments":"O(1) memory, O(1) time. Create a shared array from a unique array.\n","title":"toShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[60,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[60,54]}},{"children":[],"comments":"O(1) memory, O(1) time. Append an element to an array.\n","title":"snoc","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[69,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[69,54]}},{"children":[],"comments":"O(1) memory, O(1) time. Return whether the array is empty.\n","title":"isEmpty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[82,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[82,50]}},{"children":[],"comments":"O(1) memory, O(1) time. Return the length of an array.\n","title":"length","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[86,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[86,60]}},{"children":[],"comments":"O(1) memory, O(n) time. Reverse an array.\n","title":"reverse","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","Unique"],"UniqueArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[91,1],"name":"/home/r/purescript-substructural/src/Data/Array/Unique.purs","end":[91,61]}}]},{"reExports":[],"name":"Data.Function.Sub","comments":null,"declarations":[{"children":[{"comments":null,"title":"semigroupoidLinear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Semigroupoid"],"Semigroupoid"]},{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Sub"]}]}},"sourceSpan":{"start":[32,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[33,23]}},{"comments":null,"title":"categoryLinear","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Category"],"Category"]},{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Sub"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[36,13]}}],"comments":"A function that will not copy or discard references to its argument,\nunless it is allowed to by a `Clone` or `Drop` instance.\n\nCurrently there is no syntax for `Sub` literals. You can create `Sub`\nvalues only through combinators (mainly `<<<`) and the FFI (normal pure\nunary JavaScript function).\n","title":"Sub","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]},"declType":"externData"},"sourceSpan":{"start":[30,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[30,48]}},{"children":[],"comments":null,"title":"type (-*)","info":{"declType":"alias","alias":[["Data","Function","Sub"],{"Left":"Sub"}],"fixity":{"associativity":"infixr","precedence":4}},"sourceSpan":{"start":[38,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[38,24]}},{"children":[],"comments":"Run a function over shared values.\n","title":"runShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[41,63]}},{"children":[],"comments":"Lift a function over shared values into a `Sub`.\n","title":"liftShared","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[45,64]}},{"children":[{"comments":null,"title":"clone","info":{"declType":"typeClassMember","type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":null},{"comments":null,"title":"cloneVoid","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[109,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[109,59]}},{"comments":null,"title":"cloneUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[113,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[113,59]}},{"comments":null,"title":"cloneBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[117,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[117,65]}},{"comments":null,"title":"cloneChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[121,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[121,59]}},{"comments":null,"title":"cloneInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[125,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[125,57]}},{"comments":null,"title":"cloneNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[129,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[129,63]}},{"comments":null,"title":"cloneString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[133,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[133,63]}},{"comments":null,"title":"cloneArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[137,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[137,79]}},{"comments":null,"title":"cloneTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[141,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[142,50]}},{"comments":null,"title":"cloneBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[173,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[173,67]}}],"comments":"Values which can be cloned. Instances of `Clone` must satisfy the\nfollowing laws:\n\n- Clone: `fst' <<< clone = snd' <<< clone = id`\n","title":"Clone","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[59,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[60,26]}},{"children":[{"comments":null,"title":"drop","info":{"declType":"typeClassMember","type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":null},{"comments":null,"title":"dropVoid","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[110,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[110,55]}},{"comments":null,"title":"dropUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[114,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[114,55]}},{"comments":null,"title":"dropBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[118,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[118,61]}},{"comments":null,"title":"dropChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[122,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[122,55]}},{"comments":null,"title":"dropInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[126,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[126,53]}},{"comments":null,"title":"dropNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[130,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[130,59]}},{"comments":null,"title":"dropString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[134,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[134,59]}},{"comments":null,"title":"dropArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[138,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[138,75]}},{"comments":null,"title":"dropTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[143,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[144,40]}},{"comments":null,"title":"dropBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[174,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[174,63]}}],"comments":"Values which can be dropped.\n","title":"Drop","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[63,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[64,20]}},{"children":[{"comments":null,"title":"sharedVoid","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[111,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[111,35]}},{"comments":null,"title":"sharedUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[115,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[115,35]}},{"comments":null,"title":"sharedBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[119,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[119,41]}},{"comments":null,"title":"sharedChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[123,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[123,35]}},{"comments":null,"title":"sharedInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[127,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[127,33]}},{"comments":null,"title":"sharedNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[131,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[131,39]}},{"comments":null,"title":"sharedString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[135,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[135,39]}},{"comments":null,"title":"sharedArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[139,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[139,55]}},{"comments":null,"title":"sharedTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}},"sourceSpan":{"start":[145,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[145,67]}},{"comments":null,"title":"sharedBorrow","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[175,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[175,57]}}],"comments":"Values for which multiple live references can exist. `Clone` and `Drop`\ninstances may be no-ops.\n","title":"Shared","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Function","Sub"],"Clone"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[68,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[68,36]}},{"children":[],"comments":"Unsafely clone a value.\n","title":"unsafeClone","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[71,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[71,35]}},{"children":[],"comments":"Unsafely drop a value.\n","title":"unsafeDrop","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[75,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[75,44]}},{"children":[],"comments":"Drop the second element of a tuple.\n","title":"fst'","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[78,40]}},{"children":[],"comments":"Drop the first element of a tuple.\n","title":"snd'","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Drop"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[82,40]}},{"children":[{"comments":null,"title":"cloneBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Clone"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[173,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[173,67]}},{"comments":null,"title":"dropBorrow","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Drop"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[174,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[174,63]}},{"comments":null,"title":"sharedBorrow","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Shared"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[175,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[175,57]}}],"comments":"A `Borrow` is a reference to a value. When a borrow to a value is live,\nthe value cannot be accessed unless it is `Shared`. Some functions take\nborrows to avoid inconvenient tupling.\n","title":"Borrow","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[171,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[171,43]}},{"children":[],"comments":"Borrow a value during the execution of a function.\n","title":"borrow","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Sub"],"Shared"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Sub"],"Borrow"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Function","Sub"],"-*"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[178,1],"name":"/home/r/purescript-substructural/src/Data/Function/Sub.purs","end":[178,63]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-maps":"3.5.1","purescript-control":"3.3.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-node-streams":"3.1.0","purescript-arrays":"4.1.2","purescript-maybe":"3.0.0","purescript-type-equality":"2.1.0","purescript-js-timers":"3.0.0","purescript-node-path":"2.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-node-process":"4.0.0","purescript-monoid":"3.1.0","purescript-aff":"3.1.0","purescript-foldable-traversable":"3.4.0","purescript-tailrec":"3.3.0","purescript-gen":"1.1.0","purescript-functors":"2.2.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-pipes":"4.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.1.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-mmorph":"3.0.0","purescript-const":"3.0.0","purescript-spec":"1.0.0","purescript-node-buffer":"3.0.1","purescript-node-fs":"4.0.0","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-js-date":"4.0.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-parallel":"3.0.0","purescript-posix-types":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-strings":"3.3.0","purescript-identity":"3.1.0","purescript-foreign":"4.0.1","purescript-lists":"4.9.0","purescript-nullable":"3.0.0","purescript-datetime":"3.3.0","purescript-functions":"3.0.0"},"version":"0.0.18","github":["rightfold","purescript-substructural"],"versionTag":"v0.0.18","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Test.Spec.Console":"purescript-spec","Control.Monad.Eff.Ref":"purescript-refs","Data.Char.Gen":"purescript-strings","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Test.Spec.Summary":"purescript-spec","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Pipes.Core":"purescript-pipes","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Test.Spec.Assertions.Aff":"purescript-spec","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Foreign.Index":"purescript-foreign","Data.Monoid.Additive":"purescript-monoid","Data.Map.Gen":"purescript-maps","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.Time.Component.Gen":"purescript-datetime","Data.List.ZipList":"purescript-lists","Node.FS":"purescript-node-fs","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Test.Spec.Reporter.Console":"purescript-spec","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Node.FS.Async":"purescript-node-fs","Test.Spec.Reporter.Dot":"purescript-spec","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Pipes.Prelude":"purescript-pipes","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Test.Spec.Reporter.Base":"purescript-spec","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Node.Buffer.Unsafe":"purescript-node-buffer","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Node.Process":"purescript-node-process","Control.Monad.Except.Trans":"purescript-transformers","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Posix":"purescript-posix-types","Control.Monad.Eff.Class":"purescript-eff","Data.Posix.Signal":"purescript-posix-types","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Node.Globals":"purescript-node-process","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Test.Spec.Color":"purescript-spec","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Node.Platform":"purescript-node-process","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.4"}