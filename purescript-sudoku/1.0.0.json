{"uploader":"noraesae","packageMeta":{"repository":{"url":"git://github.com/sanrokugomaato/purescript-sudoku.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-console":"^3.0.0","purescript-test-unit":"^11.0.0","purescript-psci-support":"^3.0.0"},"dependencies":{"purescript-arrays":"^4.0.1","purescript-maybe":"^3.0.0","purescript-prelude":"^3.0.0","purescript-eff":"^3.1.0","purescript-random":"^3.0.0","purescript-partial":"^1.2.0"},"name":"purescript-sudoku","license":["MIT"]},"tagTime":"2017-04-26T07:49:43+0000","modules":[{"reExports":[],"name":"Sudoku","comments":"This is the main module of Sudoku. It provides a set of functions to\ngenerate, manipulate or solve a Sudoku game.\n","declarations":[{"children":[],"comments":"The `emptyBoard` function creates an empty board filled with `Nothing`.\n","title":"emptyBoard","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}},"sourceSpan":{"start":[14,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[14,32]}},{"children":[],"comments":"The `fullBoard` function creates a random complete answer for a Sudoku\ngame.\n","title":"fullBoard","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},null]}},"sourceSpan":{"start":[19,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[19,62]}},{"children":[],"comments":"The `rowOf` function calculates which row a cell belongs to.\n","title":"rowOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]},null]}},"sourceSpan":{"start":[37,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[37,33]}},{"children":[],"comments":"The `colOf` function calculates which column a cell belongs to.\n","title":"colOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]},null]}},"sourceSpan":{"start":[41,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[41,33]}},{"children":[],"comments":"The `valueOf` function calculates which value a cell has.\n","title":"valueOf","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[45,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[45,33]}},{"children":[],"comments":"The `rowCells` function retrieves an array of cells which belong to a\nspecfic row on a board.\n","title":"rowCells","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[50,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[50,55]}},{"children":[],"comments":"The `colCells` function retrieves an array of cells which belong to a\nspecfic column on a board.\n","title":"colCells","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[55,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[55,55]}},{"children":[],"comments":"The `sectionAt` function calculates which section a row/column pair belongs\nto.\n","title":"sectionAt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Section"]}]}]}},"sourceSpan":{"start":[60,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[60,35]}},{"children":[],"comments":"The `sectionContains` function tells if a section contains a cell.\n","title":"sectionContains","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Section"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[64,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[64,58]}},{"children":[],"comments":"The `sectionCells` function retrieves an array of cells which belong to a\nspecific section on a board.\n","title":"sectionCells","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Section"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[75,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[75,63]}},{"children":[],"comments":"The `idxAt` function converts a row/column pair into a corresponding index\nin an internal array of `Board`.\n","title":"idxAt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[80,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[80,27]}},{"children":[],"comments":"The `valueAt` function retrieves a value of a cell with a row and column on\na board.\n","title":"valueAt","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[85,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[85,48]}},{"children":[],"comments":"The `availableValues` function calculates values available at a cell with\nthe Sudoku rule.\n","title":"availableValues","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}},"sourceSpan":{"start":[90,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[90,64]}},{"children":[],"comments":"The `replaceValue` function replaces a value at a cell at a row/column pair\non a board.\n","title":"replaceValue","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]}},"sourceSpan":{"start":[100,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[100,64]}},{"children":[],"comments":"The `generateGame` function generates a random Sudoku game with a minimum\ndifficulty.\n","title":"generateGame","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Difficulty"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Game"]}]}]},null]}},"sourceSpan":{"start":[107,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[107,72]}},{"children":[],"comments":"The `solve` function literally solves a Sudoku question board, returns an\narray of complete solutions.\n","title":"solve","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]}},"sourceSpan":{"start":[132,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku.purs","end":[132,48]}}]},{"reExports":[],"name":"Sudoku.Types","comments":"The collection of types used in Sudoku.\n","declarations":[{"children":[{"comments":null,"title":"Cell","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqCellInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}},"sourceSpan":{"start":[14,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[14,43]}},{"comments":null,"title":"functorCell","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]}]}},"sourceSpan":{"start":[15,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[15,44]}},{"comments":null,"title":"showCellMaybeInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}}]}},"sourceSpan":{"start":[17,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[21,1]}},{"comments":null,"title":"showCellInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}},"sourceSpan":{"start":[21,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[22,27]}}],"comments":"A type representing each cell on a Sudoku board. The first `Int` in the\n`Cell` constructor means an index of a cell. The type parameter `a` means\ncontent of a cell, which is usually `Int` for deterministic boards or\n`Maybe Int` for nondeterministic ones.\n","title":"Cell","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[12,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[12,25]}},{"children":[{"comments":null,"title":"Row","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"rowEq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Row"]}]}},"sourceSpan":{"start":[27,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[27,32]}}],"comments":"A type representing a row.\n","title":"Row","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[25,22]}},{"children":[{"comments":null,"title":"Col","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"colEq","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Col"]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[32,32]}}],"comments":"A type representing a column.\n","title":"Col","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[30,22]}},{"children":[{"comments":null,"title":"Board","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqBoardInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}},"sourceSpan":{"start":[38,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[38,45]}},{"comments":null,"title":"functorBoard","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]}]}},"sourceSpan":{"start":[39,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[39,46]}},{"comments":null,"title":"showBoard","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Cell"]},{"tag":"TypeVar","contents":"a"}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[41,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[47,32]}}],"comments":"A type representing a board. It has a type parameter `a` meaning the\ncontent of its cells.\n","title":"Board","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[36,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[36,41]}},{"children":[{"comments":null,"title":"Section","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A type representing a section. A section in Sudoku is a 3x3 area, 9 of\nwhich exist on a board, from `Section 0 0` to `Section 2 2`.\n","title":"Section","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[51,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[51,31]}},{"children":[],"comments":"A type alias for `Int` representing difficulty of a game. Specifically, it\nmeans the number of holes to fill in.\n","title":"Difficulty","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}},"sourceSpan":{"start":[55,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[55,22]}},{"children":[{"comments":null,"title":"Game","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Difficulty"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Board"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"showGame","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Sudoku","Types"],"Game"]}]}},"sourceSpan":{"start":[61,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[65,25]}}],"comments":"A type representing a Sudoku game. It contains its difficulty, question\nboard and answer board. A game can usually be generated by `generateGame`.\n","title":"Game","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[59,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Types.purs","end":[59,60]}}]},{"reExports":[],"name":"Sudoku.Util","comments":"The collection of functions used in purescript-sudoku code base.\n","declarations":[{"children":[],"comments":"The partial and unsafe version of `fromJust`.\n","title":"fromJust'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[12,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Util.purs","end":[12,36]}},{"children":[],"comments":"The `choose` function is used to randomly pick an element from an array.\n","title":"choose","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[16,1],"name":"/Users/jp21046/Works/personal/purescript-sudoku/src/Sudoku/Util.purs","end":[16,56]}}]}],"resolvedDependencies":{"purescript-free":"4.0.0","purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-js-timers":"3.0.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-aff":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.1.0","purescript-functors":"2.0.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-test-unit":"11.0.0","purescript-const":"3.0.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-psci-support":"3.0.0","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-parallel":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-quickcheck":"4.0.0","purescript-strings":"3.0.0","purescript-identity":"3.1.0","purescript-lists":"4.0.1","purescript-datetime":"3.0.0","purescript-functions":"3.0.0"},"version":"1.0.0","github":["sanrokugomaato","purescript-sudoku"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Ref":"purescript-refs","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Test.Unit.Assert":"purescript-test-unit","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Test.Unit.Output.Fancy":"purescript-test-unit","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Test.Unit.QuickCheck":"purescript-test-unit","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Test.Unit.Output.TAP":"purescript-test-unit","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Test.Unit.Console":"purescript-test-unit","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.Unit.Output.Simple":"purescript-test-unit","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Test.Unit.Main":"purescript-test-unit","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Test.Unit":"purescript-test-unit","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}