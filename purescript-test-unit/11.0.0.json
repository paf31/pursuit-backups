{"uploader":"bodil","packageMeta":{"moduleType":["node"],"repository":{"url":"git://github.com/bodil/purescript-test-unit.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-free":"^4.0.0","purescript-either":"^3.0.0","purescript-js-timers":"^3.0.0","purescript-aff":"^3.0.0","purescript-prelude":"^3.0.0","purescript-eff":"^3.0.0","purescript-quickcheck":"^4.0.0","purescript-strings":"^3.0.0","purescript-lists":"^4.0.0"},"name":"purescript-test-unit","license":["LGPL-3.0+"]},"tagTime":"2017-04-09T16:34:22+0000","modules":[{"reExports":[],"name":"Test.Unit","comments":null,"declarations":[{"children":[],"comments":null,"title":"Test","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[34,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[34,25]}},{"children":[],"comments":"The basic value for a succeeding test.\n","title":"success","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]},null]}},"sourceSpan":{"start":[37,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[37,28]}},{"children":[],"comments":"Make a failing test, given a reason for the failure.\n","title":"failure","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]},null]}},"sourceSpan":{"start":[41,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[41,38]}},{"children":[],"comments":"Set a test to fail after a given number of milliseconds.\n","title":"timeout","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"RCons","contents":["timer",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Timer"],"TIMER"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"RCons","contents":["timer",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Timer"],"TIMER"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]}},"sourceSpan":{"start":[55,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[55,111]}},{"children":[{"comments":null,"title":"Group","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"TypeVar","contents":"e"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Group","info":{"declType":"data","dataDeclType":"data","typeArguments":[["e",null]]},"sourceSpan":{"start":[60,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[60,42]}},{"children":[{"comments":null,"title":"TestGroup","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Group"]},{"tag":"TypeVar","contents":"e"}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"TestUnit","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorTestF","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]},{"tag":"TypeVar","contents":"e"}]}}]}},"sourceSpan":{"start":[67,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[69,46]}}],"comments":null,"title":"TestF","info":{"declType":"data","dataDeclType":"data","typeArguments":[["e",null],["a",null]]},"sourceSpan":{"start":[62,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[63,44]}},{"children":[],"comments":null,"title":"TestSuite","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]},{"tag":"TypeVar","contents":"e"}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[65,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[65,39]}},{"children":[],"comments":"Define a test suite, which can contain a number of nested suites\nas well as tests.\n","title":"suite","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[73,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[73,56]}},{"children":[],"comments":"Define a labelled test.\n","title":"test","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[77,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[77,50]}},{"children":[],"comments":"A list of collected tests, represented as a tuple of each test's path\nand the `Test` itself. The path, in this case, means the name of the\ntest preceded by the name of each parent test suite, in top down order.\n","title":"TestList","info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}}]}}]}},"sourceSpan":{"start":[85,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[85,54]}},{"children":[],"comments":"Walk through a test suite, calling the provided function for each item,\nand returning a `TestList` of all tests walked. The tests won't actually\nrun unless you run them explicitly from your walker function.\n","title":"walkSuite","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}}]}]}]},null]}},"sourceSpan":{"start":[90,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[90,215]}},{"children":[],"comments":"Walk through a test suite, returning a `TestList` of all tests walked.\nThis operation will not actually run the tests.\n","title":"collectTests","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}}]}]},null]}},"sourceSpan":{"start":[107,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[107,111]}},{"children":[],"comments":"Run a list of tests and collect each test result.\n","title":"collectResults","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]}}]}]},null]}},"sourceSpan":{"start":[111,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[111,97]}},{"children":[],"comments":"Filter successes out of a list of test results.\n","title":"keepErrors","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}}]}]}},"sourceSpan":{"start":[116,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[116,97]}},{"children":[],"comments":"`describe` is an alias for `suite` for BDD enthusiasts.\n","title":"describe","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[126,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[126,59]}},{"children":[],"comments":"`it` is an alias for `test` for BDD enthusiasts.\n","title":"it","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[130,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit.purs","end":[130,48]}}]},{"reExports":[],"name":"Test.Unit.Assert","comments":null,"declarations":[{"children":[],"comments":"Given a failure reason and a boolean, either succeed if the boolean is\ntrue, or fail if the boolean is false.\n","title":"assert","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[17,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Assert.purs","end":[17,48]}},{"children":[],"comments":"The reverse of `assert`: given a failure reason and a boolean, either\nsucceed if the boolean is false, or fail if the boolean is true.\n","title":"assertFalse","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[23,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Assert.purs","end":[23,53]}},{"children":[],"comments":"Expect a test to fail. Given a reason and a test, fail with the given\nreason if the test succeeds, and succeed if it fails.\n","title":"expectFailure","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]}]},null]}},"sourceSpan":{"start":[29,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Assert.purs","end":[29,54]}},{"children":[],"comments":"Assert that two printable values are equal.\n","title":"equal","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Assert.purs","end":[35,56]}},{"children":[],"comments":"Assert that two non-printable values are equal, using a provided failure\nstring instead of generating one.\n","title":"equal'","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Assert.purs","end":[43,59]}},{"children":[],"comments":"`shouldEqual` is equivalent to `equal`, with the arguments flipped,\nfor people who prefer the BDD style.\n\n    it \"should do what I expect of it\" do\n      result `shouldEqual` \"expected result\"\n","title":"shouldEqual","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Assert.purs","end":[52,62]}}]},{"reExports":[],"name":"Test.Unit.Console","comments":null,"declarations":[{"children":[],"comments":null,"title":"TESTOUTPUT","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[6,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[6,41]}},{"children":[],"comments":null,"title":"hasStderr","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}},"sourceSpan":{"start":[8,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[8,36]}},{"children":[],"comments":null,"title":"hasColours","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}},"sourceSpan":{"start":[10,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[10,37]}},{"children":[],"comments":null,"title":"consoleLog","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[12,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[12,89]}},{"children":[],"comments":null,"title":"consoleError","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[14,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[14,91]}},{"children":[],"comments":null,"title":"savePos","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[16,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[16,76]}},{"children":[],"comments":null,"title":"restorePos","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[18,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[18,79]}},{"children":[],"comments":null,"title":"eraseLine","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[20,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[20,78]}},{"children":[],"comments":null,"title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[22,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[22,84]}},{"children":[],"comments":null,"title":"printLabel","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[24,88]}},{"children":[],"comments":null,"title":"printFail","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[26,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[26,88]}},{"children":[],"comments":null,"title":"printPass","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[28,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Console.purs","end":[28,84]}}]},{"reExports":[],"name":"Test.Unit.Main","comments":null,"declarations":[{"children":[],"comments":"Exit the current process using the provided return code.\n\nWorks on Node and Phantom. Will have no effect on other platforms.\n","title":"exit","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Main.purs","end":[24,74]}},{"children":[],"comments":null,"title":"run","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[26,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Main.purs","end":[26,88]}},{"children":[],"comments":"Run a test suite using the provided test runner.\n","title":"runTestWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[34,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Main.purs","end":[34,206]}},{"children":[],"comments":"Run a test suite, picking the most appropriate test runner.\n","title":"runTest","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[41,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Main.purs","end":[41,173]}}]},{"reExports":[],"name":"Test.Unit.Output.Fancy","comments":null,"declarations":[{"children":[],"comments":null,"title":"runTest","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]},{"tag":"RCons","contents":["testOutput",{"tag":"TypeConstructor","contents":[["Test","Unit","Console"],"TESTOUTPUT"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}}]}]},null]}},"sourceSpan":{"start":[84,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Output/Fancy.purs","end":[84,184]}}]},{"reExports":[],"name":"Test.Unit.Output.Simple","comments":null,"declarations":[{"children":[],"comments":null,"title":"runTest","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}}]}]},null]}},"sourceSpan":{"start":[66,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Output/Simple.purs","end":[66,166]}}]},{"reExports":[],"name":"Test.Unit.Output.TAP","comments":null,"declarations":[{"children":[],"comments":null,"title":"requested","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}},"sourceSpan":{"start":[20,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Output/TAP.purs","end":[20,36]}},{"children":[],"comments":null,"title":"runTest","info":{"declType":"value","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]},{"tag":"RCons","contents":["console",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Console"],"CONSOLE"]},{"tag":"RCons","contents":["avar",{"tag":"TypeConstructor","contents":[["Control","Monad","Aff","AVar"],"AVAR"]},{"tag":"TypeVar","contents":"e"}]}]}]}}]}]},null]}},"sourceSpan":{"start":[29,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/Output/TAP.purs","end":[29,166]}}]},{"reExports":[],"name":"Test.Unit.QuickCheck","comments":null,"declarations":[{"children":[],"comments":null,"title":"quickCheck'","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[17,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/QuickCheck.purs","end":[17,92]}},{"children":[],"comments":null,"title":"quickCheck","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]},{"tag":"RCons","contents":["random",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Random"],"RANDOM"]},{"tag":"TypeVar","contents":"e"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"/home/bodil/Sync/Workspace/purescript-test-unit/src/Test/Unit/QuickCheck.purs","end":[31,84]}}]}],"resolvedDependencies":{"purescript-free":"4.0.0","purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-js-timers":"3.0.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-aff":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.0.0","purescript-functors":"2.0.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-const":"3.0.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-parallel":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-quickcheck":"4.0.0","purescript-strings":"3.0.0","purescript-identity":"3.0.0","purescript-lists":"4.0.1","purescript-datetime":"3.0.0","purescript-functions":"3.0.0"},"version":"11.0.0","github":["bodil","purescript-test-unit"],"versionTag":"v11.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Ref":"purescript-refs","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.3"}