{"uploader":"bodil","packageMeta":{"moduleType":["node"],"repository":{"url":"git://github.com/bodil/purescript-test-unit.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-free":"^5.0.0","purescript-effect":"^2.0.0","purescript-either":"^4.0.0","purescript-js-timers":"^4.0.0","purescript-aff":"^5.0.0","purescript-avar":"^3.0.0","purescript-prelude":"^4.0.0","purescript-quickcheck":"^5.0.0","purescript-strings":"^4.0.0","purescript-lists":"^5.0.0"},"name":"purescript-test-unit","license":["LGPL-3.0+"]},"tagTime":"2018-05-28T14:09:29+0000","modules":[{"reExports":[],"name":"Test.Unit","comments":null,"declarations":[{"children":[],"comments":null,"title":"Test","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[47,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[47,21]}},{"children":[{"comments":null,"title":"TestGroup","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Group"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Skip"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Only"]},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"TestUnit","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Skip"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Only"]},{"tag":"ParensInType","contents":{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SkipUnit","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorTestF","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]}]}},"sourceSpan":{"start":[98,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[98,39]}}],"comments":null,"title":"TestF","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[89,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[91,38]}},{"children":[{"comments":null,"title":"Group","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"Group","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[87,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[87,36]}},{"children":[],"comments":null,"title":"TestSuite","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[93,33]}},{"children":[],"comments":"A list of collected tests, represented as a tuple of each test's path\nand the `Test` itself. The path, in this case, means the name of the\ntest preceded by the name of each parent test suite, in top down order.\n","title":"TestList","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}}]}}]}},"sourceSpan":{"start":[197,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[197,50]}},{"children":[{"comments":null,"title":"Skip","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeSkip","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Skip"]}]},{"tag":"TypeWildcard","contents":{"start":[70,45],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[70,46]}}]}},"sourceSpan":{"start":[70,8],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[70,46]}}],"comments":null,"title":"Skip","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[68,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[68,28]}},{"children":[{"comments":null,"title":"Only","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeOnly","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Only"]}]},{"tag":"TypeWildcard","contents":{"start":[74,45],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[74,46]}}]}},"sourceSpan":{"start":[74,8],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[74,46]}},{"comments":null,"title":"showOnly","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Only"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[76,31]}},{"comments":null,"title":"haytingAlgebraOnly","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HeytingAlgebra"],"HeytingAlgebra"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Only"]}]}},"sourceSpan":{"start":[79,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[79,51]}}],"comments":null,"title":"Only","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[72,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[72,28]}},{"children":[],"comments":"The basic value for a succeeding test.\n","title":"success","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}},"sourceSpan":{"start":[50,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[50,16]}},{"children":[],"comments":"Make a failing test, given a reason for the failure.\n","title":"failure","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}},"sourceSpan":{"start":[54,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[54,26]}},{"children":[],"comments":"Set a test to fail after a given number of milliseconds.\n","title":"timeout","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[63,31]}},{"children":[],"comments":"Define a labelled test.\n","title":"test","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[117,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[117,36]}},{"children":[],"comments":"Run only this test.\n","title":"testOnly","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[121,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[121,40]}},{"children":[],"comments":"Skip a test.\n","title":"testSkip","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[125,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[125,40]}},{"children":[],"comments":"Define a test suite, which can contain a number of nested suites\nas well as tests.\n","title":"suite","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[105,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[105,42]}},{"children":[],"comments":"Run only this suite.\n","title":"suiteOnly","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[109,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[109,46]}},{"children":[],"comments":"Skip this suite.\n","title":"suiteSkip","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[113,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[113,46]}},{"children":[],"comments":"Walk through a test suite, calling the provided function for each item,\nand returning a `TestList` of all tests walked. The tests won't actually\nrun unless you run them explicitly from your walker function.\n","title":"walkSuite","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]}]}]}]}},"sourceSpan":{"start":[202,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[202,105]}},{"children":[],"comments":"Filter suites and tests with `Only` and `Skip` flags and removes suites\nthat do not contain any tests.\n","title":"filterTests","info":{"declType":"value","type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]}]}]}},"sourceSpan":{"start":[177,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[177,40]}},{"children":[],"comments":"Walk through a test suite, returning a `TestList` of all tests walked.\nThis operation will not actually run the tests.\n","title":"collectTests","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]}]}]}},"sourceSpan":{"start":[223,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[223,42]}},{"children":[],"comments":"Run a list of tests and collect each test result.\n","title":"collectResults","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]}}]}]}},"sourceSpan":{"start":[227,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[227,83]}},{"children":[],"comments":null,"title":"countSkippedTests","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[165,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[165,51]}},{"children":[],"comments":"Filter successes out of a list of test results.\n","title":"keepErrors","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]}}]}]}},"sourceSpan":{"start":[232,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[232,97]}},{"children":[],"comments":"`describe` is an alias for `suite` for BDD enthusiasts.\n","title":"describe","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[241,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[241,45]}},{"children":[],"comments":"`it` is an alias for `test` for BDD enthusiasts.\n","title":"it","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}},"sourceSpan":{"start":[253,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit.purs","end":[253,34]}}]},{"reExports":[],"name":"Test.Unit.Assert","comments":null,"declarations":[{"children":[],"comments":"Given a failure reason and a boolean, either succeed if the boolean is\ntrue, or fail if the boolean is false.\n","title":"assert","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}},"sourceSpan":{"start":[20,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Assert.purs","end":[20,36]}},{"children":[],"comments":"The reverse of `assert`: given a failure reason and a boolean, either\nsucceed if the boolean is false, or fail if the boolean is true.\n","title":"assertFalse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Assert.purs","end":[26,41]}},{"children":[],"comments":"Expect a test to fail. Given a reason and a test, fail with the given\nreason if the test succeeds, and succeed if it fails.\n","title":"expectFailure","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}},"sourceSpan":{"start":[32,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Assert.purs","end":[32,40]}},{"children":[],"comments":"Assert that two printable values are equal.\n","title":"equal","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]}]},null]}},"sourceSpan":{"start":[38,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Assert.purs","end":[38,52]}},{"children":[],"comments":"Assert that two non-printable values are equal, using a provided failure\nstring instead of generating one.\n","title":"equal'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]}]},null]}},"sourceSpan":{"start":[46,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Assert.purs","end":[46,55]}},{"children":[],"comments":"`shouldEqual` is equivalent to `equal`, with the arguments flipped,\nfor people who prefer the BDD style.\n\n    it \"should do what I expect of it\" do\n      result `shouldEqual` \"expected result\"\n","title":"shouldEqual","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]}]},null]}},"sourceSpan":{"start":[60,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Assert.purs","end":[60,58]}}]},{"reExports":[],"name":"Test.Unit.Console","comments":null,"declarations":[{"children":[],"comments":null,"title":"log","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[9,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[9,51]}},{"children":[],"comments":null,"title":"hasStderr","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}},"sourceSpan":{"start":[12,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[12,36]}},{"children":[],"comments":null,"title":"hasColours","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}},"sourceSpan":{"start":[14,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[14,37]}},{"children":[],"comments":null,"title":"consoleLog","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[16,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[16,51]}},{"children":[],"comments":null,"title":"consoleError","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[18,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[18,53]}},{"children":[],"comments":null,"title":"savePos","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[20,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[20,38]}},{"children":[],"comments":null,"title":"restorePos","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[22,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[22,41]}},{"children":[],"comments":null,"title":"eraseLine","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[24,40]}},{"children":[],"comments":null,"title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[26,46]}},{"children":[],"comments":null,"title":"printLabel","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[28,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[28,50]}},{"children":[],"comments":null,"title":"printFail","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[30,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[30,50]}},{"children":[],"comments":null,"title":"printPass","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[32,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Console.purs","end":[32,46]}}]},{"reExports":[],"name":"Test.Unit.Main","comments":null,"declarations":[{"children":[],"comments":"Run a test suite, picking the most appropriate test runner.\n","title":"runTest","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[41,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Main.purs","end":[41,36]}},{"children":[],"comments":"Run a test suite using the provided test runner.\n","title":"runTestWith","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[34,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Main.purs","end":[34,68]}},{"children":[],"comments":null,"title":"run","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[26,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Main.purs","end":[26,31]}},{"children":[],"comments":"Exit the current process using the provided return code.\n\nWorks on Node and Phantom. Will have no effect on other platforms.\n","title":"exit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[24,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Main.purs","end":[24,42]}}]},{"reExports":[],"name":"Test.Unit.Output.Fancy","comments":null,"declarations":[{"children":[],"comments":null,"title":"runTest","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]}]}]}},"sourceSpan":{"start":[88,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Output/Fancy.purs","end":[88,37]}}]},{"reExports":[],"name":"Test.Unit.Output.Simple","comments":null,"declarations":[{"children":[],"comments":null,"title":"runTest","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]}]}]}},"sourceSpan":{"start":[68,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Output/Simple.purs","end":[68,37]}}]},{"reExports":[],"name":"Test.Unit.Output.TAP","comments":null,"declarations":[{"children":[],"comments":null,"title":"runTest","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestList"]}]}]}},"sourceSpan":{"start":[28,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Output/TAP.purs","end":[28,37]}},{"children":[],"comments":null,"title":"requested","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}},"sourceSpan":{"start":[19,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/Output/TAP.purs","end":[19,36]}}]},{"reExports":[],"name":"Test.Unit.QuickCheck","comments":null,"declarations":[{"children":[],"comments":null,"title":"quickCheck","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]},null]}},"sourceSpan":{"start":[30,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/QuickCheck.purs","end":[30,59]}},{"children":[],"comments":null,"title":"quickCheck'","info":{"declType":"value","type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]},null]}},"sourceSpan":{"start":[16,1],"name":"/home/bodil/Sync/Code/ps/purescript-test-unit/src/Test/Unit/QuickCheck.purs","end":[16,67]}}]}],"resolvedDependencies":{"purescript-free":"5.0.0","purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-ordered-collections":"1.0.0","purescript-control":"4.0.0","purescript-console":"4.1.0","purescript-either":"4.0.0","purescript-arrays":"5.0.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-js-timers":"4.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lcg":"2.0.0","purescript-lazy":"4.0.0","purescript-aff":"5.0.0","purescript-foldable-traversable":"4.0.0","purescript-tailrec":"4.0.0","purescript-avar":"3.0.0","purescript-gen":"2.0.0","purescript-typelevel-prelude":"3.0.0","purescript-functors":"3.0.0","purescript-prelude":"4.0.0","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-const":"4.0.0","purescript-record":"1.0.0","purescript-transformers":"4.1.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-catenable-lists":"5.0.0","purescript-random":"4.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-quickcheck":"5.0.0","purescript-strings":"4.0.0","purescript-identity":"4.0.0","purescript-lists":"5.0.0","purescript-datetime":"4.0.0","purescript-functions":"4.0.0"},"version":"14.0.0","github":["bodil","purescript-test-unit"],"versionTag":"v14.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Compose":"purescript-functors","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Effect.Timer":"purescript-js-timers","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Effect.Aff.AVar":"purescript-avar","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}