{"uploader":"paf31","packageMeta":{"repository":{"url":"git://github.com/paf31/purescript-thermite.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","test","tests"],"authors":[{"email":"paf31@cantab.net","name":"Phil Freeman"}],"dependencies":{"purescript-react-dom":"^3.0.0","purescript-profunctor-lenses":"^3.0.0","purescript-dom":"^4.0.0","purescript-coroutines":"^4.0.0","purescript-aff":"^3.0.0","purescript-react":"^3.0.0","purescript-freet":"^3.0.0"},"name":"purescript-thermite","license":["MIT"]},"tagTime":"2017-04-06T02:51:37+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-coroutines","item":["Control","Coroutine"]},"declarations":[{"children":[],"comments":"A type synonym for a `Co`routine which \"cotransforms\" values, emitting an output\nbefore waiting for its input.\n","title":"CoTransformer","info":{"arguments":[["i",null],["o",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"Co"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransform"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}}]}},"sourceSpan":{"start":[182,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/bower_components/purescript-coroutines/src/Control/Coroutine.purs","end":[182,46]}},{"children":[],"comments":"Cotransform input values.\n","title":"cotransform","info":{"declType":"value","type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"i"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/bower_components/purescript-coroutines/src/Control/Coroutine.purs","end":[185,67]}}]}],"name":"Thermite","comments":"Thermite provides a simple model-view-action abstraction on top of `purescript-react`:\n\n- A `Spec` defines a `state` type which acts as the _model_.\n- The `Spec` also defines an `action` type which acts as the set of _actions_.\n- The `view` is a `Render` function which produces a React element for the current state.\n- The `PerformAction` function can be used to update the state based on an action.\n\nA `Spec` can be created using `simpleSpec`, and turned into a React component class using\n`createClass`.\n\nThermite also provides type class instances and lens combinators for composing `Spec`s.\n","declarations":[{"children":[],"comments":"A type synonym for an action handler, which takes an action, the current props\nand state for the component, and return a `CoTransformer` which will emit\nstate updates asynchronously.\n\n`Control.Coroutine.cotransform` can be used to emit state update functions\nand wait for the new state value. If `cotransform` returns `Nothing`, then\nthe state could not be updated. Usually, this will not happen, but it is possible\nin certain use cases involving `split` and `foreach`.\n","title":"PerformAction","info":{"arguments":[["eff",null],["state",null],["props",null],["action",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[73,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[77,65]}},{"children":[],"comments":"A default `PerformAction` action implementation which ignores all actions.\n","title":"defaultPerformAction","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"PerformAction"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]},null]},null]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[80,92]}},{"children":[],"comments":"Replace the current component state.\n","title":"writeState","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"state"}]}}]}]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[84,110]}},{"children":[],"comments":"An alias for `cotransform` - apply a function to the current component state.\n","title":"modifyState","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"state"}]}}]}]},null]},null]}},"sourceSpan":{"start":[88,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[88,122]}},{"children":[],"comments":"A type synonym for an event handler which can be used to construct\n`purescript-react`'s event attributes.\n","title":"EventHandler","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"ForAll","contents":["refs",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["props",{"tag":"TypeConstructor","contents":[["React"],"ReactProps"]},{"tag":"RCons","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React"],"ReactState"]},{"tag":"TypeConstructor","contents":[["React"],"ReadWrite"]}]},{"tag":"RCons","contents":["refs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React"],"ReactRefs"]},{"tag":"TypeVar","contents":"refs"}]},{"tag":"TypeVar","contents":"eff"}]}]}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[99,15]}},{"children":[],"comments":"A rendering function, which takes an action handler function, the current state and\nprops, an array of child nodes and returns a HTML document.\n","title":"Render","info":{"arguments":[["state",null],["props",null],["action",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeConstructor","contents":[["Thermite"],"EventHandler"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}]}]}]}},"sourceSpan":{"start":[103,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[108,30]}},{"children":[],"comments":"A default `Render` implementation which renders nothing.\n\nThis is useful when just `append`ing action handlers.\n","title":"defaultRender","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Render"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[113,70]}},{"children":[{"comments":null,"title":"semigroupSpec","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}}]}},"sourceSpan":{"start":[175,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[180,11]}},{"comments":null,"title":"monoidSpec","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}}]}},"sourceSpan":{"start":[182,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[184,39]}}],"comments":"A component specification, which can be passed to `createClass`.\n\nA minimal `Spec` can be built using `simpleSpec`.\n\nThe `Monoid` instance for `Spec` will compose `Spec`s by placing rendered\nHTML elements next to one another, and performing actions in sequence.\n","title":"Spec","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["eff",null],["state",null],["props",null],["action",null]]},"sourceSpan":{"start":[122,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[125,4]}},{"children":[],"comments":"A `Lens` for accessing the `PerformAction` portion of a `Spec`.\n","title":"_performAction","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"PerformAction"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[128,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[128,124]}},{"children":[],"comments":"A `Lens` for accessing the `Render` portion of a `Spec`.\n\nThis can be useful when wrapping a `Render` function in order to frame a\nset of controls with some containing element. For example:\n\n```purescript\nwrap :: Spec _ State _ Action -> Spec _ State _ Action\nwrap = over _render \\child dispatch props state childre  ->\n  [ R.div [ RP.className \"wrapper\" ] [ child dispatch props state children ] ]\n```\n","title":"_render","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Render"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[141,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[141,106]}},{"children":[],"comments":"Create a minimal `Spec`. The arguments are, in order:\n\n- The `PerformAction` function for performing actions\n- The `Render` function for rendering the current state as a HTML document\n\nFor example:\n\n```purescript\nimport qualified React.DOM as R\n\ndata Action = Increment\n\nspec :: Spec _ Int _ Action\nspec = simpleSpec performAction render\n  where\n  render :: Render _ Int _\n  render _ _ n _ = [ R.text (show n) ]\n\n  performAction :: PerformAction _ Int _ Action\n  performAction Increment _ n k = k (n + 1)\n```\n","title":"simpleSpec","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"PerformAction"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Render"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[165,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[169,33]}},{"children":[],"comments":"Create a React component class from a Thermite component `Spec`.\n","title":"createClass","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React"],"ReactClass"]},{"tag":"TypeVar","contents":"props"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[187,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[191,28]}},{"children":[],"comments":"Create a React component spec from a Thermite component `Spec`.\n\nThis function is a low-level alternative to `createClass`, used when the React\ncomponent spec needs to be modified before being turned into a component class,\ne.g. by adding additional lifecycle methods.\n","title":"createReactSpec","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["spec",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React"],"ReactSpec"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"RCons","contents":["dispatcher",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React"],"ReactThis"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeConstructor","contents":[["Thermite"],"EventHandler"]}]}]},{"tag":"REmpty"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[199,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[205,7]}},{"children":[],"comments":"Create a React component spec from a Thermite component `Spec` with an additional\nfunction for converting the rendered Array of ReactElement's into a single ReactElement\nas is required by React.\n\nThis function is a low-level alternative to `createClass`, used when the React\ncomponent spec needs to be modified before being turned into a component class,\ne.g. by adding additional lifecycle methods.\n","title":"createReactSpec'","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["spec",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React"],"ReactSpec"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"RCons","contents":["dispatcher",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React"],"ReactThis"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeConstructor","contents":[["Thermite"],"EventHandler"]}]}]},{"tag":"REmpty"}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[215,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[222,7]}},{"children":[],"comments":"A default implementation of `main` which renders a component to the\ndocument body.\n","title":"defaultMain","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["dom",{"tag":"TypeConstructor","contents":[["DOM"],"DOM"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[264,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[269,37]}},{"children":[],"comments":"This function captures the state of the `Spec` as a function argument.\n\nThis can sometimes be useful in complex scenarios involving the `focus` and\n`foreach` combinators.\n","title":"withState","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[280,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[283,33]}},{"children":[],"comments":"Change the state type, using a lens to focus on a part of the state.\n\nFor example, to combine two `Spec`s, combining state types using `Tuple`\nand action types using `Either`:\n\n```purescript\nspec1 :: Spec _ S1 _ A1\nspec2 :: Spec _ S2 _ A2\n\nspec :: Spec _ (Tuple S1 S2) _ (Either A1 A2)\nspec = focus _1 _Left spec1 <> focus _2 _Right spec2\n```\n\nActions will only be handled when the prism matches its input, otherwise\nthe action will be ignored, and should be handled by some other component.\n","title":"focus","info":{"declType":"value","type":{"tag":"ForAll","contents":["action2",{"tag":"ForAll","contents":["action1",{"tag":"ForAll","contents":["state1",{"tag":"ForAll","contents":["state2",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeVar","contents":"state2"}]},{"tag":"TypeVar","contents":"state1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeVar","contents":"action2"}]},{"tag":"TypeVar","contents":"action1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state1"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state2"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action2"}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[307,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[312,35]}},{"children":[],"comments":"A variant of `focus` which only changes the state type, by applying a `Lens`.\n","title":"focusState","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["state1",{"tag":"ForAll","contents":["state2",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeVar","contents":"state2"}]},{"tag":"TypeVar","contents":"state1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state1"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state2"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[327,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[331,34]}},{"children":[],"comments":"A variant of `focus` which only changes the action type, by applying a `Prism`,\neffectively matching some subset of a larger action type.\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["action2",{"tag":"ForAll","contents":["action1",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeVar","contents":"action2"}]},{"tag":"TypeVar","contents":"action1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action2"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[336,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[340,34]}},{"children":[],"comments":"Create a component which renders an optional subcomponent.\n","title":"split","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["state2",{"tag":"ForAll","contents":["state1",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeVar","contents":"state1"}]},{"tag":"TypeVar","contents":"state2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state2"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state1"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[344,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[348,34]}},{"children":[],"comments":"Create a component whose state is described by a list, displaying one subcomponent\nfor each entry in the list.\n\nThe action type is modified to take the index of the originating subcomponent as an\nadditional argument.\n","title":"foreach","info":{"declType":"value","type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["props",{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"action"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"TypeVar","contents":"props"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeVar","contents":"action"}]}}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[370,1],"name":"/private/tmp/pursuit-staging/.psc-package/psc-0.11.3/thermite/v4.0.0/src/Thermite.purs","end":[373,52]}}]}],"resolvedDependencies":{"purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-maps":"3.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-profunctor":"3.0.0","purescript-media-types":"3.0.0","purescript-arrays":"4.0.1","purescript-react-dom":"3.0.0","purescript-maybe":"3.0.0","purescript-profunctor-lenses":"3.0.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-dom":"4.0.0","purescript-monoid":"3.0.0","purescript-coroutines":"4.0.0","purescript-aff":"3.0.0","purescript-react":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.0.0","purescript-functors":"2.0.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-const":"3.0.0","purescript-freet":"3.0.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-js-date":"4.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-parallel":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-strings":"3.0.0","purescript-identity":"3.0.0","purescript-foreign":"4.0.0","purescript-sets":"3.0.0","purescript-lists":"4.0.1","purescript-nullable":"3.0.0","purescript-datetime":"3.0.0","purescript-functions":"3.0.0"},"version":"4.0.0","github":["paf31","purescript-thermite"],"versionTag":"v4.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","DOM.HTML.Document":"purescript-dom","Control.Monad.Eff.Ref":"purescript-refs","DOM.CSS.Event.Types":"purescript-dom","DOM.WebStorage.Types":"purescript-dom","DOM.XHR.Types":"purescript-dom","DOM.HTML.HTMLParamElement":"purescript-dom","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","DOM.Event.MouseEvent":"purescript-dom","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","DOM.HTML.HTMLTableSectionElement":"purescript-dom","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","DOM.HTML.HTMLOutputElement":"purescript-dom","ReactDOM":"purescript-react-dom","Data.Ord":"purescript-prelude","DOM.Event.EventTarget":"purescript-dom","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","DOM.HTML.HTMLMediaElement.CanPlayType":"purescript-dom","DOM.HTML.HTMLDataListElement":"purescript-dom","Data.Lens":"purescript-profunctor-lenses","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","DOM.XHR.FormData":"purescript-dom","Control.Biapplicative":"purescript-bifunctors","DOM.HTML.HTMLTextAreaElement":"purescript-dom","DOM.Event.ClipboardEvent":"purescript-dom","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Data.Lens.Prism.Maybe":"purescript-profunctor-lenses","Data.Bounded":"purescript-prelude","DOM.HTML.HTMLOListElement":"purescript-dom","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","React.DOM.SVG":"purescript-react","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","DOM.Event.WheelEvent":"purescript-dom","DOM.HTML.Event.ErrorEvent":"purescript-dom","DOM.HTML.HTMLObjectElement":"purescript-dom","Control.Monad.Aff.AVar":"purescript-aff","DOM.HTML.HTMLLIElement":"purescript-dom","Control.Apply":"purescript-prelude","DOM.HTML.Event.DragEvent":"purescript-dom","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","DOM.HTML.HTMLSourceElement":"purescript-dom","DOM.HTML.HTMLMetaElement":"purescript-dom","Data.Lens.Lens.Product":"purescript-profunctor-lenses","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Foreign.Index":"purescript-foreign","DOM.HTML.HTMLFieldSetElement":"purescript-dom","DOM.HTML.URL":"purescript-dom","Data.Monoid.Additive":"purescript-monoid","Data.Lens.Prism.Coproduct":"purescript-profunctor-lenses","Data.Lens.Lens":"purescript-profunctor-lenses","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","DOM.HTML.Types":"purescript-dom","DOM.HTML.HTMLElement":"purescript-dom","DOM.HTML.HTMLDataElement":"purescript-dom","Data.Lens.Internal.Forget":"purescript-profunctor-lenses","DOM.HTML.HTMLLinkElement":"purescript-dom","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","DOM.HTML.HTMLOptionElement":"purescript-dom","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","DOM.HTML.HTMLKeygenElement":"purescript-dom","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Lens.Indexed":"purescript-profunctor-lenses","Control.Coroutine":"purescript-coroutines","Data.StrMap.Unsafe":"purescript-maps","DOM.Node.NonElementParentNode":"purescript-dom","DOM.File.FileReader":"purescript-dom","Data.Lens.Zoom":"purescript-profunctor-lenses","Data.Lens.Iso.Newtype":"purescript-profunctor-lenses","DOM.HTML.HTMLButtonElement":"purescript-dom","DOM.HTML.HTMLTableColElement":"purescript-dom","DOM.Node.Node":"purescript-dom","Data.Lens.Internal.Wander":"purescript-profunctor-lenses","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","DOM.HTML.HTMLInputElement":"purescript-dom","Control.Alternative":"purescript-control","Data.Lens.Lens.Tuple":"purescript-profunctor-lenses","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","DOM.HTML.HTMLModElement":"purescript-dom","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","React.DOM.SVG.Dynamic":"purescript-react","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Lens.Internal.Exchange":"purescript-profunctor-lenses","DOM.Event.CompositionEvent":"purescript-dom","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","DOM.Event.Event":"purescript-dom","DOM.File.File":"purescript-dom","DOM.HTML.Location":"purescript-dom","DOM.WebStorage.Event.Types":"purescript-dom","DOM":"purescript-dom","React.DOM.Props":"purescript-react","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Lens.Internal.Shop":"purescript-profunctor-lenses","Data.Lens.Internal.Tagged":"purescript-profunctor-lenses","DOM.HTML.HTMLLegendElement":"purescript-dom","DOM.File.FileReader.ReadyState":"purescript-dom","Data.List.Types":"purescript-lists","React":"purescript-react","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","DOM.Node.Document":"purescript-dom","Control.Monad.Writer.Class":"purescript-transformers","DOM.HTML.History":"purescript-dom","Data.Profunctor.Strong":"purescript-profunctor","Data.Lens.Internal.Market":"purescript-profunctor-lenses","DOM.HTML.Event.HashChangeEvent":"purescript-dom","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Data.Lens.Common":"purescript-profunctor-lenses","React.DOM":"purescript-react","Data.Lens.Getter":"purescript-profunctor-lenses","Control.Monad.RWS.Trans":"purescript-transformers","DOM.Node.ChildNode":"purescript-dom","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","DOM.HTML.HTMLOptGroupElement":"purescript-dom","Data.String.Regex.Unsafe":"purescript-strings","DOM.HTML.HTMLIFrameElement":"purescript-dom","DOM.Node.NodeList":"purescript-dom","DOM.HTML.HTMLTableRowElement":"purescript-dom","Data.Set":"purescript-sets","DOM.HTML.HTMLMediaElement":"purescript-dom","DOM.HTML.HTMLMapElement":"purescript-dom","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Lens.Traversal":"purescript-profunctor-lenses","DOM.HTML.Navigator":"purescript-dom","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","DOM.Node.NonDocumentTypeChildNode":"purescript-dom","Data.EuclideanRing":"purescript-prelude","DOM.File.FileList":"purescript-dom","Data.Functor.Invariant":"purescript-invariant","DOM.HTML.Window":"purescript-dom","DOM.HTML.HTMLAreaElement":"purescript-dom","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","DOM.HTML.HTMLTrackElement":"purescript-dom","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","DOM.HTML.HTMLTableHeaderCellElement":"purescript-dom","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","DOM.HTML.HTMLScriptElement":"purescript-dom","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","DOM.HTML.HTMLImageElement":"purescript-dom","Data.Functor.Product.Nested":"purescript-functors","Data.Lens.Types":"purescript-profunctor-lenses","DOM.HTML.HTMLStyleElement":"purescript-dom","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","DOM.HTML.Event.Types":"purescript-dom","Data.Bifunctor":"purescript-bifunctors","DOM.HTML.Event.DataTransfer":"purescript-dom","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Data.MediaType":"purescript-media-types","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Control.Parallel":"purescript-parallel","Data.Lens.Index":"purescript-profunctor-lenses","Data.Lens.Internal.Re":"purescript-profunctor-lenses","Control.MonadPlus":"purescript-control","DOM.HTML.HTMLQuoteElement":"purescript-dom","React.DOM.Dynamic":"purescript-react","Data.Lens.Lens.Void":"purescript-profunctor-lenses","DOM.Event.FocusEvent":"purescript-dom","DOM.Node.ParentNode":"purescript-dom","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","DOM.Websocket.Event.Types":"purescript-dom","Data.DateTime.Instant":"purescript-datetime","Data.Lens.Internal.Indexed":"purescript-profunctor-lenses","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","DOM.Node.HTMLCollection":"purescript-dom","DOM.HTML.HTMLTimeElement":"purescript-dom","Control.Monad.Except.Trans":"purescript-transformers","DOM.HTML.HTMLProgressElement":"purescript-dom","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","DOM.HTML.HTMLBaseElement":"purescript-dom","DOM.HTML":"purescript-dom","DOM.Node.Types":"purescript-dom","Data.Lens.Fold":"purescript-profunctor-lenses","DOM.HTML.HTMLTrackElement.ReadyState":"purescript-dom","Data.Lens.Setter":"purescript-profunctor-lenses","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Lens.Prism.Either":"purescript-profunctor-lenses","DOM.HTML.HTMLCanvasElement":"purescript-dom","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","DOM.WebStorage.Event.StorageEvent":"purescript-dom","DOM.HTML.HTMLTitleElement":"purescript-dom","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","DOM.HTML.Event.DragEvent.DataTransfer":"purescript-dom","Data.List.NonEmpty":"purescript-lists","DOM.Node.Element":"purescript-dom","DOM.HTML.HTMLTableCellElement":"purescript-dom","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Lens.Lens.Unit":"purescript-profunctor-lenses","Data.Functor.Coproduct":"purescript-functors","DOM.HTML.HTMLSelectElement":"purescript-dom","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","DOM.HTML.SelectionMode":"purescript-dom","Data.Lens.Fold.Partial":"purescript-profunctor-lenses","DOM.HTML.HTMLTemplateElement":"purescript-dom","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","DOM.HTML.HTMLEmbedElement":"purescript-dom","Control.Monad.Eff.Class":"purescript-eff","DOM.Util.FFI":"purescript-dom","DOM.File.Types":"purescript-dom","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","DOM.HTML.HTMLMediaElement.NetworkState":"purescript-dom","Partial":"purescript-partial","DOM.Websocket.Event.CloseEvent":"purescript-dom","Control.Comonad.Env.Trans":"purescript-transformers","DOM.HTML.HTMLMeterElement":"purescript-dom","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","DOM.File.Blob":"purescript-dom","DOM.Event.KeyboardEvent":"purescript-dom","Control.Monad.Aff.Unsafe":"purescript-aff","DOM.HTML.HTMLLabelElement":"purescript-dom","Data.Monoid.Multiplicative":"purescript-monoid","DOM.WebStorage.Storage":"purescript-dom","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","DOM.HTML.HTMLFormElement":"purescript-dom","DOM.HTML.Event.EventTypes":"purescript-dom","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","DOM.Node.NodeType":"purescript-dom","Control.Monad.Free.Trans":"purescript-freet","Data.Bifunctor.Join":"purescript-bifunctors","DOM.HTML.HTMLTableElement":"purescript-dom","DOM.HTML.HTMLMediaElement.ReadyState":"purescript-dom","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Lens.Prism":"purescript-profunctor-lenses","Data.String.Regex.Flags":"purescript-strings","DOM.HTML.HTMLAnchorElement":"purescript-dom","Data.Either":"purescript-either","DOM.HTML.HTMLVideoElement":"purescript-dom","Control.Applicative":"purescript-prelude","Data.Lens.Internal.Focusing":"purescript-profunctor-lenses","Data.Lens.Iso":"purescript-profunctor-lenses","Data.Op":"purescript-contravariant","Data.MediaType.Common":"purescript-media-types","Data.Lens.At":"purescript-profunctor-lenses","Control.Monad.Writer":"purescript-transformers","DOM.Node.DocumentType":"purescript-dom","Data.Profunctor.Choice":"purescript-profunctor","DOM.Event.EventPhase":"purescript-dom","DOM.Event.Types":"purescript-dom","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.3"}