{"uploader":"athanclark","packageMeta":{"repository":{"url":"git://github.com/paf31/purescript-thermite.git","type":"git"},"resolutions":{"purescript-react":"^6.1.0"},"ignore":["**/.*","node_modules","bower_components","test","tests"],"authors":[{"email":"paf31@cantab.net","name":"Phil Freeman"}],"dependencies":{"purescript-react-dom":"^6.0.0","purescript-profunctor-lenses":"^5.0.0","purescript-web-html":"^1.2.0","purescript-coroutines":"^5.0.0","purescript-aff":"^5.0.2","purescript-react":"^6.1.0","purescript-freet":"^4.0.0"},"name":"purescript-thermite","license":["MIT"]},"tagTime":"2019-02-20T01:42:25+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-coroutines","item":["Control","Coroutine"]},"declarations":[{"children":[],"comments":"A type synonym for a `Co`routine which \"cotransforms\" values, emitting an output\nbefore waiting for its input.\n","title":"CoTransformer","info":{"arguments":[["i",null],["o",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Coroutine"],"Co"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransform"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]}}]}},"sourceSpan":{"start":[181,1],"name":"/home/athan/dev/purescript-thermite/bower_components/purescript-coroutines/src/Control/Coroutine.purs","end":[181,46]}},{"children":[],"comments":"Cotransform input values.\n","title":"cotransform","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["o",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]},{"annotation":[],"tag":"TypeVar","contents":"o"}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[184,1],"name":"/home/athan/dev/purescript-thermite/bower_components/purescript-coroutines/src/Control/Coroutine.purs","end":[184,67]}}]}],"name":"Thermite","comments":"Thermite provides a simple model-view-action abstraction on top of `purescript-react`:\n\n- A `Spec` defines a `state` type which acts as the _model_.\n- The `Spec` also defines an `action` type which acts as the set of _actions_.\n- The `view` is a `Render` function which produces a React element for the current state.\n- The `PerformAction` function can be used to update the state based on an action.\n\nA `Spec` can be created using its newtype constructor, and turned into a React component class using\n`createClass`.\n\nThermite also provides type class instances and lens combinators for composing `Spec`s.\n","declarations":[{"children":[],"comments":"A type synonym for an action handler, which takes an action, the current props\nand state for the component, and return a `CoTransformer` which will emit\nstate updates asynchronously.\n\n`Control.Coroutine.cotransform` can be used to emit state update functions\nand wait for the new state value. If `cotransform` returns `Nothing`, then\nthe state could not be updated. Usually, this will not happen, but it is possible\nin certain use cases involving `split` and `foreach`.\n","title":"PerformAction","info":{"arguments":[["state",null],["props",null],["action",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[74,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[78,59]}},{"children":[],"comments":"A default `PerformAction` action implementation which ignores all actions.\n","title":"defaultPerformAction","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"PerformAction"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},null]},null]},null]}},"sourceSpan":{"start":[81,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[81,84]}},{"children":[],"comments":"A function capable of dispatching an action type, invoking `PerformAction`.\n","title":"Dispatch","info":{"arguments":[["action",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[93,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[93,45]}},{"children":[],"comments":"A rendering function, which takes an action handler function, the current state and\nprops, an array of child nodes, and returns a HTML document.\n","title":"Render","info":{"arguments":[["state",null],["props",null],["action",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Dispatch"]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}]}]}]}},"sourceSpan":{"start":[97,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[102,30]}},{"children":[],"comments":"A default `Render` implementation which renders nothing.\n\nThis is useful when just `append`ing action handlers.\n","title":"defaultRender","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Render"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},null]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[108,70]}},{"children":[],"comments":"Replace the current component state.\n","title":"writeState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]}]},null]}},"sourceSpan":{"start":[85,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[85,100]}},{"children":[],"comments":"An alias for `cotransform` - apply a function to the current component state.\n","title":"modifyState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Coroutine"],"CoTransformer"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]}]},null]}},"sourceSpan":{"start":[89,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[89,112]}},{"children":[],"comments":"Thermite assumes _all_ thermite-created components have children. This is a convenience type\nwhen specifying the `children :: Children` prop field of a `Spec`.\n","title":"WithChildren","info":{"arguments":[["props",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["children",{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"Children"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]}},"sourceSpan":{"start":[114,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[114,59]}},{"children":[{"comments":null,"title":"Spec","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["performAction",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"PerformAction"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},{"annotation":[],"tag":"RCons","contents":["render",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Render"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},{"annotation":[],"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"semigroupSpec","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]}},"sourceSpan":{"start":[170,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[170,62]}},{"comments":null,"title":"monoidSpec","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]}},"sourceSpan":{"start":[176,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[176,56]}}],"comments":"A component specification, which can be passed to `createClass`.\n\nFor example:\n\n```purescript\nimport qualified React.DOM as R\n\ndata Action = Increment\n\nspec :: Spec Int _ Action\nspec = Spec {performAction, render}\n  where\n  render :: Render Int _ Action\n  render _ _ n _ = [ R.text (show n) ]\n\n  performAction :: PerformAction Int _ Action\n  performAction Increment _ n k = k (n + 1)\n```\n\nThe `Monoid` instance for `Spec` will compose `Spec`s by placing rendered\nHTML elements next to one another, and performing actions in sequence.\n","title":"Spec","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["state",null],["props",null],["action",null]]},"sourceSpan":{"start":[137,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[140,4]}},{"children":[],"comments":"A `Lens` for accessing the `PerformAction` portion of a `Spec`.\n","title":"_performAction","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"PerformAction"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[153,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[153,112]}},{"children":[],"comments":"A `Lens` for accessing the `Render` portion of a `Spec`.\n\nThis can be useful when wrapping a `Render` function in order to frame a\nset of controls with some containing element. For example:\n\n```purescript\nwrap :: Spec State _ Action -> Spec State _ Action\nwrap = over _render \\child dispatch props state childre  ->\n  [ R.div [ RP.className \"wrapper\" ] [ child dispatch props state children ] ]\n```\n","title":"_render","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Render"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}}]},null]},null]},null]}},"sourceSpan":{"start":[166,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[166,98]}},{"children":[],"comments":"Create a React component class from a Thermite component `Spec`.\n","title":"createClass","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"WithChildren"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactClass"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"WithChildren"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[180,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[185,43]}},{"children":[],"comments":"Create a React component constructor from a Thermite component `Spec`.\n\nThis function is a low-level alternative to `createClass`, used when the React\ncomponent constructor needs to be modified before being turned into a component class,\ne.g. by adding additional lifecycle methods.\n\n__Note__: React assumes _all_ react components have a _record_-based state; when constructing\nand composing pure Thermite `Spec`s, you are free to decide whichever state construct you wish.\nHowever, when finally turning a `Spec` into to React-friendly code, it must be a `Record`.\n","title":"createReactConstructor","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"WithChildren"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["constructor",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactClassConstructor"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"WithChildren"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactSpecRequired"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"REmpty"}]}}]},{"annotation":[],"tag":"RCons","contents":["dispatcher",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactThis"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"WithChildren"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Dispatch"]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[197,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[203,7]}},{"children":[],"comments":"A default implementation of `main` which renders a component to the\ndocument body.\n","title":"defaultMain","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["given",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["React"],"ReactPropFields"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"props"},{"annotation":[],"tag":"TypeVar","contents":"given"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"WithChildren"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"given"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[239,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[246,17]}},{"children":[],"comments":"This function captures the state of the `Spec` as a function argument.\n\nThis can sometimes be useful in complex scenarios involving the `focus` and\n`foreach` combinators.\n","title":"withState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},null]},null]},null]}},"sourceSpan":{"start":[259,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[262,29]}},{"children":[],"comments":"Change the state type, using a lens to focus on a part of the state.\n\nFor example, to combine two `Spec`s, combining state types using `Tuple`\nand action types using `Either`:\n\n```purescript\nspec1 :: Spec S1 _ A1\nspec2 :: Spec S2 _ A2\n\nspec :: Spec (Tuple S1 S2) _ (Either A1 A2)\nspec = focus _1 _Left spec1 <> focus _2 _Right spec2\n```\n\nActions will only be handled when the prism matches its input, otherwise\nthe action will be ignored, and should be handled by some other component.\n","title":"focus","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action2",{"annotation":[],"tag":"ForAll","contents":["action1",{"annotation":[],"tag":"ForAll","contents":["state1",{"annotation":[],"tag":"ForAll","contents":["state2",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"annotation":[],"tag":"TypeVar","contents":"state2"}]},{"annotation":[],"tag":"TypeVar","contents":"state1"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"annotation":[],"tag":"TypeVar","contents":"action2"}]},{"annotation":[],"tag":"TypeVar","contents":"action1"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state1"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action1"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state2"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action2"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[286,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[291,31]}},{"children":[],"comments":"A variant of `focus` which only changes the state type, by applying a `Lens`.\n","title":"focusState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["state1",{"annotation":[],"tag":"ForAll","contents":["state2",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"annotation":[],"tag":"TypeVar","contents":"state2"}]},{"annotation":[],"tag":"TypeVar","contents":"state1"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state1"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state2"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[306,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[310,30]}},{"children":[],"comments":"A variant of `focus` which only changes the action type, by applying a `Prism`,\neffectively matching some subset of a larger action type.\n","title":"match","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action2",{"annotation":[],"tag":"ForAll","contents":["action1",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"annotation":[],"tag":"TypeVar","contents":"action2"}]},{"annotation":[],"tag":"TypeVar","contents":"action1"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action1"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action2"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[315,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[319,30]}},{"children":[],"comments":"Create a component which renders an optional subcomponent.\n","title":"split","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["state2",{"annotation":[],"tag":"ForAll","contents":["state1",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"annotation":[],"tag":"TypeVar","contents":"state1"}]},{"annotation":[],"tag":"TypeVar","contents":"state2"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state2"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state1"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[323,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[327,30]}},{"children":[],"comments":"Create a component whose state is described by an array, displaying one subcomponent\nfor each entry in the list.\n\nThe action type is modified to take the index of the originating subcomponent as an\nadditional argument.\n","title":"foreach","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[349,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[352,49]}},{"children":[],"comments":null,"title":"cmapProps","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"ForAll","contents":["props'",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"props'"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Thermite"],"Spec"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"props'"}]},{"annotation":[],"tag":"TypeVar","contents":"action"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[142,1],"name":"/home/athan/dev/purescript-thermite/src/Thermite.purs","end":[146,30]}}]}],"resolvedDependencies":{"purescript-proxy":"3.0.0","purescript-web-storage":"2.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-ordered-collections":"1.6.0","purescript-control":"4.1.0","purescript-either":"4.1.1","purescript-profunctor":"4.0.0","purescript-media-types":"4.0.1","purescript-web-events":"1.0.1","purescript-arrays":"5.2.0","purescript-react-dom":"6.0.0","purescript-maybe":"4.0.1","purescript-profunctor-lenses":"5.0.0","purescript-type-equality":"3.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.1.0","purescript-web-html":"1.2.0","purescript-lazy":"4.0.0","purescript-foreign-object":"1.1.0","purescript-now":"4.0.0","purescript-coroutines":"5.0.0","purescript-aff":"5.1.0","purescript-react":"6.1.0","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.0.0","purescript-gen":"2.1.0","purescript-typelevel-prelude":"3.0.0","purescript-functors":"3.1.1","purescript-prelude":"4.1.0","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-const":"4.1.0","purescript-record":"1.0.0","purescript-freet":"4.0.0","purescript-transformers":"4.2.0","purescript-globals":"4.0.0","purescript-js-date":"6.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.1","purescript-web-file":"1.2.0","purescript-web-dom":"1.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.1","purescript-strings":"4.0.1","purescript-identity":"4.1.0","purescript-foreign":"5.0.0","purescript-lists":"5.4.0","purescript-nullable":"4.1.1","purescript-datetime":"4.1.1","purescript-functions":"4.0.0"},"version":"6.0.1","github":["paf31","purescript-thermite"],"versionTag":"v6.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Web.DOM.NodeList":"purescript-web-dom","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Web.HTML.HTMLDataListElement":"purescript-web-html","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Web.HTML.HTMLTextAreaElement":"purescript-web-html","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Web.HTML.HTMLMediaElement.CanPlayType":"purescript-web-html","Effect.Uncurried":"purescript-effect","Web.DOM.ChildNode":"purescript-web-dom","Data.Char.Gen":"purescript-strings","Web.HTML.HTMLHRElement":"purescript-web-html","Web.DOM.NonDocumentTypeChildNode":"purescript-web-dom","Effect.Now":"purescript-now","Data.String.NonEmpty":"purescript-strings","Web.File.FileReader.ReadyState":"purescript-web-file","Effect":"purescript-effect","Web.HTML.HTMLLegendElement":"purescript-web-html","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Web.HTML.Event.HashChangeEvent":"purescript-web-html","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Web.HTML.Event.BeforeUnloadEvent":"purescript-web-html","Web.DOM.MutationObserver":"purescript-web-dom","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","ReactDOM":"purescript-react-dom","Data.Ord":"purescript-prelude","Web.HTML.History":"purescript-web-html","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-prelude","Web.HTML.Event.PopStateEvent.EventTypes":"purescript-web-html","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Lens":"purescript-profunctor-lenses","Data.Bitraversable":"purescript-foldable-traversable","Web.DOM.ParentNode":"purescript-web-dom","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Record.Builder":"purescript-record","Web.HTML.Event.DragEvent.EventTypes":"purescript-web-html","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Web.HTML.HTMLSpanElement":"purescript-web-html","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Lens.Prism.Maybe":"purescript-profunctor-lenses","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLOptionElement":"purescript-web-html","Data.Int":"purescript-integers","Data.Lens.Internal.Grating":"purescript-profunctor-lenses","Web.DOM.HTMLCollection":"purescript-web-dom","Data.Profunctor.Cochoice":"purescript-profunctor","React.DOM.SVG":"purescript-react","Web.HTML.Event.TrackEvent.EventTypes":"purescript-web-html","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Web.HTML.HTMLDivElement":"purescript-web-html","Control.Monad.Writer.Trans":"purescript-transformers","Web.File.FileReader":"purescript-web-file","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Foreign.Object":"purescript-foreign-object","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Web.HTML.HTMLKeygenElement":"purescript-web-html","Data.Lens.Lens.Product":"purescript-profunctor-lenses","Control.Monad":"purescript-prelude","Web.HTML.Event.EventTypes":"purescript-web-html","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Web.HTML.HTMLLabelElement":"purescript-web-html","Web.HTML.HTMLAudioElement":"purescript-web-html","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Web.HTML.HTMLFormElement":"purescript-web-html","Data.Profunctor.Split":"purescript-profunctor","Web.DOM.Element":"purescript-web-dom","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Lens.Prism.Coproduct":"purescript-profunctor-lenses","Data.Map.Gen":"purescript-ordered-collections","Data.Lens.Lens":"purescript-profunctor-lenses","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Web.HTML.HTMLMediaElement.ReadyState":"purescript-web-html","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Web.HTML.HTMLTableElement":"purescript-web-html","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Data.Lens.Internal.Forget":"purescript-profunctor-lenses","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Web.HTML.HTMLLIElement":"purescript-web-html","Web.HTML.HTMLMetaElement":"purescript-web-html","Web.HTML.HTMLOListElement":"purescript-web-html","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Web.HTML.Event.DragEvent":"purescript-web-html","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Web.HTML.Event.PopStateEvent":"purescript-web-html","Web.Event.CustomEvent":"purescript-web-events","Web.HTML.Event.ErrorEvent":"purescript-web-html","Control.Comonad.Traced.Trans":"purescript-transformers","Web.DOM.Text":"purescript-web-dom","Web.HTML.HTMLObjectElement":"purescript-web-html","Data.Lens.Indexed":"purescript-profunctor-lenses","Web.HTML.HTMLSourceElement":"purescript-web-html","Control.Coroutine":"purescript-coroutines","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Profunctor.Clown":"purescript-profunctor","Data.Lens.Zoom":"purescript-profunctor-lenses","Data.Lens.Iso.Newtype":"purescript-profunctor-lenses","Web.DOM.NodeType":"purescript-web-dom","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Lens.Internal.Wander":"purescript-profunctor-lenses","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","Control.Alternative":"purescript-control","Web.HTML.HTMLSelectElement":"purescript-web-html","Data.Lens.Lens.Tuple":"purescript-profunctor-lenses","Data.Semiring":"purescript-prelude","Web.HTML.HTMLCanvasElement":"purescript-web-html","Data.Exists":"purescript-exists","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Web.HTML.HTMLTableDataCellElement":"purescript-web-html","React.DOM.SVG.Dynamic":"purescript-react","Web.HTML.HTMLTableCaptionElement":"purescript-web-html","Data.Functor.App":"purescript-functors","Data.Lens.Internal.Exchange":"purescript-profunctor-lenses","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Web.HTML.HTMLTemplateElement":"purescript-web-html","Web.HTML.SelectionMode":"purescript-web-html","Web.HTML.HTMLTitleElement":"purescript-web-html","Web.HTML.Event.PageTransitionEvent.EventTypes":"purescript-web-html","Web.HTML.HTMLTableCellElement":"purescript-web-html","React.DOM.Props":"purescript-react","Control.Comonad.Store.Trans":"purescript-transformers","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Lens.Internal.Shop":"purescript-profunctor-lenses","Data.Lens.Internal.Tagged":"purescript-profunctor-lenses","Data.Lens.Record":"purescript-profunctor-lenses","Web.HTML.HTMLUListElement":"purescript-web-html","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","React":"purescript-react","Data.Functor":"purescript-prelude","Web.HTML.HTMLParamElement":"purescript-web-html","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Web.HTML.HTMLTableSectionElement":"purescript-web-html","Data.Lens.Grate":"purescript-profunctor-lenses","Data.Profunctor.Strong":"purescript-profunctor","Data.Lens.Internal.Market":"purescript-profunctor-lenses","Control.Monad.Except":"purescript-transformers","Web.Event.EventTarget":"purescript-web-events","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Web.HTML.HTMLOutputElement":"purescript-web-html","Web.DOM.DocumentType":"purescript-web-dom","Data.Lens.Common":"purescript-profunctor-lenses","React.DOM":"purescript-react","Data.Lens.Getter":"purescript-profunctor-lenses","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Web.HTML.HTMLQuoteElement":"purescript-web-html","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Foreign.Object.ST":"purescript-foreign-object","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Web.DOM.Internal.Types":"purescript-web-dom","Data.Lens.Traversal":"purescript-profunctor-lenses","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Web.HTML.Event.DataTransfer":"purescript-web-html","Data.EuclideanRing":"purescript-prelude","Web.HTML.Event.TrackEvent":"purescript-web-html","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Web.HTML.HTMLVideoElement":"purescript-web-html","Web.HTML.HTMLAnchorElement":"purescript-web-html","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Web.DOM.CharacterData":"purescript-web-dom","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Web.HTML.HTMLDocument":"purescript-web-html","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Data.Lens.Types":"purescript-profunctor-lenses","Web.HTML.Event.PageTransitionEvent":"purescript-web-html","Control.Comonad.Env.Class":"purescript-transformers","Web.Event.EventPhase":"purescript-web-events","Web.HTML.HTMLOptGroupElement":"purescript-web-html","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Web.HTML.HTMLIFrameElement":"purescript-web-html","Data.Either.Nested":"purescript-either","Web.HTML.Navigator":"purescript-web-html","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Web.File.FileList":"purescript-web-file","Data.Monoid.Disj":"purescript-prelude","Data.MediaType":"purescript-media-types","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Web.HTML.HTMLMapElement":"purescript-web-html","Control.Parallel":"purescript-parallel","Data.Lens.Index":"purescript-profunctor-lenses","Data.Lens.Internal.Re":"purescript-profunctor-lenses","Control.MonadPlus":"purescript-control","React.DOM.Dynamic":"purescript-react","Data.Lens.Lens.Void":"purescript-profunctor-lenses","Web.DOM.MutationRecord":"purescript-web-dom","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Web.HTML.HTMLMediaElement":"purescript-web-html","Web.HTML.HTMLTableRowElement":"purescript-web-html","Data.DateTime.Instant":"purescript-datetime","Data.Lens.Internal.Indexed":"purescript-profunctor-lenses","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Web.HTML.HTMLEmbedElement":"purescript-web-html","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Web.File.Url":"purescript-web-file","Web.HTML.HTMLDocument.ReadyState":"purescript-web-html","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Web.HTML.HTMLMediaElement.NetworkState":"purescript-web-html","Web.DOM.Comment":"purescript-web-dom","Web.File.Blob":"purescript-web-file","Data.Lens.Fold":"purescript-profunctor-lenses","Data.Lens.Setter":"purescript-profunctor-lenses","Web.HTML.HTMLMeterElement":"purescript-web-html","Web.DOM.ProcessingInstruction":"purescript-web-dom","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Lens.Prism.Either":"purescript-profunctor-lenses","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Web.HTML.HTMLParagraphElement":"purescript-web-html","Web.DOM":"purescript-web-dom","Data.List.Lazy.NonEmpty":"purescript-lists","Web.HTML.HTMLButtonElement":"purescript-web-html","React.SyntheticEvent":"purescript-react","Data.Ordering":"purescript-prelude","Web.HTML.HTMLModElement":"purescript-web-html","Data.Lens.Lens.Unit":"purescript-profunctor-lenses","Data.Functor.Coproduct":"purescript-functors","Web.Event.Event":"purescript-web-events","Web.HTML.HTMLDListElement":"purescript-web-html","Control.Monad.Cont.Class":"purescript-transformers","Web.File.File":"purescript-web-file","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Web.HTML.Location":"purescript-web-html","Data.Lens.Fold.Partial":"purescript-profunctor-lenses","Web.HTML.ValidityState":"purescript-web-html","Math":"purescript-math","Web.HTML.HTMLTableColElement":"purescript-web-html","Data.Set.NonEmpty":"purescript-ordered-collections","Web.Storage.Storage":"purescript-web-storage","Control.Comonad.Trans.Class":"purescript-transformers","Web.HTML.HTMLInputElement":"purescript-web-html","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Web.HTML.HTMLTimeElement":"purescript-web-html","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Web.HTML":"purescript-web-html","Web.HTML.HTMLProgressElement":"purescript-web-html","Web.HTML.HTMLTrackElement.ReadyState":"purescript-web-html","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Web.DOM.NonElementParentNode":"purescript-web-dom","Web.HTML.HTMLBaseElement":"purescript-web-html","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Web.DOM.Node":"purescript-web-dom","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Web.Storage.Event.StorageEvent":"purescript-web-storage","Web.HTML.HTMLElement":"purescript-web-html","Data.Array.ST":"purescript-arrays","Web.Event.Internal.Types":"purescript-web-events","Foreign":"purescript-foreign","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Web.Internal.FFI":"purescript-web-events","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Control.Monad.Free.Trans":"purescript-freet","Web.HTML.HTMLFieldSetElement":"purescript-web-html","Web.HTML.HTMLLinkElement":"purescript-web-html","Web.HTML.Event.HashChangeEvent.EventTypes":"purescript-web-html","Data.Bifunctor.Join":"purescript-bifunctors","Web.HTML.HTMLBRElement":"purescript-web-html","Web.HTML.HTMLHeadingElement":"purescript-web-html","Data.Lens.Internal.Zipping":"purescript-profunctor-lenses","Web.HTML.HTMLHeadElement":"purescript-web-html","Web.HTML.HTMLDataElement":"purescript-web-html","Web.HTML.HTMLBodyElement":"purescript-web-html","Data.Bifoldable":"purescript-foldable-traversable","Web.HTML.Event.BeforeUnloadEvent.EventTypes":"purescript-web-html","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Lens.Prism":"purescript-profunctor-lenses","Web.HTML.Window":"purescript-web-html","Web.HTML.HTMLTableHeaderCellElement":"purescript-web-html","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.Lens.Internal.Focusing":"purescript-profunctor-lenses","Data.Lens.Iso":"purescript-profunctor-lenses","Data.FoldableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLImageElement":"purescript-web-html","Data.Op":"purescript-contravariant","Web.HTML.HTMLPreElement":"purescript-web-html","Web.HTML.HTMLScriptElement":"purescript-web-html","Record.Unsafe":"purescript-prelude","Data.MediaType.Common":"purescript-media-types","Web.DOM.DocumentFragment":"purescript-web-dom","Data.Lens.At":"purescript-profunctor-lenses","Control.Monad.Writer":"purescript-transformers","Web.DOM.DOMTokenList":"purescript-web-dom","Web.HTML.HTMLAreaElement":"purescript-web-html","Web.DOM.Document":"purescript-web-dom","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Web.HTML.HTMLTrackElement":"purescript-web-html","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings","Web.HTML.HTMLStyleElement":"purescript-web-html"},"compilerVersion":"0.12.2"}