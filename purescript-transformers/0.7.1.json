{"uploader":"paf31","packageMeta":{"homepage":"https://github.com/purescript/purescript-transformers","repository":{"url":"git://github.com/purescript/purescript-transformers.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-console":"^0.1.0"},"authors":[{"email":"gary.burgess@gmail.com","name":"Gary Burgess"},{"email":"jones3.hardy@gmail.com","name":"Hardy Jones"},{"email":"thul.eric@gmail.com","name":"Eric Thul"},{"email":"paf31@cantab.net","name":"Phil Freeman"},{"email":"brian@brianmckenna.org","name":"Brian McKenna"}],"dependencies":{"purescript-distributive":"^0.5.0","purescript-unfoldable":"^0.4.0","purescript-lazy":"^0.4.0","purescript-tailrec":"^0.3.0"},"name":"purescript-transformers","keywords":["purescript","monad","comonad","transformer"],"description":"PureScript monad and comonad transformers library"},"modules":[{"name":"Control.Monad.Trans","comments":"This module defines the `MonadTrans` type class of _monad transformers_.\n","declarations":[{"children":[{"comments":null,"title":"lift","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":null}],"comments":"The `MonadTrans` type class represents _monad transformers_.\n\nA monad transformer is a type constructor of kind `(* -> *) -> * -> *`, which\ntakes a `Monad` as its first argument, and returns another `Monad`.\n\nThis allows us to add additional effects to an existing monad. By iterating this\nprocess, we create monad transformer _stacks_, which contain all of the effects\nrequired for a particular computation.\n\nThe laws state that `lift` is a `Monad` morphism.\n\nLaws:\n\n- `lift (pure a) = pure a`\n- `lift (do { x <- m ; y }) = do { x <- lift m ; lift y }`\n","title":"MonadTrans","fixity":null,"info":{"arguments":[["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[22,1],"name":"src/Control/Monad/Trans.purs","end":[23,47]}}]},{"name":"Control.Monad.Reader.Class","comments":"This module defines the `MonadReader` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"ask","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}},"sourceSpan":null},{"comments":null,"title":"local","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"monadReaderFun","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[30,1],"name":"src/Control/Monad/Reader/Class.purs","end":[32,15]}}],"comments":"The `MonadReader` type class represents those monads which support a global context via\n`ask` and `local`.\n\n- `ask` reads the current context.\n- `local f x` changes the value of the local context during the execution of the action `x`.\n\nAn implementation is provided for `ReaderT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- `do { ask ; ask } = ask`\n- `local f ask = f <$> ask`\n- `local _ (pure a) = pure a`\n- `local f (do { a <- x ; y }) = do { a <- local f x ; local f y }`\n","title":"MonadReader","fixity":null,"info":{"arguments":[["r",null],["m",null]],"declType":"typeClass","superclasses":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[22,1],"name":"src/Control/Monad/Reader/Class.purs","end":[27,1]}},{"children":[],"comments":"Read a value which depends on the global context in any `MonadReader`.\n","title":"reader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[[["Control.Monad.Reader.Class.MonadReader",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"src/Control/Monad/Reader/Class.purs","end":[28,1]}}]},{"name":"Control.Monad.Cont.Class","comments":"This module defines the `MonadCont` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"callCC","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":null}],"comments":"The `MonadCont` type class represents those monads which support the\n`callCC`, or _call-with-current-continuation_ operation.\n\nThis action makes the current continuation available to the caller.\n\nFor example:\n\n```purescript\ndelay :: forall eff. Number -> ContT Unit (Eff (timeout :: Timeout | eff)) Unit\ndelay n = callCC \\cont ->\n  lift $ setTimeout n (runContT (cont unit) (\\_ -> return unit))\n```\nAn implementation is provided for `ContT`, and for other monad transformers\ndefined in this library.\n","title":"MonadCont","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeClass","superclasses":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[24,1],"name":"src/Control/Monad/Cont/Class.purs","end":[25,50]}}]},{"name":"Control.Comonad.Trans","comments":"This module defines the `ComonadTrans` type class of _comonad transformers_.\n","declarations":[{"children":[{"comments":null,"title":"lower","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":null}],"comments":"The `ComonadTrans` type class represents _comonad transformers_.\n\nA comonad transformer is a type constructor of kind `(* -> *) -> * -> *`, which\ntakes a `Comonad` as its first argument, and returns another `Comonad`.\n\nThis allows us to extend a comonad to provide additional context. By iterating this\nprocess, we create comonad transformer _stacks_, which contain all of the contextual information\nrequired for a particular computation.\n\nThe laws state that `lower` is a `Comonad` morphism.\n\nLaws:\n\n- `extract (lower a) = extract a`\n- `lower (extend w (f <<< lower)) = extend (lower w) f`\n","title":"ComonadTrans","fixity":null,"info":{"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[24,1],"name":"src/Control/Comonad/Trans.purs","end":[25,50]}}]},{"name":"Control.Monad.Error.Class","comments":"This module defines the `MonadError` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"throwError","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"catchError","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"monadErrorEither","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Error.Class.MonadError"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[46,1],"name":"src/Control/Monad/Error/Class.purs","end":[51,1]}},{"comments":null,"title":"monadErrorMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Error.Class.MonadError"},{"tag":"TypeConstructor","contents":"Prelude.Unit"}]},{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"}]}},"sourceSpan":{"start":[51,1],"name":"src/Control/Monad/Error/Class.purs","end":[54,32]}}],"comments":"The `MonadError` type class represents those monads which support errors via\n`throwError` and `catchError`.\n\n- `throwError e` throws the error `e`\n- `catchError x f` calls the error handler `f` if an error is thrown during the\n  evaluation of `x`.\n\nAn implementation is provided for `ErrorT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- Left zero: `throwError e >>= f = throwError e`\n- Catch: `catchError (throwError e) f = f e`\n- Pure: `catchError (pure a) f = pure a`\n\n","title":"MonadError","fixity":null,"info":{"arguments":[["e",null],["m",null]],"declType":"typeClass","superclasses":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[26,1],"name":"src/Control/Monad/Error/Class.purs","end":[34,1]}},{"children":[],"comments":"This function allows you to provide a predicate for selecting the\nexceptions that you're interested in, and handle only those exceptons.\nIf the inner computation throws an exception, and the predicate returns\nNothing, then the whole computation will still fail with that exception.\n","title":"catchJust","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[[["Control.Monad.Error.Class.MonadError",[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"src/Control/Monad/Error/Class.purs","end":[39,1]}}]},{"name":"Control.Comonad.Env.Trans","comments":"This module defines the environment comonad transformer, `EnvT`.\n","declarations":[{"children":[{"comments":null,"title":"EnvT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorEnvT","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[32,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[35,1]}},{"comments":null,"title":"extendEnvT","info":{"declType":"instance","dependencies":[["Control.Extend.Extend",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Extend.Extend"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[35,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[38,1]}},{"comments":null,"title":"comonadEnvT","info":{"declType":"instance","dependencies":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Comonad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[38,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[41,1]}},{"comments":null,"title":"comonadTransEnvT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Trans.ComonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[41,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[42,30]}}],"comments":"The environment comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad with a _global environment_ of\ntype `e`.\n\nThe `ComonadEnv` type class describes the operations supported by this comonad.\n","title":"EnvT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["w",null],["a",null]]},"sourceSpan":{"start":[18,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[21,1]}},{"children":[],"comments":"Unwrap a value in the `EnvT` comonad.\n","title":"runEnvT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[21,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[22,1]}},{"children":[],"comments":"Change the environment type in an `EnvT` context.\n","title":"withEnvT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["e1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e2"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[26,1]}},{"children":[],"comments":"Change the underlying comonad and data type in an `EnvT` context.\n","title":"mapEnvT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w2"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"src/Control/Comonad/Env/Trans.purs","end":[30,1]}}]},{"name":"Control.Comonad.Env","comments":"This module defines the `Env` comonad.\n","declarations":[{"children":[],"comments":"The `Env` comonad is a synonym for the `EnvT` comonad transformer, applied\nto the `Identity` monad.\n","title":"Env","fixity":null,"info":{"arguments":[["e",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]}},"sourceSpan":{"start":[13,1],"name":"src/Control/Comonad/Env.purs","end":[16,1]}},{"children":[],"comments":"Unwrap a value in the `Env` comonad.\n","title":"runEnv","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Env"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"src/Control/Comonad/Env.purs","end":[17,1]}},{"children":[],"comments":"Change the environment type in an `Env` computation.\n","title":"withEnv","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["e1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Env"},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Env"},{"tag":"TypeVar","contents":"e2"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"src/Control/Comonad/Env.purs","end":[21,1]}},{"children":[],"comments":"Change the data type in an `Env` computation.\n","title":"mapEnv","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Env"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Env"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[24,1],"name":"src/Control/Comonad/Env.purs","end":[25,1]}},{"children":[],"comments":"Create a value in context in the `Env` comonad.\n","title":"env","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Env"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"src/Control/Comonad/Env.purs","end":[29,1]}}]},{"name":"Control.Comonad.Env.Class","comments":"This module defines the `ComonadEnv` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"ask","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"e"}]},null]}},"sourceSpan":null},{"comments":null,"title":"local","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"comonadEnvTuple","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Class.ComonadEnv"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[34,1],"name":"src/Control/Comonad/Env/Class.purs","end":[38,1]}},{"comments":null,"title":"comonadEnvEnvT","info":{"declType":"instance","dependencies":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Class.ComonadEnv"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Env.Trans.EnvT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[38,1],"name":"src/Control/Comonad/Env/Class.purs","end":[41,30]}}],"comments":"The `ComonadEnv` type class represents those monads which support a global environment via\n`ask` and `local`.\n\n- `ask` reads the current environment from the context.\n- `local` changes the value of the global environment.\n\nAn implementation is provided for `EnvT`.\n\nLaws:\n\n- `ask (local f x) = f (ask x)`\n- `extract (local _ x) = extract a`\n- `extend g (local f x) = extend (g <<< local f) x` \n","title":"ComonadEnv","fixity":null,"info":{"arguments":[["e",null],["w",null]],"declType":"typeClass","superclasses":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[26,1],"name":"src/Control/Comonad/Env/Class.purs","end":[31,1]}},{"children":[],"comments":"Get a value which depends on the environment.\n","title":"asks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["e1",{"tag":"ConstrainedType","contents":[[["Control.Comonad.Env.Class.ComonadEnv",[{"tag":"TypeVar","contents":"e1"},{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"e1"}]}]},{"tag":"TypeVar","contents":"e2"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Control/Comonad/Env/Class.purs","end":[32,1]}}]},{"name":"Control.Comonad.Store.Trans","comments":"This module defines the store comonad transformer, `StoreT`.\n","declarations":[{"children":[{"comments":null,"title":"StoreT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeVar","contents":"s"}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorStoreT","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Trans.StoreT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[25,1],"name":"src/Control/Comonad/Store/Trans.purs","end":[28,1]}},{"comments":null,"title":"extendStoreT","info":{"declType":"instance","dependencies":[["Control.Extend.Extend",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Extend.Extend"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Trans.StoreT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[28,1],"name":"src/Control/Comonad/Store/Trans.purs","end":[31,1]}},{"comments":null,"title":"comonadStoreT","info":{"declType":"instance","dependencies":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Comonad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Trans.StoreT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[31,1],"name":"src/Control/Comonad/Store/Trans.purs","end":[34,1]}},{"comments":null,"title":"comonadTransStoreT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Trans.ComonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Trans.StoreT"},{"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[34,1],"name":"src/Control/Comonad/Store/Trans.purs","end":[35,48]}}],"comments":"The store comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad so that the value\ndepends on a position of type `s`.\n\nThe `ComonadStore` type class describes the operations supported by this comonad.\n","title":"StoreT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["w",null],["a",null]]},"sourceSpan":{"start":[19,1],"name":"src/Control/Comonad/Store/Trans.purs","end":[22,1]}},{"children":[],"comments":"Unwrap a value in the `StoreT` comonad.\n","title":"runStoreT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Trans.StoreT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]},null]}},"sourceSpan":{"start":[22,1],"name":"src/Control/Comonad/Store/Trans.purs","end":[23,1]}}]},{"name":"Control.Comonad.Store","comments":"This module defines the `Store` comonad.\n","declarations":[{"children":[],"comments":"The `Store` comonad is a synonym for the `StoreT` comonad transformer, applied\nto the `Identity` monad.\n","title":"Store","fixity":null,"info":{"arguments":[["s",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Trans.StoreT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[13,1],"name":"src/Control/Comonad/Store.purs","end":[16,1]}},{"children":[],"comments":"Unwrap a value in the `Store` comonad.\n","title":"runStore","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Store"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"src/Control/Comonad/Store.purs","end":[17,1]}},{"children":[],"comments":"Create a value in context in the `Store` comonad.\n","title":"store","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Store"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[20,1],"name":"src/Control/Comonad/Store.purs","end":[21,1]}}]},{"name":"Control.Comonad.Store.Class","comments":"This module defines the `ComonadStore` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"pos","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"s"}]},null]}},"sourceSpan":null},{"comments":null,"title":"peek","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"comonadStoreStoreT","info":{"declType":"instance","dependencies":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Class.ComonadStore"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Store.Trans.StoreT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[52,1],"name":"src/Control/Comonad/Store/Class.purs","end":[54,43]}}],"comments":"The `ComonadStore` type class represents those monads which support local position information via\n`pos` and `peek`.\n\n- `pos` reads the current position.\n- `peek` reads the value at the specified position in the specified context.\n\nAn implementation is provided for `StoreT`.\n\nLaws:\n\n- `pos (extend _ x) = pos x`\n- `peek (pos x) x = extract x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadStore Number w) -> w Number -> w Number\nblur = extend \\r -> (peeks (\\n -> n - 1) r + peeks (\\n -> n + 1) r) / 2)\n```\n","title":"ComonadStore","fixity":null,"info":{"arguments":[["s",null],["w",null]],"declType":"typeClass","superclasses":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[32,1],"name":"src/Control/Comonad/Store/Class.purs","end":[37,1]}},{"children":[],"comments":"Extract a collection of values from positions which depend on the current position.\n","title":"experiment","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Control.Comonad.Store.Class.ComonadStore",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]],["Prelude.Functor",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"s"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Comonad/Store/Class.purs","end":[38,1]}},{"children":[],"comments":"Extract a value from a position which depends on the current position.\n","title":"peeks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Control.Comonad.Store.Class.ComonadStore",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Control/Comonad/Store/Class.purs","end":[42,1]}},{"children":[],"comments":"Reposition the focus at the specified position.\n","title":"seek","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Control.Comonad.Store.Class.ComonadStore",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]],["Control.Extend.Extend",[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"src/Control/Comonad/Store/Class.purs","end":[46,1]}},{"children":[],"comments":"Reposition the focus at the specified position, which depends on the current position.\n","title":"seeks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Control.Comonad.Store.Class.ComonadStore",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]],["Control.Extend.Extend",[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"src/Control/Comonad/Store/Class.purs","end":[50,1]}}]},{"name":"Control.Comonad.Traced.Trans","comments":"This module defines the cowriter comonad transformer, `TracedT`.\n","declarations":[{"children":[{"comments":null,"title":"TracedT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorTracedT","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[26,1],"name":"src/Control/Comonad/Traced/Trans.purs","end":[29,1]}},{"comments":null,"title":"extendTracedT","info":{"declType":"instance","dependencies":[["Control.Extend.Extend",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Semigroup",[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Extend.Extend"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[29,1],"name":"src/Control/Comonad/Traced/Trans.purs","end":[32,1]}},{"comments":null,"title":"comonadTracedT","info":{"declType":"instance","dependencies":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Comonad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[32,1],"name":"src/Control/Comonad/Traced/Trans.purs","end":[35,1]}},{"comments":null,"title":"comonadTransTracedT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Trans.ComonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]}]}},"sourceSpan":{"start":[35,1],"name":"src/Control/Comonad/Traced/Trans.purs","end":[36,44]}}],"comments":"The cowriter comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad so that the value\ndepends on a monoidal position of type `t`.\n\nThe `ComonadTraced` type class describes the operations supported by this comonad.\n","title":"TracedT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["t",null],["w",null],["a",null]]},"sourceSpan":{"start":[20,1],"name":"src/Control/Comonad/Traced/Trans.purs","end":[23,1]}},{"children":[],"comments":"Unwrap a value in the `TracedT` comonad.\n","title":"runTracedT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"src/Control/Comonad/Traced/Trans.purs","end":[24,1]}}]},{"name":"Control.Comonad.Traced","comments":"This module defines the `Traced` comonad.\n","declarations":[{"children":[],"comments":"The `Traced` comonad is a synonym for the `TracedT` comonad transformer, applied\nto the `Identity` monad.\n","title":"Traced","fixity":null,"info":{"arguments":[["m",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]}},"sourceSpan":{"start":[12,1],"name":"src/Control/Comonad/Traced.purs","end":[15,1]}},{"children":[],"comments":"Unwrap a value in the `Traced` comonad.\n","title":"runTraced","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Traced"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"src/Control/Comonad/Traced.purs","end":[16,1]}},{"children":[],"comments":"Create a value in context in the `Traced` comonad.\n","title":"traced","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Traced"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[19,1],"name":"src/Control/Comonad/Traced.purs","end":[20,1]}}]},{"name":"Control.Comonad.Traced.Class","comments":"This module defines the `ComonadTraced` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"track","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"comonadTracedTracedT","info":{"declType":"instance","dependencies":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"t"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Class.ComonadTraced"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Control/Comonad/Traced/Class.purs","end":[51,40]}}],"comments":"The `ComonadTraced` type class represents those monads which support relative (monoidal)\nposition information via `track`.\n\n- `track` extracts a value at the specified relative position.\n\nAn implementation is provided for `TracedT`.\n\nLaws:\n\n- `track mempty = extract`\n- `track s <<= track t x = track (s <> t) x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadTraced (Additive Number) w) -> w Number -> w Number\nblur = extend \\r -> (track (Additive (-1)) r + track (Additive 1) r) / 2\n```\n","title":"ComonadTraced","fixity":null,"info":{"arguments":[["t",null],["w",null]],"declType":"typeClass","superclasses":[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]]]},"sourceSpan":{"start":[31,1],"name":"src/Control/Comonad/Traced/Class.purs","end":[35,1]}},{"children":[],"comments":"Extracts a value at a relative position which depends on the current value.\n","title":"tracks","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Control.Comonad.Comonad",[{"tag":"TypeVar","contents":"w"}]],["Control.Comonad.Traced.Class.ComonadTraced",[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[35,1],"name":"src/Control/Comonad/Traced/Class.purs","end":[36,1]}},{"children":[],"comments":"Get the current position.\n","title":"listen","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"src/Control/Comonad/Traced/Class.purs","end":[40,1]}},{"children":[],"comments":"Get a value which depends on the current position.\n","title":"listens","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"src/Control/Comonad/Traced/Class.purs","end":[44,1]}},{"children":[],"comments":"Apply a function to the current position.\n","title":"censor","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Comonad.Traced.Trans.TracedT"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"src/Control/Comonad/Traced/Class.purs","end":[48,1]}}]},{"name":"Control.Monad.State.Class","comments":"This module defines the `MonadState` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"state","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null}],"comments":"The `MonadState s` type class represents those monads which support a single piece of mutable\nstate of type `s`.\n\n- `state f` updates the state using the function `f`.\n\nAn implementation is provided for `StateT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- `do { get ; get } = get`\n- `do { put x ; put y } = put y`\n- `do { put x ; get } = put x $> x`\n- `do { s <- get ; put s } = pure unit`\n\n","title":"MonadState","fixity":null,"info":{"arguments":[["s",null],["m",null]],"declType":"typeClass","superclasses":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[25,1],"name":"src/Control/Monad/State/Class.purs","end":[29,1]}},{"children":[],"comments":"Get the current state.\n","title":"get","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"src/Control/Monad/State/Class.purs","end":[30,1]}},{"children":[],"comments":"Get a value which depends on the current state.\n","title":"gets","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"src/Control/Monad/State/Class.purs","end":[34,1]}},{"children":[],"comments":"Set the state.\n","title":"put","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":"Prelude.Unit"}]}]}]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Monad/State/Class.purs","end":[38,1]}},{"children":[],"comments":"Modify the state by applying a function to the current state.\n","title":"modify","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":"Prelude.Unit"}]}]}]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Control/Monad/State/Class.purs","end":[42,1]}}]},{"name":"Control.Monad.Cont.Trans","comments":"This module defines the CPS monad transformer.\n","declarations":[{"children":[{"comments":null,"title":"ContT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"monadContContT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Class.MonadCont"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[34,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[37,1]}},{"comments":null,"title":"functorContT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[40,1]}},{"comments":null,"title":"applyContT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[40,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[43,1]}},{"comments":null,"title":"applicativeContT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[43,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[46,1]}},{"comments":null,"title":"bindContT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[46,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[49,1]}},{"comments":null,"title":"monadContT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[49,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[51,1]}},{"comments":null,"title":"monadTransContT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[51,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[54,1]}},{"comments":null,"title":"monadEffContT","info":{"declType":"instance","dependencies":[["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[54,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[57,1]}},{"comments":null,"title":"monadReaderContT","info":{"declType":"instance","dependencies":[["Control.Monad.Reader.Class.MonadReader",[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[57,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[63,1]}},{"comments":null,"title":"monadStateContT","info":{"declType":"instance","dependencies":[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Class.MonadState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[63,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[64,20]}}],"comments":"The CPS monad transformer.\n\nThis monad transformer extends the base monad with the operation `callCC`.\n","title":"ContT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null],["m",null],["a",null]]},"sourceSpan":{"start":[20,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[23,1]}},{"children":[],"comments":"Run a computation in the `ContT` monad, by providing a continuation.\n","title":"runContT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[24,1]}},{"children":[],"comments":"Modify the underlying action in a `ContT` monad action.\n","title":"mapContT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[28,1]}},{"children":[],"comments":"Modify the continuation in a `ContT` monad action\n","title":"withContT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Trans.ContT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Control/Monad/Cont/Trans.purs","end":[32,1]}}]},{"name":"Control.Monad.Writer.Class","comments":"This module defines the `MonadWriter` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"writer","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"listen","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":null},{"comments":null,"title":"pass","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":null}],"comments":"The `MonadWriter w` type class represents those monads which support a monoidal accumulator\nof type `w`.\n\n- `writer` appends a value to the accumulator.\n- `listen` modifies the result to include the changes to the accumulator.\n- `pass` applies the returned function to the accumulator.\n\nAn implementation is provided for `WriterT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- `writer a mempty = pure a`\n- `do { tell x ; tell y } = tell (x <> y)`\n- `listen (pure a) = pure (Tuple a mempty)`\n- `listen (writer a x) = tell x $> Tuple a x`\n\n","title":"MonadWriter","fixity":null,"info":{"arguments":[["w",null],["m",null]],"declType":"typeClass","superclasses":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[27,1],"name":"src/Control/Monad/Writer/Class.purs","end":[33,1]}},{"children":[],"comments":"Append a value to the accumulator.\n","title":"tell","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":"Prelude.Unit"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"src/Control/Monad/Writer/Class.purs","end":[34,1]}},{"children":[],"comments":"Read a value which depends on the modifications made to the accumulator during an action.\n","title":"listens","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Monad/Writer/Class.purs","end":[38,1]}},{"children":[],"comments":"Modify the final accumulator value by applying a function.\n","title":"censor","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"src/Control/Monad/Writer/Class.purs","end":[44,1]}}]},{"name":"Control.Monad.RWS.Class","comments":"This module defines the `MonadRWS` type class and its instances.\n","declarations":[{"children":[],"comments":"`MonadRWS r w s` combines the operations and laws of the `MonadReader r`, \n`MonadWriter w` and `MonadState s` type classes.\n\nAn implementation is provided for `RWST`, and for other monad transformers\ndefined in this library.\n","title":"MonadRWS","fixity":null,"info":{"arguments":[["r",null],["w",null],["s",null],["m",null]],"declType":"typeClass","superclasses":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.Reader.Class.MonadReader",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]],["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]]},"sourceSpan":{"start":[25,1],"name":"src/Control/Monad/RWS/Class.purs","end":[25,86]}}]},{"name":"Control.Monad.Except.Trans","comments":"This module defines the _exception monad transformer_ `ExceptT`.\n","declarations":[{"children":[{"comments":null,"title":"ExceptT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorExceptT","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Control/Monad/Except/Trans.purs","end":[53,1]}},{"comments":null,"title":"applyExceptT","info":{"declType":"instance","dependencies":[["Prelude.Apply",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Control/Monad/Except/Trans.purs","end":[59,1]}},{"comments":null,"title":"applicativeExceptT","info":{"declType":"instance","dependencies":[["Prelude.Applicative",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Control/Monad/Except/Trans.purs","end":[62,1]}},{"comments":null,"title":"bindExceptT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[62,1],"name":"src/Control/Monad/Except/Trans.purs","end":[66,1]}},{"comments":null,"title":"monadExceptT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[66,1],"name":"src/Control/Monad/Except/Trans.purs","end":[68,1]}},{"comments":null,"title":"monadRecExceptT","info":{"declType":"instance","dependencies":[["Control.Monad.Rec.Class.MonadRec",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Rec.Class.MonadRec"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[68,1],"name":"src/Control/Monad/Except/Trans.purs","end":[76,1]}},{"comments":null,"title":"altExceptT","info":{"declType":"instance","dependencies":[["Prelude.Semigroup",[{"tag":"TypeVar","contents":"e"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alt.Alt"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[76,1],"name":"src/Control/Monad/Except/Trans.purs","end":[87,1]}},{"comments":null,"title":"plusExceptT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"e"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Plus.Plus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[87,1],"name":"src/Control/Monad/Except/Trans.purs","end":[90,1]}},{"comments":null,"title":"alternativeExceptT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"e"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alternative.Alternative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[90,1],"name":"src/Control/Monad/Except/Trans.purs","end":[92,1]}},{"comments":null,"title":"monadPlusExceptT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"e"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.MonadPlus.MonadPlus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[92,1],"name":"src/Control/Monad/Except/Trans.purs","end":[94,1]}},{"comments":null,"title":"monadTransExceptT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[94,1],"name":"src/Control/Monad/Except/Trans.purs","end":[99,1]}},{"comments":null,"title":"monadEffExceptT","info":{"declType":"instance","dependencies":[["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[99,1],"name":"src/Control/Monad/Except/Trans.purs","end":[102,1]}},{"comments":null,"title":"monadContExceptT","info":{"declType":"instance","dependencies":[["Control.Monad.Cont.Class.MonadCont",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Class.MonadCont"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[102,1],"name":"src/Control/Monad/Except/Trans.purs","end":[105,1]}},{"comments":null,"title":"monadErrorExceptT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Error.Class.MonadError"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[105,1],"name":"src/Control/Monad/Except/Trans.purs","end":[109,1]}},{"comments":null,"title":"monadReaderExceptT","info":{"declType":"instance","dependencies":[["Control.Monad.Reader.Class.MonadReader",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[109,1],"name":"src/Control/Monad/Except/Trans.purs","end":[113,1]}},{"comments":null,"title":"monadStateExceptT","info":{"declType":"instance","dependencies":[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Class.MonadState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[113,1],"name":"src/Control/Monad/Except/Trans.purs","end":[116,1]}},{"comments":null,"title":"monadWriterExceptT","info":{"declType":"instance","dependencies":[["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Class.MonadWriter"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[116,1],"name":"src/Control/Monad/Except/Trans.purs","end":[127,1]}},{"comments":null,"title":"monadRWSExceptT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.RWS.Class.MonadRWS",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Class.MonadRWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[127,1],"name":"src/Control/Monad/Except/Trans.purs","end":[127,88]}}],"comments":"A monad transformer which adds exceptions to other monads, in the same way\nas `Except`. As before, `e` is the type of exceptions, and `a` is the type\nof successful results. The new type parameter `m` is the inner monad that\ncomputations run in.\n","title":"ExceptT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["e",null],["m",null],["a",null]]},"sourceSpan":{"start":[33,1],"name":"src/Control/Monad/Except/Trans.purs","end":[36,1]}},{"children":[],"comments":"The inverse of `ExceptT`. Run a computation in the `ExceptT` monad.\n","title":"runExceptT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"src/Control/Monad/Except/Trans.purs","end":[37,1]}},{"children":[],"comments":"Transform any exceptions thrown by an `ExceptT` computation using the given function.\n","title":"withExceptT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"e'"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Control/Monad/Except/Trans.purs","end":[41,1]}},{"children":[],"comments":"Transform the unwrapped computation using the given function.\n","title":"mapExceptT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["n",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"n"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"n"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"src/Control/Monad/Except/Trans.purs","end":[48,1]}}]},{"name":"Control.Monad.Except","comments":null,"declarations":[{"children":[],"comments":"A parametrizable exception monad; computations are either exceptions or\npure values. If an exception is thrown (see `throwError`), the computation\nterminates with that value. Exceptions may also be caught with `catchError`,\nallowing the computation to resume and exit successfully.\n\nThe type parameter `e` is the type of exceptions, and `a` is the type\nof successful results.\n\nA mechanism for trying many different computations until one succeeds is\nprovided via the `Alt` instance, specifically the `(<|>)` function.\nThe first computation to succeed is returned; if all fail, the exceptions\nare combined using their `Semigroup` instance. The `Plus` instance goes\nfurther and adds the possibility of a computation failing with an 'empty'\nexception; naturally, this requires the stronger constraint of a `Monoid`\ninstance for the exception type.\n","title":"Except","fixity":null,"info":{"arguments":[["e",null],["a",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Trans.ExceptT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]},{"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[33,1],"name":"src/Control/Monad/Except.purs","end":[36,1]}},{"children":[],"comments":"Construct a computation in the `Except` monad from an `Either` value.\n","title":"except","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Except"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"src/Control/Monad/Except.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `Except` monad. The inverse of `except`.\n","title":"runExcept","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Except"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Control/Monad/Except.purs","end":[41,1]}},{"children":[],"comments":"Transform the unwrapped computation using the given function.\n","title":"mapExcept","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Either.Either"},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Except"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Except"},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"src/Control/Monad/Except.purs","end":[45,1]}},{"children":[],"comments":"Transform any exceptions thrown by an `Except` computation using the given function.\n","title":"withExcept","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e'",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"e'"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Except"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Except.Except"},{"tag":"TypeVar","contents":"e'"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"src/Control/Monad/Except.purs","end":[49,1]}}]},{"name":"Control.Monad.Maybe.Trans","comments":"This module defines the `MaybeT` monad transformer.\n","declarations":[{"children":[{"comments":null,"title":"MaybeT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[44,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[47,1]}},{"comments":null,"title":"applyMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[47,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[50,1]}},{"comments":null,"title":"applicativeMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[50,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[53,1]}},{"comments":null,"title":"bindMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[60,1]}},{"comments":null,"title":"monadMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[60,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[62,1]}},{"comments":null,"title":"monadTransMaybeT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"}]}},"sourceSpan":{"start":[62,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[65,1]}},{"comments":null,"title":"altMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alt.Alt"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[65,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[72,1]}},{"comments":null,"title":"plusMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Plus.Plus"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[72,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[75,1]}},{"comments":null,"title":"alternativeMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alternative.Alternative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[75,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[77,1]}},{"comments":null,"title":"monadPlusMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.MonadPlus.MonadPlus"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[77,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[79,1]}},{"comments":null,"title":"monadRecMaybeT","info":{"declType":"instance","dependencies":[["Control.Monad.Rec.Class.MonadRec",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Rec.Class.MonadRec"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[79,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[87,1]}},{"comments":null,"title":"monadEffMaybe","info":{"declType":"instance","dependencies":[["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[87,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[90,1]}},{"comments":null,"title":"monadContMaybeT","info":{"declType":"instance","dependencies":[["Control.Monad.Cont.Class.MonadCont",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Class.MonadCont"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[90,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[93,1]}},{"comments":null,"title":"monadErrorMaybeT","info":{"declType":"instance","dependencies":[["Control.Monad.Error.Class.MonadError",[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Error.Class.MonadError"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[93,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[97,1]}},{"comments":null,"title":"monadReaderMaybeT","info":{"declType":"instance","dependencies":[["Control.Monad.Reader.Class.MonadReader",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[97,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[101,1]}},{"comments":null,"title":"monadStateMaybeT","info":{"declType":"instance","dependencies":[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Class.MonadState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[101,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[104,1]}},{"comments":null,"title":"monadWriterMaybeT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Class.MonadWriter"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[104,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[115,1]}},{"comments":null,"title":"monadRWSMaybeT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.RWS.Class.MonadRWS",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Class.MonadRWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[115,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[115,84]}}],"comments":"The `MaybeT` monad transformer.\n\nThis monad transformer extends the base monad, supporting failure and alternation via\nthe `MonadPlus` type class.\n","title":"MaybeT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["m",null],["a",null]]},"sourceSpan":{"start":[34,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `MaybeT` monad.\n","title":"runMaybeT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[38,1]}},{"children":[],"comments":"Change the result type of a `MaybeT` monad action.\n","title":"mapMaybeT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"b"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Maybe.Trans.MaybeT"},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Control/Monad/Maybe/Trans.purs","end":[42,1]}}]},{"name":"Control.Monad.RWS.Trans","comments":"This module defines the reader-writer-state monad transformer, `RWST`.\n","declarations":[{"children":[],"comments":null,"title":"See","fixity":null,"info":{"arguments":[["s",null],["a",null],["w",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Object"},{"tag":"RCons","contents":["state",{"tag":"TypeVar","contents":"s"},{"tag":"RCons","contents":["result",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["log",{"tag":"TypeVar","contents":"w"},{"tag":"REmpty","contents":[]}]}]}]}]}},"sourceSpan":{"start":[22,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[28,1]}},{"children":[],"comments":null,"title":"mkSee","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[28,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[29,1]}},{"children":[{"comments":null,"title":"RWST","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorRWST","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[55,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[58,1]}},{"comments":null,"title":"applyRWST","info":{"declType":"instance","dependencies":[["Prelude.Bind",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[58,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[64,1]}},{"comments":null,"title":"bindRWST","info":{"declType":"instance","dependencies":[["Prelude.Bind",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[64,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[70,1]}},{"comments":null,"title":"applicativeRWST","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[70,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[73,1]}},{"comments":null,"title":"monadRWST","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[73,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[75,1]}},{"comments":null,"title":"monadTransRWST","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[75,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[78,1]}},{"comments":null,"title":"monadEffRWS","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[78,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[81,1]}},{"comments":null,"title":"monadReaderRWST","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[81,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[85,1]}},{"comments":null,"title":"monadStateRWST","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Class.MonadState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[85,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[88,1]}},{"comments":null,"title":"monadWriterRWST","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Class.MonadWriter"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[88,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[93,1]}},{"comments":null,"title":"monadRWSRWST","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Class.MonadRWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[93,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[93,77]}}],"comments":"The reader-writer-state monad transformer, which combines the operations\nof `ReaderT`, `WriterT` and `StateT` into a single monad transformer.\n","title":"RWST","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null],["w",null],["s",null],["m",null],["a",null]]},"sourceSpan":{"start":[33,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[36,1]}},{"children":[],"comments":"Run a computation in the `RWST` monad.\n","title":"runRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[36,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `RWST` monad, discarding the final state.\n","title":"evalRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[40,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[41,1]}},{"children":[],"comments":"Run a computation in the `RWST` monad, discarding the result.\n","title":"execRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[45,1]}},{"children":[],"comments":"Change the result and accumulator types in a `RWST` monad action.\n","title":"mapRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a2",{"tag":"ForAll","contents":["a1",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a1"}]},{"tag":"TypeVar","contents":"w1"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a2"}]},{"tag":"TypeVar","contents":"w2"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"a2"}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[49,1]}},{"children":[],"comments":"Change the context type in a `RWST` monad action.\n","title":"withRWST","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"s"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"src/Control/Monad/RWS/Trans.purs","end":[53,1]}}]},{"name":"Control.Monad.RWS","comments":"This module defines the `RWS` monad.\n","declarations":[{"children":[],"comments":"The `RWS` monad is a synonym for the `RWST` monad transformer, applied\nto the `Identity` monad.\n","title":"RWS","fixity":null,"info":{"arguments":[["r",null],["w",null],["s",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.RWST"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]}},"sourceSpan":{"start":[25,1],"name":"src/Control/Monad/RWS.purs","end":[29,1]}},{"children":[],"comments":"Create an action in the `RWS` monad from a function which uses the\nglobal context and state explicitly.\n","title":"rws","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"src/Control/Monad/RWS.purs","end":[30,1]}},{"children":[],"comments":"Run a computation in the `RWS` monad.\n","title":"runRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"src/Control/Monad/RWS.purs","end":[34,1]}},{"children":[],"comments":"Run a computation in the `RWS` monad, discarding the final state\n","title":"evalRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Monad/RWS.purs","end":[38,1]}},{"children":[],"comments":"Run a computation in the `RWS` monad, discarding the result\n","title":"execRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Control/Monad/RWS.purs","end":[42,1]}},{"children":[],"comments":"Change the types of the result and accumulator in a `RWS` action\n","title":"mapRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a2",{"tag":"ForAll","contents":["a1",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a1"}]},{"tag":"TypeVar","contents":"w1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.Trans.See"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a2"}]},{"tag":"TypeVar","contents":"w2"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a2"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"src/Control/Monad/RWS.purs","end":[46,1]}},{"children":[],"comments":"Change the type of the context in a `RWS` action\n","title":"withRWS","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"s"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.RWS.RWS"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"src/Control/Monad/RWS.purs","end":[50,1]}}]},{"name":"Control.Monad.Reader.Trans","comments":"This module defines the reader monad transformer, `ReaderT`.\n","declarations":[{"children":[{"comments":null,"title":"ReaderT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorReaderT","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[48,1]}},{"comments":null,"title":"applyReaderT","info":{"declType":"instance","dependencies":[["Prelude.Applicative",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[48,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[51,1]}},{"comments":null,"title":"applicativeReaderT","info":{"declType":"instance","dependencies":[["Prelude.Applicative",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[51,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[54,1]}},{"comments":null,"title":"altReaderT","info":{"declType":"instance","dependencies":[["Control.Alt.Alt",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alt.Alt"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[54,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[57,1]}},{"comments":null,"title":"plusReaderT","info":{"declType":"instance","dependencies":[["Control.Plus.Plus",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Plus.Plus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[57,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[60,1]}},{"comments":null,"title":"alternativeReaderT","info":{"declType":"instance","dependencies":[["Control.Alternative.Alternative",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alternative.Alternative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[60,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[62,1]}},{"comments":null,"title":"bindReaderT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[62,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[67,1]}},{"comments":null,"title":"monadReaderT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[67,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[69,1]}},{"comments":null,"title":"monadPlusReaderT","info":{"declType":"instance","dependencies":[["Control.MonadPlus.MonadPlus",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.MonadPlus.MonadPlus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[69,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[71,1]}},{"comments":null,"title":"monadTransReaderT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[71,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[74,1]}},{"comments":null,"title":"monadEffReader","info":{"declType":"instance","dependencies":[["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[74,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[77,1]}},{"comments":null,"title":"monadContReaderT","info":{"declType":"instance","dependencies":[["Control.Monad.Cont.Class.MonadCont",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Class.MonadCont"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[77,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[80,1]}},{"comments":null,"title":"monadErrorReaderT","info":{"declType":"instance","dependencies":[["Control.Monad.Error.Class.MonadError",[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Error.Class.MonadError"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[80,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[84,1]}},{"comments":null,"title":"monadReaderReaderT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[84,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[88,1]}},{"comments":null,"title":"monadStateReaderT","info":{"declType":"instance","dependencies":[["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Class.MonadState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[88,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[91,1]}},{"comments":null,"title":"monadWriterReaderT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Class.MonadWriter"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[91,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[96,1]}},{"comments":null,"title":"distributiveReaderT","info":{"declType":"instance","dependencies":[["Data.Distributive.Distributive",[{"tag":"TypeVar","contents":"g"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Distributive.Distributive"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"g"}]}]}},"sourceSpan":{"start":[96,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[98,34]}}],"comments":"The reader monad transformer.\n\nThis monad transformer extends the base monad transformer with a _global context_ of\ntype `r`.\n\nThe `MonadReader` type class describes the operations supported by this monad.\n","title":"ReaderT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["r",null],["m",null],["a",null]]},"sourceSpan":{"start":[31,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[34,1]}},{"children":[],"comments":"Run a computation in the `ReaderT` monad.\n","title":"runReaderT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[35,1]}},{"children":[],"comments":"Change the type of the result in a `ReaderT` monad action.\n","title":"mapReaderT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[39,1]}},{"children":[],"comments":"Change the type of the context in a `ReaderT` monad action.\n","title":"withReaderT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"src/Control/Monad/Reader/Trans.purs","end":[43,1]}}]},{"name":"Control.Monad.Reader","comments":"This module defines the `Reader` monad.\n","declarations":[{"children":[],"comments":"The `Reader` monad is a synonym for the `ReaderT` monad transformer, applied\nto the `Identity` monad.\n","title":"Reader","fixity":null,"info":{"arguments":[["r",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Trans.ReaderT"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]}},"sourceSpan":{"start":[20,1],"name":"src/Control/Monad/Reader.purs","end":[23,1]}},{"children":[],"comments":"Run a computation in the `Reader` monad.\n","title":"runReader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Reader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[23,1],"name":"src/Control/Monad/Reader.purs","end":[24,1]}},{"children":[],"comments":"Change the type of the context in a `Reader` monad action.\n","title":"withReader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Reader"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Reader"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[27,1],"name":"src/Control/Monad/Reader.purs","end":[28,1]}},{"children":[],"comments":"Change the type of the result in a `Reader` monad action.\n","title":"mapReader","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Reader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Reader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[31,1],"name":"src/Control/Monad/Reader.purs","end":[32,1]}}]},{"name":"Control.Monad.State.Trans","comments":"This module defines the state monad transformer, `StateT`.\n","declarations":[{"children":[{"comments":null,"title":"StateT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[56,1],"name":"src/Control/Monad/State/Trans.purs","end":[59,1]}},{"comments":null,"title":"applyStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Control/Monad/State/Trans.purs","end":[62,1]}},{"comments":null,"title":"applicativeStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[62,1],"name":"src/Control/Monad/State/Trans.purs","end":[65,1]}},{"comments":null,"title":"altStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Alt.Alt",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alt.Alt"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[65,1],"name":"src/Control/Monad/State/Trans.purs","end":[68,1]}},{"comments":null,"title":"plusStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Plus.Plus",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Plus.Plus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[68,1],"name":"src/Control/Monad/State/Trans.purs","end":[71,1]}},{"comments":null,"title":"alternativeStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Alternative.Alternative",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alternative.Alternative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[71,1],"name":"src/Control/Monad/State/Trans.purs","end":[73,1]}},{"comments":null,"title":"bindStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[73,1],"name":"src/Control/Monad/State/Trans.purs","end":[78,1]}},{"comments":null,"title":"monadStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[78,1],"name":"src/Control/Monad/State/Trans.purs","end":[80,1]}},{"comments":null,"title":"monadRecStateT","info":{"declType":"instance","dependencies":[["Control.Monad.Rec.Class.MonadRec",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Rec.Class.MonadRec"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[80,1],"name":"src/Control/Monad/State/Trans.purs","end":[89,1]}},{"comments":null,"title":"monadPlusStateT","info":{"declType":"instance","dependencies":[["Control.MonadPlus.MonadPlus",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.MonadPlus.MonadPlus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[89,1],"name":"src/Control/Monad/State/Trans.purs","end":[91,1]}},{"comments":null,"title":"monadTransStateT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]}]}},"sourceSpan":{"start":[91,1],"name":"src/Control/Monad/State/Trans.purs","end":[96,1]}},{"comments":null,"title":"lazyStateT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Lazy.Lazy"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[96,1],"name":"src/Control/Monad/State/Trans.purs","end":[99,1]}},{"comments":null,"title":"monadEffState","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[99,1],"name":"src/Control/Monad/State/Trans.purs","end":[102,1]}},{"comments":null,"title":"monadContStateT","info":{"declType":"instance","dependencies":[["Control.Monad.Cont.Class.MonadCont",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Class.MonadCont"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[102,1],"name":"src/Control/Monad/State/Trans.purs","end":[105,1]}},{"comments":null,"title":"monadErrorStateT","info":{"declType":"instance","dependencies":[["Control.Monad.Error.Class.MonadError",[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Error.Class.MonadError"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[105,1],"name":"src/Control/Monad/State/Trans.purs","end":[109,1]}},{"comments":null,"title":"monadReaderStateT","info":{"declType":"instance","dependencies":[["Control.Monad.Reader.Class.MonadReader",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[109,1],"name":"src/Control/Monad/State/Trans.purs","end":[113,1]}},{"comments":null,"title":"monadStateStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Class.MonadState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[113,1],"name":"src/Control/Monad/State/Trans.purs","end":[116,1]}},{"comments":null,"title":"monadWriterStateT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Control.Monad.Writer.Class.MonadWriter",[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Class.MonadWriter"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[116,1],"name":"src/Control/Monad/State/Trans.purs","end":[123,33]}}],"comments":"The state monad transformer.\n\nThis monad transformer extends the base monad with the operations `get`\nand `put` which can be used to model a single piece of mutable state.\n\nThe `MonadState` type class describes the operations supported by this monad.\n","title":"StateT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["s",null],["m",null],["a",null]]},"sourceSpan":{"start":[34,1],"name":"src/Control/Monad/State/Trans.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `StateT` monad.\n","title":"runStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Monad/State/Trans.purs","end":[38,1]}},{"children":[],"comments":"Run a computation in the `StateT` monad, discarding the final state.\n","title":"evalStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Prelude.Apply",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Control/Monad/State/Trans.purs","end":[42,1]}},{"children":[],"comments":"Run a computation in the `StateT` monad discarding the result.\n","title":"execStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[[["Prelude.Apply",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"src/Control/Monad/State/Trans.purs","end":[46,1]}},{"children":[],"comments":"Change the result type in a `StateT` monad action.\n","title":"mapStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"src/Control/Monad/State/Trans.purs","end":[50,1]}},{"children":[],"comments":"Modify the final state in a `StateT` monad action.\n","title":"withStateT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"src/Control/Monad/State/Trans.purs","end":[54,1]}}]},{"name":"Control.Monad.State","comments":"This module defines the `State` monad.\n","declarations":[{"children":[],"comments":"The `State` monad is a synonym for the `StateT` monad transformer, applied\nto the `Identity` monad.\n","title":"State","fixity":null,"info":{"arguments":[["s",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Trans.StateT"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]}},"sourceSpan":{"start":[23,1],"name":"src/Control/Monad/State.purs","end":[26,1]}},{"children":[],"comments":"Run a computation in the `State` monad\n","title":"runState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.State"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]},null]}},"sourceSpan":{"start":[26,1],"name":"src/Control/Monad/State.purs","end":[27,1]}},{"children":[],"comments":"Run a computation in the `State` monad, discarding the final state\n","title":"evalState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.State"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[30,1],"name":"src/Control/Monad/State.purs","end":[31,1]}},{"children":[],"comments":"Run a computation in the `State` monad, discarding the result\n","title":"execState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.State"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"src/Control/Monad/State.purs","end":[35,1]}},{"children":[],"comments":"Change the type of the result in a `State` action\n","title":"mapState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.State"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.State"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"src/Control/Monad/State.purs","end":[39,1]}},{"children":[],"comments":"Modify the state in a `State` action\n","title":"withState","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.State"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.State"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[42,1],"name":"src/Control/Monad/State.purs","end":[43,1]}}]},{"name":"Control.Monad.Writer.Trans","comments":"This module defines the writer monad transformer, `WriterT`.\n","declarations":[{"children":[{"comments":null,"title":"WriterT","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"functorWriterT","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[48,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[51,1]}},{"comments":null,"title":"applyWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Apply",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[51,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[56,1]}},{"comments":null,"title":"applicativeWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Applicative",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[56,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[59,1]}},{"comments":null,"title":"altWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Alt.Alt",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alt.Alt"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[62,1]}},{"comments":null,"title":"plusWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Plus.Plus",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Plus.Plus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[62,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[65,1]}},{"comments":null,"title":"alternativeWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Alternative.Alternative",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alternative.Alternative"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[65,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[67,1]}},{"comments":null,"title":"bindWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[67,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[73,1]}},{"comments":null,"title":"monadWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[73,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[75,1]}},{"comments":null,"title":"monadRecWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.Rec.Class.MonadRec",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Rec.Class.MonadRec"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[75,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[84,1]}},{"comments":null,"title":"monadPlusWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.MonadPlus.MonadPlus",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.MonadPlus.MonadPlus"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[84,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[86,1]}},{"comments":null,"title":"monadTransWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[86,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[91,1]}},{"comments":null,"title":"monadEffWriter","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]],["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[91,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[94,1]}},{"comments":null,"title":"monadContWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.Cont.Class.MonadCont",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Cont.Class.MonadCont"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[94,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[97,1]}},{"comments":null,"title":"monadErrorWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.Error.Class.MonadError",[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Error.Class.MonadError"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[97,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[101,1]}},{"comments":null,"title":"monadReaderWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.Reader.Class.MonadReader",[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Reader.Class.MonadReader"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[101,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[105,1]}},{"comments":null,"title":"monadStateWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Control.Monad.State.Class.MonadState",[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.State.Class.MonadState"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[105,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[108,1]}},{"comments":null,"title":"monadWriterWriterT","info":{"declType":"instance","dependencies":[["Data.Monoid.Monoid",[{"tag":"TypeVar","contents":"w"}]],["Prelude.Monad",[{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Class.MonadWriter"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[108,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[115,26]}}],"comments":"The writer monad transformer.\n\nThis monad transformer extends the base monad with a monoidal accumulator of\ntype `w`.\n\nThe `MonadWriter` type class describes the operations supported by this monad.\n","title":"WriterT","fixity":null,"info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["w",null],["m",null],["a",null]]},"sourceSpan":{"start":[34,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[37,1]}},{"children":[],"comments":"Run a computation in the `WriterT` monad.\n","title":"runWriterT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[38,1]}},{"children":[],"comments":"Run a computation in the `WriterT` monad, discarding the result.\n","title":"execWriterT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[[["Prelude.Apply",[{"tag":"TypeVar","contents":"m"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"w"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[41,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[42,1]}},{"children":[],"comments":"Change the accumulator and base monad types in a `WriterT` monad action.\n","title":"mapWriterT","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w1"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m2"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"w2"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"m1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"m2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"src/Control/Monad/Writer/Trans.purs","end":[46,1]}}]},{"name":"Control.Monad.Writer","comments":"This module defines the `Writer` monad.\n","declarations":[{"children":[],"comments":"The `Writer` monad is a synonym for the `WriterT` monad transformer, applied\nto the `Identity` monad.\n","title":"Writer","fixity":null,"info":{"arguments":[["w",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Trans.WriterT"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeConstructor","contents":"Data.Identity.Identity"}]}},"sourceSpan":{"start":[22,1],"name":"src/Control/Monad/Writer.purs","end":[25,1]}},{"children":[],"comments":"Run a computation in the `Writer` monad\n","title":"runWriter","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Writer"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w"}]}]},null]},null]}},"sourceSpan":{"start":[25,1],"name":"src/Control/Monad/Writer.purs","end":[26,1]}},{"children":[],"comments":"Run a computation in the `Writer` monad, discarding the result\n","title":"execWriter","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Writer"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"w"}]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"src/Control/Monad/Writer.purs","end":[30,1]}},{"children":[],"comments":"Change the result and accumulator types in a `Writer` monad action\n","title":"mapWriter","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w2",{"tag":"ForAll","contents":["w1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"w1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"w2"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Writer"},{"tag":"TypeVar","contents":"w1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Writer.Writer"},{"tag":"TypeVar","contents":"w2"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"src/Control/Monad/Writer.purs","end":[34,1]}}]},{"name":"Control.Monad.List.Trans","comments":"This module defines the list monad transformer, `ListT`.\n","declarations":[{"children":[{"comments":null,"title":"semigroupListT","info":{"declType":"instance","dependencies":[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Semigroup"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[238,1],"name":"src/Control/Monad/List/Trans.purs","end":[241,1]}},{"comments":null,"title":"monoidListT","info":{"declType":"instance","dependencies":[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Monoid.Monoid"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[241,1],"name":"src/Control/Monad/List/Trans.purs","end":[244,1]}},{"comments":null,"title":"functorListT","info":{"declType":"instance","dependencies":[["Prelude.Functor",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[244,1],"name":"src/Control/Monad/List/Trans.purs","end":[250,1]}},{"comments":null,"title":"unfoldableListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Unfoldable.Unfoldable"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[250,1],"name":"src/Control/Monad/List/Trans.purs","end":[255,1]}},{"comments":null,"title":"applyListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[255,1],"name":"src/Control/Monad/List/Trans.purs","end":[258,1]}},{"comments":null,"title":"applicativeListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[258,1],"name":"src/Control/Monad/List/Trans.purs","end":[261,1]}},{"comments":null,"title":"bindListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Bind"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[261,1],"name":"src/Control/Monad/List/Trans.purs","end":[269,1]}},{"comments":null,"title":"monadListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Monad"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[269,1],"name":"src/Control/Monad/List/Trans.purs","end":[271,1]}},{"comments":null,"title":"monadTransListT","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Trans.MonadTrans"},{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"}]}},"sourceSpan":{"start":[271,1],"name":"src/Control/Monad/List/Trans.purs","end":[274,1]}},{"comments":null,"title":"altListT","info":{"declType":"instance","dependencies":[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alt.Alt"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[274,1],"name":"src/Control/Monad/List/Trans.purs","end":[277,1]}},{"comments":null,"title":"plusListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Plus.Plus"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[277,1],"name":"src/Control/Monad/List/Trans.purs","end":[280,1]}},{"comments":null,"title":"alternativeListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alternative.Alternative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[280,1],"name":"src/Control/Monad/List/Trans.purs","end":[282,1]}},{"comments":null,"title":"monadPlusListT","info":{"declType":"instance","dependencies":[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.MonadPlus.MonadPlus"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]}]}},"sourceSpan":{"start":[282,1],"name":"src/Control/Monad/List/Trans.purs","end":[284,1]}},{"comments":null,"title":"monadEffListT","info":{"declType":"instance","dependencies":[["Control.Monad.Eff.Class.MonadEff",[{"tag":"TypeVar","contents":"eff"},{"tag":"TypeVar","contents":"m"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.Eff.Class.MonadEff"},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[284,1],"name":"src/Control/Monad/List/Trans.purs","end":[285,22]}}],"comments":"The list monad transformer.\n\nThis monad transformer extends the base monad with _non-determinism_.\nThat is, the transformed monad supports the same effects as the base monad\nbut with multiple return values.\n","title":"ListT","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[52,1],"name":"src/Control/Monad/List/Trans.purs","end":[60,1]}},{"children":[],"comments":"The empty list.\n","title":"nil","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[70,1],"name":"src/Control/Monad/List/Trans.purs","end":[71,1]}},{"children":[],"comments":"Attach an element to the front of a list.\n","title":"cons","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Lazy.Lazy"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Lazy.Lazy"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[74,1],"name":"src/Control/Monad/List/Trans.purs","end":[75,1]}},{"children":[],"comments":"Prepend an element to a lazily-evaluated list.\n","title":"prepend'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Lazy.Lazy"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"src/Control/Monad/List/Trans.purs","end":[79,1]}},{"children":[],"comments":"Prepend an element to a list.\n","title":"prepend","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"src/Control/Monad/List/Trans.purs","end":[83,1]}},{"children":[],"comments":"Create a list with one element.\n","title":"singleton","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"src/Control/Monad/List/Trans.purs","end":[98,1]}},{"children":[],"comments":"Lift a computation from the base functor.\n","title":"fromEffect","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[101,1],"name":"src/Control/Monad/List/Trans.purs","end":[102,1]}},{"children":[],"comments":"Lift a computation from the base monad.\n","title":"wrapEffect","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[105,1],"name":"src/Control/Monad/List/Trans.purs","end":[106,1]}},{"children":[],"comments":"Defer evaluation of a list.\n","title":"wrapLazy","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Lazy.Lazy"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[109,1],"name":"src/Control/Monad/List/Trans.purs","end":[110,1]}},{"children":[],"comments":"Unfold a list using an effectful generator function.\n","title":"unfold","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["z",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"src/Control/Monad/List/Trans.purs","end":[114,1]}},{"children":[],"comments":"Generate an infinite list by iterating a function.\n","title":"iterate","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[120,1],"name":"src/Control/Monad/List/Trans.purs","end":[121,1]}},{"children":[],"comments":"Generate an infinite list by repeating a value.\n","title":"repeat","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[126,1],"name":"src/Control/Monad/List/Trans.purs","end":[127,1]}},{"children":[],"comments":"Take a number of elements from the front of a list.\n","title":"take","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Int"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[130,1],"name":"src/Control/Monad/List/Trans.purs","end":[131,1]}},{"children":[],"comments":"Take elements from the front of a list while a predicate holds.\n","title":"takeWhile","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[138,1],"name":"src/Control/Monad/List/Trans.purs","end":[139,1]}},{"children":[],"comments":"Drop a number of elements from the front of a list.\n","title":"drop","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeConstructor","contents":"Prim.Int"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[145,1],"name":"src/Control/Monad/List/Trans.purs","end":[146,1]}},{"children":[],"comments":"Drop elements from the front of a list while a predicate holds.\n","title":"dropWhile","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Applicative",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[153,1],"name":"src/Control/Monad/List/Trans.purs","end":[154,1]}},{"children":[],"comments":"Remove elements from a list for which a predicate fails to hold.\n","title":"filter","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[160,1],"name":"src/Control/Monad/List/Trans.purs","end":[161,1]}},{"children":[],"comments":"Apply a function to the elements of a list, keeping only those return values which contain a result.\n","title":"mapMaybe","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[167,1],"name":"src/Control/Monad/List/Trans.purs","end":[168,1]}},{"children":[],"comments":"Remove elements from a list which do not contain a value.\n","title":"catMaybes","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Functor",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"src/Control/Monad/List/Trans.purs","end":[175,1]}},{"children":[],"comments":"Perform the first step of a computation in the `ListT` monad.\n","title":"uncons","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Tuple.Tuple"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[178,1],"name":"src/Control/Monad/List/Trans.purs","end":[179,1]}},{"children":[],"comments":"Extract the first element of a list.\n","title":"head","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[186,1],"name":"src/Control/Monad/List/Trans.purs","end":[187,1]}},{"children":[],"comments":"Extract all but the first element of a list.\n","title":"tail","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Maybe.Maybe"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[190,1],"name":"src/Control/Monad/List/Trans.purs","end":[191,1]}},{"children":[],"comments":"Fold a list from the left, accumulating the result (effectfully) using the specified function.\n","title":"foldl'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[194,1],"name":"src/Control/Monad/List/Trans.purs","end":[195,1]}},{"children":[],"comments":"Fold a list from the left, accumulating the result using the specified function.\n","title":"foldl","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[202,1],"name":"src/Control/Monad/List/Trans.purs","end":[203,1]}},{"children":[],"comments":"Fold a list from the left, accumulating the list of results using the specified function.\n","title":"scanl","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[210,1],"name":"src/Control/Monad/List/Trans.purs","end":[211,1]}},{"children":[],"comments":"Zip the elements of two lists, combining elements at the same position from each list.\n","title":"zipWith'","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[221,1],"name":"src/Control/Monad/List/Trans.purs","end":[222,1]}},{"children":[],"comments":"Zip the elements of two lists, combining elements at the same position from each list.\n","title":"zipWith","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[[["Prelude.Monad",[{"tag":"TypeVar","contents":"f"}]]],{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Monad.List.Trans.ListT"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[233,1],"name":"src/Control/Monad/List/Trans.purs","end":[234,1]}}]}],"resolvedDependencies":{"purescript-control":"0.3.0","purescript-console":"0.1.1","purescript-either":"0.2.2","purescript-arrays":"0.4.2","purescript-maybe":"0.3.4","purescript-distributive":"0.5.1","purescript-unfoldable":"0.4.0","purescript-invariant":"0.3.0","purescript-lazy":"0.4.0","purescript-monoid":"0.3.0","purescript-foldable-traversable":"0.4.0","purescript-tailrec":"0.3.1","purescript-prelude":"0.1.2","purescript-st":"0.1.0","purescript-bifunctors":"0.4.0","purescript-eff":"0.1.0","purescript-tuples":"0.4.0","purescript-identity":"0.4.0"},"bookmarks":[{"package":"purescript-prelude","item":["Prelude","Unit"]},{"package":"purescript-prelude","item":["Prelude","unit"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","flip"]},{"package":"purescript-prelude","item":["Prelude","const"]},{"package":"purescript-prelude","item":["Prelude","asTypeOf"]},{"package":"purescript-prelude","item":["Prelude","otherwise"]},{"package":"purescript-prelude","item":["Prelude","Semigroupoid"]},{"package":"purescript-prelude","item":["Prelude","semigroupoidFn"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","Category"]},{"package":"purescript-prelude","item":["Prelude","categoryFn"]},{"package":"purescript-prelude","item":["Prelude","Functor"]},{"package":"purescript-prelude","item":["Prelude","functorFn"]},{"package":"purescript-prelude","item":["Prelude","functorArray"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","void"]},{"package":"purescript-prelude","item":["Prelude","Apply"]},{"package":"purescript-prelude","item":["Prelude","applyFn"]},{"package":"purescript-prelude","item":["Prelude","applyArray"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","Applicative"]},{"package":"purescript-prelude","item":["Prelude","applicativeFn"]},{"package":"purescript-prelude","item":["Prelude","applicativeArray"]},{"package":"purescript-prelude","item":["Prelude","return"]},{"package":"purescript-prelude","item":["Prelude","liftA1"]},{"package":"purescript-prelude","item":["Prelude","Bind"]},{"package":"purescript-prelude","item":["Prelude","bindFn"]},{"package":"purescript-prelude","item":["Prelude","bindArray"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","Monad"]},{"package":"purescript-prelude","item":["Prelude","monadFn"]},{"package":"purescript-prelude","item":["Prelude","monadArray"]},{"package":"purescript-prelude","item":["Prelude","liftM1"]},{"package":"purescript-prelude","item":["Prelude","ap"]},{"package":"purescript-prelude","item":["Prelude","Semigroup"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","semigroupString"]},{"package":"purescript-prelude","item":["Prelude","semigroupUnit"]},{"package":"purescript-prelude","item":["Prelude","semigroupFn"]},{"package":"purescript-prelude","item":["Prelude","semigroupOrdering"]},{"package":"purescript-prelude","item":["Prelude","semigroupArray"]},{"package":"purescript-prelude","item":["Prelude","Semiring"]},{"package":"purescript-prelude","item":["Prelude","semiringInt"]},{"package":"purescript-prelude","item":["Prelude","semiringNumber"]},{"package":"purescript-prelude","item":["Prelude","semiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","Ring"]},{"package":"purescript-prelude","item":["Prelude","ringInt"]},{"package":"purescript-prelude","item":["Prelude","ringNumber"]},{"package":"purescript-prelude","item":["Prelude","ringUnit"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","negate"]},{"package":"purescript-prelude","item":["Prelude","ModuloSemiring"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringInt"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringNumber"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","DivisionRing"]},{"package":"purescript-prelude","item":["Prelude","divisionRingNumber"]},{"package":"purescript-prelude","item":["Prelude","divisionRingUnit"]},{"package":"purescript-prelude","item":["Prelude","Num"]},{"package":"purescript-prelude","item":["Prelude","numNumber"]},{"package":"purescript-prelude","item":["Prelude","numUnit"]},{"package":"purescript-prelude","item":["Prelude","Eq"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","eqBoolean"]},{"package":"purescript-prelude","item":["Prelude","eqInt"]},{"package":"purescript-prelude","item":["Prelude","eqNumber"]},{"package":"purescript-prelude","item":["Prelude","eqChar"]},{"package":"purescript-prelude","item":["Prelude","eqString"]},{"package":"purescript-prelude","item":["Prelude","eqUnit"]},{"package":"purescript-prelude","item":["Prelude","eqArray"]},{"package":"purescript-prelude","item":["Prelude","eqOrdering"]},{"package":"purescript-prelude","item":["Prelude","Ordering"]},{"package":"purescript-prelude","item":["Prelude","Ord"]},{"package":"purescript-prelude","item":["Prelude","ordBoolean"]},{"package":"purescript-prelude","item":["Prelude","ordInt"]},{"package":"purescript-prelude","item":["Prelude","ordNumber"]},{"package":"purescript-prelude","item":["Prelude","ordString"]},{"package":"purescript-prelude","item":["Prelude","ordChar"]},{"package":"purescript-prelude","item":["Prelude","ordUnit"]},{"package":"purescript-prelude","item":["Prelude","ordArray"]},{"package":"purescript-prelude","item":["Prelude","ordOrdering"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","unsafeCompare"]},{"package":"purescript-prelude","item":["Prelude","Bounded"]},{"package":"purescript-prelude","item":["Prelude","boundedBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedUnit"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdering"]},{"package":"purescript-prelude","item":["Prelude","boundedInt"]},{"package":"purescript-prelude","item":["Prelude","boundedChar"]},{"package":"purescript-prelude","item":["Prelude","boundedFn"]},{"package":"purescript-prelude","item":["Prelude","BoundedOrd"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdUnit"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdOrdering"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdInt"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdChar"]},{"package":"purescript-prelude","item":["Prelude","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraBoolean"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraUnit"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraFn"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","Show"]},{"package":"purescript-prelude","item":["Prelude","showBoolean"]},{"package":"purescript-prelude","item":["Prelude","showInt"]},{"package":"purescript-prelude","item":["Prelude","showNumber"]},{"package":"purescript-prelude","item":["Prelude","showChar"]},{"package":"purescript-prelude","item":["Prelude","showString"]},{"package":"purescript-prelude","item":["Prelude","showUnit"]},{"package":"purescript-prelude","item":["Prelude","showArray"]},{"package":"purescript-prelude","item":["Prelude","showOrdering"]},{"package":"purescript-monoid","item":["Data.Monoid","Monoid"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidUnit"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidFn"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidString"]},{"package":"purescript-monoid","item":["Data.Monoid","monoidArray"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","Invariant"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","imapF"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantFn"]},{"package":"purescript-invariant","item":["Data.Functor.Invariant","invariantArray"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","Endo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","runEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","invariantEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","semigroupEndo"]},{"package":"purescript-monoid","item":["Data.Monoid.Endo","monoidEndo"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","Bifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","lmap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor","rmap"]},{"package":null,"item":["Control.Monad.Trans","MonadTrans"]},{"package":null,"item":["Control.Monad.Reader.Class","MonadReader"]},{"package":null,"item":["Control.Monad.Reader.Class","reader"]},{"package":null,"item":["Control.Monad.Reader.Class","monadReaderFun"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","functorEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","applyEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","applicativeEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","bindEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","monadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","MonadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Class","monadEffEff"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","CONSOLE"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","log"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","error"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console","print"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","logAny"]},{"package":"purescript-console","item":["Control.Monad.Eff.Console.Unsafe","errorAny"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeInterleaveEff"]},{"package":"purescript-st","item":["Control.Monad.ST","ST"]},{"package":"purescript-st","item":["Control.Monad.ST","STRef"]},{"package":"purescript-st","item":["Control.Monad.ST","newSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","readSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","modifySTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","writeSTRef"]},{"package":"purescript-st","item":["Control.Monad.ST","runST"]},{"package":"purescript-st","item":["Control.Monad.ST","pureST"]},{"package":null,"item":["Control.Monad.Cont.Class","MonadCont"]},{"package":"purescript-control","item":["Control.Monad","when"]},{"package":"purescript-control","item":["Control.Monad","unless"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","extendFn"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":null,"item":["Control.Comonad.Trans","ComonadTrans"]},{"package":"purescript-lazy","item":["Data.Lazy","Lazy"]},{"package":"purescript-lazy","item":["Data.Lazy","defer"]},{"package":"purescript-lazy","item":["Data.Lazy","force"]},{"package":"purescript-lazy","item":["Data.Lazy","semiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","moduloSemiringLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","divisionRingLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","numLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","eqLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","ordLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","boundedOrdLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","semigroupLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monoidLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","booleanAlgebraLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","functorLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applyLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","applicativeLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","bindLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","monadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","extendLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","comonadLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","showLazy"]},{"package":"purescript-lazy","item":["Data.Lazy","lazyLazy"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","Additive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","runAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","eqAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","ordAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","functorAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applyAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","applicativeAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","bindAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","extendAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","comonadAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","invariantAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","showAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","semigroupAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Additive","monoidAdditive"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","Conj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","runConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","eqConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","ordConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","boundedConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","functorConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applyConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","applicativeConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","bindConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","extendConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","comonadConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","showConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","semigroupConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Conj","monoidConj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","Disj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","runDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","eqDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","ordDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","boundedDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","functorDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applyDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","applicativeDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","bindDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","extendDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","comonadDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","showDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","semigroupDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Disj","monoidDisj"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","Dual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","runDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","eqDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","ordDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","functorDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applyDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","applicativeDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","bindDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","extendDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","comonadDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","invariantDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","showDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","semigroupDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Dual","monoidDual"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","Multiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","runMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","eqMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","ordMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","functorMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applyMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","applicativeMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","bindMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","extendMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","comonadMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","invariantMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","showMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","semigroupMultiplicative"]},{"package":"purescript-monoid","item":["Data.Monoid.Multiplicative","monoidMultiplicative"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","join"]},{"package":"purescript-control","item":["Control.Bind","ifM"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<$>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","Biapply"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(*>>)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","(<<*)"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift2"]},{"package":"purescript-bifunctors","item":["Control.Biapply","bilift3"]},{"package":"purescript-bifunctors","item":["Control.Biapplicative","Biapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","Clown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","runClown"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Clown","clownBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","Flip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","runFlip"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Flip","flipBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","Join"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","runJoin"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Join","joinApplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","Joker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","runJoker"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Joker","jokerBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","Product"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Product","productBiapplicative"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","Wrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","unwrap"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBifunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapFunctor"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapply"]},{"package":"purescript-bifunctors","item":["Data.Bifunctor.Wrap","wrapBiapplicative"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","lift2"]},{"package":"purescript-control","item":["Control.Apply","lift3"]},{"package":"purescript-control","item":["Control.Apply","lift4"]},{"package":"purescript-control","item":["Control.Apply","lift5"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","Bifoldable"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifold"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bitraverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bifor_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","bisequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biany"]},{"package":"purescript-foldable-traversable","item":["Data.Bifoldable","biall"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","Bitraversable"]},{"package":"purescript-foldable-traversable","item":["Data.Bitraversable","bifor"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","altArray"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.Plus","plusArray"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alternative","alternativeArray"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.MonadPlus","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","monadPlusArray"]},{"package":"purescript-maybe","item":["Data.Maybe","Maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe"]},{"package":"purescript-maybe","item":["Data.Maybe","maybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","fromMaybe'"]},{"package":"purescript-maybe","item":["Data.Maybe","isJust"]},{"package":"purescript-maybe","item":["Data.Maybe","isNothing"]},{"package":"purescript-maybe","item":["Data.Maybe","functorMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applyMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","applicativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","altMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","plusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","alternativeMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","bindMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monadPlusMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","extendMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","invariantMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semigroupMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","monoidMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","semiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","moduloSemiringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ringMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","divisionRingMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","numMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","eqMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","ordMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","boundedOrdMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","booleanAlgebraMaybe"]},{"package":"purescript-maybe","item":["Data.Maybe","showMaybe"]},{"package":"purescript-arrays","item":["Data.Array.ST","STArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","Assoc"]},{"package":"purescript-arrays","item":["Data.Array.ST","runSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","emptySTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","thaw"]},{"package":"purescript-arrays","item":["Data.Array.ST","freeze"]},{"package":"purescript-arrays","item":["Data.Array.ST","peekSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pokeSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","pushAllSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","spliceSTArray"]},{"package":"purescript-arrays","item":["Data.Array.ST","toAssocArray"]},{"package":"purescript-maybe","item":["Data.Maybe.First","First"]},{"package":"purescript-maybe","item":["Data.Maybe.First","runFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","eqFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","ordFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","boundedFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","functorFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applyFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","applicativeFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","bindFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monadFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","extendFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","invariantFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","showFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","semigroupFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.First","monoidFirst"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","Last"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","runLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","eqLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","ordLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","boundedLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","functorLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applyLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","applicativeLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","bindLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monadLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","extendLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","invariantLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","showLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","semigroupLast"]},{"package":"purescript-maybe","item":["Data.Maybe.Last","monoidLast"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","Foldable"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableArray"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableMaybe"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableFirst"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableLast"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableAdditive"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableDual"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableDisj"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableConj"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","foldableMultiplicative"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","fold"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","traverse_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","for_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sequence_"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","mconcat"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","intercalate"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","and"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","or"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","any"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","all"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","sum"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","product"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","elem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","notElem"]},{"package":"purescript-foldable-traversable","item":["Data.Foldable","find"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","fromJust"]},{"package":"purescript-maybe","item":["Data.Maybe.Unsafe","unsafeThrow"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Traversable"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableArray"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableMaybe"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableFirst"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableLast"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableAdditive"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableDual"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableConj"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableDisj"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","traversableMultiplicative"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","for"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","Accum"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","functorStateL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applyStateL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applicativeStateL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanl"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumL"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","functorStateR"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applyStateR"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","applicativeStateR"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","scanr"]},{"package":"purescript-foldable-traversable","item":["Data.Traversable","mapAccumR"]},{"package":"purescript-either","item":["Data.Either","Either"]},{"package":"purescript-either","item":["Data.Either","either"]},{"package":"purescript-either","item":["Data.Either","isLeft"]},{"package":"purescript-either","item":["Data.Either","isRight"]},{"package":"purescript-either","item":["Data.Either","functorEither"]},{"package":"purescript-either","item":["Data.Either","bifunctorEither"]},{"package":"purescript-either","item":["Data.Either","applyEither"]},{"package":"purescript-either","item":["Data.Either","applicativeEither"]},{"package":"purescript-either","item":["Data.Either","altEither"]},{"package":"purescript-either","item":["Data.Either","bindEither"]},{"package":"purescript-either","item":["Data.Either","monadEither"]},{"package":"purescript-either","item":["Data.Either","extendEither"]},{"package":"purescript-either","item":["Data.Either","showEither"]},{"package":"purescript-either","item":["Data.Either","eqEither"]},{"package":"purescript-either","item":["Data.Either","ordEither"]},{"package":"purescript-either","item":["Data.Either","boundedEither"]},{"package":"purescript-either","item":["Data.Either","foldableEither"]},{"package":"purescript-either","item":["Data.Either","bifoldableEither"]},{"package":"purescript-either","item":["Data.Either","traversableEither"]},{"package":"purescript-either","item":["Data.Either","bitraversableEither"]},{"package":"purescript-either","item":["Data.Either","semiringEither"]},{"package":"purescript-either","item":["Data.Either","semigroupEither"]},{"package":null,"item":["Control.Monad.Error.Class","MonadError"]},{"package":null,"item":["Control.Monad.Error.Class","catchJust"]},{"package":null,"item":["Control.Monad.Error.Class","monadErrorEither"]},{"package":null,"item":["Control.Monad.Error.Class","monadErrorMaybe"]},{"package":"purescript-either","item":["Data.Either.Nested","Either2"]},{"package":"purescript-either","item":["Data.Either.Nested","Either3"]},{"package":"purescript-either","item":["Data.Either.Nested","Either4"]},{"package":"purescript-either","item":["Data.Either.Nested","Either5"]},{"package":"purescript-either","item":["Data.Either.Nested","Either6"]},{"package":"purescript-either","item":["Data.Either.Nested","Either7"]},{"package":"purescript-either","item":["Data.Either.Nested","Either8"]},{"package":"purescript-either","item":["Data.Either.Nested","Either9"]},{"package":"purescript-either","item":["Data.Either.Nested","Either10"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of2"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of3"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of4"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of5"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of6"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of7"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of8"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of9"]},{"package":"purescript-either","item":["Data.Either.Nested","either1of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either3of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either4of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either5of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either6of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either7of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either8of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either9of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either10of10"]},{"package":"purescript-either","item":["Data.Either.Nested","either2"]},{"package":"purescript-either","item":["Data.Either.Nested","either3"]},{"package":"purescript-either","item":["Data.Either.Nested","either4"]},{"package":"purescript-either","item":["Data.Either.Nested","either5"]},{"package":"purescript-either","item":["Data.Either.Nested","either6"]},{"package":"purescript-either","item":["Data.Either.Nested","either7"]},{"package":"purescript-either","item":["Data.Either.Nested","either8"]},{"package":"purescript-either","item":["Data.Either.Nested","either9"]},{"package":"purescript-either","item":["Data.Either.Nested","either10"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromLeft"]},{"package":"purescript-either","item":["Data.Either.Unsafe","fromRight"]},{"package":"purescript-identity","item":["Data.Identity","Identity"]},{"package":"purescript-identity","item":["Data.Identity","runIdentity"]},{"package":"purescript-identity","item":["Data.Identity","eqIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ordIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedIdentity"]},{"package":"purescript-identity","item":["Data.Identity","boundedOrdIdentity"]},{"package":"purescript-identity","item":["Data.Identity","booleanAlgebraIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semigroupIdenity"]},{"package":"purescript-identity","item":["Data.Identity","monoidIdentity"]},{"package":"purescript-identity","item":["Data.Identity","semiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","moduloSemiringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","ringIdentity"]},{"package":"purescript-identity","item":["Data.Identity","divisionRingIdentity"]},{"package":"purescript-identity","item":["Data.Identity","numIdentity"]},{"package":"purescript-identity","item":["Data.Identity","showIdentity"]},{"package":"purescript-identity","item":["Data.Identity","functorIdentity"]},{"package":"purescript-identity","item":["Data.Identity","invariantIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applyIdentity"]},{"package":"purescript-identity","item":["Data.Identity","applicativeIdentity"]},{"package":"purescript-identity","item":["Data.Identity","bindIdentity"]},{"package":"purescript-identity","item":["Data.Identity","monadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","extendIdentity"]},{"package":"purescript-identity","item":["Data.Identity","comonadIdentity"]},{"package":"purescript-identity","item":["Data.Identity","foldableIdentity"]},{"package":"purescript-identity","item":["Data.Identity","traversableIdentity"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","MonadRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM2"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRecM3"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","tailRec"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","monadRecIdentity"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","monadRecEff"]},{"package":"purescript-tailrec","item":["Control.Monad.Rec.Class","forever"]},{"package":"purescript-distributive","item":["Data.Distributive","Distributive"]},{"package":"purescript-distributive","item":["Data.Distributive","cotraverse"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveIdentity"]},{"package":"purescript-distributive","item":["Data.Distributive","distributiveFunction"]},{"package":"purescript-tuples","item":["Data.Tuple","Tuple"]},{"package":"purescript-tuples","item":["Data.Tuple","showTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","eqTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ordTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","boundedOrdTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semigroupTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monoidTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","semiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","moduloSemiringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","ringTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","divisionRingTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","numTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","booleanAlgebraTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","functorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","invariantTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifunctorTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","applicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","biapplicativeTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bindTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","monadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","extendTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","comonadTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","lazyTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","foldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bifoldableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","traversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","bitraversableTuple"]},{"package":"purescript-tuples","item":["Data.Tuple","fst"]},{"package":"purescript-tuples","item":["Data.Tuple","snd"]},{"package":"purescript-tuples","item":["Data.Tuple","curry"]},{"package":"purescript-tuples","item":["Data.Tuple","uncurry"]},{"package":"purescript-tuples","item":["Data.Tuple","swap"]},{"package":"purescript-tuples","item":["Data.Tuple","lookup"]},{"package":null,"item":["Control.Comonad.Env.Trans","EnvT"]},{"package":null,"item":["Control.Comonad.Env.Trans","runEnvT"]},{"package":null,"item":["Control.Comonad.Env.Trans","withEnvT"]},{"package":null,"item":["Control.Comonad.Env.Trans","mapEnvT"]},{"package":null,"item":["Control.Comonad.Env.Trans","functorEnvT"]},{"package":null,"item":["Control.Comonad.Env.Trans","extendEnvT"]},{"package":null,"item":["Control.Comonad.Env.Trans","comonadEnvT"]},{"package":null,"item":["Control.Comonad.Env.Trans","comonadTransEnvT"]},{"package":null,"item":["Control.Comonad.Env","Env"]},{"package":null,"item":["Control.Comonad.Env","runEnv"]},{"package":null,"item":["Control.Comonad.Env","withEnv"]},{"package":null,"item":["Control.Comonad.Env","mapEnv"]},{"package":null,"item":["Control.Comonad.Env","env"]},{"package":null,"item":["Control.Comonad.Env.Class","ComonadEnv"]},{"package":null,"item":["Control.Comonad.Env.Class","asks"]},{"package":null,"item":["Control.Comonad.Env.Class","comonadEnvTuple"]},{"package":null,"item":["Control.Comonad.Env.Class","comonadEnvEnvT"]},{"package":null,"item":["Control.Comonad.Store.Trans","StoreT"]},{"package":null,"item":["Control.Comonad.Store.Trans","runStoreT"]},{"package":null,"item":["Control.Comonad.Store.Trans","functorStoreT"]},{"package":null,"item":["Control.Comonad.Store.Trans","extendStoreT"]},{"package":null,"item":["Control.Comonad.Store.Trans","comonadStoreT"]},{"package":null,"item":["Control.Comonad.Store.Trans","comonadTransStoreT"]},{"package":null,"item":["Control.Comonad.Store","Store"]},{"package":null,"item":["Control.Comonad.Store","runStore"]},{"package":null,"item":["Control.Comonad.Store","store"]},{"package":null,"item":["Control.Comonad.Store.Class","ComonadStore"]},{"package":null,"item":["Control.Comonad.Store.Class","experiment"]},{"package":null,"item":["Control.Comonad.Store.Class","peeks"]},{"package":null,"item":["Control.Comonad.Store.Class","seek"]},{"package":null,"item":["Control.Comonad.Store.Class","seeks"]},{"package":null,"item":["Control.Comonad.Store.Class","comonadStoreStoreT"]},{"package":null,"item":["Control.Comonad.Traced.Trans","TracedT"]},{"package":null,"item":["Control.Comonad.Traced.Trans","runTracedT"]},{"package":null,"item":["Control.Comonad.Traced.Trans","functorTracedT"]},{"package":null,"item":["Control.Comonad.Traced.Trans","extendTracedT"]},{"package":null,"item":["Control.Comonad.Traced.Trans","comonadTracedT"]},{"package":null,"item":["Control.Comonad.Traced.Trans","comonadTransTracedT"]},{"package":null,"item":["Control.Comonad.Traced","Traced"]},{"package":null,"item":["Control.Comonad.Traced","runTraced"]},{"package":null,"item":["Control.Comonad.Traced","traced"]},{"package":null,"item":["Control.Comonad.Traced.Class","ComonadTraced"]},{"package":null,"item":["Control.Comonad.Traced.Class","tracks"]},{"package":null,"item":["Control.Comonad.Traced.Class","listen"]},{"package":null,"item":["Control.Comonad.Traced.Class","listens"]},{"package":null,"item":["Control.Comonad.Traced.Class","censor"]},{"package":null,"item":["Control.Comonad.Traced.Class","comonadTracedTracedT"]},{"package":null,"item":["Control.Monad.State.Class","MonadState"]},{"package":null,"item":["Control.Monad.State.Class","get"]},{"package":null,"item":["Control.Monad.State.Class","gets"]},{"package":null,"item":["Control.Monad.State.Class","put"]},{"package":null,"item":["Control.Monad.State.Class","modify"]},{"package":null,"item":["Control.Monad.Cont.Trans","ContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","runContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","mapContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","withContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","monadContContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","functorContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","applyContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","applicativeContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","bindContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","monadContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","monadTransContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","monadEffContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","monadReaderContT"]},{"package":null,"item":["Control.Monad.Cont.Trans","monadStateContT"]},{"package":null,"item":["Control.Monad.Writer.Class","MonadWriter"]},{"package":null,"item":["Control.Monad.Writer.Class","tell"]},{"package":null,"item":["Control.Monad.Writer.Class","listens"]},{"package":null,"item":["Control.Monad.Writer.Class","censor"]},{"package":null,"item":["Control.Monad.RWS.Class","MonadRWS"]},{"package":null,"item":["Control.Monad.Except.Trans","ExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","runExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","withExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","mapExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","functorExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","applyExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","applicativeExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","bindExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadRecExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","altExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","plusExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","alternativeExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadPlusExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadTransExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadEffExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadContExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadErrorExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadReaderExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadStateExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadWriterExceptT"]},{"package":null,"item":["Control.Monad.Except.Trans","monadRWSExceptT"]},{"package":null,"item":["Control.Monad.Except","Except"]},{"package":null,"item":["Control.Monad.Except","except"]},{"package":null,"item":["Control.Monad.Except","runExcept"]},{"package":null,"item":["Control.Monad.Except","mapExcept"]},{"package":null,"item":["Control.Monad.Except","withExcept"]},{"package":null,"item":["Control.Monad.Maybe.Trans","MaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","runMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","mapMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","functorMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","applyMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","applicativeMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","bindMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadTransMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","altMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","plusMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","alternativeMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadPlusMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadRecMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadEffMaybe"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadContMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadErrorMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadReaderMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadStateMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadWriterMaybeT"]},{"package":null,"item":["Control.Monad.Maybe.Trans","monadRWSMaybeT"]},{"package":null,"item":["Control.Monad.RWS.Trans","See"]},{"package":null,"item":["Control.Monad.RWS.Trans","mkSee"]},{"package":null,"item":["Control.Monad.RWS.Trans","RWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","runRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","evalRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","execRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","mapRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","withRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","functorRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","applyRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","bindRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","applicativeRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","monadRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","monadTransRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","monadEffRWS"]},{"package":null,"item":["Control.Monad.RWS.Trans","monadReaderRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","monadStateRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","monadWriterRWST"]},{"package":null,"item":["Control.Monad.RWS.Trans","monadRWSRWST"]},{"package":null,"item":["Control.Monad.RWS","RWS"]},{"package":null,"item":["Control.Monad.RWS","rws"]},{"package":null,"item":["Control.Monad.RWS","runRWS"]},{"package":null,"item":["Control.Monad.RWS","evalRWS"]},{"package":null,"item":["Control.Monad.RWS","execRWS"]},{"package":null,"item":["Control.Monad.RWS","mapRWS"]},{"package":null,"item":["Control.Monad.RWS","withRWS"]},{"package":null,"item":["Control.Monad.Reader.Trans","ReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","runReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","mapReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","withReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","functorReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","applyReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","applicativeReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","altReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","plusReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","alternativeReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","bindReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadPlusReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadTransReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadEffReader"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadContReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadErrorReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadReaderReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadStateReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","monadWriterReaderT"]},{"package":null,"item":["Control.Monad.Reader.Trans","distributiveReaderT"]},{"package":null,"item":["Control.Monad.Reader","Reader"]},{"package":null,"item":["Control.Monad.Reader","runReader"]},{"package":null,"item":["Control.Monad.Reader","withReader"]},{"package":null,"item":["Control.Monad.Reader","mapReader"]},{"package":null,"item":["Control.Monad.State.Trans","StateT"]},{"package":null,"item":["Control.Monad.State.Trans","runStateT"]},{"package":null,"item":["Control.Monad.State.Trans","evalStateT"]},{"package":null,"item":["Control.Monad.State.Trans","execStateT"]},{"package":null,"item":["Control.Monad.State.Trans","mapStateT"]},{"package":null,"item":["Control.Monad.State.Trans","withStateT"]},{"package":null,"item":["Control.Monad.State.Trans","functorStateT"]},{"package":null,"item":["Control.Monad.State.Trans","applyStateT"]},{"package":null,"item":["Control.Monad.State.Trans","applicativeStateT"]},{"package":null,"item":["Control.Monad.State.Trans","altStateT"]},{"package":null,"item":["Control.Monad.State.Trans","plusStateT"]},{"package":null,"item":["Control.Monad.State.Trans","alternativeStateT"]},{"package":null,"item":["Control.Monad.State.Trans","bindStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadRecStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadPlusStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadTransStateT"]},{"package":null,"item":["Control.Monad.State.Trans","lazyStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadEffState"]},{"package":null,"item":["Control.Monad.State.Trans","monadContStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadErrorStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadReaderStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadStateStateT"]},{"package":null,"item":["Control.Monad.State.Trans","monadWriterStateT"]},{"package":null,"item":["Control.Monad.State","State"]},{"package":null,"item":["Control.Monad.State","runState"]},{"package":null,"item":["Control.Monad.State","evalState"]},{"package":null,"item":["Control.Monad.State","execState"]},{"package":null,"item":["Control.Monad.State","mapState"]},{"package":null,"item":["Control.Monad.State","withState"]},{"package":null,"item":["Control.Monad.Writer.Trans","WriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","runWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","execWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","mapWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","functorWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","applyWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","applicativeWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","altWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","plusWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","alternativeWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","bindWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadRecWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadPlusWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadTransWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadEffWriter"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadContWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadErrorWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadReaderWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadStateWriterT"]},{"package":null,"item":["Control.Monad.Writer.Trans","monadWriterWriterT"]},{"package":null,"item":["Control.Monad.Writer","Writer"]},{"package":null,"item":["Control.Monad.Writer","runWriter"]},{"package":null,"item":["Control.Monad.Writer","execWriter"]},{"package":null,"item":["Control.Monad.Writer","mapWriter"]},{"package":"purescript-arrays","item":["Data.Array","singleton"]},{"package":"purescript-arrays","item":["Data.Array","range"]},{"package":"purescript-arrays","item":["Data.Array","(..)"]},{"package":"purescript-arrays","item":["Data.Array","(..)"]},{"package":"purescript-arrays","item":["Data.Array","replicate"]},{"package":"purescript-arrays","item":["Data.Array","replicateM"]},{"package":"purescript-arrays","item":["Data.Array","some"]},{"package":"purescript-arrays","item":["Data.Array","many"]},{"package":"purescript-arrays","item":["Data.Array","null"]},{"package":"purescript-arrays","item":["Data.Array","length"]},{"package":"purescript-arrays","item":["Data.Array","cons"]},{"package":"purescript-arrays","item":["Data.Array","(:)"]},{"package":"purescript-arrays","item":["Data.Array","(:)"]},{"package":"purescript-arrays","item":["Data.Array","snoc"]},{"package":"purescript-arrays","item":["Data.Array","insert"]},{"package":"purescript-arrays","item":["Data.Array","insertBy"]},{"package":"purescript-arrays","item":["Data.Array","head"]},{"package":"purescript-arrays","item":["Data.Array","last"]},{"package":"purescript-arrays","item":["Data.Array","tail"]},{"package":"purescript-arrays","item":["Data.Array","init"]},{"package":"purescript-arrays","item":["Data.Array","uncons"]},{"package":"purescript-arrays","item":["Data.Array","index"]},{"package":"purescript-arrays","item":["Data.Array","(!!)"]},{"package":"purescript-arrays","item":["Data.Array","(!!)"]},{"package":"purescript-arrays","item":["Data.Array","elemIndex"]},{"package":"purescript-arrays","item":["Data.Array","elemLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","findIndex"]},{"package":"purescript-arrays","item":["Data.Array","findLastIndex"]},{"package":"purescript-arrays","item":["Data.Array","insertAt"]},{"package":"purescript-arrays","item":["Data.Array","deleteAt"]},{"package":"purescript-arrays","item":["Data.Array","updateAt"]},{"package":"purescript-arrays","item":["Data.Array","modifyAt"]},{"package":"purescript-arrays","item":["Data.Array","alterAt"]},{"package":"purescript-arrays","item":["Data.Array","reverse"]},{"package":"purescript-arrays","item":["Data.Array","concat"]},{"package":"purescript-arrays","item":["Data.Array","concatMap"]},{"package":"purescript-arrays","item":["Data.Array","filter"]},{"package":"purescript-arrays","item":["Data.Array","filterM"]},{"package":"purescript-arrays","item":["Data.Array","mapMaybe"]},{"package":"purescript-arrays","item":["Data.Array","catMaybes"]},{"package":"purescript-arrays","item":["Data.Array","sort"]},{"package":"purescript-arrays","item":["Data.Array","sortBy"]},{"package":"purescript-arrays","item":["Data.Array","slice"]},{"package":"purescript-arrays","item":["Data.Array","take"]},{"package":"purescript-arrays","item":["Data.Array","takeWhile"]},{"package":"purescript-arrays","item":["Data.Array","drop"]},{"package":"purescript-arrays","item":["Data.Array","dropWhile"]},{"package":"purescript-arrays","item":["Data.Array","span"]},{"package":"purescript-arrays","item":["Data.Array","group"]},{"package":"purescript-arrays","item":["Data.Array","group'"]},{"package":"purescript-arrays","item":["Data.Array","groupBy"]},{"package":"purescript-arrays","item":["Data.Array","nub"]},{"package":"purescript-arrays","item":["Data.Array","nubBy"]},{"package":"purescript-arrays","item":["Data.Array","union"]},{"package":"purescript-arrays","item":["Data.Array","unionBy"]},{"package":"purescript-arrays","item":["Data.Array","delete"]},{"package":"purescript-arrays","item":["Data.Array","deleteBy"]},{"package":"purescript-arrays","item":["Data.Array","(\\\\)"]},{"package":"purescript-arrays","item":["Data.Array","(\\\\)"]},{"package":"purescript-arrays","item":["Data.Array","intersect"]},{"package":"purescript-arrays","item":["Data.Array","intersectBy"]},{"package":"purescript-arrays","item":["Data.Array","zipWith"]},{"package":"purescript-arrays","item":["Data.Array","zipWithA"]},{"package":"purescript-arrays","item":["Data.Array","zip"]},{"package":"purescript-arrays","item":["Data.Array","unzip"]},{"package":"purescript-arrays","item":["Data.Array","foldM"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","unsafeIndex"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","head"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","tail"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","last"]},{"package":"purescript-arrays","item":["Data.Array.Unsafe","init"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","Tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","tuple10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry2"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry3"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry4"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry5"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry6"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry7"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry8"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry9"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","uncurry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","curry10"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-tuples","item":["Data.Tuple.Nested","(/\\)"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","Unfoldable"]},{"package":"purescript-unfoldable","item":["Data.Unfoldable","unfoldableArray"]},{"package":null,"item":["Control.Monad.List.Trans","ListT"]},{"package":null,"item":["Control.Monad.List.Trans","nil"]},{"package":null,"item":["Control.Monad.List.Trans","cons"]},{"package":null,"item":["Control.Monad.List.Trans","prepend'"]},{"package":null,"item":["Control.Monad.List.Trans","prepend"]},{"package":null,"item":["Control.Monad.List.Trans","singleton"]},{"package":null,"item":["Control.Monad.List.Trans","fromEffect"]},{"package":null,"item":["Control.Monad.List.Trans","wrapEffect"]},{"package":null,"item":["Control.Monad.List.Trans","wrapLazy"]},{"package":null,"item":["Control.Monad.List.Trans","unfold"]},{"package":null,"item":["Control.Monad.List.Trans","iterate"]},{"package":null,"item":["Control.Monad.List.Trans","repeat"]},{"package":null,"item":["Control.Monad.List.Trans","take"]},{"package":null,"item":["Control.Monad.List.Trans","takeWhile"]},{"package":null,"item":["Control.Monad.List.Trans","drop"]},{"package":null,"item":["Control.Monad.List.Trans","dropWhile"]},{"package":null,"item":["Control.Monad.List.Trans","filter"]},{"package":null,"item":["Control.Monad.List.Trans","mapMaybe"]},{"package":null,"item":["Control.Monad.List.Trans","catMaybes"]},{"package":null,"item":["Control.Monad.List.Trans","uncons"]},{"package":null,"item":["Control.Monad.List.Trans","head"]},{"package":null,"item":["Control.Monad.List.Trans","tail"]},{"package":null,"item":["Control.Monad.List.Trans","foldl'"]},{"package":null,"item":["Control.Monad.List.Trans","foldl"]},{"package":null,"item":["Control.Monad.List.Trans","scanl"]},{"package":null,"item":["Control.Monad.List.Trans","zipWith'"]},{"package":null,"item":["Control.Monad.List.Trans","zipWith"]},{"package":null,"item":["Control.Monad.List.Trans","semigroupListT"]},{"package":null,"item":["Control.Monad.List.Trans","monoidListT"]},{"package":null,"item":["Control.Monad.List.Trans","functorListT"]},{"package":null,"item":["Control.Monad.List.Trans","unfoldableListT"]},{"package":null,"item":["Control.Monad.List.Trans","applyListT"]},{"package":null,"item":["Control.Monad.List.Trans","applicativeListT"]},{"package":null,"item":["Control.Monad.List.Trans","bindListT"]},{"package":null,"item":["Control.Monad.List.Trans","monadListT"]},{"package":null,"item":["Control.Monad.List.Trans","monadTransListT"]},{"package":null,"item":["Control.Monad.List.Trans","altListT"]},{"package":null,"item":["Control.Monad.List.Trans","plusListT"]},{"package":null,"item":["Control.Monad.List.Trans","alternativeListT"]},{"package":null,"item":["Control.Monad.List.Trans","monadPlusListT"]},{"package":null,"item":["Control.Monad.List.Trans","monadEffListT"]}],"version":"0.7.1","github":["purescript","purescript-transformers"],"versionTag":"v0.7.1","compilerVersion":"0.7.1.0"}