{"uploader":"8084","packageMeta":{"homepage":"","repository":{"url":"https://github.com/8084/purescript-unconsable.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","test","tests"],"main":[""],"devDependencies":{"purescript-effect":"^2.0.0","purescript-assert":"^4.0.0","purescript-psci-support":"^4.0.0"},"authors":[{"email":"klntsky@gmail.com","name":"klntsky"}],"dependencies":{"purescript-either":"^4.1.1","purescript-arrays":"^5.2.0","purescript-maybe":"^4.0.1","purescript-prelude":"^4.1.0","purescript-nonempty":"^5.0.0","purescript-catenable-lists":"^5.0.0","purescript-tuples":"^5.1.0","purescript-strings":"^4.0.1","purescript-lists":"^5.3.0"},"name":"purescript-unconsable","license":["BSD-3-Clause"],"description":"Type class for data structures which can be `uncons`ed + some utilities built on top of it"},"tagTime":"2019-01-20T16:19:02+0000","modules":[{"reExports":[],"name":"Data.Unconsable","comments":null,"declarations":[{"children":[{"comments":null,"title":"uncons","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["head",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["tail",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[49,3],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[49,62]}},{"comments":null,"title":"unconsableArray","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable"],"Unconsable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[204,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[204,45]}},{"comments":null,"title":"unconsableMaybe","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable"],"Unconsable"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}},"sourceSpan":{"start":[207,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[207,45]}},{"comments":null,"title":"unconsableList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable"],"Unconsable"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]}]}},"sourceSpan":{"start":[211,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[211,45]}},{"comments":null,"title":"unconsableLazyList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable"],"Unconsable"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]}]}},"sourceSpan":{"start":[214,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[214,50]}},{"comments":null,"title":"unconsableCatQueue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable"],"Unconsable"]},{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]}]}},"sourceSpan":{"start":[217,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[217,54]}},{"comments":null,"title":"unconsableCatList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable"],"Unconsable"]},{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]}]}},"sourceSpan":{"start":[220,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[220,52]}}],"comments":"The only requirement for instances of this class is that\n`checkUnconsableLaws` must return `true` for all possible values.\n\n```\ncheckUnconsableLaws t =\n  unconsableLength t == length t :: Int\n```\n","title":"Unconsable","info":{"fundeps":[],"arguments":[["t",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null}]},"sourceSpan":{"start":[48,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[49,62]}},{"children":[],"comments":"Equivalent to `length`, maybe except of stack safety.\n\nYou may want to use this function instead of `length` if `foldr` for\nthe particular data type you are using is not stack-safe.\n","title":"unconsableLength","info":{"declType":"value","type":{"tag":"ForAll","contents":["num",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"num"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[63,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[65,31]}},{"children":[],"comments":null,"title":"checkUnconsableLaws","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[54,38]}},{"children":[],"comments":"Given `Foldable` instance `F` which is also an instance of\n`Unconsable`, for all `t :: F a` and for all `n`,\n`compareLength n t ＝ compare n (length t)`.\n","title":"compareLength","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["num",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"num"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[76,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[78,37]}},{"children":[],"comments":"Given `Foldable` instances `F1` and `F2` which are also instances of\n`Unconsable`, for all `t1 :: F1 a` and `t2 :: F2 b`,\n`compareLengths t1 t2 ＝ compare (length t1) (length t2)`.\n","title":"compareLengths","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t2",{"tag":"ForAll","contents":["t1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t2"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[97,43]}},{"children":[],"comments":"Checks whether the first list is longer than the second.\n","title":"isLongerThan","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t2",{"tag":"ForAll","contents":["t1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t2"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[113,42]}},{"children":[],"comments":"Checks whether the first list is shorter than the second.\n","title":"isShorterThan","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t2",{"tag":"ForAll","contents":["t1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t2"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[118,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[120,42]}},{"children":[],"comments":"Checks whether two lists are of the same length.\n","title":"isOfSameLength","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t2",{"tag":"ForAll","contents":["t1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t2"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[125,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[127,42]}},{"children":[],"comments":"If two lists have equal lengths, returns nothing.\n\nIf one of the lists is longer than the other, cuts the longer list at the\nindex equal to the length of the shorter list and returns the rest of it\n(wrapped in `Either`, to allow passing lists of different types).\n\nYou may want to use `longestTail'` instead, to avoid dealing with `Either`.\n\n```purescript\nlongestTail [] [] == Nothing\nlongestTail [] [1,2] == (Just (Right [1,2]))\nlongestTail [1,2,3,4] [1,2] == (Just (Left [3,4]))\nlongestTail [1,2,3,4,5] [1,2,3,4,5] == Nothing\n```\n","title":"longestTail","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t2",{"tag":"ForAll","contents":["t1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t1"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t1"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t2"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t1"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t2"},{"tag":"TypeVar","contents":"b"}]}}]}}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[145,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[147,59]}},{"children":[],"comments":"Less polymorphic version of `longestTail`.\n","title":"longestTail'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[161,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[163,42]}},{"children":[],"comments":"Checks whether the list's length is strictly greater than the given number.\n","title":"longerThan","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["num",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"num"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[173,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[175,36]}},{"children":[],"comments":"Checks whether the list's length is strictly less than the given number.\n","title":"shorterThan","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["num",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"num"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[180,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[182,36]}},{"children":[],"comments":"Checks whether the list's length is equal to the given number.\n","title":"hasLength","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["num",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"num"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"num"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[187,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[189,35]}},{"children":[],"comments":"Checks whether the list's length is one.\n","title":"isSingleton","info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[194,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[194,58]}},{"children":[],"comments":"Checks whether the list's length is zero.\n","title":"isEmpty","info":{"declType":"value","type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unconsable"],"Unconsable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[199,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable.purs","end":[199,54]}}]},{"reExports":[],"name":"Data.Unconsable.NonEmpty","comments":null,"declarations":[{"children":[{"comments":null,"title":"uncons1","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["head",{"tag":"TypeVar","contents":"e"},{"tag":"RCons","contents":["tail",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"e"}]},{"tag":"REmpty"}]}]}]}]},null]}},"sourceSpan":{"start":[15,3],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable/NonEmpty.purs","end":[15,57]}},{"comments":null,"title":"unconsable1Array","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable","NonEmpty"],"Unconsable1"]},{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}},"sourceSpan":{"start":[18,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable/NonEmpty.purs","end":[18,63]}},{"comments":null,"title":"unconsable1List","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable","NonEmpty"],"Unconsable1"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]}]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]}]}},"sourceSpan":{"start":[21,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable/NonEmpty.purs","end":[21,63]}},{"comments":null,"title":"unconsable1LazyList","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable","NonEmpty"],"Unconsable1"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]}]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable/NonEmpty.purs","end":[24,69]}},{"comments":null,"title":"unconsable1NonEmpty","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Unconsable","NonEmpty"],"Unconsable1"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[27,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable/NonEmpty.purs","end":[27,59]}}],"comments":"The user should interpret `Unconsable1 s t` constraint as\n\"`s` is a non-empty container which can be converted to a possibly empty\ncontainer `t`\".\n","title":"Unconsable1","info":{"fundeps":[[["s"],["t"]]],"arguments":[["s",null],["t",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[14,1],"name":"/home/me/c/purescript-unconsable/src/Data/Unconsable/NonEmpty.purs","end":[15,57]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-control":"4.1.0","purescript-console":"4.2.0","purescript-either":"4.1.1","purescript-arrays":"5.2.0","purescript-maybe":"4.0.1","purescript-type-equality":"3.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.1.0","purescript-lazy":"4.0.0","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.0.0","purescript-gen":"2.1.0","purescript-prelude":"4.1.0","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-assert":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-globals":"4.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-psci-support":"4.0.0","purescript-catenable-lists":"5.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.0","purescript-strings":"4.0.1","purescript-identity":"4.1.0","purescript-lists":"5.3.0"},"version":"0.0.2","github":["8084","purescript-unconsable"],"versionTag":"v0.0.2","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.CatQueue":"purescript-catenable-lists","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Data.String.CodeUnits":"purescript-strings","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Math":"purescript-math","Data.String":"purescript-strings","Control.Plus":"purescript-control","Partial":"purescript-partial","Global":"purescript-globals","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Array.ST":"purescript-arrays","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.12.0"}