{"uploader":"fehrenbach","packageMeta":{"repository":{"url":"https://github.com/fehrenbach/purescript-unordered-collections.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-ordered-collections":"^1.0.0","purescript-minibench":"^2.0.0","purescript-psci-support":"^4.0.0","purescript-quickcheck":"^5.0.0"},"dependencies":{"purescript-prelude":"^4.0.0"},"name":"purescript-unordered-collections","license":["MPL-2.0"]},"tagTime":"2018-06-15T18:35:11+0000","modules":[{"reExports":[],"name":"Data.HashMap","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqHashMap","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[56,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[56,55]}},{"comments":null,"title":"hashHashMap","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[59,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[59,75]}},{"comments":null,"title":"monoidHashMap","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[64,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[64,61]}},{"comments":"This is \"the shallow\" semigroup instance, where maps themselves\nare combined using `union` rather than elements being combined.\nFor duplicate keys, values from the left map are preserved.\n","title":"semigroupHashMap","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[70,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[70,67]}},{"comments":null,"title":"functorHashMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[73,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[73,47]}},{"comments":null,"title":"functorWithIndexHashMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FunctorWithIndex"],"FunctorWithIndex"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[76,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[76,67]}},{"comments":"The `Foldable` instance is best used with a *commutative*\nfunction/`Monoid`, since hash maps do not guarantee any\nparticular order.\n","title":"foldableHashMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[84,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[84,49]}},{"comments":"The `FoldableWithIndex` instance is best used with a\n*commutative* function/`Monoid`, since hash maps do not guarantee\nany particular order.\n","title":"foldableWithIndexHashMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FoldableWithIndex"],"FoldableWithIndex"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[92,69]}},{"comments":null,"title":"traversableHashMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[100,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[100,55]}},{"comments":null,"title":"traversableWithIndexHashMap","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","TraversableWithIndex"],"TraversableWithIndex"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]}]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[104,75]}},{"comments":null,"title":"showHashMap","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[171,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[171,63]}}],"comments":"Immutable hash maps from keys `k` to values `v`.\n\nNote that this is an *unordered* collection.\n","title":"HashMap","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]},"declType":"externData"},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[52,52]}},{"children":[],"comments":"The empty map.\n","title":"empty","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]},null]},null]}},"sourceSpan":{"start":[110,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[110,48]}},{"children":[],"comments":"A map of one key and its associated value.\n\n`singleton k v == insert k v empty`\n","title":"singleton","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[179,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[179,61]}},{"children":[],"comments":"Get a value by key.\n","title":"lookup","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[115,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[115,64]}},{"children":[],"comments":"Insert or replace a value.\n\n`lookup k (insert k v m) == Just v`\n","title":"insert","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[123,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[123,73]}},{"children":[],"comments":"Remove a key and its associated value from a map.\n\n`lookup k (delete k m) == Nothing`\n","title":"delete","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[166,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[166,68]}},{"children":[],"comments":"Returns the number of key-value pairs in a map.\n\n`size (singleton k v) == 1`\n","title":"size","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]},null]}},"sourceSpan":{"start":[204,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[204,54]}},{"children":[],"comments":"Test whether a map is empty.\n\n`isEmpty m  ==  (m == empty)`\n","title":"isEmpty","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[185,61]}},{"children":[],"comments":"Test whether a key is in a map.\n","title":"member","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}},"sourceSpan":{"start":[188,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[188,64]}},{"children":[],"comments":"Update or delete the value for a key in a map\n","title":"update","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[198,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[198,86]}},{"children":[],"comments":"Insert a value, delete a value, or update a value for a key in a map\n","title":"alter","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[192,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[192,91]}},{"children":[],"comments":"Turn a foldable functor of pairs into a hash map.\n\nIn the presence of duplicate keys, later (by `foldl`) mappings\noverwrite earlier mappings.\n","title":"fromFoldable","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[130,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[130,87]}},{"children":[],"comments":null,"title":"fromFoldableBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"k"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"v"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[133,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[133,105]}},{"children":[],"comments":"Convert a map to an array using the given function.\n\nNote that no particular order is guaranteed.\n\n```PureScript\ntoArrayBy Tuple (singleton 1 2) == [Tuple 1 2]\ntoArrayBy const        m == keys m\ntoArrayBy (flip const) m == values m\n```\n","title":"toArrayBy","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[145,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[145,82]}},{"children":[],"comments":"Returns the keys of the map in no particular order.\n\nIf you need both keys and values, use `toArrayBy` rather than\nboth `keys` and `values`.\n","title":"keys","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"k"}]}]},null]},null]}},"sourceSpan":{"start":[151,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[151,43]}},{"children":[],"comments":"Returns the values of the map in no particular order.\n\nIf you need both keys and values, use `toArrayBy` rather than\nboth `keys` and `values`.\n","title":"values","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"v"}]}]},null]},null]}},"sourceSpan":{"start":[158,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[158,45]}},{"children":[],"comments":"Union two maps.\n\nFor duplicate keys, we keep the value from the left map.\n\nThis is the same as `Semigroup.append` aka `(<>)`.\n","title":"union","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[211,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[211,77]}},{"children":[],"comments":"Union two maps, combining the values for keys that appear in both maps using the given function.\n\n`unionWith (-) (singleton 0 3) (singleton 0 2) == singleton 0 1`\n","title":"unionWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[221,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[221,98]}},{"children":[],"comments":"Intersect two maps.\n\nFor duplicate keys, we keep the value from the right map.\n\nThis is the same as `Semigroup.append` aka `(<>)`.\n","title":"intersection","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[229,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[229,84]}},{"children":[],"comments":"Intersect two maps, combining the values for keys that appear in both maps using the given function.\n\n`intersectionWith (-) (singleton 0 3) (singleton 0 2) == singleton 0 1`\n","title":"intersectionWith","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[237,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[237,105]}},{"children":[],"comments":"Remove duplicates from an array.\n\nLike `nub` from `Data.Array`, but uses a `Hashable` constraint\ninstead of an `Ord` constraint.\n","title":"nubHash","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[244,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[244,54]}},{"children":[],"comments":null,"title":"debugShow","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]},null]}},"sourceSpan":{"start":[169,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashMap.purs","end":[169,62]}}]},{"reExports":[],"name":"Data.HashSet","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqHashSet","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[35,16],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[35,60]}},{"comments":null,"title":"showHashSet","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[37,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[37,51]}}],"comments":"A `HashSet a` is a set with elements of type `a`.\n\n`a` needs to be `Hashable` for most operations.\n","title":"HashSet","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[33,47]}},{"children":[],"comments":"The empty set.\n","title":"empty","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[41,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[41,29]}},{"children":[],"comments":"The singleton set.\n","title":"singleton","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[45,52]}},{"children":[],"comments":"Insert a value into a set.\n","title":"insert","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[49,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[49,62]}},{"children":[],"comments":"Test whether a value is in a set.\n","title":"member","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[53,60]}},{"children":[],"comments":"Remove a value from a set.\n","title":"delete","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[57,62]}},{"children":[],"comments":"Union two sets.\n","title":"union","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[72,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[72,69]}},{"children":[],"comments":"Intersect two sets.\n","title":"intersection","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[76,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[76,76]}},{"children":[],"comments":"Count the number of elements.\n","title":"size","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[80,35]}},{"children":[],"comments":"Create a set from a foldable structure.\n","title":"fromFoldable","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[61,73]}},{"children":[],"comments":"Turn a set into an array of its elments in no particular order.\n\nTo delete duplicates in an array, consider using `nubHash` from\n`Data.HashMap` instead of `toArray <<< fromFoldable`.\n","title":"toArray","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[68,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/HashSet.purs","end":[68,42]}}]},{"reExports":[],"name":"Data.Hashable","comments":null,"declarations":[{"children":[{"comments":null,"title":"hash","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[49,3],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[49,19]}},{"comments":null,"title":"hashableBoolean","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[51,45]}},{"comments":null,"title":"hashableInt","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[55,37]}},{"comments":null,"title":"hashableNumber","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[60,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[60,43]}},{"comments":null,"title":"hashableChar","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[63,39]}},{"comments":null,"title":"hashableString","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[68,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[68,43]}},{"comments":null,"title":"hashableArray","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[71,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[71,59]}},{"comments":null,"title":"hashableTuple","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[74,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[74,75]}},{"comments":null,"title":"hashableMaybe","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[77,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[77,59]}},{"comments":null,"title":"hashableEither","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[81,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[81,77]}},{"comments":null,"title":"hashableUnit","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[85,39]}},{"comments":null,"title":"hashableVoid","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}},"sourceSpan":{"start":[88,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[88,39]}},{"comments":null,"title":"hashableRecord","info":{"declType":"instance","dependencies":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"l"}],"constraintData":null},{"constraintClass":[["Data","Hashable"],"HashableRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"EqRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"Hashable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[115,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[117,25]}}],"comments":"The `Hashable` type class represents types with decidable\nequality and a hash function for use in hash-based algorithms and\ndata structures, not cryptography.\n\nInstances of `Hashable` must satisfy the following law:\n\n```PureScript\n(a == b) `implies` (hash a == hash b)\n```\n\nNote that while `hash = const 0` is a law-abiding implementation,\none would usually prefer more discrimination. Hash-based data\nstructures and algorithms tend to perform badly in the presence\nof excessive numbers of collisions.\n\nHash values produced by `hash` should not be relied upon to be\nstable accross multiple executions of a program and should not be\nstored externally. While we currently do not do this, we might\nwant to use a fresh salt for every execution in the future.\n","title":"Hashable","info":{"fundeps":[],"arguments":[["a",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}]},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[49,19]}},{"children":[{"comments":null,"title":"hashRecord","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[102,3],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[102,45]}},{"comments":null,"title":"hashableRecordNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"HashableRecord"]},{"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[104,51]}},{"comments":null,"title":"hashableRecordCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"vt"}],"constraintData":null},{"constraintClass":[["Data","Hashable"],"HashableRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"tl"},{"tag":"TypeVar","contents":"r"}],"constraintData":null},{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}],"constraintData":null},{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"vt"},{"tag":"TypeVar","contents":"whatev"},{"tag":"TypeVar","contents":"r"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Hashable"],"HashableRecord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeVar","contents":"vt"}]},{"tag":"TypeVar","contents":"tl"}]}]},{"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[107,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[112,39]}}],"comments":null,"title":"HashableRecord","info":{"fundeps":[[["l"],["r"]]],"arguments":[["l",null],["r",null]],"declType":"typeClass","superclasses":[{"constraintClass":[["Data","Eq"],"EqRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"}],"constraintData":null}]},"sourceSpan":{"start":[101,1],"name":"/home/travis/build/fehrenbach/purescript-unordered-collections/src/Data/Hashable.purs","end":[102,45]}}]}],"resolvedDependencies":{"purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-ordered-collections":"1.0.0","purescript-control":"4.0.0","purescript-console":"4.1.0","purescript-either":"4.0.0","purescript-arrays":"5.0.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.0.0","purescript-lcg":"2.0.0","purescript-lazy":"4.0.0","purescript-minibench":"2.0.0","purescript-foldable-traversable":"4.0.0","purescript-tailrec":"4.0.0","purescript-gen":"2.0.0","purescript-typelevel-prelude":"3.0.0","purescript-prelude":"4.0.1","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-record":"1.0.0","purescript-transformers":"4.1.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.0.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-psci-support":"4.0.0","purescript-random":"4.0.0","purescript-tuples":"5.0.0","purescript-partial":"2.0.0","purescript-quickcheck":"5.0.0","purescript-strings":"4.0.0","purescript-identity":"4.0.0","purescript-lists":"5.0.0","purescript-functions":"4.0.0"},"version":"1.1.0","github":["fehrenbach","purescript-unordered-collections"],"versionTag":"v1.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Effect.Exception.Unsafe":"purescript-exceptions","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Performance.Minibench":"purescript-minibench","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Data.Map.Internal":"purescript-ordered-collections","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}