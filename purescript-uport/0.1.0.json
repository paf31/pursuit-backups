{"uploader":"blinky3713","packageMeta":{"homepage":"https://github.com/f-o-a-m/purescript-uport","repository":{"url":"git://github.com/f-o-a-m/purescript-uport.git","type":"git"},"ignore":["*","!src/**/*"],"main":[""],"authors":[{"email":"i.safareli@gmail.com","name":"Irakli Safareli"}],"dependencies":{"purescript-web3":"^0.16.0"},"name":"purescript-uport","license":["Apache-2.0"],"description":"Purescript wrapper of uport-connect and uport-js"},"tagTime":"2018-03-05T16:45:12+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Network","Ethereum","Uport","Connect"]},"declarations":[{"children":[],"comments":"This effect is used to annotate code which possibly uses Uport lib\nfor signing etherium transactions.\n","title":"UPORT","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[30,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[30,36]}},{"children":[],"comments":"Builder type for Options used to construct `Connect`\n","title":"OptionsBuilder","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[45,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[45,53]}},{"children":[],"comments":"A Type used to create `Connect`\n","title":"Options","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["appName",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"AppName"]}]},{"tag":"RCons","contents":["signer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"RCons","contents":["clientId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"ClientId"]}]},{"tag":"RCons","contents":["network",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}]},{"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[36,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[41,4]}},{"children":[],"comments":null,"title":"Credentials","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["signer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"RCons","contents":["clientId",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"ClientId"]},{"tag":"RCons","contents":["network",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[103,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[107,4]}},{"children":[],"comments":"An instance of `Connect` class from `uport-connect`\n","title":"Connect","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[33,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[33,36]}},{"children":[{"comments":null,"title":"ClientId","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"ClientId","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[75,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[75,35]}},{"children":[{"comments":null,"title":"AppName","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A type used for representing Uport application name\n","title":"AppName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[78,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[78,33]}},{"children":[],"comments":"A combinator used as part of OptionsBuilder, it set's network\non which `Connect` will operate. Example:\n\n```purescript\nconnect\n  $ withAppName (AppName \"MyApp\")\n  >>> withNetwork rinkeby\n```\n","title":"withNetwork","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[99,65]}},{"children":[],"comments":"A combinator used as part of OptionsBuilder, it set's Uport\napplication credentials (used when signed requests are requried).\nExample:\n\n```purescript\nconnect\n  $ withAppName (AppName \"MyApp\")\n  >>> withCredentials myAppCredentials\n```\n","title":"withCredentials","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Credentials"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[118,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[118,77]}},{"children":[],"comments":"A combinator used as part of OptionsBuilder, it set's Uport\napplication name. Example:\n\n```purescript\nconnect\n  $ withAppName (AppName \"MyApp\")\n  >>> withNetwork rinkeby\n```\n","title":"withAppName","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"AppName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[88,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[88,65]}},{"children":[],"comments":"OptionsBuilder which could be used to create Connect using default options\n","title":"optionsDefaults","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"OptionsBuilder"]},{"tag":"TypeVar","contents":"eff"}]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[48,50]}},{"children":[],"comments":"Instantiates and returns a web3 styple provider wrapped with uPort functionality\n","title":"getProvider","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Connect"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["uport",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"UPORT"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Web3","Types","Provider"],"Provider"]}]}]},null]}},"sourceSpan":{"start":[71,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[71,74]}},{"children":[],"comments":null,"title":"connect","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"OptionsBuilder"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["uport",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"UPORT"]},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Connect"]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[52,103]}}]},{"moduleName":{"package":null,"item":["Network","Ethereum","Uport","Network"]},"declarations":[{"children":[],"comments":"Represents Network configuration object.\n","title":"NetworkR","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["id",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["registry",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["rpcUrl",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[22,4]}},{"children":[],"comments":"Type representing Etherium Network on which all\noperations will be performed.\n","title":"Network","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[15,36]}},{"children":[],"comments":"Predefined Network configuration value for \"ropsten\"\n","title":"ropsten","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[41,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[41,34]}},{"children":[],"comments":"Predefined Network configuration value for \"rinkeby\"\n","title":"rinkeby","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[47,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[47,27]}},{"children":[],"comments":"Constructs Network configuration object\n\n```purescript\nmkNetwork\n  { id: \"0x1\"\n  , registry: \"0xab5c8051b9a1df1aab0149f8b0630848b7ecabf6\"\n  , rpcUrl: \"https://mainnet.infura.io\"\n  }\n```\n","title":"mkNetwork","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"NetworkR"]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}]}},"sourceSpan":{"start":[33,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[33,33]}},{"children":[],"comments":"Predefined Network configuration value for \"mainnet\"\n","title":"mainnet","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[38,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[38,34]}},{"children":[],"comments":"Predefined Network configuration value for \"kovan\"\n","title":"kovan","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[44,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[44,32]}}]},{"moduleName":{"package":null,"item":["Network","Ethereum","Uport","Signer"]},"declarations":[{"children":[{"comments":null,"title":"SigningInput","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Input to signing function\n","title":"SigningInput","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[26,43]}},{"children":[],"comments":null,"title":"SignerCallback","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn2"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signature"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[52,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[52,80]}},{"children":[],"comments":"Signing function which will be used to sign JWT's in the credentials object.\nIt could be constracted out of `mkSigner` or more low level function `fromRawSigner`.\n","title":"Signer","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]}},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[23,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[23,47]}},{"children":[{"comments":null,"title":"Signature","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Result of signing function.\n","title":"Signature","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[29,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[29,37]}},{"children":[],"comments":"Low level representation of `Signer`\n","title":"RawSigner","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn2"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"SigningInput"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"SignerCallback"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[50,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[50,71]}},{"children":[],"comments":"Takes `Aff` based signing function and retusn `Signer`.\n","title":"mkSigner","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"SigningInput"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signature"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]}}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[32,84]}},{"children":[],"comments":null,"title":"fromRawSigner","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"RawSigner"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]}]},null]}},"sourceSpan":{"start":[55,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[55,57]}}]},{"moduleName":{"package":null,"item":["Network","Ethereum","Uport","Signer","Simple"]},"declarations":[{"children":[],"comments":"Type containing private key, passed to `SimpleSigner` function\nfrom `uport` module.\n","title":"PrivateKey","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[13,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer/Simple.purs","end":[13,39]}},{"children":[],"comments":"Creates Signer from from PrivateKey using `SimpleSigner` function\nfrom `uport` module.\n","title":"simpleSigner","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer","Simple"],"PrivateKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[21,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer/Simple.purs","end":[21,79]}},{"children":[],"comments":"Constructs `PrivateKey`\n","title":"mkPrivateKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer","Simple"],"PrivateKey"]}]}},"sourceSpan":{"start":[16,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer/Simple.purs","end":[16,37]}}]}],"name":"Network.Ethereum.Uport","comments":null,"declarations":[]},{"reExports":[],"name":"Network.Ethereum.Uport.Connect","comments":null,"declarations":[{"children":[],"comments":"This effect is used to annotate code which possibly uses Uport lib\nfor signing etherium transactions.\n","title":"UPORT","info":{"kind":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]},"declType":"externData"},"sourceSpan":{"start":[30,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[30,36]}},{"children":[],"comments":"An instance of `Connect` class from `uport-connect`\n","title":"Connect","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[33,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[33,36]}},{"children":[{"comments":null,"title":"AppName","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A type used for representing Uport application name\n","title":"AppName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[78,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[78,33]}},{"children":[{"comments":null,"title":"ClientId","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"ClientId","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[75,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[75,35]}},{"children":[],"comments":null,"title":"connect","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"OptionsBuilder"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["uport",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"UPORT"]},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Connect"]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[52,103]}},{"children":[],"comments":"Instantiates and returns a web3 styple provider wrapped with uPort functionality\n","title":"getProvider","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Connect"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"RCons","contents":["uport",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"UPORT"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Web3","Types","Provider"],"Provider"]}]}]},null]}},"sourceSpan":{"start":[71,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[71,74]}},{"children":[],"comments":"A Type used to create `Connect`\n","title":"Options","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["appName",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"AppName"]}]},{"tag":"RCons","contents":["signer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"RCons","contents":["clientId",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"ClientId"]}]},{"tag":"RCons","contents":["network",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}]},{"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[36,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[41,4]}},{"children":[],"comments":"A combinator used as part of OptionsBuilder, it set's Uport\napplication credentials (used when signed requests are requried).\nExample:\n\n```purescript\nconnect\n  $ withAppName (AppName \"MyApp\")\n  >>> withCredentials myAppCredentials\n```\n","title":"withCredentials","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Credentials"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[118,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[118,77]}},{"children":[],"comments":null,"title":"Credentials","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["signer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"RCons","contents":["clientId",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"ClientId"]},{"tag":"RCons","contents":["network",{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[103,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[107,4]}},{"children":[],"comments":"A combinator used as part of OptionsBuilder, it set's Uport\napplication name. Example:\n\n```purescript\nconnect\n  $ withAppName (AppName \"MyApp\")\n  >>> withNetwork rinkeby\n```\n","title":"withAppName","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"AppName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[88,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[88,65]}},{"children":[],"comments":"A combinator used as part of OptionsBuilder, it set's network\non which `Connect` will operate. Example:\n\n```purescript\nconnect\n  $ withAppName (AppName \"MyApp\")\n  >>> withNetwork rinkeby\n```\n","title":"withNetwork","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[99,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[99,65]}},{"children":[],"comments":"Builder type for Options used to construct `Connect`\n","title":"OptionsBuilder","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"Options"]},{"tag":"TypeVar","contents":"eff"}]}]}},"sourceSpan":{"start":[45,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[45,53]}},{"children":[],"comments":"OptionsBuilder which could be used to create Connect using default options\n","title":"optionsDefaults","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Connect"],"OptionsBuilder"]},{"tag":"TypeVar","contents":"eff"}]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Connect.purs","end":[48,50]}}]},{"reExports":[],"name":"Network.Ethereum.Uport.Network","comments":null,"declarations":[{"children":[],"comments":"Type representing Etherium Network on which all\noperations will be performed.\n","title":"Network","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[15,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[15,36]}},{"children":[],"comments":"Represents Network configuration object.\n","title":"NetworkR","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["id",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["registry",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["rpcUrl",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[22,4]}},{"children":[],"comments":"Constructs Network configuration object\n\n```purescript\nmkNetwork\n  { id: \"0x1\"\n  , registry: \"0xab5c8051b9a1df1aab0149f8b0630848b7ecabf6\"\n  , rpcUrl: \"https://mainnet.infura.io\"\n  }\n```\n","title":"mkNetwork","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"NetworkR"]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}]}},"sourceSpan":{"start":[33,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[33,33]}},{"children":[],"comments":"Predefined Network configuration value for \"mainnet\"\n","title":"mainnet","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[38,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[38,34]}},{"children":[],"comments":"Predefined Network configuration value for \"ropsten\"\n","title":"ropsten","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[41,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[41,34]}},{"children":[],"comments":"Predefined Network configuration value for \"kovan\"\n","title":"kovan","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[44,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[44,32]}},{"children":[],"comments":"Predefined Network configuration value for \"rinkeby\"\n","title":"rinkeby","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Network"],"Network"]}},"sourceSpan":{"start":[47,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Network.purs","end":[47,27]}}]},{"reExports":[],"name":"Network.Ethereum.Uport.Signer","comments":null,"declarations":[{"children":[],"comments":"Signing function which will be used to sign JWT's in the credentials object.\nIt could be constracted out of `mkSigner` or more low level function `fromRawSigner`.\n","title":"Signer","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Control","Monad","Eff"],"Effect"]}},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[23,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[23,47]}},{"children":[{"comments":null,"title":"SigningInput","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Input to signing function\n","title":"SigningInput","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[26,43]}},{"children":[{"comments":null,"title":"Signature","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Result of signing function.\n","title":"Signature","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[29,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[29,37]}},{"children":[],"comments":"Takes `Aff` based signing function and retusn `Signer`.\n","title":"mkSigner","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"SigningInput"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Aff"],"Aff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signature"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff"],"Eff"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]}}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[32,84]}},{"children":[],"comments":"Low level representation of `Signer`\n","title":"RawSigner","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn2"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"SigningInput"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"SignerCallback"]},{"tag":"TypeVar","contents":"eff"}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[50,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[50,71]}},{"children":[],"comments":null,"title":"SignerCallback","info":{"arguments":[["eff",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Uncurried"],"EffFn2"]},{"tag":"TypeVar","contents":"eff"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"Error"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signature"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[52,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[52,80]}},{"children":[],"comments":null,"title":"fromRawSigner","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"RawSigner"]},{"tag":"TypeVar","contents":"eff"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"TypeVar","contents":"eff"}]}]},null]}},"sourceSpan":{"start":[55,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer.purs","end":[55,57]}}]},{"reExports":[],"name":"Network.Ethereum.Uport.Signer.Simple","comments":null,"declarations":[{"children":[],"comments":"Type containing private key, passed to `SimpleSigner` function\nfrom `uport` module.\n","title":"PrivateKey","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[13,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer/Simple.purs","end":[13,39]}},{"children":[],"comments":"Constructs `PrivateKey`\n","title":"mkPrivateKey","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer","Simple"],"PrivateKey"]}]}},"sourceSpan":{"start":[16,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer/Simple.purs","end":[16,37]}},{"children":[],"comments":"Creates Signer from from PrivateKey using `SimpleSigner` function\nfrom `uport` module.\n","title":"simpleSigner","info":{"declType":"value","type":{"tag":"ForAll","contents":["eff",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer","Simple"],"PrivateKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Network","Ethereum","Uport","Signer"],"Signer"]},{"tag":"RCons","contents":["exception",{"tag":"TypeConstructor","contents":[["Control","Monad","Eff","Exception"],"EXCEPTION"]},{"tag":"TypeVar","contents":"eff"}]}]}]},null]}},"sourceSpan":{"start":[21,1],"name":"/Users/martyall/code/purescript/purescript-uport/src/Network/Ethereum/Uport/Signer/Simple.purs","end":[21,79]}}]}],"resolvedDependencies":{"purescript-free":"4.2.0","purescript-proxy":"2.1.0","purescript-bytestrings":"6.0.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-unicode":"3.0.2","purescript-maps":"3.6.0","purescript-control":"3.3.1","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-profunctor":"3.2.0","purescript-foreign-generic":"5.0.0","purescript-arrays":"4.2.2","purescript-maybe":"3.0.0","purescript-profunctor-lenses":"3.7.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.1.0","purescript-invariant":"3.0.0","purescript-parsing":"4.3.1","purescript-web3":"0.16.0","purescript-lazy":"3.0.0","purescript-monoid":"3.3.0","purescript-coroutines":"4.0.0","purescript-quotient":"1.0.0","purescript-aff":"4.0.0","purescript-modules":"3.0.0","purescript-foldable-traversable":"3.7.1","purescript-tailrec":"3.3.0","purescript-avar":"2.0.1","purescript-gen":"1.3.1","purescript-typelevel-prelude":"2.6.0","purescript-tagged":"2.0.0","purescript-functors":"2.2.0","purescript-leibniz":"4.1.0","purescript-prelude":"3.1.1","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.2.0","purescript-contravariant":"3.1.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.2.0","purescript-eff":"3.2.0","purescript-mmorph":"3.0.0","purescript-const":"3.2.0","purescript-record":"0.2.6","purescript-node-buffer":"3.0.1","purescript-freet":"3.0.0","purescript-transformers":"3.4.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.4.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-parallel":"3.3.1","purescript-tuples":"4.1.0","purescript-errors":"3.0.0","purescript-partial":"1.2.1","purescript-quickcheck":"4.6.2","purescript-strings":"3.5.0","purescript-identity":"3.1.0","purescript-foreign":"4.0.1","purescript-sets":"3.1.0","purescript-lists":"4.12.0","purescript-nullable":"3.0.0","purescript-datetime":"3.4.1","purescript-functions":"3.0.0"},"version":"0.1.0","github":["f-o-a-m","purescript-uport"],"versionTag":"v0.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Data.Module":"purescript-modules","Network.Ethereum.Web3.Solidity.Int":"purescript-web3","Control.Monad.Eff.Ref":"purescript-refs","Data.Char.Gen":"purescript-strings","Network.Ethereum.Web3.Solidity.EncodingType":"purescript-web3","Data.String.NonEmpty":"purescript-strings","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Foreign.Generic.Class":"purescript-foreign-generic","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.Record.Unsafe":"purescript-record","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Type.Quotient":"purescript-quotient","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Data.Foreign.NullOrUndefined":"purescript-foreign-generic","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Data.Lens":"purescript-profunctor-lenses","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Data.Foreign.Generic.Types":"purescript-foreign-generic","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Network.Ethereum.Web3.Solidity.Size":"purescript-web3","Text.Parsing.Parser":"purescript-parsing","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Lens.Prism.Maybe":"purescript-profunctor-lenses","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Lens.Internal.Grating":"purescript-profunctor-lenses","Data.Profunctor.Cochoice":"purescript-profunctor","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Test.QuickCheck.LCG":"purescript-quickcheck","Data.Lens.Lens.Product":"purescript-profunctor-lenses","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Text.Parsing.Parser.Pos":"purescript-parsing","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Foreign.Index":"purescript-foreign","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.Lens.Prism.Coproduct":"purescript-profunctor-lenses","Data.Map.Gen":"purescript-maps","Data.Lens.Lens":"purescript-profunctor-lenses","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Data.Foreign.Class":"purescript-foreign-generic","Control.Monad.Cont":"purescript-transformers","Data.Time.Component.Gen":"purescript-datetime","Data.Lens.Internal.Forget":"purescript-profunctor-lenses","Data.List.ZipList":"purescript-lists","Network.Ethereum.Web3.Types":"purescript-web3","Data.Functor.Coproduct.Nested":"purescript-functors","Control.Error.Util":"purescript-errors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Record":"purescript-record","Network.Ethereum.Web3.Contract.Internal":"purescript-web3","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Lens.Indexed":"purescript-profunctor-lenses","Control.Coroutine":"purescript-coroutines","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Generic.Rep.Show":"purescript-generics-rep","Data.Profunctor.Clown":"purescript-profunctor","Data.Lens.Zoom":"purescript-profunctor-lenses","Data.Lens.Iso.Newtype":"purescript-profunctor-lenses","Control.Monad.Morph":"purescript-mmorph","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Lens.Internal.Wander":"purescript-profunctor-lenses","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Lens.Lens.Tuple":"purescript-profunctor-lenses","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Exists":"purescript-exists","Data.Char.Unicode.Internal":"purescript-unicode","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Network.Ethereum.Web3":"purescript-web3","Network.Ethereum.Web3.Solidity.Vector":"purescript-web3","Network.Ethereum.Web3.Types.Types":"purescript-web3","Data.Functor.App":"purescript-functors","Data.Lens.Internal.Exchange":"purescript-profunctor-lenses","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Lens.Internal.Shop":"purescript-profunctor-lenses","Data.Lens.Internal.Tagged":"purescript-profunctor-lenses","Data.Lens.Record":"purescript-profunctor-lenses","Network.Ethereum.Web3.JsonRPC":"purescript-web3","Data.List.Types":"purescript-lists","Data.Leibniz":"purescript-leibniz","Data.Functor":"purescript-prelude","Network.Ethereum.Web3.Solidity":"purescript-web3","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.Lens.Grate":"purescript-profunctor-lenses","Data.Profunctor.Strong":"purescript-profunctor","Data.Lens.Internal.Market":"purescript-profunctor-lenses","Data.CatQueue":"purescript-catenable-lists","Text.Parsing.Indent":"purescript-parsing","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Lens.Common":"purescript-profunctor-lenses","Data.Lens.Getter":"purescript-profunctor-lenses","Data.Interval.Duration":"purescript-datetime","Data.Foreign.Internal":"purescript-foreign-generic","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Network.Ethereum.Web3.Types.Provider":"purescript-web3","Network.Ethereum.Web3.Types.Sha3":"purescript-web3","Data.Set":"purescript-sets","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Record.Builder":"purescript-record","Data.Lens.Traversal":"purescript-profunctor-lenses","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Network.Ethereum.Web3.Solidity.Tuple":"purescript-web3","Data.Functor.Invariant":"purescript-invariant","Data.Char.Unicode":"purescript-unicode","Data.Foreign.Generic":"purescript-foreign-generic","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Text.Parsing.Parser.Token":"purescript-parsing","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Data.Lens.Types":"purescript-profunctor-lenses","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Network.Ethereum.Web3.Types.Utils":"purescript-web3","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.Foreign.Keys":"purescript-foreign","Data.String.CaseInsensitive":"purescript-strings","Data.Record.ST":"purescript-record","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Network.Ethereum.Web3.Contract":"purescript-web3","Data.Lens.Index":"purescript-profunctor-lenses","Data.Lens.Internal.Re":"purescript-profunctor-lenses","Control.MonadPlus":"purescript-control","Node.Buffer.Unsafe":"purescript-node-buffer","Network.Ethereum.Web3.Types.BigNumber":"purescript-web3","Data.Lens.Lens.Void":"purescript-profunctor-lenses","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Lens.Internal.Indexed":"purescript-profunctor-lenses","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","Network.Ethereum.Web3.Types.EtherUnit":"purescript-web3","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Aff.Compat":"purescript-aff","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Lens.Fold":"purescript-profunctor-lenses","Data.Lens.Setter":"purescript-profunctor-lenses","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Lens.Prism.Either":"purescript-profunctor-lenses","Network.Ethereum.Web3.Api":"purescript-web3","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Foreign":"purescript-foreign","Data.Ordering":"purescript-prelude","Data.Lens.Lens.Unit":"purescript-profunctor-lenses","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Data.Lens.Fold.Partial":"purescript-profunctor-lenses","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Text.Parsing.Parser.Combinators":"purescript-parsing","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Data.Time":"purescript-datetime","Network.Ethereum.Web3.Solidity.Event":"purescript-web3","Type.Row.Effect.Equality":"purescript-type-equality","Data.EitherR":"purescript-errors","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Data.Functor.Tagged":"purescript-tagged","Text.Parsing.Parser.Expr":"purescript-parsing","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Text.Parsing.Parser.Language":"purescript-parsing","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Foreign.JSON":"purescript-foreign-generic","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Network.Ethereum.Web3.Solidity.AbiEncoding":"purescript-web3","Network.Ethereum.Web3.Solidity.Bytes":"purescript-web3","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Control.Monad.Free.Trans":"purescript-freet","Data.Bifunctor.Join":"purescript-bifunctors","Data.Lens.Internal.Zipping":"purescript-profunctor-lenses","Network.Ethereum.Web3.Solidity.Generic":"purescript-web3","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.ByteString":"purescript-bytestrings","Data.Lens.Prism":"purescript-profunctor-lenses","Data.String.Regex.Flags":"purescript-strings","Data.ByteString.Encode":"purescript-bytestrings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Text.Parsing.Parser.String":"purescript-parsing","Data.Lens.Internal.Focusing":"purescript-profunctor-lenses","Data.Lens.Iso":"purescript-profunctor-lenses","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Data.Foreign.Generic.EnumEncoding":"purescript-foreign-generic","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Eff.AVar":"purescript-avar","Data.Lens.At":"purescript-profunctor-lenses","Control.Monad.Writer":"purescript-transformers","Network.Ethereum.Web3.Solidity.UInt":"purescript-web3","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}