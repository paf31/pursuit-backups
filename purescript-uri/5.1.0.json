{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/slamdata/purescript-uri","repository":{"url":"git://github.com/slamdata/purescript-uri.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-spec":"^2.0.0","purescript-quickcheck":"^4.4.0"},"dependencies":{"purescript-these":"^3.0.0","purescript-maps":"^3.0.0","purescript-arrays":"^4.3.0","purescript-profunctor-lenses":"^3.7.0","purescript-unfoldable":"^3.0.0","purescript-parsing":"^4.3.1","purescript-integers":"^3.0.0","purescript-globals":"^3.0.0","purescript-generics-rep":"^5.2.0"},"name":"purescript-uri","license":["Apache-2.0"],"description":"A type-safe parser, printer, and ADT for URLs and URIs. "},"tagTime":"2018-03-20T23:36:22+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["URI","AbsoluteURI"]},"declarations":[{"children":[{"comments":null,"title":"AbsoluteURI","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAbsoluteURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]}},"sourceSpan":{"start":[40,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[40,142]}},{"comments":null,"title":"ordAbsoluteURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]}},"sourceSpan":{"start":[41,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[41,149]}},{"comments":null,"title":"genericAbsoluteURI","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"TypeWildcard","contents":{"start":[42,95],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[42,96]}}]}},"sourceSpan":{"start":[42,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[42,96]}},{"comments":null,"title":"showAbsoluteURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[43,149]}}],"comments":"A strictly absolute URI. An absolute URI can still contain relative paths\nbut is required to have a `Scheme` component.\n","title":"AbsoluteURI","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null]]},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[38,135]}}]},{"moduleName":{"package":null,"item":["URI","Authority"]},"declarations":[{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}}]},{"moduleName":{"package":null,"item":["URI","Fragment"]},"declarations":[{"children":[{"comments":null,"title":"eqFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[26,49]}},{"comments":null,"title":"ordFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[27,51]}},{"comments":null,"title":"semigroupFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[28,63]}},{"comments":null,"title":"monoidFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[29,57]}},{"comments":null,"title":"showFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[31,38]}}],"comments":"The fragment component (hash) of a URI.\n","title":"Fragment","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[24,35]}}]},{"moduleName":{"package":null,"item":["URI","HierarchicalPart"]},"declarations":[{"children":[{"comments":null,"title":"HierarchicalPartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HierarchicalPartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[48,136]}},{"comments":null,"title":"ordHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[49,142]}},{"comments":null,"title":"genericHierarchicalPart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,99],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}},{"comments":null,"title":"showHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[51,141]}}],"comments":"The \"hierarchical part\" of a generic or absolute URI. This combines an\nauthority (optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"HierarchicalPart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[46,44]}},{"children":[],"comments":"The specific path types supported in a hierarchical-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.Rootless`](../URI.Path.Rootless) for an explanation of these\nforms.\n","title":"HierPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[92,49]}}]},{"moduleName":{"package":null,"item":["URI","Host"]},"declarations":[{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}}]},{"moduleName":{"package":null,"item":["URI","Path"]},"declarations":[{"children":[{"comments":null,"title":"Path","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}}]},{"moduleName":{"package":null,"item":["URI","Path","Absolute"]},"declarations":[{"children":[{"comments":null,"title":"PathAbsolute","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}}]},{"moduleName":{"package":null,"item":["URI","Path","NoScheme"]},"declarations":[{"children":[{"comments":null,"title":"PathNoScheme","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[21,49]}},{"comments":null,"title":"ordPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[22,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[22,51]}},{"comments":null,"title":"genericPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]},{"tag":"TypeWildcard","contents":{"start":[23,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}}]}},"sourceSpan":{"start":[23,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}},{"comments":null,"title":"showPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[24,46]}}],"comments":"A relative path that doesn't look like a URI scheme, corresponding to\n_path-noscheme_ in the spec. This path cannot start with the character\n`/`, contain the character `:` before the first `/`, or be entirely empty.\nThis type can appear in a relative-part when there is no authority\ncomponent.\n","title":"PathNoScheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[19,80]}}]},{"moduleName":{"package":null,"item":["URI","Path","Rootless"]},"declarations":[{"children":[{"comments":null,"title":"PathRootless","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[19,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[19,49]}},{"comments":null,"title":"ordPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[20,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[20,51]}},{"comments":null,"title":"genericPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeWildcard","contents":{"start":[21,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}},{"comments":null,"title":"showPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[22,46]}}],"comments":"A relative path, corresponding to _path-rootless_ in the spec. This path\ncannot start with the character `/` or be entirely empty. This type can\nappear in a hierarchical-part when there is no authority component.\n","title":"PathRootless","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[17,78]}}]},{"moduleName":{"package":null,"item":["URI","Port"]},"declarations":[{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}}]},{"moduleName":{"package":null,"item":["URI","Query"]},"declarations":[{"children":[{"comments":null,"title":"eqQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[30,43]}},{"comments":null,"title":"ordQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[31,45]}},{"comments":null,"title":"semigroupQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[32,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[32,57]}},{"comments":null,"title":"monoidQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[33,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[33,51]}},{"comments":null,"title":"showQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[35,32]}}],"comments":"The query component of a URI.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to deal with the common `?key1=value1&key2=value2` format, take\na look at `URI.Extra.QueryPairs`.\n","title":"Query","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[28,29]}}]},{"moduleName":{"package":null,"item":["URI","RelativePart"]},"declarations":[{"children":[{"comments":null,"title":"RelativePartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RelativePartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"relPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[48,126]}},{"comments":null,"title":"ordRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[49,132]}},{"comments":null,"title":"genericRelativePart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,90],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}},{"comments":null,"title":"showRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[51,131]}}],"comments":"The \"relative part\" of a relative reference.  This combines an authority\n(optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"RelativePart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[46,39]}},{"children":[],"comments":"The specific path types supported in a relative-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.PathNoScheme`](../URI.Path.PathNoScheme) for an explanation of\nthese forms.\n","title":"RelPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[92,48]}}]},{"moduleName":{"package":null,"item":["URI","RelativeRef"]},"declarations":[{"children":[{"comments":null,"title":"RelativeRef","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[39,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[39,162]}},{"comments":null,"title":"ordRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[40,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[40,170]}},{"comments":null,"title":"genericRelativeRef","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeWildcard","contents":{"start":[41,103],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[41,104]}}]}},"sourceSpan":{"start":[41,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[41,104]}},{"comments":null,"title":"showRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[42,171]}}],"comments":"A relative URI. Relative in the sense that it lacks a `Scheme` component.\n","title":"RelativeRef","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["query",null],["fragment",null]]},"sourceSpan":{"start":[37,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[37,148]}}]},{"moduleName":{"package":null,"item":["URI","Scheme"]},"declarations":[{"children":[{"comments":null,"title":"eqScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[27,45]}},{"comments":null,"title":"ordScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[28,47]}},{"comments":null,"title":"showScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[30,34]}}],"comments":"The scheme part of an absolute URI. For example: `http`, `ftp`, `git`.\n","title":"Scheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[25,39]}}]},{"moduleName":{"package":null,"item":["URI","URI"]},"declarations":[{"children":[{"comments":null,"title":"URI","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[44,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[44,148]}},{"comments":null,"title":"ordURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[45,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[45,156]}},{"comments":null,"title":"genericURI","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeWildcard","contents":{"start":[46,88],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[46,89]}}]}},"sourceSpan":{"start":[46,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[46,89]}},{"comments":null,"title":"showURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[47,157]}}],"comments":"A general purpose absolute URI - similar to `AbsoluteURI` but also admits\na fragment component. An absolute URI can still contain relative paths\nbut is required to have a `Scheme` component.\n","title":"URI","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["fragment",null]]},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[42,145]}}]},{"moduleName":{"package":null,"item":["URI","URIRef"]},"declarations":[{"children":[],"comments":"The most general kind of URI, can either be relative or absolute.\n","title":"URIRef","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["relPath",null],["query",null],["fragment",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URIRef.purs","end":[50,73]}}]},{"moduleName":{"package":null,"item":["URI","UserInfo"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}}]}],"name":"URI","comments":null,"declarations":[]},{"reExports":[{"moduleName":{"package":null,"item":["URI","HierarchicalPart"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}},{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}},{"children":[{"comments":null,"title":"PathRootless","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[19,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[19,49]}},{"comments":null,"title":"ordPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[20,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[20,51]}},{"comments":null,"title":"genericPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeWildcard","contents":{"start":[21,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}},{"comments":null,"title":"showPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[22,46]}}],"comments":"A relative path, corresponding to _path-rootless_ in the spec. This path\ncannot start with the character `/` or be entirely empty. This type can\nappear in a hierarchical-part when there is no authority component.\n","title":"PathRootless","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[17,78]}},{"children":[{"comments":null,"title":"PathAbsolute","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}},{"children":[{"comments":null,"title":"Path","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nprinter.\n\nUsed as `Record (HierarchicalPartPrintOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n","title":"HierarchicalPartPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[86,4]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nparser.\n\nUsed as `Record (HierarchicalPartParseOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n","title":"HierarchicalPartParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[73,4]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nparser and printer.\n\nUsed as `Record (HierarchicalPartOptions userInfo hosts path hierPath)`\nwhen type anotating an options record.\n","title":"HierarchicalPartOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[60,67]}},{"children":[{"comments":null,"title":"HierarchicalPartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HierarchicalPartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[48,136]}},{"comments":null,"title":"ordHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[49,142]}},{"comments":null,"title":"genericHierarchicalPart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,99],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}},{"comments":null,"title":"showHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[51,141]}}],"comments":"The \"hierarchical part\" of a generic or absolute URI. This combines an\nauthority (optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"HierarchicalPart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[46,44]}},{"children":[],"comments":"The specific path types supported in a hierarchical-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.Rootless`](../URI.Path.Rootless) for an explanation of these\nforms.\n","title":"HierPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[92,49]}},{"children":[],"comments":"A row type for describing the options fields used by the authority printer.\n\nUsed as `Record (AuthorityPrintOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[67,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser.\n\nUsed as `Record (AuthorityParseOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[57,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser\nand printer.\n\nUsed as `Record (AuthorityOptions userInfo hosts)` when type annotating an\noptions record.\n","title":"AuthorityOptions","info":{"arguments":[["userInfo",null],["hosts",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[47,46]}},{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}},{"children":[],"comments":"A lens for the user-info component of the authority.\n","title":"_userInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[97,23]}},{"children":[],"comments":"An affine traversal for the path component of a hierarchical-part, this\nsucceeds when the authority is present also.\n","title":"_path","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"TypeVar","contents":"path"}]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[139,11]}},{"children":[],"comments":"A lens for the host(s) component of the authority.\n","title":"_hosts","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"TypeVar","contents":"hosts"}]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[108,12]}},{"children":[],"comments":"An affine traversal for the path component of a hierarchical-part, this\nsucceeds when the authority is not present.\n","title":"_hierPath","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[150,23]}},{"children":[],"comments":"An affine traversal for the authority component of a hierarchical-part.\n","title":"_authority","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[124,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[128,33]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}}]},{"moduleName":{"package":null,"item":["URI","Query"]},"declarations":[{"children":[{"comments":null,"title":"eqQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[30,43]}},{"comments":null,"title":"ordQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[31,45]}},{"comments":null,"title":"semigroupQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[32,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[32,57]}},{"comments":null,"title":"monoidQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[33,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[33,51]}},{"comments":null,"title":"showQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[35,32]}}],"comments":"The query component of a URI.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to deal with the common `?key1=value1&key2=value2` format, take\na look at `URI.Extra.QueryPairs`.\n","title":"Query","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[28,29]}}]},{"moduleName":{"package":null,"item":["URI","Scheme"]},"declarations":[{"children":[{"comments":null,"title":"eqScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[27,45]}},{"comments":null,"title":"ordScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[28,47]}},{"comments":null,"title":"showScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[30,34]}}],"comments":"The scheme part of an absolute URI. For example: `http`, `ftp`, `git`.\n","title":"Scheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[25,39]}}]}],"name":"URI.AbsoluteURI","comments":null,"declarations":[{"children":[{"comments":null,"title":"AbsoluteURI","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAbsoluteURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]}},"sourceSpan":{"start":[40,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[40,142]}},{"comments":null,"title":"ordAbsoluteURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]}},"sourceSpan":{"start":[41,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[41,149]}},{"comments":null,"title":"genericAbsoluteURI","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"TypeWildcard","contents":{"start":[42,95],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[42,96]}}]}},"sourceSpan":{"start":[42,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[42,96]}},{"comments":null,"title":"showAbsoluteURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[43,149]}}],"comments":"A strictly absolute URI. An absolute URI can still contain relative paths\nbut is required to have a `Scheme` component.\n","title":"AbsoluteURI","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null]]},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[38,135]}},{"children":[],"comments":"A row type for describing the options fields used by the absolute URI\nparser and printer.\n\nUsed as `Record (AbsoluteURIOptions userInfo hosts path hierPath query)`\nwhen type anotating an options record.\n\nSee below for details of how to use these configuration options.\n","title":"AbsoluteURIOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURIParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURIPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[54,68]}},{"children":[],"comments":"A row type for describing the options fields used by the absolute URI\nparser.\n\nUsed as `Record (AbsoluteURIParseOptions userInfo hosts path hierPath query ())`\nwhen type anotating an options record.\n\nHaving this options record allows custom representations to be used for\nthe URI components. If this is not necessary, `pure` can be used for all\nthe options aside from `parseHosts`, which will typically be\n`HostPortPair.parseHosts pure pure`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair parser.\n","title":"AbsoluteURIParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"RCons","contents":["parseQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[74,4]}},{"children":[],"comments":"A row type for describing the options fields used by the absolute URI\nprinter.\n\nUsed as `Record (AbsoluteURIPrintOptions userInfo hosts path hierPath query ())`\nwhen type anotating an options record.\n\nAs a reverse of the parse options, this specifies how to print values back\nfrom custom representations. If this is not necessary, `id` can be used for\nall the options aside from `printHosts`, which will typically be\n`HostPortPair.printHosts id id`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair printer.\n","title":"AbsoluteURIPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"RCons","contents":["printQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}},"sourceSpan":{"start":[87,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[94,4]}},{"children":[],"comments":"A parser for an absolute URI.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURIParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[100,67]}},{"children":[],"comments":"A printer for an absolute URI.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURIPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[112,11]}},{"children":[],"comments":"The scheme component of an absolute URI.\n","title":"_scheme","info":{"declType":"value","type":{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[121,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[125,13]}},{"children":[],"comments":"The hierarchical-part component of an absolute URI.\n","title":"_hierPart","info":{"declType":"value","type":{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[132,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[136,54]}},{"children":[],"comments":"The query component of an absolute URI.\n","title":"_query","info":{"declType":"value","type":{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[143,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/AbsoluteURI.purs","end":[147,20]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","Host"]},"declarations":[{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}}]},{"moduleName":{"package":null,"item":["URI","Port"]},"declarations":[{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}}]},{"moduleName":{"package":null,"item":["URI","UserInfo"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}}]}],"name":"URI.Authority","comments":null,"declarations":[{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser\nand printer.\n\nUsed as `Record (AuthorityOptions userInfo hosts)` when type annotating an\noptions record.\n","title":"AuthorityOptions","info":{"arguments":[["userInfo",null],["hosts",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[47,46]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser.\n\nUsed as `Record (AuthorityParseOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[57,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority printer.\n\nUsed as `Record (AuthorityPrintOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[67,4]}},{"children":[],"comments":"A parser for the authority part of a URI. Expects values with a `\"//\"`\nprefix.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]}]},null]},null]},null]}},"sourceSpan":{"start":[71,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[74,45]}},{"children":[],"comments":"A printer for the authority part of a URI. Will print the value with a\n`\"//\"` prefix.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]},null]}},"sourceSpan":{"start":[83,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[87,11]}},{"children":[],"comments":"A lens for the user-info component of the authority.\n","title":"_userInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[97,23]}},{"children":[],"comments":"A lens for the host(s) component of the authority.\n","title":"_hosts","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"TypeVar","contents":"hosts"}]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[108,12]}}]},{"reExports":[],"name":"URI.Common","comments":"Common functions used in parsing and printing URI components.\n","declarations":[{"children":[{"comments":null,"title":"URIPartParseError","info":{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqURIPartParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]}},"sourceSpan":{"start":[37,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[37,68]}},{"comments":null,"title":"ordURIPartParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]}},"sourceSpan":{"start":[38,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[38,70]}},{"comments":null,"title":"newtypeURIPartParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeWildcard","contents":{"start":[39,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[39,72]}}]}},"sourceSpan":{"start":[39,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[39,72]}},{"comments":null,"title":"genericURIPartParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeWildcard","contents":{"start":[40,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[40,72]}}]}},"sourceSpan":{"start":[40,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[40,72]}},{"comments":null,"title":"showURIPartParseError","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[41,57]}}],"comments":"An error type used when a custom component parser fails to handle a value.\n","title":"URIPartParseError","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[35,53]}},{"children":[],"comments":"Adapts a parser with a parser-esque function. First the original\nparser runs, then it attempts to refine the result with the function.\n","title":"wrapParser","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[50,18]}},{"children":[],"comments":"Parser for ascii alphabetical characters (upper and lowercase).\n","title":"alpha","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[59,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[59,27]}},{"children":[],"comments":"Parser for ascii alphanumeric characters (upper and lowercase for letters).\n","title":"alphaNum","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[63,30]}},{"children":[],"comments":"Parser for characters that are allowed in a URI but do not have a reserved\npurpose.\n","title":"unreserved","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[68,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[68,32]}},{"children":[],"comments":"Parser for a percent-encoded character.\n","title":"pctEncoded","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[77,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[77,42]}},{"children":[],"comments":"Parser for the \"sub-delims\" group of reserved characters.\n","title":"subDelims","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[72,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[72,31]}},{"children":[],"comments":"A helper function for printing URI components using percent-encoding for\ncharacters that require it.\n\nAccepts a parser that is used to determine whether a character is allowed\nto appear un-encoded in the URI component and the string to encode.\n","title":"printEncoded","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[89,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[89,52]}},{"children":[],"comments":"A version of [`printEncoded`](#v:printEncoded) that operates on non-empty\nstrings.\n","title":"printEncoded'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}]}},"sourceSpan":{"start":[101,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[101,69]}},{"children":[],"comments":"A version of [`decodeURIComponent`](https://pursuit.purescript.org/packages/purescript-globals/docs/Global#v:decodeURIComponent)\nthat operates on non-empty strings.\n","title":"decodeURIComponent'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[107,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Common.purs","end":[107,54]}}]},{"reExports":[],"name":"URI.Extra.MultiHostPortPair","comments":null,"declarations":[{"children":[],"comments":"Multi-host/port pairs, where host & port combinations can be separated by\n`,`, as used by some connection URI schemes. This is not strictly\ncompatible with RFC 3986, as in that spec `RegName`s can contain `,`, and\nonly one port can be specified in the authority.\n\nA motivating example for where this may be useful: dealing with mongodb\nconnection strings.\n","title":"MultiHostPortPair","info":{"arguments":[["host",null],["port",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]}},"sourceSpan":{"start":[36,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/MultiHostPortPair.purs","end":[36,59]}},{"children":[],"comments":"A parser for multiple host/port pairs embedded in a URI.\n\nThis function allows for the `Host` and `Port` components to be parsed into\ncustom representations. If this is not necessary, use `pure` for both of\nthese arguments.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["port",{"tag":"ForAll","contents":["host",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"host"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"port"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","MultiHostPortPair"],"MultiHostPortPair"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/MultiHostPortPair.purs","end":[47,48]}},{"children":[],"comments":"A printer for multiple host/port pairs embedded in a URI.\n\nAs a counterpart to the `parser` this function also requires the `Host`\nand `Port` components to be printed back from their custom representations.\nIf no custom types are being used, pass `id` for both of these arguments.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["port",{"tag":"ForAll","contents":["host",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"port"}]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","MultiHostPortPair"],"MultiHostPortPair"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/MultiHostPortPair.purs","end":[87,11]}}]},{"reExports":[],"name":"URI.Extra.QueryPairs","comments":null,"declarations":[{"children":[{"comments":null,"title":"QueryPairs","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqQueryPairs","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[50,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[50,74]}},{"comments":null,"title":"ordQueryPairs","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[51,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[51,78]}},{"comments":null,"title":"genericQueryPairs","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeWildcard","contents":{"start":[52,62],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[52,63]}}]}},"sourceSpan":{"start":[52,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[52,63]}},{"comments":null,"title":"showQueryPairs","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[53,67]}},{"comments":null,"title":"semigroupQueryPairs","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[54,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[54,73]}},{"comments":null,"title":"monoidQueryPairs","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}},"sourceSpan":{"start":[55,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[55,67]}}],"comments":"A query string split into an array of key/value pairs. There is no precise\nspec for this, but the format is commonly used, so this attempts to handle\nthese strings in a sensible way.\n\n- The representation uses an array rather than a map, so duplicate keys\n  are supported.\n- Keys are not required to have a value associated.\n- `&` and `;` are both treated as pair delimiters.\n","title":"QueryPairs","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["k",null],["v",null]]},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[48,64]}},{"children":[],"comments":"Parses a query into key/value pairs.\n\nThis function allows for the `Key` and `Value` components to be parsed\ninto custom representations. If this is not necessary, use `pure` for both\nthese arguments.\n","title":"parse","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"k"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[62,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[67,46]}},{"children":[],"comments":"A printer for key/value pairs style query string.\n\nAs a counterpart to the `parser` this function also requires the `Key`\nand `Value` components to be printed back from their custom representations.\nIf no custom types are being used, pass `id` for both of these arguments.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}]}]},null]},null]}},"sourceSpan":{"start":[91,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[96,12]}},{"children":[],"comments":"The supported key characters, excluding percent-encodings.\n","title":"keyPartChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[207,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[207,33]}},{"children":[],"comments":"The supported value characters, excluding percent-encodings.\n","title":"valuePartChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[213,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[213,35]}},{"children":[{"comments":null,"title":"eqKey","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}},"sourceSpan":{"start":[110,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[110,39]}},{"comments":null,"title":"ordKey","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}},"sourceSpan":{"start":[111,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[111,41]}},{"comments":null,"title":"semigroupKey","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}},"sourceSpan":{"start":[112,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[112,53]}},{"comments":null,"title":"monoidKey","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}},"sourceSpan":{"start":[113,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[113,47]}},{"comments":null,"title":"showKey","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}},"sourceSpan":{"start":[115,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[115,28]}}],"comments":"The default `Key` type used for `QueryPairs`.\n","title":"Key","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[108,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[108,25]}},{"children":[],"comments":"Constructs a key value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeKeyFromString` instead.\n\n``` purescript\nkeyFromString \"foo\" = unsafeKeyFromString \"foo\"\nkeyFromString \"foo#bar\" = unsafeKeyFromString \"foo%23bar\"\nkeyFromString \"foo%23bar\" = unsafeKeyFromString \"foo%2523bar\"\n```\n","title":"keyFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}},"sourceSpan":{"start":[128,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[128,29]}},{"children":[],"comments":"Returns the string value for a key, percent-decoding any characters\nthat require it.\n\n``` purescript\nkeyToString (unsafeKeyFromString \"foo\") = \"foo\"\nkeyToString (unsafeKeyFromString \"foo%23bar\") = \"foo#bar\"\n```\n","title":"keyToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[138,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[138,27]}},{"children":[],"comments":"Constructs a key value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe key, to prevent double-encoding.\n","title":"unsafeKeyFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}},"sourceSpan":{"start":[144,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[144,35]}},{"children":[],"comments":"Returns the string value for a key without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n","title":"unsafeKeyToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[151,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[151,33]}},{"children":[{"comments":null,"title":"eqValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}},"sourceSpan":{"start":[157,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[157,43]}},{"comments":null,"title":"ordValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}},"sourceSpan":{"start":[158,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[158,45]}},{"comments":null,"title":"semigroupValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}},"sourceSpan":{"start":[159,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[159,57]}},{"comments":null,"title":"monoidValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}},"sourceSpan":{"start":[160,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[160,51]}},{"comments":null,"title":"showValue","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}},"sourceSpan":{"start":[162,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[162,32]}}],"comments":"The default `Value` type used for `QueryPairs`.\n","title":"Value","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[155,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[155,29]}},{"children":[],"comments":"Constructs a value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeValueFromString` instead.\n\n``` purescript\nvalueFromString \"foo\" = unsafeValueFromString \"foo\"\nvalueFromString \"foo#bar\" = unsafeValueFromString \"foo%23bar\"\nvalueFromString \"foo%23bar\" = unsafeValueFromString \"foo%2523bar\"\n```\n","title":"valueFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}},"sourceSpan":{"start":[175,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[175,33]}},{"children":[],"comments":"Returns the string value for a value, percent-decoding any characters\nthat require it.\n\n``` purescript\nvalueToString (unsafeValueFromString \"foo\") = \"foo\"\nvalueToString (unsafeValueFromString \"foo%23bar\") = \"foo#bar\"\n```\n","title":"valueToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[190,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[190,31]}},{"children":[],"comments":"Constructs a value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe value, to prevent double-encoding.\n","title":"unsafeValueFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}},"sourceSpan":{"start":[196,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[196,39]}},{"children":[],"comments":"Returns the string value for a value without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n","title":"unsafeValueToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[203,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/QueryPairs.purs","end":[203,37]}}]},{"reExports":[],"name":"URI.Extra.UserPassInfo","comments":null,"declarations":[{"children":[{"comments":null,"title":"UserPassInfo","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["user",{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]},{"tag":"RCons","contents":["password",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqUserPassInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]}},"sourceSpan":{"start":[39,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[39,49]}},{"comments":null,"title":"ordUserPassInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]}},"sourceSpan":{"start":[40,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[40,51]}},{"comments":null,"title":"newtypeUserPassInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]},{"tag":"TypeWildcard","contents":{"start":[41,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[41,61]}}]}},"sourceSpan":{"start":[41,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[41,61]}},{"comments":null,"title":"showUserPassInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[43,46]}}],"comments":"`user:password` formatted user-info components for URI authorities.\n\nThis format is considered deprecated according to RFC3986 but is still\nvery common, so this is provided for cases where it is necessary.\n\nThe username part is required, so a value like `:hello` will fail to parse\nfor this type.\n\nThe `:` characer will be percent-encoded in all locations other than the\n`user:password` separator, although the parser will accept passwords\ncontaining un-encoded `:` characters.\n","title":"UserPassInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[37,6]}},{"children":[],"comments":"A parser for `user:password` formatted user-info.\n","title":"parse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]}]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[48,57]}},{"children":[],"comments":"A printer for `user:password` formatted user-info.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[66,32]}},{"children":[],"comments":"The supported user/password characters, excluding percent-encodings.\n","title":"userPassInfoChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[78,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Extra/UserPassInfo.purs","end":[78,38]}}]},{"reExports":[],"name":"URI.Fragment","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[26,49]}},{"comments":null,"title":"ordFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[27,51]}},{"comments":null,"title":"semigroupFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[28,63]}},{"comments":null,"title":"monoidFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[29,57]}},{"comments":null,"title":"showFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[31,38]}}],"comments":"The fragment component (hash) of a URI.\n","title":"Fragment","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[24,35]}},{"children":[],"comments":"Constructs a fragment value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo\" = unsafeFromString \"foo\"\nfromString \"foo#bar\" = unsafeFromString \"foo%23bar\"\nfromString \"foo%23bar\" = unsafeFromString \"foo%2523bar\"\n```\n","title":"fromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[44,31]}},{"children":[],"comments":"Returns the string value for a fragment, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo\") = \"foo\"\ntoString (unsafeFromString \"foo%23bar\") = \"foo#bar\"\n```\n","title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[54,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[54,29]}},{"children":[],"comments":"Constructs a fragment value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe fragment, to prevent double-encoding.\n","title":"unsafeFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[60,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[60,37]}},{"children":[],"comments":"Returns the string value for the fragment without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n","title":"unsafeToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[67,35]}},{"children":[],"comments":"A parser for the fragment component of a URI. Expects values with a `'#'`\nprefix.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[72,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[72,32]}},{"children":[],"comments":"A printer for the fragment component of a URI. Will print the value with\na `'#'` prefix.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[80,26]}},{"children":[],"comments":"The supported fragment characters, excluding percent-encodings.\n","title":"fragmentChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[84,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[84,34]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","Authority"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}},{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A row type for describing the options fields used by the authority printer.\n\nUsed as `Record (AuthorityPrintOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[67,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser.\n\nUsed as `Record (AuthorityParseOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[57,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser\nand printer.\n\nUsed as `Record (AuthorityOptions userInfo hosts)` when type annotating an\noptions record.\n","title":"AuthorityOptions","info":{"arguments":[["userInfo",null],["hosts",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[47,46]}},{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}},{"children":[],"comments":"A lens for the user-info component of the authority.\n","title":"_userInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[97,23]}},{"children":[],"comments":"A lens for the host(s) component of the authority.\n","title":"_hosts","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"TypeVar","contents":"hosts"}]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[108,12]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}}]},{"moduleName":{"package":null,"item":["URI","Path"]},"declarations":[{"children":[{"comments":null,"title":"Path","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}}]},{"moduleName":{"package":null,"item":["URI","Path","Absolute"]},"declarations":[{"children":[{"comments":null,"title":"PathAbsolute","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}}]},{"moduleName":{"package":null,"item":["URI","Path","Rootless"]},"declarations":[{"children":[{"comments":null,"title":"PathRootless","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[19,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[19,49]}},{"comments":null,"title":"ordPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[20,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[20,51]}},{"comments":null,"title":"genericPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeWildcard","contents":{"start":[21,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}},{"comments":null,"title":"showPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[22,46]}}],"comments":"A relative path, corresponding to _path-rootless_ in the spec. This path\ncannot start with the character `/` or be entirely empty. This type can\nappear in a hierarchical-part when there is no authority component.\n","title":"PathRootless","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[17,78]}}]}],"name":"URI.HierarchicalPart","comments":null,"declarations":[{"children":[{"comments":null,"title":"HierarchicalPartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HierarchicalPartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[48,136]}},{"comments":null,"title":"ordHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[49,142]}},{"comments":null,"title":"genericHierarchicalPart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,99],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}},{"comments":null,"title":"showHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[51,141]}}],"comments":"The \"hierarchical part\" of a generic or absolute URI. This combines an\nauthority (optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"HierarchicalPart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[46,44]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nparser and printer.\n\nUsed as `Record (HierarchicalPartOptions userInfo hosts path hierPath)`\nwhen type anotating an options record.\n","title":"HierarchicalPartOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[60,67]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nparser.\n\nUsed as `Record (HierarchicalPartParseOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n","title":"HierarchicalPartParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[73,4]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nprinter.\n\nUsed as `Record (HierarchicalPartPrintOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n","title":"HierarchicalPartPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[86,4]}},{"children":[],"comments":"The specific path types supported in a hierarchical-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.Rootless`](../URI.Path.Rootless) for an explanation of these\nforms.\n","title":"HierPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[92,49]}},{"children":[],"comments":"A parser for the hierarchical-part of a URI.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[98,66]}},{"children":[],"comments":"A printer for the hierarchical-part of a URI.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[116,59]}},{"children":[],"comments":"An affine traversal for the authority component of a hierarchical-part.\n","title":"_authority","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[124,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[128,33]}},{"children":[],"comments":"An affine traversal for the path component of a hierarchical-part, this\nsucceeds when the authority is present also.\n","title":"_path","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"TypeVar","contents":"path"}]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[139,11]}},{"children":[],"comments":"An affine traversal for the path component of a hierarchical-part, this\nsucceeds when the authority is not present.\n","title":"_hierPath","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[150,23]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","Host","IPv4Address"]},"declarations":[{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}}]},{"moduleName":{"package":null,"item":["URI","Host","IPv6Address"]},"declarations":[{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}}]},{"moduleName":{"package":null,"item":["URI","Host","RegName"]},"declarations":[{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}}]}],"name":"URI.Host","comments":null,"declarations":[{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A parser for host addresses.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[41,28]}},{"children":[],"comments":"A printer for host addresses.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[48,22]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}}]},{"reExports":[],"name":"URI.Host.Gen","comments":null,"declarations":[{"children":[],"comments":"Generates a random `IPv4Address` for testing purposes.\n","title":"genIPv4","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}]},null]}},"sourceSpan":{"start":[15,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/Gen.purs","end":[15,46]}},{"children":[],"comments":"Generates a random `RegName` for testing purposes.\n","title":"genRegName","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/Gen.purs","end":[24,58]}},{"children":[],"comments":"Generates a random `Host` for testing purposes.\n","title":"genHost","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/Gen.purs","end":[33,52]}}]},{"reExports":[],"name":"URI.Host.IPv4Address","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[],"comments":"Constructs a `IPv4Address` part safely: bounds-checks each octet to ensure\nit occurs within the range 0-255 (inclusive).\n","title":"fromInts","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}]}]}]}]}},"sourceSpan":{"start":[34,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[34,53]}},{"children":[],"comments":"Constructs a `IPv4Address` part unsafely: if any of the arguments are\noutside the allowable bounds, a runtime error will be thrown.\n\nThis is intended as a convenience when describing `IPv4Address`es\nstatically in PureScript code, in all other cases `fromInts` should be\nused.\n","title":"unsafeFromInts","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}]}]}]}},"sourceSpan":{"start":[49,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[49,53]}},{"children":[],"comments":"A parser for IPv4 addresses.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[56,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[56,35]}},{"children":[],"comments":"A printer for IPv4 adddresses.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[65,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[65,29]}}]},{"reExports":[],"name":"URI.Host.IPv6Address","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[],"comments":null,"title":"unsafeFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[28,40]}},{"children":[],"comments":null,"title":"unsafeToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[31,38]}},{"children":[],"comments":null,"title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[34,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[34,35]}}]},{"reExports":[],"name":"URI.Host.RegName","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[],"comments":"Constructs a reg-name value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo.com\" = unsafeFromString \"foo.com\"\nfromString \"foo:bar\" = unsafeFromString \"foo%3Abar\"\nfromString \"foo%3Abar\" = unsafeFromString \"foo%253Abar\"\n```\n","title":"fromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[43,38]}},{"children":[],"comments":"Returns the string value for a reg-name, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo.com\") = \"foo.com\"\ntoString (unsafeFromString \"foo%3Abar\") = \"foo:bar\"\n```\n","title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[53,36]}},{"children":[],"comments":"Constructs a query value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe query, to prevent double-encoding.\n","title":"unsafeFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[59,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[59,44]}},{"children":[],"comments":"Returns the string value for the reg-name without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n","title":"unsafeToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[66,42]}},{"children":[],"comments":"A parser for reg-names.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[70,31]}},{"children":[],"comments":"A printer for reg-names.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[76,25]}},{"children":[],"comments":"The supported reg-name characters, excluding percent-encodings.\n","title":"regNameChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[80,33]}}]},{"reExports":[],"name":"URI.HostPortPair","comments":null,"declarations":[{"children":[],"comments":"A spec-conformant host/port pair (may also be empty).\nFor example: `purescript.org`, `localhost:3000`, `:9000`.\n","title":"HostPortPair","info":{"arguments":[["host",null],["port",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]}},"sourceSpan":{"start":[18,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HostPortPair.purs","end":[18,54]}},{"children":[],"comments":"A parser for a spec-conformant host/port pair.\n\nThis function allows for the `Host` and `Port` components to be parsed into\ncustom representations. If this is not necessary, use `pure` for both of\nthese arguments.\n\nHost parsing is dealt with a little differently to all the other URI\ncomponents, as for hosts the control is passed entirely to the component\nparser. This is to accomodate multi-host URIs that are used sometimes for\nconnection strings and the like, but as these are not spec-conforming this\npart of parsing may need to bend the rules a little. See\n[`URI.Extra.MultiHostPortPair`](../URI.Extra.MultiHostPortPair) for an\nexample of this.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["port",{"tag":"ForAll","contents":["host",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"host"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"port"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HostPortPair"],"HostPortPair"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HostPortPair.purs","end":[37,43]}},{"children":[],"comments":"A printer for a spec-conformant host/port pair.\n\nAs a counterpart to the `parser` this function also requires the `Host`\nand `Port` components to be printed back from their custom representations.\nIf no custom types are being used, pass `id` for both of these arguments.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["port",{"tag":"ForAll","contents":["host",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"port"}]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HostPortPair"],"HostPortPair"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]},null]},null]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HostPortPair.purs","end":[57,11]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","Host","Gen"]},"declarations":[{"children":[],"comments":"Generates a random `RegName` for testing purposes.\n","title":"genRegName","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/Gen.purs","end":[24,58]}},{"children":[],"comments":"Generates a random `IPv4Address` for testing purposes.\n","title":"genIPv4","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}]},null]}},"sourceSpan":{"start":[15,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/Gen.purs","end":[15,46]}},{"children":[],"comments":"Generates a random `Host` for testing purposes.\n","title":"genHost","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/Gen.purs","end":[33,52]}}]},{"moduleName":{"package":null,"item":["URI","Port","Gen"]},"declarations":[{"children":[],"comments":"Generates a random `Port` for testing purposes.\n","title":"genPort","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}]},null]}},"sourceSpan":{"start":[10,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port/Gen.purs","end":[10,39]}}]}],"name":"URI.HostPortPair.Gen","comments":null,"declarations":[{"children":[],"comments":"Generates a random `HostPortPair` for testing purposes.\n","title":"genHostPortPair","info":{"declType":"value","type":{"tag":"ForAll","contents":["port",{"tag":"ForAll","contents":["host",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"host"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"port"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HostPortPair"],"HostPortPair"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HostPortPair/Gen.purs","end":[22,31]}}]},{"reExports":[],"name":"URI.Path","comments":null,"declarations":[{"children":[{"comments":null,"title":"Path","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}},{"children":[],"comments":"A parser for a _path-abempty_ URI component.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[29,28]}},{"children":[],"comments":"A printer for a _path-abempty_ URI component.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[33,22]}}]},{"reExports":[],"name":"URI.Path.Absolute","comments":null,"declarations":[{"children":[{"comments":null,"title":"PathAbsolute","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}},{"children":[],"comments":"A parser for a _path-absolute_ URI component.\n","title":"parse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[34,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[34,35]}},{"children":[],"comments":"A printer for a _path-absolute_ URI component.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[44,30]}}]},{"reExports":[],"name":"URI.Path.NoScheme","comments":null,"declarations":[{"children":[{"comments":null,"title":"PathNoScheme","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[21,49]}},{"comments":null,"title":"ordPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[22,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[22,51]}},{"comments":null,"title":"genericPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]},{"tag":"TypeWildcard","contents":{"start":[23,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}}]}},"sourceSpan":{"start":[23,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}},{"comments":null,"title":"showPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[24,46]}}],"comments":"A relative path that doesn't look like a URI scheme, corresponding to\n_path-noscheme_ in the spec. This path cannot start with the character\n`/`, contain the character `:` before the first `/`, or be entirely empty.\nThis type can appear in a relative-part when there is no authority\ncomponent.\n","title":"PathNoScheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[19,80]}},{"children":[],"comments":"A parser for a _path-noscheme_ URI component.\n","title":"parse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[27,35]}},{"children":[],"comments":"A printer for a _path-noscheme_ URI component.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[34,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[34,30]}}]},{"reExports":[],"name":"URI.Path.Rootless","comments":null,"declarations":[{"children":[{"comments":null,"title":"PathRootless","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[19,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[19,49]}},{"comments":null,"title":"ordPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[20,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[20,51]}},{"comments":null,"title":"genericPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeWildcard","contents":{"start":[21,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}},{"comments":null,"title":"showPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[22,46]}}],"comments":"A relative path, corresponding to _path-rootless_ in the spec. This path\ncannot start with the character `/` or be entirely empty. This type can\nappear in a hierarchical-part when there is no authority component.\n","title":"PathRootless","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[17,78]}},{"children":[],"comments":"A parser for a _path-rootless_ URI component.\n","title":"parse","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[25,35]}},{"children":[],"comments":"A printer for a _path-rootless_ URI component.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[32,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[32,30]}}]},{"reExports":[],"name":"URI.Path.Segment","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqPathSegment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}},"sourceSpan":{"start":[45,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[45,55]}},{"comments":null,"title":"ordPathSegment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}},"sourceSpan":{"start":[46,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[46,57]}},{"comments":null,"title":"showPathSegment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[48,44]}}],"comments":"A path segment. Can be empty, as this is required to represent some paths -\nsegments are joined together with slashes, so in cases where a path\ncontains multiple contiguous slashes this is represented by a group of\nempty path segments. Corresponds to _segment_ in the spec.\n","title":"PathSegment","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[43,41]}},{"children":[],"comments":"Constructs a segment value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeSegmentFromString` instead.\n","title":"segmentFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[55,41]}},{"children":[],"comments":"Returns the string value for a segment, percent-decoding any characters\nthat require it.\n","title":"segmentToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[60,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[60,39]}},{"children":[],"comments":"Constructs a segment value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe segment, to prevent double-encoding.\n","title":"unsafeSegmentFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[66,47]}},{"children":[],"comments":"Returns the string value for the segment without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `segmentFromString`/\n`unsafeSegmentFromString` pairing.\n","title":"unsafeSegmentToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[73,45]}},{"children":[],"comments":"A parser for a _segment_ component of a URI.\n","title":"parseSegment","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}},"sourceSpan":{"start":[77,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[77,41]}},{"children":[],"comments":"A printer for a _segment_ component of a URI.\n","title":"printSegment","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[84,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[84,36]}},{"children":[{"comments":null,"title":"eqPathSegmentNZ","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}},"sourceSpan":{"start":[91,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[91,59]}},{"comments":null,"title":"ordPathSegmentNZ","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}},"sourceSpan":{"start":[92,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[92,61]}},{"comments":null,"title":"showPathSegmentNZ","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}},"sourceSpan":{"start":[94,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[94,48]}}],"comments":"A path segment that cannot be empty. Corresponds to _segment-nz_ in the\nspec.\n","title":"PathSegmentNZ","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[89,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[89,53]}},{"children":[],"comments":"Constructs a non-empty segment value from a string, percent-encoding any\ncharacters that require it. Note that running this on a string that has\nalready had percent-encoding applied will double-encode it, for those\nsituations use `unsafeSegmentNZFromString` instead.\n","title":"segmentNZFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}},"sourceSpan":{"start":[101,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[101,53]}},{"children":[],"comments":"Returns the string value for a non-empty segment, percent-decoding any\ncharacters that require it.\n","title":"segmentNZToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[106,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[106,51]}},{"children":[],"comments":"Constructs a non-empty segment value from a string directly - no\npercent-encoding will be applied. This is useful when using a custom\nencoding scheme for the segment, to prevent double-encoding.\n","title":"unsafeSegmentNZFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}},"sourceSpan":{"start":[112,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[112,59]}},{"children":[],"comments":"Returns the string value for a non-empty segment without percent-decoding.\nOnly \"unsafe\" in the sense that values this produces may need further\ndecoding, the name is more for symmetry with the `segmentNZFromString`/\n`unsafeSegmentNZFromString` pairing.\n","title":"unsafeSegmentNZToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[119,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[119,57]}},{"children":[],"comments":"A parser for a _segment-nz_ component of a URI.\n","title":"parseSegmentNZ","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}},"sourceSpan":{"start":[123,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[123,45]}},{"children":[],"comments":"A printer for a _segment-nz_ component of a URI.\n","title":"printSegmentNZ","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[130,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[130,40]}},{"children":[{"comments":null,"title":"eqPathSegmentNZNC","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}},"sourceSpan":{"start":[137,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[137,63]}},{"comments":null,"title":"ordPathSegmentNZNC","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}},"sourceSpan":{"start":[138,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[138,65]}},{"comments":null,"title":"showPathSegmentNZNC","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}},"sourceSpan":{"start":[140,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[140,52]}}],"comments":"A path segment that cannot be empty or contain the `:` character.\nCorresponds to _segment-nz-nc_ in the spec.\n","title":"PathSegmentNZNC","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[135,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[135,57]}},{"children":[],"comments":"Constructs a non-empty-no-colon segment value from a string,\npercent-encoding any characters that require it. Note that running this on\na string that has already had percent-encoding applied will double-encode\nit, for those situations use `unsafeSegmentNZNCFromString` instead.\n","title":"segmentNZNCFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}},"sourceSpan":{"start":[147,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[147,57]}},{"children":[],"comments":"Constructs a non-empty-no-colon segment value from a string directly - no\npercent-encoding will be applied. This is useful when using a custom\nencoding scheme for the segment, to prevent double-encoding.\n","title":"segmentNZNCToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[153,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[153,55]}},{"children":[],"comments":"Returns the string value for a non-empty-no-colon segment, percent-decoding\nany characters that require it.\n","title":"unsafeSegmentNZNCFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}},"sourceSpan":{"start":[158,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[158,63]}},{"children":[],"comments":"Returns the string value for the non-empty-no-colon segment without\npercent-decoding. Only \"unsafe\" in the sense that values this produces may\nneed further decoding, the name is more for symmetry with the\n`segmentNZNCFromString`/`unsafeSegmentNZNCFromString` pairing.\n","title":"unsafeSegmentNZNCToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[165,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[165,61]}},{"children":[],"comments":"A parser for a _segment-nz-nc_ component of a URI.\n","title":"parseSegmentNZNC","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}},"sourceSpan":{"start":[169,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[169,49]}},{"children":[],"comments":"A printer for a _segment-nz-nc_ component of a URI.\n","title":"printSegmentNZNC","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[176,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[176,44]}},{"children":[],"comments":"The supported path segment characters, excluding percent-encodings.\n","title":"segmentChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[180,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[180,33]}},{"children":[],"comments":"The supported no-colon path segment characters, excluding\npercent-encodings.\n","title":"segmentNCChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[185,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Segment.purs","end":[185,35]}}]},{"reExports":[],"name":"URI.Port","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}},{"children":[],"comments":"Returns the port number as an integer.\n","title":"toInt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[32,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[32,19]}},{"children":[],"comments":"Attempts to create a port from the passed integer. If the value falls\noutside of the range 0-65535 (inclusive) `Nothing` will be returned.\n","title":"fromInt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}]}},"sourceSpan":{"start":[37,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[37,27]}},{"children":[],"comments":"Constructs a port from an integer directly: if the value is not an\nacceptable port number a runtime error will be thrown.\n\nThis is intended as a convenience when describing `Port`s statically in\nPureScript code, in all other cases `fromInt` should be preferred.\n","title":"unsafeFromInt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[47,27]}},{"children":[],"comments":"A parser for the port component of a host in a URI. Expects values with a\n`':'` prefix.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[55,28]}},{"children":[],"comments":"A printer for the port component of a host in a URI. Will print the value\nwith a `':'` prefix.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[64,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[64,22]}}]},{"reExports":[],"name":"URI.Port.Gen","comments":null,"declarations":[{"children":[],"comments":"Generates a random `Port` for testing purposes.\n","title":"genPort","info":{"declType":"value","type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}]},null]}},"sourceSpan":{"start":[10,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port/Gen.purs","end":[10,39]}}]},{"reExports":[],"name":"URI.Query","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[30,43]}},{"comments":null,"title":"ordQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[31,45]}},{"comments":null,"title":"semigroupQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[32,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[32,57]}},{"comments":null,"title":"monoidQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[33,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[33,51]}},{"comments":null,"title":"showQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[35,32]}}],"comments":"The query component of a URI.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to deal with the common `?key1=value1&key2=value2` format, take\na look at `URI.Extra.QueryPairs`.\n","title":"Query","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[28,29]}},{"children":[],"comments":"Constructs a query value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo\" = unsafeFromString \"foo\"\nfromString \"foo#bar\" = unsafeFromString \"foo%23bar\"\nfromString \"foo%23bar\" = unsafeFromString \"foo%2523bar\"\n```\n","title":"fromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[48,28]}},{"children":[],"comments":"Returns the string value for a query, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo\") = \"foo\"\ntoString (unsafeFromString \"foo%23bar\") = \"foo#bar\"\n```\n","title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[58,26]}},{"children":[],"comments":"Constructs a query value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe query, to prevent double-encoding.\n","title":"unsafeFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[64,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[64,34]}},{"children":[],"comments":"Returns the string value for a query without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n","title":"unsafeToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[71,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[71,32]}},{"children":[],"comments":"A parser for the query component of a URI. Expects values with a `'?'`\nprefix.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[76,29]}},{"children":[],"comments":"A printer for the query component of a URI. Will print the value with\na `'?'` prefix.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[84,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[84,23]}},{"children":[],"comments":"The supported query characters, excluding percent-encodings.\n","title":"queryChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[88,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[88,31]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","Authority"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}},{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A row type for describing the options fields used by the authority printer.\n\nUsed as `Record (AuthorityPrintOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[67,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser.\n\nUsed as `Record (AuthorityParseOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[57,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser\nand printer.\n\nUsed as `Record (AuthorityOptions userInfo hosts)` when type annotating an\noptions record.\n","title":"AuthorityOptions","info":{"arguments":[["userInfo",null],["hosts",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[47,46]}},{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}},{"children":[],"comments":"A lens for the user-info component of the authority.\n","title":"_userInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[97,23]}},{"children":[],"comments":"A lens for the host(s) component of the authority.\n","title":"_hosts","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"TypeVar","contents":"hosts"}]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[108,12]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}}]},{"moduleName":{"package":null,"item":["URI","Path"]},"declarations":[{"children":[{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}}]},{"moduleName":{"package":null,"item":["URI","Path","Absolute"]},"declarations":[{"children":[{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}}]},{"moduleName":{"package":null,"item":["URI","Path","NoScheme"]},"declarations":[{"children":[{"comments":null,"title":"eqPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[21,49]}},{"comments":null,"title":"ordPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[22,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[22,51]}},{"comments":null,"title":"genericPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]},{"tag":"TypeWildcard","contents":{"start":[23,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}}]}},"sourceSpan":{"start":[23,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}},{"comments":null,"title":"showPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[24,46]}}],"comments":"A relative path that doesn't look like a URI scheme, corresponding to\n_path-noscheme_ in the spec. This path cannot start with the character\n`/`, contain the character `:` before the first `/`, or be entirely empty.\nThis type can appear in a relative-part when there is no authority\ncomponent.\n","title":"PathNoScheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[19,80]}}]}],"name":"URI.RelativePart","comments":null,"declarations":[{"children":[{"comments":null,"title":"RelativePartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RelativePartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"relPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[48,126]}},{"comments":null,"title":"ordRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[49,132]}},{"comments":null,"title":"genericRelativePart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,90],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}},{"comments":null,"title":"showRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[51,131]}}],"comments":"The \"relative part\" of a relative reference.  This combines an authority\n(optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"RelativePart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[46,39]}},{"children":[],"comments":"A row type for describing the options fields used by the relative-part\nparser and printer.\n\nUsed as `Record (RelativePartOptions userInfo hosts path relPath)`\nwhen type annotating an options record.\n","title":"RelativePartOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[60,62]}},{"children":[],"comments":"A row type for describing the options fields used by the relative-part\nparser.\n\nUsed as `Record (RelativePartParseOptions userInfo hosts path relPath ())`\nwhen type annotating an options record.\n","title":"RelativePartParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelPath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[73,4]}},{"children":[],"comments":"A row type for describing the options fields used by the relative-part\nprinter.\n\nUsed as `Record (RelativePartPrintOptions userInfo hosts path relPath ())`\nwhen type annotating an options record.\n","title":"RelativePartPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelPath"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[86,4]}},{"children":[],"comments":"The specific path types supported in a relative-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.PathNoScheme`](../URI.Path.PathNoScheme) for an explanation of\nthese forms.\n","title":"RelPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[92,48]}},{"children":[],"comments":"A parser for the relative-part of a URI.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[98,61]}},{"children":[],"comments":"A printer for the relative-part of a URI.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[116,54]}},{"children":[],"comments":"An affine traversal for the authority component of a relative-part.\n","title":"_authority","info":{"declType":"value","type":{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[124,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[128,33]}},{"children":[],"comments":"An affine traversal for the path component of a relative-part, this\nsucceeds when the authority is present also.\n","title":"_path","info":{"declType":"value","type":{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},{"tag":"TypeVar","contents":"path"}]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[139,11]}},{"children":[],"comments":"An affine traversal for the path component of a relative-part, this\nsucceeds when the authority is not present.\n","title":"_relPath","info":{"declType":"value","type":{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"relPath"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[150,22]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","Fragment"]},"declarations":[{"children":[{"comments":null,"title":"eqFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[26,49]}},{"comments":null,"title":"ordFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[27,51]}},{"comments":null,"title":"semigroupFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[28,63]}},{"comments":null,"title":"monoidFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[29,57]}},{"comments":null,"title":"showFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[31,38]}}],"comments":"The fragment component (hash) of a URI.\n","title":"Fragment","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[24,35]}}]},{"moduleName":{"package":null,"item":["URI","Query"]},"declarations":[{"children":[{"comments":null,"title":"eqQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[30,43]}},{"comments":null,"title":"ordQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[31,45]}},{"comments":null,"title":"semigroupQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[32,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[32,57]}},{"comments":null,"title":"monoidQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[33,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[33,51]}},{"comments":null,"title":"showQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[35,32]}}],"comments":"The query component of a URI.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to deal with the common `?key1=value1&key2=value2` format, take\na look at `URI.Extra.QueryPairs`.\n","title":"Query","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[28,29]}}]},{"moduleName":{"package":null,"item":["URI","RelativePart"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}},{"children":[],"comments":"A row type for describing the options fields used by the relative-part\nprinter.\n\nUsed as `Record (RelativePartPrintOptions userInfo hosts path relPath ())`\nwhen type annotating an options record.\n","title":"RelativePartPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelPath"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[86,4]}},{"children":[],"comments":"A row type for describing the options fields used by the relative-part\nparser.\n\nUsed as `Record (RelativePartParseOptions userInfo hosts path relPath ())`\nwhen type annotating an options record.\n","title":"RelativePartParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelPath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[73,4]}},{"children":[],"comments":"A row type for describing the options fields used by the relative-part\nparser and printer.\n\nUsed as `Record (RelativePartOptions userInfo hosts path relPath)`\nwhen type annotating an options record.\n","title":"RelativePartOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[60,62]}},{"children":[{"comments":null,"title":"RelativePartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RelativePartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"relPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[48,126]}},{"comments":null,"title":"ordRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[49,132]}},{"comments":null,"title":"genericRelativePart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,90],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}},{"comments":null,"title":"showRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[51,131]}}],"comments":"The \"relative part\" of a relative reference.  This combines an authority\n(optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"RelativePart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[46,39]}},{"children":[],"comments":"The specific path types supported in a relative-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.PathNoScheme`](../URI.Path.PathNoScheme) for an explanation of\nthese forms.\n","title":"RelPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[92,48]}},{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}},{"children":[{"comments":null,"title":"eqPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[21,49]}},{"comments":null,"title":"ordPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[22,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[22,51]}},{"comments":null,"title":"genericPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]},{"tag":"TypeWildcard","contents":{"start":[23,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}}]}},"sourceSpan":{"start":[23,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}},{"comments":null,"title":"showPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[24,46]}}],"comments":"A relative path that doesn't look like a URI scheme, corresponding to\n_path-noscheme_ in the spec. This path cannot start with the character\n`/`, contain the character `:` before the first `/`, or be entirely empty.\nThis type can appear in a relative-part when there is no authority\ncomponent.\n","title":"PathNoScheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[19,80]}},{"children":[{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}},{"children":[{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A row type for describing the options fields used by the authority printer.\n\nUsed as `Record (AuthorityPrintOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[67,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser.\n\nUsed as `Record (AuthorityParseOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[57,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser\nand printer.\n\nUsed as `Record (AuthorityOptions userInfo hosts)` when type annotating an\noptions record.\n","title":"AuthorityOptions","info":{"arguments":[["userInfo",null],["hosts",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[47,46]}},{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}},{"children":[],"comments":"A lens for the user-info component of the authority.\n","title":"_userInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[97,23]}},{"children":[],"comments":"An affine traversal for the path component of a relative-part, this\nsucceeds when the authority is not present.\n","title":"_relPath","info":{"declType":"value","type":{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"relPath"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[150,22]}},{"children":[],"comments":"An affine traversal for the path component of a relative-part, this\nsucceeds when the authority is present also.\n","title":"_path","info":{"declType":"value","type":{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},{"tag":"TypeVar","contents":"path"}]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[139,11]}},{"children":[],"comments":"A lens for the host(s) component of the authority.\n","title":"_hosts","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"TypeVar","contents":"hosts"}]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[108,12]}},{"children":[],"comments":"An affine traversal for the authority component of a relative-part.\n","title":"_authority","info":{"declType":"value","type":{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[124,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[128,33]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}}]}],"name":"URI.RelativeRef","comments":null,"declarations":[{"children":[{"comments":null,"title":"RelativeRef","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[39,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[39,162]}},{"comments":null,"title":"ordRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[40,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[40,170]}},{"comments":null,"title":"genericRelativeRef","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeWildcard","contents":{"start":[41,103],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[41,104]}}]}},"sourceSpan":{"start":[41,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[41,104]}},{"comments":null,"title":"showRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[42,171]}}],"comments":"A relative URI. Relative in the sense that it lacks a `Scheme` component.\n","title":"RelativeRef","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["query",null],["fragment",null]]},"sourceSpan":{"start":[37,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[37,148]}},{"children":[],"comments":"A row type for describing the options fields used by the relative URI\nparser and printer.\n\nUsed as `Record (RelativeRefOptions userInfo hosts path relPath query fragment)`\nwhen type anotating an options record.\n\nSee below for details of how to use these configuration options.\n","title":"RelativeRefOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["query",null],["fragment",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRefParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRefPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[53,76]}},{"children":[],"comments":"A row type for describing the options fields used by the relative URI\nparser.\n\nUsed as `Record (RelativeRefParseOptions userInfo hosts path relPath query fragment ())`\nwhen type anotating an options record.\n\nHaving this options record allows custom representations to be used for\nthe URI components. If this is not necessary, `pure` can be used for all\nthe options aside from `parseHosts`, which will typically be\n`HostPortPair.parseHosts pure pure`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair parser.\n","title":"RelativeRefParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["query",null],["fragment",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"RCons","contents":["parseQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"RCons","contents":["parseFragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}},"sourceSpan":{"start":[66,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[74,4]}},{"children":[],"comments":"A row type for describing the options fields used by the relative URI\nprinter.\n\nAs a reverse of the parse options, this specifies how to print values back\nfrom custom representations. If this is not necessary, `id` can be used for\nall the options aside from `printHosts`, which will typically be\n`HostPortPair.printHosts id id`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair printer.\n","title":"RelativeRefPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["query",null],["fragment",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}]},{"tag":"RCons","contents":["printQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"RCons","contents":["printFragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}},"sourceSpan":{"start":[84,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[92,4]}},{"children":[],"comments":"A parser for a relative URI.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRefParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[95,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[98,75]}},{"children":[],"comments":"A printer for a relative URI.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRefPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[111,11]}},{"children":[],"comments":"The relative-part component of a relative URI.\n","title":"_relPart","info":{"declType":"value","type":{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[120,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[124,49]}},{"children":[],"comments":"The query component of a relative URI.\n","title":"_query","info":{"declType":"value","type":{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[131,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[135,20]}},{"children":[],"comments":"The fragment component of a relative URI.\n","title":"_fragment","info":{"declType":"value","type":{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[142,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[146,23]}}]},{"reExports":[],"name":"URI.Scheme","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[27,45]}},{"comments":null,"title":"ordScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[28,47]}},{"comments":null,"title":"showScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[30,34]}}],"comments":"The scheme part of an absolute URI. For example: `http`, `ftp`, `git`.\n","title":"Scheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[25,39]}},{"children":[],"comments":"Attempts to create a `Scheme` from the passed string. The scheme component\nof a URI has no escape sequences, so this function will return `Nothing`\nif an invalid value is provided.\n\n``` purescript\nfromString \"http\" == Just (Scheme.unsafeFromString \"http\")\nfromString \"git+ssh\" == Just (Scheme.unsafeFromString \"git+ssh\")\nfromString \"!!!\" == Nothing\nfromString \"\" == Nothing\n```\n","title":"fromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}]}},"sourceSpan":{"start":[43,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[43,35]}},{"children":[],"comments":"Returns the string value for a scheme.\n\n``` purescript\ntoString (unsafeFromString \"http\") == \"http\"\ntoString (unsafeFromString \"git+ssh\") == \"git+ssh\"\n```\n","title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[52,35]}},{"children":[],"comments":"Constructs a `Scheme` part unsafely: if the value is not an acceptable\nscheme a runtime error will be thrown.\n\nThis is intended as a convenience when describing `Scheme`s statically in\nPureScript code, in all other cases `fromString` should be used.\n","title":"unsafeFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[60,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[60,35]}},{"children":[],"comments":"A parser for the scheme component of a URI. Expects a scheme string\nfollowed by `':'`.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[67,30]}},{"children":[],"comments":"A printer for the scheme component of a URI. Prints a scheme value\nfollowed by a `':'`.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[78,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[78,24]}}]},{"reExports":[],"name":"URI.Scheme.Common","comments":"Common URI schemes, taken from the list of permanent URI schemes\n[assigned by IANA](https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml).\n","declarations":[{"children":[],"comments":"Diameter Protocol ([RFC6733](https://tools.ietf.org/html/rfc6733))\n","title":"aaa","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[8,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[8,13]}},{"children":[],"comments":"Diameter Protocol with Secure ([RFC6733](https://tools.ietf.org/html/rfc6733))\n","title":"aaas","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[12,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[12,14]}},{"children":[],"comments":"about ([RFC6694](https://tools.ietf.org/html/rfc6694))\n","title":"about","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[16,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[16,15]}},{"children":[],"comments":"application configuration access ([RFC2244](https://tools.ietf.org/html/rfc2244))\n","title":"acap","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[20,14]}},{"children":[],"comments":"acct ([RFC7565](https://tools.ietf.org/html/rfc7565))\n","title":"acct","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[24,14]}},{"children":[],"comments":"Calendar Access Protocol ([RFC4324](https://tools.ietf.org/html/rfc4324))\n","title":"cap","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[28,13]}},{"children":[],"comments":"content identifier ([RFC2392](https://tools.ietf.org/html/rfc2392))\n","title":"cid","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[32,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[32,13]}},{"children":[],"comments":"coap ([RFC7252](https://tools.ietf.org/html/rfc7252))\n","title":"coap","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[36,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[36,14]}},{"children":[],"comments":"coap+tcp ([RFC8323](https://tools.ietf.org/html/rfc8323))\n","title":"coaptcp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[40,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[40,17]}},{"children":[],"comments":"coap+ws ([RFC8323](https://tools.ietf.org/html/rfc8323))\n","title":"coapws","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[44,16]}},{"children":[],"comments":"coaps ([RFC7252](https://tools.ietf.org/html/rfc7252))\n","title":"coaps","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[48,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[48,15]}},{"children":[],"comments":"coaps+tcp ([RFC8323](https://tools.ietf.org/html/rfc8323))\n","title":"coapstcp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[52,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[52,18]}},{"children":[],"comments":"coaps+ws ([RFC8323](https://tools.ietf.org/html/rfc8323))\n","title":"coapsws","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[56,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[56,17]}},{"children":[],"comments":"TV-Anytime Content Reference ([RFC4078](https://tools.ietf.org/html/rfc4078))\n","title":"crid","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[60,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[60,14]}},{"children":[],"comments":"data ([RFC2397](https://tools.ietf.org/html/rfc2397))\n","title":"data_","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[64,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[64,15]}},{"children":[],"comments":"dav ([RFC4918](https://tools.ietf.org/html/rfc4918))\n","title":"dav","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[68,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[68,13]}},{"children":[],"comments":"dictionary service protocol ([RFC2229](https://tools.ietf.org/html/rfc2229))\n","title":"dict","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[72,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[72,14]}},{"children":[],"comments":"Domain Name System ([RFC4501](https://tools.ietf.org/html/rfc4501))\n","title":"dns","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[76,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[76,13]}},{"children":[],"comments":"example ([RFC7595](https://tools.ietf.org/html/rfc7595))\n","title":"example","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[80,17]}},{"children":[],"comments":"Host-specific file names ([RFC8089](https://tools.ietf.org/html/rfc8089))\n","title":"file","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[84,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[84,14]}},{"children":[],"comments":"File Transfer Protocol ([RFC1738](https://tools.ietf.org/html/rfc1738))\n","title":"ftp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[88,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[88,13]}},{"children":[],"comments":"Geographic Locations ([RFC5870](https://tools.ietf.org/html/rfc5870))\n","title":"geo","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[92,13]}},{"children":[],"comments":"go ([RFC3368](https://tools.ietf.org/html/rfc3368))\n","title":"go","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[96,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[96,12]}},{"children":[],"comments":"The Gopher Protocol ([RFC4266](https://tools.ietf.org/html/rfc4266))\n","title":"gopher","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[100,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[100,16]}},{"children":[],"comments":"H.323 ([RFC3508](https://tools.ietf.org/html/rfc3508))\n","title":"h323","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[104,14]}},{"children":[],"comments":"Hypertext Transfer Protocol ([RFC7230, Section 2.7.1](https://tools.ietf.org/html/rfc7230#section-2.7.1))\n","title":"http","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[108,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[108,14]}},{"children":[],"comments":"Hypertext Transfer Protocol Secure ([RFC7230, Section 2.7.2](https://tools.ietf.org/html/rfc7230#section-2.7.2))\n","title":"https","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[112,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[112,15]}},{"children":[],"comments":"Inter-Asterisk eXchange Version 2 ([RFC5456](https://tools.ietf.org/html/rfc5456))\n","title":"iax","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[116,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[116,13]}},{"children":[],"comments":"Internet Content Adaptation Protocol ([RFC3507](https://tools.ietf.org/html/rfc3507))\n","title":"icap","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[120,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[120,14]}},{"children":[],"comments":"Instant Messaging ([RFC3860](https://tools.ietf.org/html/rfc3860))\n","title":"im","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[124,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[124,12]}},{"children":[],"comments":"internet message access protocol ([RFC5092](https://tools.ietf.org/html/rfc5092))\n","title":"imap","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[128,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[128,14]}},{"children":[],"comments":"registry of public namespaces, which ([RFC4452](https://tools.ietf.org/html/rfc4452))\n","title":"info","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[132,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[132,14]}},{"children":[],"comments":"Internet Printing Protocol ([RFC3510](https://tools.ietf.org/html/rfc3510))\n","title":"ipp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[136,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[136,13]}},{"children":[],"comments":"Internet Printing Protocol over ([RFC7472](https://tools.ietf.org/html/rfc7472))\n","title":"ipps","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[140,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[140,14]}},{"children":[],"comments":"Internet Registry Information ([RFC3981](https://tools.ietf.org/html/rfc3981))\n","title":"iris","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[144,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[144,14]}},{"children":[],"comments":"iris.beep ([RFC3983](https://tools.ietf.org/html/rfc3983))\n","title":"irisbeep","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[148,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[148,18]}},{"children":[],"comments":"iris.lwz ([RFC4993](https://tools.ietf.org/html/rfc4993))\n","title":"irislwz","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[152,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[152,17]}},{"children":[],"comments":"iris.xpc ([RFC4992](https://tools.ietf.org/html/rfc4992))\n","title":"irisxpc","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[156,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[156,17]}},{"children":[],"comments":"iris.xpcs ([RFC4992](https://tools.ietf.org/html/rfc4992))\n","title":"irisxpcs","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[160,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[160,18]}},{"children":[],"comments":"Lightweight Directory Access ([RFC4516](https://tools.ietf.org/html/rfc4516))\n","title":"ldap","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[164,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[164,14]}},{"children":[],"comments":"Electronic mail address ([RFC6068](https://tools.ietf.org/html/rfc6068))\n","title":"mailto","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[168,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[168,16]}},{"children":[],"comments":"message identifier ([RFC2392](https://tools.ietf.org/html/rfc2392))\n","title":"mid","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[172,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[172,13]}},{"children":[],"comments":"Message Session Relay Protocol ([RFC4975](https://tools.ietf.org/html/rfc4975))\n","title":"msrp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[176,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[176,14]}},{"children":[],"comments":"Message Session Relay Protocol ([RFC4975](https://tools.ietf.org/html/rfc4975))\n","title":"msrps","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[180,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[180,15]}},{"children":[],"comments":"Message Tracking Query Protocol ([RFC3887](https://tools.ietf.org/html/rfc3887))\n","title":"mtqp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[184,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[184,14]}},{"children":[],"comments":"Mailbox Update (MUPDATE) Protocol ([RFC3656](https://tools.ietf.org/html/rfc3656))\n","title":"mupdate","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[188,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[188,17]}},{"children":[],"comments":"USENET news ([RFC5538](https://tools.ietf.org/html/rfc5538))\n","title":"news","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[192,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[192,14]}},{"children":[],"comments":"network file system protocol ([RFC2224](https://tools.ietf.org/html/rfc2224))\n","title":"nfs","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[196,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[196,13]}},{"children":[],"comments":"ni ([RFC6920](https://tools.ietf.org/html/rfc6920))\n","title":"ni","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[200,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[200,12]}},{"children":[],"comments":"nih ([RFC6920](https://tools.ietf.org/html/rfc6920))\n","title":"nih","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[204,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[204,13]}},{"children":[],"comments":"USENET news using NNTP access ([RFC5538](https://tools.ietf.org/html/rfc5538))\n","title":"nntp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[208,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[208,14]}},{"children":[],"comments":"opaquelocktokent ([RFC4918](https://tools.ietf.org/html/rfc4918))\n","title":"opaquelocktoken","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[212,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[212,25]}},{"children":[],"comments":"PKCS#11 ([RFC7512](https://tools.ietf.org/html/rfc7512))\n","title":"pkcs11","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[216,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[216,16]}},{"children":[],"comments":"Post Office Protocol v3 ([RFC2384](https://tools.ietf.org/html/rfc2384))\n","title":"pop","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[220,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[220,13]}},{"children":[],"comments":"Presence ([RFC3859](https://tools.ietf.org/html/rfc3859))\n","title":"pres","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[224,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[224,14]}},{"children":[],"comments":"reload ([RFC6940](https://tools.ietf.org/html/rfc6940))\n","title":"reload","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[228,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[228,16]}},{"children":[],"comments":"Real-Time Streaming Protocol (RTSP) ([RFC2326](https://tools.ietf.org/html/rfc2326), [RFC7826](https://tools.ietf.org/html/rfc7826))\n","title":"rtsp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[232,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[232,14]}},{"children":[],"comments":"Real-Time Streaming Protocol (RTSP) ([RFC2326](https://tools.ietf.org/html/rfc2326), [RFC7826](https://tools.ietf.org/html/rfc7826))\n","title":"rtsps","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[236,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[236,15]}},{"children":[],"comments":"Real-Time Streaming Protocol (RTSP) ([RFC2326](https://tools.ietf.org/html/rfc2326))\n","title":"rtspu","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[240,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[240,15]}},{"children":[],"comments":"service location ([RFC2609](https://tools.ietf.org/html/rfc2609))\n","title":"service","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[244,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[244,17]}},{"children":[],"comments":"session ([RFC6787](https://tools.ietf.org/html/rfc6787))\n","title":"session","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[248,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[248,17]}},{"children":[],"comments":"Secure Hypertext Transfer Protocol ([RFC2660](https://tools.ietf.org/html/rfc2660))\n","title":"shttp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[252,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[252,15]}},{"children":[],"comments":"ManageSieve Protocol ([RFC5804](https://tools.ietf.org/html/rfc5804))\n","title":"sieve","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[256,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[256,15]}},{"children":[],"comments":"session initiation protocol ([RFC3261](https://tools.ietf.org/html/rfc3261))\n","title":"sip","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[260,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[260,13]}},{"children":[],"comments":"secure session initiation protocol ([RFC3261](https://tools.ietf.org/html/rfc3261))\n","title":"sips","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[264,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[264,14]}},{"children":[],"comments":"Short Message Service ([RFC5724](https://tools.ietf.org/html/rfc5724))\n","title":"sms","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[268,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[268,13]}},{"children":[],"comments":"Simple Network Management Protocol ([RFC4088](https://tools.ietf.org/html/rfc4088))\n","title":"snmp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[272,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[272,14]}},{"children":[],"comments":"soap.beep ([RFC4227](https://tools.ietf.org/html/rfc4227))\n","title":"soapbeep","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[276,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[276,18]}},{"children":[],"comments":"soap.beeps ([RFC4227](https://tools.ietf.org/html/rfc4227))\n","title":"soapbeeps","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[280,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[280,19]}},{"children":[],"comments":"stun ([RFC7064](https://tools.ietf.org/html/rfc7064))\n","title":"stun","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[284,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[284,14]}},{"children":[],"comments":"stuns ([RFC7064](https://tools.ietf.org/html/rfc7064))\n","title":"stuns","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[288,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[288,15]}},{"children":[],"comments":"tag ([RFC4151](https://tools.ietf.org/html/rfc4151))\n","title":"tag","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[292,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[292,13]}},{"children":[],"comments":"telephone ([RFC3966](https://tools.ietf.org/html/rfc3966))\n","title":"tel","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[296,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[296,13]}},{"children":[],"comments":"Reference to interactive sessions ([RFC4248](https://tools.ietf.org/html/rfc4248))\n","title":"telnet","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[300,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[300,16]}},{"children":[],"comments":"Trivial File Transfer Protocol ([RFC3617](https://tools.ietf.org/html/rfc3617))\n","title":"tftp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[304,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[304,14]}},{"children":[],"comments":"multipart/related relative reference ([RFC2557](https://tools.ietf.org/html/rfc2557))\n","title":"thismessage","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[308,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[308,21]}},{"children":[],"comments":"Transaction Internet Protocol ([RFC2371](https://tools.ietf.org/html/rfc2371))\n","title":"tip","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[312,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[312,13]}},{"children":[],"comments":"Interactive 3270 emulation sessions ([RFC6270](https://tools.ietf.org/html/rfc6270))\n","title":"tn3270","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[316,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[316,16]}},{"children":[],"comments":"turn ([RFC7065](https://tools.ietf.org/html/rfc7065))\n","title":"turn","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[320,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[320,14]}},{"children":[],"comments":"turns ([RFC7065](https://tools.ietf.org/html/rfc7065))\n","title":"turns","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[324,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[324,15]}},{"children":[],"comments":"TV Broadcasts ([RFC2838](https://tools.ietf.org/html/rfc2838))\n","title":"tv","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[328,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[328,12]}},{"children":[],"comments":"Uniform Resource Names ([RFC8141](https://tools.ietf.org/html/rfc8141))\n","title":"urn","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[332,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[332,13]}},{"children":[],"comments":"versatile multimedia interface ([RFC2122](https://tools.ietf.org/html/rfc2122))\n","title":"vemmi","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[336,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[336,15]}},{"children":[],"comments":"Remote Framebuffer Protocol ([RFC7869](https://tools.ietf.org/html/rfc7869))\n","title":"vnc","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[340,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[340,13]}},{"children":[],"comments":"WebSocket connections ([RFC6455](https://tools.ietf.org/html/rfc6455))\n","title":"ws","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[344,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[344,12]}},{"children":[],"comments":"Encrypted WebSocket connections ([RFC6455](https://tools.ietf.org/html/rfc6455))\n","title":"wss","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[348,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[348,13]}},{"children":[],"comments":"xcon ([RFC6501](https://tools.ietf.org/html/rfc6501))\n","title":"xcon","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[352,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[352,14]}},{"children":[],"comments":"xcon-userid ([RFC6501](https://tools.ietf.org/html/rfc6501))\n","title":"xconuserid","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[356,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[356,20]}},{"children":[],"comments":"xmlrpc.beep ([RFC3529](https://tools.ietf.org/html/rfc3529))\n","title":"xmlrpcbeep","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[360,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[360,20]}},{"children":[],"comments":"xmlrpc.beeps ([RFC3529](https://tools.ietf.org/html/rfc3529))\n","title":"xmlrpcbeeps","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[364,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[364,21]}},{"children":[],"comments":"Extensible Messaging and Presence ([RFC5122](https://tools.ietf.org/html/rfc5122))\n","title":"xmpp","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[368,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[368,14]}},{"children":[],"comments":"Z39.50 Retrieval ([RFC2056](https://tools.ietf.org/html/rfc2056))\n","title":"z3950r","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[372,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[372,16]}},{"children":[],"comments":"Z39.50 Session ([RFC2056](https://tools.ietf.org/html/rfc2056))\n","title":"z3950s","info":{"declType":"value","type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}},"sourceSpan":{"start":[376,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme/Common.purs","end":[376,16]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","HierarchicalPart"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}},{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}},{"children":[{"comments":null,"title":"PathRootless","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[19,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[19,49]}},{"comments":null,"title":"ordPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[20,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[20,51]}},{"comments":null,"title":"genericPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeWildcard","contents":{"start":[21,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}},{"comments":null,"title":"showPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[22,46]}}],"comments":"A relative path, corresponding to _path-rootless_ in the spec. This path\ncannot start with the character `/` or be entirely empty. This type can\nappear in a hierarchical-part when there is no authority component.\n","title":"PathRootless","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[17,78]}},{"children":[{"comments":null,"title":"PathAbsolute","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}},{"children":[{"comments":null,"title":"Path","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nprinter.\n\nUsed as `Record (HierarchicalPartPrintOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n","title":"HierarchicalPartPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[86,4]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nparser.\n\nUsed as `Record (HierarchicalPartParseOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n","title":"HierarchicalPartParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[73,4]}},{"children":[],"comments":"A row type for describing the options fields used by the hierarchical-part\nparser and printer.\n\nUsed as `Record (HierarchicalPartOptions userInfo hosts path hierPath)`\nwhen type anotating an options record.\n","title":"HierarchicalPartOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[60,67]}},{"children":[{"comments":null,"title":"HierarchicalPartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HierarchicalPartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[48,136]}},{"comments":null,"title":"ordHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[49,142]}},{"comments":null,"title":"genericHierarchicalPart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,99],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}},{"comments":null,"title":"showHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[51,141]}}],"comments":"The \"hierarchical part\" of a generic or absolute URI. This combines an\nauthority (optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"HierarchicalPart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[46,44]}},{"children":[],"comments":"The specific path types supported in a hierarchical-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.Rootless`](../URI.Path.Rootless) for an explanation of these\nforms.\n","title":"HierPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[92,49]}},{"children":[],"comments":"A row type for describing the options fields used by the authority printer.\n\nUsed as `Record (AuthorityPrintOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[63,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[67,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser.\n\nUsed as `Record (AuthorityParseOptions userInfo hosts ())` when type\nannotating an options record.\n","title":"AuthorityParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[57,4]}},{"children":[],"comments":"A row type for describing the options fields used by the authority parser\nand printer.\n\nUsed as `Record (AuthorityOptions userInfo hosts)` when type annotating an\noptions record.\n","title":"AuthorityOptions","info":{"arguments":[["userInfo",null],["hosts",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[47,46]}},{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}},{"children":[],"comments":"A lens for the user-info component of the authority.\n","title":"_userInfo","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}}]},null]},null]}},"sourceSpan":{"start":[93,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[97,23]}},{"children":[],"comments":"An affine traversal for the path component of a hierarchical-part, this\nsucceeds when the authority is present also.\n","title":"_path","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"TypeVar","contents":"path"}]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[139,11]}},{"children":[],"comments":"A lens for the host(s) component of the authority.\n","title":"_hosts","info":{"declType":"value","type":{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"TypeVar","contents":"hosts"}]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[108,12]}},{"children":[],"comments":"An affine traversal for the path component of a hierarchical-part, this\nsucceeds when the authority is not present.\n","title":"_hierPath","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[150,23]}},{"children":[],"comments":"An affine traversal for the authority component of a hierarchical-part.\n","title":"_authority","info":{"declType":"value","type":{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},null]},null]},null]},null]}},"sourceSpan":{"start":[124,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[128,33]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}}]},{"moduleName":{"package":null,"item":["URI","Query"]},"declarations":[{"children":[{"comments":null,"title":"eqQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[30,43]}},{"comments":null,"title":"ordQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[31,45]}},{"comments":null,"title":"semigroupQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[32,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[32,57]}},{"comments":null,"title":"monoidQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[33,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[33,51]}},{"comments":null,"title":"showQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[35,32]}}],"comments":"The query component of a URI.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to deal with the common `?key1=value1&key2=value2` format, take\na look at `URI.Extra.QueryPairs`.\n","title":"Query","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[28,29]}}]},{"moduleName":{"package":null,"item":["URI","Scheme"]},"declarations":[{"children":[{"comments":null,"title":"eqScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[27,45]}},{"comments":null,"title":"ordScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[28,47]}},{"comments":null,"title":"showScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[30,34]}}],"comments":"The scheme part of an absolute URI. For example: `http`, `ftp`, `git`.\n","title":"Scheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[25,39]}}]}],"name":"URI.URI","comments":null,"declarations":[{"children":[{"comments":null,"title":"URI","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[44,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[44,148]}},{"comments":null,"title":"ordURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[45,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[45,156]}},{"comments":null,"title":"genericURI","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeWildcard","contents":{"start":[46,88],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[46,89]}}]}},"sourceSpan":{"start":[46,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[46,89]}},{"comments":null,"title":"showURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[47,157]}}],"comments":"A general purpose absolute URI - similar to `AbsoluteURI` but also admits\na fragment component. An absolute URI can still contain relative paths\nbut is required to have a `Scheme` component.\n","title":"URI","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["fragment",null]]},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[42,145]}},{"children":[],"comments":"A row type for describing the options fields used by the URI parser and\nprinter.\n\nUsed as `Record (URIOptions userInfo hosts path hierPath query fragment)`\nwhen type anotating an options record.\n\nSee below for details of how to use these configuration options.\n","title":"URIOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["fragment",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URIParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URIPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[56,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[58,69]}},{"children":[],"comments":"A row type for describing the options fields used by the URI parser.\n\nUsed as `Record (URIParseOptions userInfo hosts path hierPath query fragment ())`\nwhen type anotating an options record.\n\nHaving this options record allows custom representations to be used for\nthe URI components. If this is not necessary, `pure` can be used for all\nthe options aside from `parseHosts`, which will typically be\n`HostPortPair.parseHosts pure pure`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair parser.\n","title":"URIParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["fragment",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"RCons","contents":["parseQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"RCons","contents":["parseFragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}},"sourceSpan":{"start":[70,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[78,4]}},{"children":[],"comments":"A row type for describing the options fields used by the URI printer.\n\nUsed as `Record (URIPrintOptions userInfo hosts path hierPath query fragment ())`\nwhen type anotating an options record.\n\nAs a reverse of the parse options, this specifies how to print values back\nfrom custom representations. If this is not necessary, `id` can be used for\nall the options aside from `printHosts`, which will typically be\n`HostPortPair.printHosts id id`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair printer.\n","title":"URIPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["fragment",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"RCons","contents":["printQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"RCons","contents":["printFragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}},"sourceSpan":{"start":[90,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[98,4]}},{"children":[],"comments":"A parser for a URI.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URIParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[101,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[104,68]}},{"children":[],"comments":"A printer for a URI.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URIPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[117,11]}},{"children":[],"comments":"The scheme component of a URI.\n","title":"_scheme","info":{"declType":"value","type":{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[127,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[131,13]}},{"children":[],"comments":"The hierarchical-part component of a URI.\n","title":"_hierPart","info":{"declType":"value","type":{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[138,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[142,54]}},{"children":[],"comments":"The query component of a URI.\n","title":"_query","info":{"declType":"value","type":{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[149,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[153,20]}},{"children":[],"comments":"The fragment component of a URI.\n","title":"_fragment","info":{"declType":"value","type":{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[160,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[164,23]}}]},{"reExports":[{"moduleName":{"package":null,"item":["URI","Authority"]},"declarations":[{"children":[{"comments":null,"title":"Authority","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}},{"tag":"TypeVar","contents":"hosts"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[35,86]}},{"comments":null,"title":"ordAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[36,90]}},{"comments":null,"title":"genericAuthority","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]},{"tag":"TypeWildcard","contents":{"start":[37,71],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[37,72]}},{"comments":null,"title":"showAuthority","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[38,87]}}],"comments":"The authority part of a URI. For example: `purescript.org`,\n`localhost:3000`, `user@example.net`.\n","title":"Authority","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null]]},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Authority.purs","end":[33,65]}}]},{"moduleName":{"package":null,"item":["URI","Fragment"]},"declarations":[{"children":[{"comments":null,"title":"eqFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[26,49]}},{"comments":null,"title":"ordFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[27,51]}},{"comments":null,"title":"semigroupFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[28,63]}},{"comments":null,"title":"monoidFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[29,57]}},{"comments":null,"title":"showFragment","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[31,38]}}],"comments":"The fragment component (hash) of a URI.\n","title":"Fragment","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Fragment.purs","end":[24,35]}}]},{"moduleName":{"package":null,"item":["URI","Host"]},"declarations":[{"children":[{"comments":null,"title":"eqRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[26,47]}},{"comments":null,"title":"ordRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[27,49]}},{"comments":null,"title":"semigroupRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[28,61]}},{"comments":null,"title":"showRegName","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[30,36]}}],"comments":"The reg-name variation of the host part of a URI. A reg-name is probably\nmore commonly referred to as just a host name or domain name (but it is\nactually a name, rather than an IP address).\n","title":"RegName","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/RegName.purs","end":[24,41]}},{"children":[{"comments":null,"title":"eqIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[22,55]}},{"comments":null,"title":"ordIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[23,57]}},{"comments":null,"title":"showIPv6Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[25,44]}}],"comments":"This type and parser are much too forgiving currently, allowing almost\nanything through that looks vaguely IPv6ish.\n","title":"IPv6Address","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[20,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv6Address.purs","end":[20,41]}},{"children":[{"comments":null,"title":"eqIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[26,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[26,47]}},{"comments":null,"title":"ordIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[27,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[27,49]}},{"comments":null,"title":"showIPv4Address","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[29,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[29,44]}}],"comments":"The IPv4 address variation of the host part of a URI.\n","title":"IPv4Address","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host/IPv4Address.purs","end":[24,47]}},{"children":[{"comments":null,"title":"IPv6Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"IPv4Address","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NameAddress","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[35,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[35,33]}},{"comments":null,"title":"ordHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[36,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[36,35]}},{"comments":null,"title":"genericHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeWildcard","contents":{"start":[37,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}}]}},"sourceSpan":{"start":[37,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[37,45]}},{"comments":null,"title":"showHost","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[38,30]}}],"comments":"A host address. Supports named addresses, IPv4, and IPv6.\n","title":"Host","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[33,24]}},{"children":[],"comments":"A prism for the `NameAddress` constructor.\n","title":"_NameAddress","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[67,35]}},{"children":[],"comments":"A prism for the `IPv6Address` constructor.\n","title":"_IPv6Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[55,39]}},{"children":[],"comments":"A prism for the `IPv4Address` constructor.\n","title":"_IPv4Address","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}},"sourceSpan":{"start":[61,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Host.purs","end":[61,39]}}]},{"moduleName":{"package":null,"item":["URI","Path"]},"declarations":[{"children":[{"comments":null,"title":"Path","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[21,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[21,41]}},{"comments":null,"title":"ordPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[22,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[22,43]}},{"comments":null,"title":"semigroupPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[23,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[23,55]}},{"comments":null,"title":"monoidPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[24,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[24,49]}},{"comments":null,"title":"genericPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeWildcard","contents":{"start":[25,44],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}}]}},"sourceSpan":{"start":[25,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[25,45]}},{"comments":null,"title":"showPath","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[26,30]}}],"comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n","title":"Path","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path.purs","end":[19,40]}}]},{"moduleName":{"package":null,"item":["URI","Path","Absolute"]},"declarations":[{"children":[{"comments":null,"title":"PathAbsolute","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[28,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[28,49]}},{"comments":null,"title":"ordPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[29,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[29,51]}},{"comments":null,"title":"genericPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeWildcard","contents":{"start":[30,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}}]}},"sourceSpan":{"start":[30,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[30,61]}},{"comments":null,"title":"showPathAbsolute","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[31,46]}}],"comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n","title":"PathAbsolute","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[26,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Absolute.purs","end":[26,86]}}]},{"moduleName":{"package":null,"item":["URI","Path","NoScheme"]},"declarations":[{"children":[{"comments":null,"title":"PathNoScheme","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[21,49]}},{"comments":null,"title":"ordPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[22,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[22,51]}},{"comments":null,"title":"genericPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]},{"tag":"TypeWildcard","contents":{"start":[23,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}}]}},"sourceSpan":{"start":[23,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[23,61]}},{"comments":null,"title":"showPathNoScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[24,46]}}],"comments":"A relative path that doesn't look like a URI scheme, corresponding to\n_path-noscheme_ in the spec. This path cannot start with the character\n`/`, contain the character `:` before the first `/`, or be entirely empty.\nThis type can appear in a relative-part when there is no authority\ncomponent.\n","title":"PathNoScheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[19,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/NoScheme.purs","end":[19,80]}}]},{"moduleName":{"package":null,"item":["URI","Path","Rootless"]},"declarations":[{"children":[{"comments":null,"title":"PathRootless","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[19,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[19,49]}},{"comments":null,"title":"ordPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[20,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[20,51]}},{"comments":null,"title":"genericPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeWildcard","contents":{"start":[21,60],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}}]}},"sourceSpan":{"start":[21,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[21,61]}},{"comments":null,"title":"showPathRootless","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[22,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[22,46]}}],"comments":"A relative path, corresponding to _path-rootless_ in the spec. This path\ncannot start with the character `/` or be entirely empty. This type can\nappear in a hierarchical-part when there is no authority component.\n","title":"PathRootless","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[17,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Path/Rootless.purs","end":[17,78]}}]},{"moduleName":{"package":null,"item":["URI","Port"]},"declarations":[{"children":[{"comments":null,"title":"eqPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[25,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[25,41]}},{"comments":null,"title":"ordPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[26,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[26,43]}},{"comments":null,"title":"showPort","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[28,30]}}],"comments":"The port component of a host in a URI.\n","title":"Port","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Port.purs","end":[23,24]}}]},{"moduleName":{"package":null,"item":["URI","Query"]},"declarations":[{"children":[{"comments":null,"title":"eqQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[30,43]}},{"comments":null,"title":"ordQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[31,45]}},{"comments":null,"title":"semigroupQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[32,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[32,57]}},{"comments":null,"title":"monoidQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[33,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[33,51]}},{"comments":null,"title":"showQuery","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}},"sourceSpan":{"start":[35,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[35,32]}}],"comments":"The query component of a URI.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to deal with the common `?key1=value1&key2=value2` format, take\na look at `URI.Extra.QueryPairs`.\n","title":"Query","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[28,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Query.purs","end":[28,29]}}]},{"moduleName":{"package":null,"item":["URI","RelativeRef"]},"declarations":[{"children":[{"comments":null,"title":"RelativeRef","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[39,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[39,162]}},{"comments":null,"title":"ordRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[40,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[40,170]}},{"comments":null,"title":"genericRelativeRef","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeWildcard","contents":{"start":[41,103],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[41,104]}}]}},"sourceSpan":{"start":[41,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[41,104]}},{"comments":null,"title":"showRelativeRef","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[42,171]}}],"comments":"A relative URI. Relative in the sense that it lacks a `Scheme` component.\n","title":"RelativeRef","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null],["query",null],["fragment",null]]},"sourceSpan":{"start":[37,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativeRef.purs","end":[37,148]}},{"children":[{"comments":null,"title":"RelativePartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"RelativePartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"relPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[48,126]}},{"comments":null,"title":"ordRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[49,132]}},{"comments":null,"title":"genericRelativePart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,90],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[50,91]}},{"comments":null,"title":"showRelativePart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"relPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[51,131]}}],"comments":"The \"relative part\" of a relative reference.  This combines an authority\n(optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"RelativePart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["relPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[46,39]}},{"children":[],"comments":"The specific path types supported in a relative-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.PathNoScheme`](../URI.Path.PathNoScheme) for an explanation of\nthese forms.\n","title":"RelPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/RelativePart.purs","end":[92,48]}}]},{"moduleName":{"package":null,"item":["URI","Scheme"]},"declarations":[{"children":[{"comments":null,"title":"eqScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[27,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[27,45]}},{"comments":null,"title":"ordScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[28,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[28,47]}},{"comments":null,"title":"showScheme","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}},"sourceSpan":{"start":[30,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[30,34]}}],"comments":"The scheme part of an absolute URI. For example: `http`, `ftp`, `git`.\n","title":"Scheme","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[25,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/Scheme.purs","end":[25,39]}}]},{"moduleName":{"package":null,"item":["URI","URI"]},"declarations":[{"children":[{"comments":null,"title":"URI","info":{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"fragment"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[44,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[44,148]}},{"comments":null,"title":"ordURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[45,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[45,156]}},{"comments":null,"title":"genericURI","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeWildcard","contents":{"start":[46,88],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[46,89]}}]}},"sourceSpan":{"start":[46,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[46,89]}},{"comments":null,"title":"showURI","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"query"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"fragment"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[47,157]}}],"comments":"A general purpose absolute URI - similar to `AbsoluteURI` but also admits\na fragment component. An absolute URI can still contain relative paths\nbut is required to have a `Scheme` component.\n","title":"URI","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["fragment",null]]},"sourceSpan":{"start":[42,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URI.purs","end":[42,145]}},{"children":[{"comments":null,"title":"HierarchicalPartAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"HierarchicalPartNoAuth","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[48,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[48,136]}},{"comments":null,"title":"ordHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[49,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[49,142]}},{"comments":null,"title":"genericHierarchicalPart","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeWildcard","contents":{"start":[50,99],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}}]}},"sourceSpan":{"start":[50,8],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[50,100]}},{"comments":null,"title":"showHierarchicalPart","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"userInfo"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hosts"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"path"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"hierPath"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}]}},"sourceSpan":{"start":[51,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[51,141]}}],"comments":"The \"hierarchical part\" of a generic or absolute URI. This combines an\nauthority (optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n","title":"HierarchicalPart","info":{"declType":"data","dataDeclType":"data","typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]]},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[46,44]}},{"children":[],"comments":"The specific path types supported in a hierarchical-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.Rootless`](../URI.Path.Rootless) for an explanation of these\nforms.\n","title":"HierPath","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/HierarchicalPart.purs","end":[92,49]}}]},{"moduleName":{"package":null,"item":["URI","UserInfo"]},"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}}]}],"name":"URI.URIRef","comments":null,"declarations":[{"children":[],"comments":"The most general kind of URI, can either be relative or absolute.\n","title":"URIRef","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["relPath",null],["query",null],["fragment",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}},"sourceSpan":{"start":[47,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URIRef.purs","end":[50,73]}},{"children":[],"comments":"A row type for describing the options fields used by the general URI\nparser and printer.\n\nUsed as `Record (URIRefOptions userInfo hosts path hierPath relPath query fragment)`\nwhen type anotating an options record.\n\nSee below for details of how to use these configuration options.\n","title":"URIRefOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["relPath",null],["query",null],["fragment",null]],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRefParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRefPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"REmpty"}]}}]}},"sourceSpan":{"start":[59,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URIRef.purs","end":[61,80]}},{"children":[],"comments":"A row type for describing the options fields used by the general URI\nparser.\n\nUsed as `Record (URIRefParseOptions userInfo hosts path hierPath relPath query fragment ())`\nwhen type anotating an options record.\n\nHaving this options record allows custom representations to be used for\nthe URI components. If this is not necessary, `pure` can be used for all\nthe options aside from `parseHosts`, which will typically be\n`HostPortPair.parseHosts pure pure`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair parser.\n","title":"URIRefParseOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["relPath",null],["query",null],["fragment",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"RCons","contents":["parseRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"relPath"}]}]},{"tag":"RCons","contents":["parseQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"RCons","contents":["parseFragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[74,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URIRef.purs","end":[83,4]}},{"children":[],"comments":"A row type for describing the options fields used by the general URI\nprinter.\n\nUsed as `Record (URIRefPrintOptions userInfo hosts path hierPath relPath query fragment ())`\nwhen type anotating an options record.\n\nAs a reverse of the parse options, this specifies how to print values back\nfrom custom representations. If this is not necessary, `id` can be used for\nall the options aside from `printHosts`, which will typically be\n`HostPortPair.printHosts id id`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair printer.\n","title":"URIRefPrintOptions","info":{"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["relPath",null],["query",null],["fragment",null],["r",null]],"declType":"typeSynonym","type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"RCons","contents":["printRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}]},{"tag":"RCons","contents":["printQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"RCons","contents":["printFragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}},"sourceSpan":{"start":[96,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URIRef.purs","end":[105,4]}},{"children":[],"comments":"A parser for a general URI.\n","title":"parser","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRefParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URIRef.purs","end":[111,79]}},{"children":[],"comments":"A printer for a general URI.\n","title":"print","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["userInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRefPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[117,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/URIRef.purs","end":[121,11]}}]},{"reExports":[],"name":"URI.UserInfo","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[29,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[29,49]}},{"comments":null,"title":"ordUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[30,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[30,51]}},{"comments":null,"title":"semigroupUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[31,16],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[31,63]}},{"comments":null,"title":"showUserInfo","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[33,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[33,38]}}],"comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n","title":"UserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[27,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[27,43]}},{"children":[],"comments":"Constructs a user-info value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo\" = unsafeFromString \"foo\"\nfromString \"foo@bar\" = unsafeFromString \"foo%40bar\"\nfromString \"foo%40bar\" = unsafeFromString \"foo%2540bar\"\n```\n","title":"fromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[46,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[46,39]}},{"children":[],"comments":"Returns the string value for user-info, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo\") = \"foo\"\ntoString (unsafeFromString \"foo%40bar\") = \"foo@bar\"\n```\n","title":"toString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[56,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[56,37]}},{"children":[],"comments":"Constructs a user-info value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe query, to prevent double-encoding.\n","title":"unsafeFromString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[62,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[62,45]}},{"children":[],"comments":"Returns the string value for user-info without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n","title":"unsafeToString","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty"],"NonEmptyString"]}]}},"sourceSpan":{"start":[69,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[69,43]}},{"children":[],"comments":"A parser for the user-info component of a URI.\n","title":"parser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[73,32]}},{"children":[],"comments":"A printer for the user-info component of a URI.\n","title":"print","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[80,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[80,26]}},{"children":[],"comments":"The supported user info characters, excluding percent-encodings.\n","title":"userInfoChar","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}},"sourceSpan":{"start":[84,1],"name":"/home/travis/build/slamdata/purescript-uri/src/URI/UserInfo.purs","end":[84,34]}}]}],"resolvedDependencies":{"purescript-free":"4.2.0","purescript-proxy":"2.1.0","purescript-exceptions":"3.1.0","purescript-newtype":"2.0.0","purescript-these":"3.1.0","purescript-unicode":"3.0.2","purescript-maps":"3.6.0","purescript-control":"3.3.1","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-profunctor":"3.2.0","purescript-arrays":"4.3.0","purescript-maybe":"3.0.0","purescript-profunctor-lenses":"3.8.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.1.0","purescript-invariant":"3.0.0","purescript-parsing":"4.3.1","purescript-io":"5.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.3.0","purescript-aff":"4.0.2","purescript-foldable-traversable":"3.7.1","purescript-tailrec":"3.3.0","purescript-avar":"2.0.1","purescript-gen":"1.3.1","purescript-typelevel-prelude":"2.6.0","purescript-functors":"2.2.0","purescript-prelude":"3.1.1","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-pipes":"5.0.0","purescript-nonempty":"4.2.0","purescript-contravariant":"3.2.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.2.0","purescript-eff":"3.2.0","purescript-mmorph":"3.0.0","purescript-ansi":"4.0.0","purescript-const":"3.2.0","purescript-spec":"2.0.0","purescript-record":"0.2.6","purescript-transformers":"3.5.0","purescript-globals":"3.0.0","purescript-generics-rep":"5.4.0","purescript-math":"2.1.0","purescript-enums":"3.2.1","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-parallel":"3.3.1","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-quickcheck":"4.6.2","purescript-strings":"3.5.0","purescript-identity":"3.1.0","purescript-sets":"3.1.0","purescript-lists":"4.12.0","purescript-datetime":"3.4.1","purescript-functions":"3.0.0"},"version":"5.1.0","github":["slamdata","purescript-uri"],"versionTag":"v5.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Test.Spec.Console":"purescript-spec","Control.Monad.Eff.Ref":"purescript-refs","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.StrMap":"purescript-maps","Test.Spec.Summary":"purescript-spec","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.Record.Unsafe":"purescript-record","Data.DateTime":"purescript-datetime","Control.Monad.IOSync.Class":"purescript-io","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Time.Component":"purescript-datetime","Data.Lens":"purescript-profunctor-lenses","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Text.Parsing.Parser":"purescript-parsing","Pipes.Core":"purescript-pipes","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Lens.Prism.Maybe":"purescript-profunctor-lenses","Test.Spec.Assertions.Aff":"purescript-spec","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Lens.Internal.Grating":"purescript-profunctor-lenses","Data.Profunctor.Cochoice":"purescript-profunctor","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Test.QuickCheck.LCG":"purescript-quickcheck","Data.Lens.Lens.Product":"purescript-profunctor-lenses","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Text.Parsing.Parser.Pos":"purescript-parsing","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Control.Monad.IO":"purescript-io","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.Lens.Prism.Coproduct":"purescript-profunctor-lenses","Data.Map.Gen":"purescript-maps","Data.Lens.Lens":"purescript-profunctor-lenses","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.Time.Component.Gen":"purescript-datetime","Data.Lens.Internal.Forget":"purescript-profunctor-lenses","Data.List.ZipList":"purescript-lists","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Record":"purescript-record","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Test.Spec.Reporter.Console":"purescript-spec","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Lens.Indexed":"purescript-profunctor-lenses","Test.Spec.Reporter.Dot":"purescript-spec","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Data.Generic.Rep.Show":"purescript-generics-rep","Data.Profunctor.Clown":"purescript-profunctor","Data.Lens.Zoom":"purescript-profunctor-lenses","Data.Lens.Iso.Newtype":"purescript-profunctor-lenses","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Lens.Internal.Wander":"purescript-profunctor-lenses","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Lens.Lens.Tuple":"purescript-profunctor-lenses","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Pipes.Prelude":"purescript-pipes","Data.Exists":"purescript-exists","Data.Char.Unicode.Internal":"purescript-unicode","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Data.Lens.Internal.Exchange":"purescript-profunctor-lenses","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Lens.Internal.Shop":"purescript-profunctor-lenses","Data.Lens.Internal.Tagged":"purescript-profunctor-lenses","Data.Lens.Record":"purescript-profunctor-lenses","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.Lens.Grate":"purescript-profunctor-lenses","Data.Profunctor.Strong":"purescript-profunctor","Data.Lens.Internal.Market":"purescript-profunctor-lenses","Test.Spec.Reporter.Base":"purescript-spec","Data.CatQueue":"purescript-catenable-lists","Text.Parsing.Indent":"purescript-parsing","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Lens.Common":"purescript-profunctor-lenses","Data.Lens.Getter":"purescript-profunctor-lenses","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-sets","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Record.Builder":"purescript-record","Data.Lens.Traversal":"purescript-profunctor-lenses","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Data.Char.Unicode":"purescript-unicode","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Text.Parsing.Parser.Token":"purescript-parsing","Pipes":"purescript-pipes","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Data.Lens.Types":"purescript-profunctor-lenses","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Control.Monad.IOSync":"purescript-io","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Data.Record.ST":"purescript-record","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Data.Lens.Index":"purescript-profunctor-lenses","Data.Lens.Internal.Re":"purescript-profunctor-lenses","Control.MonadPlus":"purescript-control","Data.Lens.Lens.Void":"purescript-profunctor-lenses","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Lens.Internal.Indexed":"purescript-profunctor-lenses","Data.Profunctor.Costrong":"purescript-profunctor","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Aff.Compat":"purescript-aff","Ansi.Codes":"purescript-ansi","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Lens.Fold":"purescript-profunctor-lenses","Data.Lens.Setter":"purescript-profunctor-lenses","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Lens.Prism.Either":"purescript-profunctor-lenses","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Lens.Lens.Unit":"purescript-profunctor-lenses","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Data.Lens.Fold.Partial":"purescript-profunctor-lenses","Control.Monad.IO.Class":"purescript-io","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Text.Parsing.Parser.Combinators":"purescript-parsing","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Data.These.Gen":"purescript-these","Data.Time":"purescript-datetime","Type.Row.Effect.Equality":"purescript-type-equality","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Text.Parsing.Parser.Expr":"purescript-parsing","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Text.Parsing.Parser.Language":"purescript-parsing","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Data.Bifunctor.Join":"purescript-bifunctors","Data.Lens.Internal.Zipping":"purescript-profunctor-lenses","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Test.Spec.Color":"purescript-spec","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Lens.Prism":"purescript-profunctor-lenses","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Text.Parsing.Parser.String":"purescript-parsing","Data.Lens.Internal.Focusing":"purescript-profunctor-lenses","Data.Lens.Iso":"purescript-profunctor-lenses","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Control.Monad.IO.Effect":"purescript-io","Data.These":"purescript-these","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Eff.AVar":"purescript-avar","Data.Lens.At":"purescript-profunctor-lenses","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.11.7"}