{"uploader":"paf31","packageMeta":{"repository":{"url":"git://github.com/purescript/purescript-validation.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","tests","tmp","bower.json","Gruntfile.js","package.json"],"dependencies":{"purescript-control":"^0.3.0"},"name":"purescript-validation"},"modules":[{"name":"Data.Validation","comments":"This module defines an applicative functor for _applicative validation_.\n\nApplicative validation differs from monadic validation using `Either` in\nthat it allows us to collect multiple errors using a `Semigroup`, whereas\n`Either` terminates on the first error.\n","declarations":[{"children":[{"comments":null,"title":"showV","info":{"declType":"instance","dependencies":[["Prelude.Show",[{"tag":"TypeVar","contents":"err"}]],["Prelude.Show",[{"tag":"TypeVar","contents":"result"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Show"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[47,1],"name":"src/Data/Validation.purs","end":[51,1]}},{"comments":null,"title":"functorV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[51,1],"name":"src/Data/Validation.purs","end":[55,1]}},{"comments":null,"title":"applyV","info":{"declType":"instance","dependencies":[["Prelude.Semigroup",[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[55,1],"name":"src/Data/Validation.purs","end":[61,1]}},{"comments":null,"title":"applicativeV","info":{"declType":"instance","dependencies":[["Prelude.Semigroup",[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[61,1],"name":"src/Data/Validation.purs","end":[62,10]}}],"comments":"The `V` functor, used for applicative validation\n\nThe `Applicative` instance collects multiple failures in\nan arbitrary `Semigroup`.\n\nFor example:\n\n```purescript\nvalidate :: Person -> V (Array Error) Person\nvalidate person = { first: _, last: _, email: _ }\n  <$> validateName person.first\n  <*> validateName person.last\n  <*> validateEmail person.email\n```\n","title":"V","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["err",null],["result",null]]},"sourceSpan":{"start":[30,1],"name":"src/Data/Validation.purs","end":[33,1]}},{"children":[],"comments":"Fail with a validation error\n","title":"invalid","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},null]},null]}},"sourceSpan":{"start":[33,1],"name":"src/Data/Validation.purs","end":[34,1]}},{"children":[],"comments":"Unpack the `V` type constructor, providing functions to handle the error\nand success cases.\n","title":"runV","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"result"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[38,1],"name":"src/Data/Validation.purs","end":[39,1]}},{"children":[],"comments":"Test whether validation was successful or not\n","title":"isValid","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]},null]},null]}},"sourceSpan":{"start":[43,1],"name":"src/Data/Validation.purs","end":[44,1]}}]},{"name":"Data.Validation.Semiring","comments":"This module defines a variant of applicative validation with \nan `Alternative` instance, for validators which support errors\nwith multiple alternatives.\n\nThe API is equivalent to `Data.Validation`,\nbut uses `Semiring` instead of `Semigroup`.\n","declarations":[{"children":[{"comments":null,"title":"showV","info":{"declType":"instance","dependencies":[["Prelude.Show",[{"tag":"TypeVar","contents":"err"}]],["Prelude.Show",[{"tag":"TypeVar","contents":"result"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Show"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[53,1],"name":"src/Data/Validation/Semiring.purs","end":[57,1]}},{"comments":null,"title":"functorV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Functor"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[57,1],"name":"src/Data/Validation/Semiring.purs","end":[61,1]}},{"comments":null,"title":"applyV","info":{"declType":"instance","dependencies":[["Prelude.Semiring",[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Apply"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[61,1],"name":"src/Data/Validation/Semiring.purs","end":[67,1]}},{"comments":null,"title":"applicativeV","info":{"declType":"instance","dependencies":[["Prelude.Semiring",[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prelude.Applicative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[67,1],"name":"src/Data/Validation/Semiring.purs","end":[70,1]}},{"comments":null,"title":"altV","info":{"declType":"instance","dependencies":[["Prelude.Semiring",[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alt.Alt"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[70,1],"name":"src/Data/Validation/Semiring.purs","end":[75,1]}},{"comments":null,"title":"plusV","info":{"declType":"instance","dependencies":[["Prelude.Semiring",[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Plus.Plus"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[75,1],"name":"src/Data/Validation/Semiring.purs","end":[78,1]}},{"comments":null,"title":"alernativeV","info":{"declType":"instance","dependencies":[["Prelude.Semiring",[{"tag":"TypeVar","contents":"err"}]]],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Control.Alternative.Alternative"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[78,1],"name":"src/Data/Validation/Semiring.purs","end":[78,61]}}],"comments":"The `V` functor, used for alternative validation\n\nThe `Alternative` instance collects multiple failures in\nan arbitrary `Semiring`.\n\nFor example:\n\n```purescript\nimport Data.Semiring.Free\n\nvalidate r :: Person -> V (Free Error) Person \nvalidate person = { first: _, last: _, contact: _}\n  <$> validateName person.first\n  <*> validateName person.last\n  <*> (validateEmail person.contact <|> validatePhone person.contact)\n```\n","title":"V","fixity":null,"info":{"declType":"data","dataDeclType":"data","typeArguments":[["err",null],["res",null]]},"sourceSpan":{"start":[36,1],"name":"src/Data/Validation/Semiring.purs","end":[39,1]}},{"children":[],"comments":"Fail with a validation error\n","title":"invalid","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},null]},null]}},"sourceSpan":{"start":[39,1],"name":"src/Data/Validation/Semiring.purs","end":[40,1]}},{"children":[],"comments":"Unpack the `V` type constructor, providing functions to handle the error\nand success cases.\n","title":"runV","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeVar","contents":"result"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"src/Data/Validation/Semiring.purs","end":[45,1]}},{"children":[],"comments":"Test whether validation was successful or not\n","title":"isValid","fixity":null,"info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Prim.Function"},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":"Data.Validation.Semiring.V"},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeConstructor","contents":"Prim.Boolean"}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"src/Data/Validation/Semiring.purs","end":[50,1]}}]}],"resolvedDependencies":{"purescript-control":"0.3.0"},"bookmarks":[{"package":"purescript-prelude","item":["Prelude","Unit"]},{"package":"purescript-prelude","item":["Prelude","unit"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","flip"]},{"package":"purescript-prelude","item":["Prelude","const"]},{"package":"purescript-prelude","item":["Prelude","asTypeOf"]},{"package":"purescript-prelude","item":["Prelude","otherwise"]},{"package":"purescript-prelude","item":["Prelude","Semigroupoid"]},{"package":"purescript-prelude","item":["Prelude","semigroupoidFn"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","Category"]},{"package":"purescript-prelude","item":["Prelude","categoryFn"]},{"package":"purescript-prelude","item":["Prelude","Functor"]},{"package":"purescript-prelude","item":["Prelude","functorFn"]},{"package":"purescript-prelude","item":["Prelude","functorArray"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","void"]},{"package":"purescript-prelude","item":["Prelude","Apply"]},{"package":"purescript-prelude","item":["Prelude","applyFn"]},{"package":"purescript-prelude","item":["Prelude","applyArray"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","Applicative"]},{"package":"purescript-prelude","item":["Prelude","applicativeFn"]},{"package":"purescript-prelude","item":["Prelude","applicativeArray"]},{"package":"purescript-prelude","item":["Prelude","return"]},{"package":"purescript-prelude","item":["Prelude","liftA1"]},{"package":"purescript-prelude","item":["Prelude","Bind"]},{"package":"purescript-prelude","item":["Prelude","bindFn"]},{"package":"purescript-prelude","item":["Prelude","bindArray"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","Monad"]},{"package":"purescript-prelude","item":["Prelude","monadFn"]},{"package":"purescript-prelude","item":["Prelude","monadArray"]},{"package":"purescript-prelude","item":["Prelude","liftM1"]},{"package":"purescript-prelude","item":["Prelude","ap"]},{"package":"purescript-prelude","item":["Prelude","Semigroup"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","semigroupString"]},{"package":"purescript-prelude","item":["Prelude","semigroupUnit"]},{"package":"purescript-prelude","item":["Prelude","semigroupFn"]},{"package":"purescript-prelude","item":["Prelude","semigroupOrdering"]},{"package":"purescript-prelude","item":["Prelude","semigroupArray"]},{"package":"purescript-prelude","item":["Prelude","Semiring"]},{"package":"purescript-prelude","item":["Prelude","semiringInt"]},{"package":"purescript-prelude","item":["Prelude","semiringNumber"]},{"package":"purescript-prelude","item":["Prelude","semiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","Ring"]},{"package":"purescript-prelude","item":["Prelude","ringInt"]},{"package":"purescript-prelude","item":["Prelude","ringNumber"]},{"package":"purescript-prelude","item":["Prelude","ringUnit"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","negate"]},{"package":"purescript-prelude","item":["Prelude","ModuloSemiring"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringInt"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringNumber"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","DivisionRing"]},{"package":"purescript-prelude","item":["Prelude","divisionRingNumber"]},{"package":"purescript-prelude","item":["Prelude","divisionRingUnit"]},{"package":"purescript-prelude","item":["Prelude","Num"]},{"package":"purescript-prelude","item":["Prelude","numNumber"]},{"package":"purescript-prelude","item":["Prelude","numUnit"]},{"package":"purescript-prelude","item":["Prelude","Eq"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","eqBoolean"]},{"package":"purescript-prelude","item":["Prelude","eqInt"]},{"package":"purescript-prelude","item":["Prelude","eqNumber"]},{"package":"purescript-prelude","item":["Prelude","eqChar"]},{"package":"purescript-prelude","item":["Prelude","eqString"]},{"package":"purescript-prelude","item":["Prelude","eqUnit"]},{"package":"purescript-prelude","item":["Prelude","eqArray"]},{"package":"purescript-prelude","item":["Prelude","eqOrdering"]},{"package":"purescript-prelude","item":["Prelude","Ordering"]},{"package":"purescript-prelude","item":["Prelude","Ord"]},{"package":"purescript-prelude","item":["Prelude","ordBoolean"]},{"package":"purescript-prelude","item":["Prelude","ordInt"]},{"package":"purescript-prelude","item":["Prelude","ordNumber"]},{"package":"purescript-prelude","item":["Prelude","ordString"]},{"package":"purescript-prelude","item":["Prelude","ordChar"]},{"package":"purescript-prelude","item":["Prelude","ordUnit"]},{"package":"purescript-prelude","item":["Prelude","ordArray"]},{"package":"purescript-prelude","item":["Prelude","ordOrdering"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","Bounded"]},{"package":"purescript-prelude","item":["Prelude","boundedBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedUnit"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdering"]},{"package":"purescript-prelude","item":["Prelude","boundedInt"]},{"package":"purescript-prelude","item":["Prelude","boundedFn"]},{"package":"purescript-prelude","item":["Prelude","BoundedOrd"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdUnit"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdOrdering"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdInt"]},{"package":"purescript-prelude","item":["Prelude","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraBoolean"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraUnit"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraFn"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","Show"]},{"package":"purescript-prelude","item":["Prelude","showBoolean"]},{"package":"purescript-prelude","item":["Prelude","showInt"]},{"package":"purescript-prelude","item":["Prelude","showNumber"]},{"package":"purescript-prelude","item":["Prelude","showChar"]},{"package":"purescript-prelude","item":["Prelude","showString"]},{"package":"purescript-prelude","item":["Prelude","showUnit"]},{"package":"purescript-prelude","item":["Prelude","showArray"]},{"package":"purescript-prelude","item":["Prelude","showOrdering"]},{"package":null,"item":["Data.Validation","V"]},{"package":null,"item":["Data.Validation","invalid"]},{"package":null,"item":["Data.Validation","runV"]},{"package":null,"item":["Data.Validation","isValid"]},{"package":null,"item":["Data.Validation","showV"]},{"package":null,"item":["Data.Validation","functorV"]},{"package":null,"item":["Data.Validation","applyV"]},{"package":null,"item":["Data.Validation","applicativeV"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-control","item":["Data.Functor","(<$)"]},{"package":"purescript-control","item":["Data.Functor","($>)"]},{"package":"purescript-control","item":["Control.Monad","when"]},{"package":"purescript-control","item":["Control.Monad","unless"]},{"package":"purescript-control","item":["Control.Lazy","Lazy"]},{"package":"purescript-control","item":["Control.Lazy","fix"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","Extend"]},{"package":"purescript-control","item":["Control.Extend","extendFn"]},{"package":"purescript-control","item":["Control.Extend","(<<=)"]},{"package":"purescript-control","item":["Control.Extend","(=>>)"]},{"package":"purescript-control","item":["Control.Extend","(=>=)"]},{"package":"purescript-control","item":["Control.Extend","(=<=)"]},{"package":"purescript-control","item":["Control.Extend","duplicate"]},{"package":"purescript-control","item":["Control.Comonad","Comonad"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","(=<<)"]},{"package":"purescript-control","item":["Control.Bind","(>=>)"]},{"package":"purescript-control","item":["Control.Bind","(<=<)"]},{"package":"purescript-control","item":["Control.Bind","join"]},{"package":"purescript-control","item":["Control.Bind","ifM"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","(<*)"]},{"package":"purescript-control","item":["Control.Apply","(*>)"]},{"package":"purescript-control","item":["Control.Apply","lift2"]},{"package":"purescript-control","item":["Control.Apply","lift3"]},{"package":"purescript-control","item":["Control.Apply","lift4"]},{"package":"purescript-control","item":["Control.Apply","lift5"]},{"package":"purescript-control","item":["Control.Alt","Alt"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","(<|>)"]},{"package":"purescript-control","item":["Control.Alt","altArray"]},{"package":"purescript-control","item":["Control.Plus","Plus"]},{"package":"purescript-control","item":["Control.Plus","plusArray"]},{"package":"purescript-control","item":["Control.Alternative","Alternative"]},{"package":"purescript-control","item":["Control.Alternative","alternativeArray"]},{"package":"purescript-control","item":["Control.MonadPlus","MonadPlus"]},{"package":"purescript-control","item":["Control.MonadPlus","guard"]},{"package":"purescript-control","item":["Control.MonadPlus","monadPlusArray"]},{"package":null,"item":["Data.Validation.Semiring","V"]},{"package":null,"item":["Data.Validation.Semiring","invalid"]},{"package":null,"item":["Data.Validation.Semiring","runV"]},{"package":null,"item":["Data.Validation.Semiring","isValid"]},{"package":null,"item":["Data.Validation.Semiring","showV"]},{"package":null,"item":["Data.Validation.Semiring","functorV"]},{"package":null,"item":["Data.Validation.Semiring","applyV"]},{"package":null,"item":["Data.Validation.Semiring","applicativeV"]},{"package":null,"item":["Data.Validation.Semiring","altV"]},{"package":null,"item":["Data.Validation.Semiring","plusV"]},{"package":null,"item":["Data.Validation.Semiring","alernativeV"]}],"version":"0.2.0","github":["purescript","purescript-validation"],"versionTag":"v0.2.0"}