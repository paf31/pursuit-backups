{"uploader":"garyb","packageMeta":{"homepage":"https://github.com/purescript/purescript-validation","repository":{"url":"git://github.com/purescript/purescript-validation.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"dependencies":{"purescript-control":"^4.0.0","purescript-either":"^4.0.0","purescript-foldable-traversable":"^4.0.0","purescript-prelude":"^4.0.0","purescript-bifunctors":"^4.0.0"},"name":"purescript-validation","license":["BSD-3-Clause"]},"tagTime":"2019-01-14T15:54:55+0000","modules":[{"reExports":[],"name":"Data.Validation.Semigroup","comments":"This module defines an applicative functor for _applicative validation_.\n\nApplicative validation differs from monadic validation using `Either` in\nthat it allows us to collect multiple errors using a `Semigroup`, whereas\n`Either` terminates on the first error.\n","declarations":[{"children":[{"comments":null,"title":"eqV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"result"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[70,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[70,64]}},{"comments":null,"title":"eq1V","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq1"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[71,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[71,46]}},{"comments":null,"title":"ordV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"result"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[73,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[73,68]}},{"comments":null,"title":"ord1V","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord1"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[74,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[74,49]}},{"comments":null,"title":"showV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"result"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[76,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[76,65]}},{"comments":null,"title":"functorV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[81,16],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[81,52]}},{"comments":null,"title":"bifunctorV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]}]}},"sourceSpan":{"start":[83,16],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[83,50]}},{"comments":null,"title":"applyV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[85,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[85,50]}},{"comments":null,"title":"applicativeV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[91,62]}},{"comments":null,"title":"semigroupV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[94,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[94,75]}},{"comments":null,"title":"monoidV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[97,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[97,66]}},{"comments":null,"title":"foldableV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[100,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[100,39]}},{"comments":null,"title":"traversableV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[105,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[105,45]}}],"comments":"The `V` functor, used for applicative validation\n\nThe `Applicative` instance collects multiple failures in\nan arbitrary `Semigroup`.\n\nFor example:\n\n```purescript\nvalidate :: Person -> V (Array Error) Person\nvalidate person = { first: _, last: _, email: _ }\n  <$> validateName person.first\n  <*> validateName person.last\n  <*> validateEmail person.email\n```\n","title":"V","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["err",null],["result",null]]},"sourceSpan":{"start":[40,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[40,45]}},{"children":[],"comments":"Unpack the `V` type constructor, providing functions to handle the error\nand success cases.\n","title":"unV","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"result"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[44,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[44,77]}},{"children":[],"comments":"Fail with a validation error.\n","title":"invalid","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[49,50]}},{"children":[],"comments":"Test whether validation was successful or not.\n","title":"isValid","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}},"sourceSpan":{"start":[53,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[53,54]}},{"children":[],"comments":null,"title":"toEither","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},null]},null]}},"sourceSpan":{"start":[57,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[57,65]}},{"children":[],"comments":"Apply a function if successful, to enable chaining of validation.\n\nSimilar to a monadic bind, except it is inconsistent with Apply - that is,\nwhere as apply accumulates failures: `apply (invalid x) (invalid y) = invalid (x <> y)`,\nandThen has fail-fast semantics: `andThen (invalid x) (\\_ -> invalid y) = invalid x`\n(`>>=` would be expected to be consistent).\n","title":"andThen","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[66,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semigroup.purs","end":[66,64]}}]},{"reExports":[],"name":"Data.Validation.Semiring","comments":"This module defines a variant of applicative validation with\nan `Alt` instance, for validators which support errors\nwith multiple alternatives.\n","declarations":[{"children":[{"comments":null,"title":"eqV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"result"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[71,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[71,64]}},{"comments":null,"title":"eq1V","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq1"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[72,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[72,46]}},{"comments":null,"title":"ordV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"result"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[74,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[74,68]}},{"comments":null,"title":"ord1V","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord1"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[75,8],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[75,49]}},{"comments":null,"title":"showV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"result"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]}},"sourceSpan":{"start":[77,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[77,65]}},{"comments":null,"title":"functorV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[82,16],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[82,52]}},{"comments":null,"title":"bifunctorV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Bifunctor"],"Bifunctor"]},{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]}]}},"sourceSpan":{"start":[84,16],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[84,50]}},{"comments":null,"title":"applyV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[86,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[86,49]}},{"comments":null,"title":"applicativeV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[92,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[92,61]}},{"comments":null,"title":"semigroupV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[95,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[95,74]}},{"comments":null,"title":"monoidV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null},{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[98,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[98,65]}},{"comments":null,"title":"altV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[101,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[101,45]}},{"comments":null,"title":"plusV","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"err"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[106,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[106,47]}},{"comments":null,"title":"foldableV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[109,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[109,39]}},{"comments":null,"title":"traversableV","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]}]}},"sourceSpan":{"start":[114,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[114,45]}}],"comments":"The `V` functor, used for alternative validation\n\nThe `Alternative` instance collects multiple failures in\nan arbitrary `Semiring`.\n\nFor example:\n\n```purescript\nimport Data.Semiring.Free\n\nvalidate r :: Person -> V (Free Error) Person\nvalidate person = { first: _, last: _, contact: _}\n  <$> validateName person.first\n  <*> validateName person.last\n  <*> (validateEmail person.contact <|> validatePhone person.contact)\n```\n","title":"V","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["err",null],["result",null]]},"sourceSpan":{"start":[41,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[41,45]}},{"children":[],"comments":"Unpack the `V` type constructor, providing functions to handle the error\nand success cases.\n","title":"unV","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"result"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[45,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[45,77]}},{"children":[],"comments":"Fail with a validation error.\n","title":"invalid","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},null]},null]}},"sourceSpan":{"start":[50,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[50,50]}},{"children":[],"comments":"Test whether validation was successful or not.\n","title":"isValid","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}},"sourceSpan":{"start":[54,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[54,54]}},{"children":[],"comments":null,"title":"toEither","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[58,65]}},{"children":[],"comments":"Apply a function if successful, to enable chaining of validation.\n\nSimilar to a monadic bind, except it is inconsistent with Apply - that is,\nwhere as `apply (V err a) (V err a)` accumulates failures,\n`(V err a) ``andThen`` (\\a -> V err a)` has fail-fast semantics\n(`>>=` would be expected to be consistent).\n","title":"andThen","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["err",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[67,1],"name":"/home/travis/build/purescript/purescript-validation/src/Data/Validation/Semiring.purs","end":[67,64]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-control":"4.1.0","purescript-either":"4.1.1","purescript-maybe":"4.0.1","purescript-invariant":"4.1.0","purescript-foldable-traversable":"4.1.1","purescript-prelude":"4.1.0","purescript-bifunctors":"4.0.0","purescript-orders":"4.0.0"},"version":"4.1.0","github":["purescript","purescript-validation"],"versionTag":"v4.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Type.Data.RowList":"purescript-prelude","Data.Either.Inject":"purescript-either","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Plus":"purescript-control","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-prelude","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.12.0"}