{"uploader":"MonoidMusician","packageMeta":{"homepage":"https://github.com/natefaubion/purescript-variant","repository":{"url":"git://github.com/natefaubion/purescript-variant.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","test"],"devDependencies":{"purescript-console":"^3.0.0","purescript-either":"^3.0.0","purescript-assert":"^3.0.0"},"authors":[{"email":"nathan@n-son.com","name":"Nathan Faubion"}],"dependencies":{"purescript-maybe":"^3.0.0","purescript-symbols":"^3.0.0","purescript-typelevel-prelude":"^2.4.0","purescript-prelude":"^3.0.0","purescript-unsafe-coerce":"^3.0.0","purescript-record":"0.2.0","purescript-tuples":"^4.0.0","purescript-partial":"^1.2.0","purescript-lists":"^4.9.0"},"name":"purescript-variant","keywords":["purescript","polymorphic","variants"],"license":["MIT"],"description":"Polymorphic variants for PureScript"},"tagTime":"2017-08-16T18:05:08+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-symbols","item":["Data","Symbol"]},"declarations":[{"children":[{"comments":null,"title":"SProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A value-level proxy for a type-level symbol.\n","title":"SProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["sym",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}]]},"sourceSpan":{"start":[12,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/bower_components/purescript-symbols/src/Data/Symbol.purs","end":[12,37]}}]},{"moduleName":{"package":null,"item":["Data","Variant","Internal"]},"declarations":[{"children":[{"comments":null,"title":"FProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"variantFMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchEachCase"],"constraintArgs":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"res"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchEachCase"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"res"}]}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"res"}]}},"sourceSpan":{"start":[91,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[96,10]}}],"comments":"Proxy for a `Functor`.\n","title":"FProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]]},"sourceSpan":{"start":[29,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[29,39]}},{"children":[{"comments":null,"title":"contractWithInstance","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"ltl"}],"constraintData":null},{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"ltl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"Contractable"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"lt"}]}},"sourceSpan":{"start":[160,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[165,23]}}],"comments":null,"title":"Contractable","info":{"fundeps":[],"arguments":[["gt",null],["lt",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[157,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[158,81]}}]}],"name":"Data.Functor.Variant","comments":null,"declarations":[{"children":[{"comments":null,"title":"functorVariantF","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[32,48]}}],"comments":null,"title":"VariantF","info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["a",null]]},"sourceSpan":{"start":[30,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[30,29]}},{"children":[],"comments":"Inject into the variant at a given label.\n```purescript\nmaybeAtFoo :: forall r. VariantF (foo :: FProxy Maybe | r) Int\nmaybeAtFoo = inj (SProxy :: SProxy \"foo\") (Just 42)\n```\n","title":"inj","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[55,18]}},{"children":[],"comments":"Attempt to read a variant at a given label.\n```purescript\ncase prj (SProxy :: SProxy \"foo\") maybeAtFoo of\n  Just (Just i) -> i + 1\n  _ -> 0\n```\n","title":"prj","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[67,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[74,12]}},{"children":[],"comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[80,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[88,6]}},{"children":[],"comments":"Combinator for exhaustive pattern matching.\n```purescript\ncaseFn :: VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String), baz :: FProxy (Either String)) Int -> String\ncaseFn = case_\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> maybe \"nothing\" show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> show (snd bar))\n # on (SProxy :: SProxy \"baz\") (\\baz -> \"Baz: \" <> either id show baz)\n```\n","title":"case_","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}},"sourceSpan":{"start":[108,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[108,33]}},{"children":[],"comments":"Combinator for partial matching with a default value in case of failure.\n```purescript\ncaseFn :: forall r. VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String) | r) Int -> String\ncaseFn = default \"No match\"\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> maybe \"nothing\" show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> show (snd bar))\n```\n","title":"default","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[119,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[119,40]}},{"children":[],"comments":"Match a `variant` with a `record` containing methods to handle each case\nto produce a `result`.\n\nThis means that if `variant` contains a row of type `FProxy f`, a row with\nthe same label must have type `f a -> result` in `record`, where `result`\nis the same type for every row of `record`.\n\nPolymorphic methods in `record` may create problems with the type system\nif the polymorphism is not fully generalized to the whole record type\nor if not all polymorphic variables are specified in usage. When in doubt,\nlabel methods with specific types, such as `show :: Int -> String`, or\ngive the whole record an appropriate type.\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["typearg",{"tag":"ForAll","contents":["record",{"tag":"ForAll","contents":["variant",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantFRecordMatching"],"constraintArgs":[{"tag":"TypeVar","contents":"variant"},{"tag":"TypeVar","contents":"record"},{"tag":"TypeVar","contents":"typearg"},{"tag":"TypeVar","contents":"result"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"record"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"variant"}]},{"tag":"TypeVar","contents":"typearg"}]}]},{"tag":"TypeVar","contents":"result"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[134,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[139,11]}},{"children":[],"comments":"Every `VariantF lt a` can be cast to some `VariantF gt a` as long as `lt` is a\nsubset of `gt`.\n","title":"expand","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["mix",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"mix"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[150,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[154,18]}},{"children":[],"comments":"A `VariantF gt a` can be cast to some `VariantF lt a`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `VariantF`'s runtime tag is\nwithin the subset of `lt`.\n","title":"contract","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[160,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Functor/Variant.purs","end":[165,22]}}]},{"reExports":[{"moduleName":{"package":"purescript-symbols","item":["Data","Symbol"]},"declarations":[{"children":[{"comments":null,"title":"SProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A value-level proxy for a type-level symbol.\n","title":"SProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["sym",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}]]},"sourceSpan":{"start":[12,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/bower_components/purescript-symbols/src/Data/Symbol.purs","end":[12,37]}}]},{"moduleName":{"package":null,"item":["Data","Variant","Internal"]},"declarations":[{"children":[{"comments":null,"title":"contractWithInstance","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"ltl"}],"constraintData":null},{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"ltl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"Contractable"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"lt"}]}},"sourceSpan":{"start":[160,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[165,23]}}],"comments":null,"title":"Contractable","info":{"fundeps":[],"arguments":[["gt",null],["lt",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[157,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[158,81]}}]}],"name":"Data.Variant","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqVariant","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantEqs"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[180,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[180,88]}},{"comments":null,"title":"ordVariant","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantEqs"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantOrds"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[203,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[203,106]}},{"comments":null,"title":"showVariant","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantShows"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}]}},"sourceSpan":{"start":[226,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[226,94]}}],"comments":null,"title":"Variant","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[30,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[30,44]}},{"children":[],"comments":"Inject into the variant at a given label.\n```purescript\nintAtFoo :: forall r. Variant (foo :: Int | r)\nintAtFoo = inj (SProxy :: SProxy \"foo\") 42\n```\n","title":"inj","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[43,15]}},{"children":[],"comments":"Attempt to read a variant at a given label.\n```purescript\ncase prj (SProxy :: SProxy \"foo\") intAtFoo of\n  Just i  -> i + 1\n  Nothing -> 0\n```\n","title":"prj","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[55,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[62,8]}},{"children":[],"comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[68,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[76,6]}},{"children":[],"comments":"Combinator for exhaustive pattern matching.\n```purescript\ncaseFn :: Variant (foo :: Int, bar :: String, baz :: Boolean) -> String\ncaseFn = case_\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> bar)\n # on (SProxy :: SProxy \"baz\") (\\baz -> \"Baz: \" <> show baz)\n```\n","title":"case_","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"REmpty"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[96,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[96,28]}},{"children":[],"comments":"Combinator for partial matching with a default value in case of failure.\n```purescript\ncaseFn :: forall r. Variant (foo :: Int, bar :: String | r) -> String\ncaseFn = default \"No match\"\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> bar)\n```\n","title":"default","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[107,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[107,35]}},{"children":[],"comments":"Match a `variant` with a `record` containing methods to handle each case\nto produce a `result`.\n\nThis means that if `variant` contains a row of type `a`, a row with the\nsame label must have type `a -> result` in `record`, where `result` is the\nsame type for every row of `record`.\n\nPolymorphic methods in `record` may create problems with the type system\nif the polymorphism is not fully generalized to the whole record type\nor if not all polymorphic variables are specified in usage. When in doubt,\nlabel methods with specific types, such as `show :: Int -> String`, or\ngive the whole record an appropriate type.\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["result",{"tag":"ForAll","contents":["record",{"tag":"ForAll","contents":["variant",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantRecordMatching"],"constraintArgs":[{"tag":"TypeVar","contents":"variant"},{"tag":"TypeVar","contents":"record"},{"tag":"TypeVar","contents":"result"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"record"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"variant"}]}]},{"tag":"TypeVar","contents":"result"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[122,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[127,11]}},{"children":[],"comments":"Every `Variant lt` can be cast to some `Variant gt` as long as `lt` is a\nsubset of `gt`.\n","title":"expand","info":{"declType":"value","type":{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[138,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[142,15]}},{"children":[],"comments":"A `Variant gt` can be cast to some `Variant lt`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `Variant`'s runtime tag is\nwithin the subset of `lt`.\n","title":"contract","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[148,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[153,19]}},{"children":[{"comments":null,"title":"variantEqs","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]}]}},"sourceSpan":{"start":[168,3],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[168,73]}},{"comments":null,"title":"eqVariantNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantEqs"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[170,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[170,41]}},{"comments":null,"title":"eqVariantCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant"],"VariantEqs"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantEqs"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}]}},"sourceSpan":{"start":[173,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[173,78]}}],"comments":null,"title":"VariantEqs","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[167,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[168,73]}},{"children":[{"comments":null,"title":"variantOrds","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}]}},"sourceSpan":{"start":[191,3],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[191,75]}},{"comments":null,"title":"ordVariantNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantOrds"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[193,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[193,43]}},{"comments":null,"title":"ordVariantCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant"],"VariantOrds"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantOrds"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}]}},"sourceSpan":{"start":[196,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[196,82]}}],"comments":null,"title":"VariantOrds","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[190,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[191,75]}},{"children":[{"comments":null,"title":"variantShows","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}},"sourceSpan":{"start":[214,3],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[214,60]}},{"comments":null,"title":"showVariantNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantShows"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[216,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[216,45]}},{"comments":null,"title":"showVariantCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant"],"VariantShows"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantShows"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}]}},"sourceSpan":{"start":[219,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[219,86]}}],"comments":null,"title":"VariantShows","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[213,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant.purs","end":[214,60]}}]},{"reExports":[{"moduleName":{"package":"purescript-record","item":["Data","Record","Unsafe"]},"declarations":[{"children":[],"comments":null,"title":"unsafeGet","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[16,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/bower_components/purescript-record/src/Data/Record/Unsafe.purs","end":[16,49]}}]},{"moduleName":{"package":"purescript-typelevel-prelude","item":["Type","Row"]},"declarations":[{"children":[{"comments":null,"title":"RProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"RProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["row",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]]},"sourceSpan":{"start":[13,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/bower_components/purescript-typelevel-prelude/src/Type/Row.purs","end":[13,37]}},{"children":[{"comments":null,"title":"RLProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"RLProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["rowList",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]]},"sourceSpan":{"start":[50,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/bower_components/purescript-typelevel-prelude/src/Type/Row.purs","end":[50,44]}}]}],"name":"Data.Variant.Internal","comments":null,"declarations":[{"children":[{"comments":null,"title":"FProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"variantFMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchEachCase"],"constraintArgs":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"res"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchEachCase"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"res"}]}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"res"}]}},"sourceSpan":{"start":[91,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[96,10]}}],"comments":"Proxy for a `Functor`.\n","title":"FProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]]},"sourceSpan":{"start":[29,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[29,39]}},{"children":[],"comments":null,"title":"VariantCase","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[98,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[98,39]}},{"children":[{"comments":null,"title":"variantTags","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[101,3],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[101,43]}},{"comments":null,"title":"variantTagsNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantTags"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[103,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[103,44]}},{"comments":null,"title":"variantTagsCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantTags"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}]}},"sourceSpan":{"start":[106,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[106,90]}}],"comments":null,"title":"VariantTags","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[100,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[101,43]}},{"children":[{"comments":null,"title":"contractWith","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[158,3],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[158,81]}},{"comments":null,"title":"contractWithInstance","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"ltl"}],"constraintData":null},{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"ltl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"Contractable"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"lt"}]}},"sourceSpan":{"start":[160,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[165,23]}}],"comments":null,"title":"Contractable","info":{"fundeps":[],"arguments":[["gt",null],["lt",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[157,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[158,81]}},{"children":[{"comments":null,"title":"variantRecordMatching","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"variant"},{"tag":"TypeVar","contents":"vlist"}],"constraintData":null},{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"record"},{"tag":"TypeVar","contents":"rlist"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantMatchEachCase"],"constraintArgs":[{"tag":"TypeVar","contents":"vlist"},{"tag":"TypeVar","contents":"rlist"},{"tag":"TypeVar","contents":"result"}],"constraintData":null},{"constraintClass":[["Type","Row"],"ListToRow"],"constraintArgs":[{"tag":"TypeVar","contents":"vlist"},{"tag":"TypeVar","contents":"variant"}],"constraintData":null},{"constraintClass":[["Type","Row"],"ListToRow"],"constraintArgs":[{"tag":"TypeVar","contents":"rlist"},{"tag":"TypeVar","contents":"record"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantRecordMatching"]},{"tag":"TypeVar","contents":"variant"}]},{"tag":"TypeVar","contents":"record"}]},{"tag":"TypeVar","contents":"result"}]}},"sourceSpan":{"start":[39,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[45,48]}}],"comments":"Type class that matches a row for a `record` that will eliminate a row for\na `variant`, producing a `result` of the specified type. Just a wrapper for\n`RLMatch` to convert `RowToList` and vice versa.\n","title":"VariantRecordMatching","info":{"fundeps":[[[],["variant","record","result"]]],"arguments":[["variant",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["record",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["result",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[34,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[38,28]}},{"children":[{"comments":null,"title":"variantMatchNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantMatchEachCase"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[56,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[57,39]}},{"comments":null,"title":"variantMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantMatchEachCase"],"constraintArgs":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"res"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantMatchEachCase"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"res"}]}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"res"}]}},"sourceSpan":{"start":[58,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[63,8]}}],"comments":"Checks that a `RowList` matches the argument to be given to the function\nin the other `RowList` with the same label, such that it will produce the\nresult type.\n","title":"VariantMatchEachCase","info":{"fundeps":[[["vlist"],["rlist","result"]],[["rlist"],["vlist","result"]]],"arguments":[["vlist",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["rlist",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["result",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[50,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[55,25]}},{"children":[{"comments":null,"title":"variantFRecordMatching","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"variant"},{"tag":"TypeVar","contents":"vlist"}],"constraintData":null},{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"record"},{"tag":"TypeVar","contents":"rlist"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchEachCase"],"constraintArgs":[{"tag":"TypeVar","contents":"vlist"},{"tag":"TypeVar","contents":"rlist"},{"tag":"TypeVar","contents":"typearg"},{"tag":"TypeVar","contents":"result"}],"constraintData":null},{"constraintClass":[["Type","Row"],"ListToRow"],"constraintArgs":[{"tag":"TypeVar","contents":"vlist"},{"tag":"TypeVar","contents":"variant"}],"constraintData":null},{"constraintClass":[["Type","Row"],"ListToRow"],"constraintArgs":[{"tag":"TypeVar","contents":"rlist"},{"tag":"TypeVar","contents":"record"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFRecordMatching"]},{"tag":"TypeVar","contents":"variant"}]},{"tag":"TypeVar","contents":"record"}]},{"tag":"TypeVar","contents":"typearg"}]},{"tag":"TypeVar","contents":"result"}]}},"sourceSpan":{"start":[71,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[77,57]}}],"comments":null,"title":"VariantFRecordMatching","info":{"fundeps":[[[],["variant","record","typearg","result"]]],"arguments":[["variant",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["record",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["typearg",null],["result",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[65,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[70,36]}},{"children":[{"comments":null,"title":"variantFMatchNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchEachCase"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[89,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[90,42]}},{"comments":null,"title":"variantFMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchEachCase"],"constraintArgs":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"res"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchEachCase"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"res"}]}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"res"}]}},"sourceSpan":{"start":[91,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[96,10]}}],"comments":"Checks that a `RowList` matches the argument to be given to the function\nin the other `RowList` with the same label, such that it will produce the\nresult type.\n","title":"VariantFMatchEachCase","info":{"fundeps":[[["vlist"],["rlist","typearg","result"]],[["rlist"],["vlist","typearg","result"]]],"arguments":[["vlist",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["rlist",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["typearg",null],["result",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[82,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[88,33]}},{"children":[],"comments":"A specialized lookup function which bails early. Foldable's `elem`\nis always worst-case.\n","title":"lookupTag","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[111,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[111,45]}},{"children":[],"comments":null,"title":"lookupEq","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[120,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[125,12]}},{"children":[],"comments":null,"title":"lookupOrd","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]}},"sourceSpan":{"start":[130,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[135,13]}},{"children":[],"comments":null,"title":"lookup","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[141,1],"name":"/Users/philosopher/Documents/FP/purescript-variant/src/Data/Variant/Internal.purs","end":[147,6]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-newtype":"2.0.0","purescript-control":"3.3.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.1.0","purescript-foldable-traversable":"3.4.0","purescript-tailrec":"3.3.0","purescript-typelevel-prelude":"2.4.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-assert":"3.0.0","purescript-unsafe-coerce":"3.0.0","purescript-eff":"3.1.0","purescript-record":"0.2.0","purescript-psci-support":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-identity":"3.1.0","purescript-lists":"4.9.0","purescript-functions":"3.0.0"},"version":"3.2.1","github":["natefaubion","purescript-variant"],"versionTag":"v3.2.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Data.NonEmpty":"purescript-nonempty","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Record.Unsafe":"purescript-record","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Type.Proxy":"purescript-proxy","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.List.ZipList":"purescript-lists","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Record":"purescript-record","Control.Monad.Eff":"purescript-eff","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Data.List.Partial":"purescript-lists","Data.Either":"purescript-either","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}