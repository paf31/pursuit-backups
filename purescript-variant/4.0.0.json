{"uploader":"natefaubion","packageMeta":{"homepage":"https://github.com/natefaubion/purescript-variant","repository":{"url":"git://github.com/natefaubion/purescript-variant.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","test"],"devDependencies":{"purescript-console":"^3.0.0","purescript-either":"^3.0.0","purescript-assert":"^3.0.0"},"authors":[{"email":"nathan@n-son.com","name":"Nathan Faubion"}],"dependencies":{"purescript-maybe":"^3.0.0","purescript-symbols":"^3.0.0","purescript-typelevel-prelude":"^2.4.0","purescript-prelude":"^3.0.0","purescript-unsafe-coerce":"^3.0.0","purescript-record":"0.2.3","purescript-tuples":"^4.0.0","purescript-partial":"^1.2.0","purescript-lists":"^4.9.0"},"name":"purescript-variant","keywords":["purescript","polymorphic","variants"],"license":["MIT"],"description":"Polymorphic variants for PureScript"},"tagTime":"2017-09-29T03:23:54+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-symbols","item":["Data","Symbol"]},"declarations":[{"children":[{"comments":null,"title":"SProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A value-level proxy for a type-level symbol.\n","title":"SProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["sym",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}]]},"sourceSpan":{"start":[12,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/bower_components/purescript-symbols/src/Data/Symbol.purs","end":[12,37]}}]},{"moduleName":{"package":null,"item":["Data","Variant","Internal"]},"declarations":[{"children":[{"comments":null,"title":"FProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Proxy for a `Functor`.\n","title":"FProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]]},"sourceSpan":{"start":[29,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[29,39]}},{"children":[{"comments":null,"title":"contractWithInstance","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"ltl"}],"constraintData":null},{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"ltl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"Contractable"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"lt"}]}},"sourceSpan":{"start":[124,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[129,23]}}],"comments":null,"title":"Contractable","info":{"fundeps":[],"arguments":[["gt",null],["lt",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[121,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[122,81]}},{"children":[{"comments":null,"title":"variantFMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"vo"}],"constraintData":null},{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"TypeVar","contents":"k"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchCases"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"rl"}]}}]},{"tag":"TypeVar","contents":"vo"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[50,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[55,48]}},{"comments":null,"title":"variantFMatchNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchCases"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[57,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[58,36]}}],"comments":null,"title":"VariantFMatchCases","info":{"fundeps":[[["rl"],["vo","a","b"]]],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["vo",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["a",null],["b",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[48,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[48,74]}}]}],"name":"Data.Functor.Variant","comments":null,"declarations":[{"children":[{"comments":null,"title":"functorVariantF","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[38,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[38,48]}},{"comments":null,"title":"showVariantF","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Functor","Variant"],"VariantFShows"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}},"sourceSpan":{"start":[232,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[232,109]}}],"comments":null,"title":"VariantF","info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["a",null]]},"sourceSpan":{"start":[36,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[36,29]}},{"children":[],"comments":"Inject into the variant at a given label.\n```purescript\nmaybeAtFoo :: forall r. VariantF (foo :: FProxy Maybe | r) Int\nmaybeAtFoo = inj (SProxy :: SProxy \"foo\") (Just 42)\n```\n","title":"inj","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[58,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[65,18]}},{"children":[],"comments":"Attempt to read a variant at a given label.\n```purescript\ncase prj (SProxy :: SProxy \"foo\") maybeAtFoo of\n  Just (Just i) -> i + 1\n  _ -> 0\n```\n","title":"prj","info":{"declType":"value","type":{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[77,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[84,12]}},{"children":[],"comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[90,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[98,6]}},{"children":[],"comments":"Match a `VariantF` with a `Record` containing functions for handling cases.\nThis is similar to `on`, except instead of providing a single label and\nhandler, you can provide a record where each field maps to a particular\n`VariantF` case.\n\n```purescript\nonMatch\n { foo: \\foo -> \"Foo: \" <> maybe \"nothing\" id foo\n , bar: \\bar -> \"Bar: \" <> snd bar\n }\n```\n\nPolymorphic functions in records (such as `show` or `id`) can lead\nto inference issues if not all polymorphic variables are specified\nin usage. When in doubt, label methods with specific types, such as\n`show :: Int -> String`, or give the whole record an appropriate type.\n","title":"onMatch","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rl",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[126,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[134,6]}},{"children":[],"comments":"Combinator for exhaustive pattern matching.\n```purescript\ncaseFn :: VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String), baz :: FProxy (Either String)) Int -> String\ncaseFn = case_\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> maybe \"nothing\" show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> show (snd bar))\n # on (SProxy :: SProxy \"baz\") (\\baz -> \"Baz: \" <> either id show baz)\n```\n","title":"case_","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}},"sourceSpan":{"start":[155,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[155,33]}},{"children":[],"comments":"Combinator for exhaustive pattern matching using an `onMatch` case record.\n```purescript\nmatchFn :: VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String), baz :: FProxy (Either String)) Int -> String\nmatchFn = case_ # match\n { foo: \\foo -> \"Foo: \" <> maybe \"nothing\" show foo\n , bar: \\bar -> \"Bar: \" <> show (snd bar)\n , baz: \\baz -> \"Baz: \" <> either id show baz\n }\n```\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rl",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"REmpty"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[168,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[175,6]}},{"children":[],"comments":"Combinator for partial matching with a default value in case of failure.\n```purescript\ncaseFn :: forall r. VariantF (foo :: FProxy Maybe, bar :: FProxy (Tuple String) | r) Int -> String\ncaseFn = default \"No match\"\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> maybe \"nothing\" show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> show (snd bar))\n```\n","title":"default","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[185,40]}},{"children":[],"comments":"Every `VariantF lt a` can be cast to some `VariantF gt a` as long as `lt` is a\nsubset of `gt`.\n","title":"expand","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["mix",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"mix"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[190,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[194,18]}},{"children":[],"comments":"A `VariantF gt a` can be cast to some `VariantF lt a`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `VariantF`'s runtime tag is\nwithin the subset of `lt`.\n","title":"contract","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[200,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[205,22]}},{"children":[{"comments":null,"title":"variantFShows","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}]}},"sourceSpan":{"start":[220,3],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[220,71]}},{"comments":null,"title":"showVariantFNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantFShows"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[222,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[222,49]}},{"comments":null,"title":"showVariantFCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Functor","Variant"],"VariantFShows"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"},{"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantFShows"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}}]},{"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[225,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[225,130]}}],"comments":null,"title":"VariantFShows","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["x",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[219,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Functor/Variant.purs","end":[220,71]}}]},{"reExports":[{"moduleName":{"package":"purescript-symbols","item":["Data","Symbol"]},"declarations":[{"children":[{"comments":null,"title":"SProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"A value-level proxy for a type-level symbol.\n","title":"SProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["sym",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}]]},"sourceSpan":{"start":[12,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/bower_components/purescript-symbols/src/Data/Symbol.purs","end":[12,37]}}]},{"moduleName":{"package":null,"item":["Data","Variant","Internal"]},"declarations":[{"children":[{"comments":null,"title":"contractWithInstance","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"ltl"}],"constraintData":null},{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"ltl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"Contractable"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"lt"}]}},"sourceSpan":{"start":[124,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[129,23]}}],"comments":null,"title":"Contractable","info":{"fundeps":[],"arguments":[["gt",null],["lt",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[121,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[122,81]}},{"children":[{"comments":null,"title":"variantMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"vo"}],"constraintData":null},{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"TypeVar","contents":"k"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantMatchCases"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"rl"}]}}]},{"tag":"TypeVar","contents":"vo"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[38,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[43,45]}},{"comments":null,"title":"variantMatchNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantMatchCases"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[45,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[46,33]}}],"comments":null,"title":"VariantMatchCases","info":{"fundeps":[[["rl"],["vo","b"]]],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["vo",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["b",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[36,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[36,69]}}]}],"name":"Data.Variant","comments":null,"declarations":[{"children":[{"comments":null,"title":"eqVariant","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantEqs"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[210,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[210,88]}},{"comments":null,"title":"ordVariant","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantEqs"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantOrds"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[233,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[233,106]}},{"comments":null,"title":"showVariant","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"constraintClass":[["Data","Variant"],"VariantShows"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}}]}},"sourceSpan":{"start":[256,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[256,94]}}],"comments":null,"title":"Variant","info":{"kind":{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[30,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[30,44]}},{"children":[],"comments":"Inject into the variant at a given label.\n```purescript\nintAtFoo :: forall r. Variant (foo :: Int | r)\nintAtFoo = inj (SProxy :: SProxy \"foo\") 42\n```\n","title":"inj","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[37,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[43,15]}},{"children":[],"comments":"Attempt to read a variant at a given label.\n```purescript\ncase prj (SProxy :: SProxy \"foo\") intAtFoo of\n  Just i  -> i + 1\n  Nothing -> 0\n```\n","title":"prj","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[55,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[62,8]}},{"children":[],"comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n","title":"on","info":{"declType":"value","type":{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sym",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[68,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[76,6]}},{"children":[],"comments":"Match a `Variant` with a `Record` containing functions for handling cases.\nThis is similar to `on`, except instead of providing a single label and\nhandler, you can provide a record where each field maps to a particular\n`Variant` case.\n\n```purescript\nonMatch\n  { foo: \\foo -> \"Foo: \" <> foo\n  , bar: \\bar -> \"Bar: \" <> bar\n  }\n````\n\nPolymorphic functions in records (such as `show` or `id`) can lead\nto inference issues if not all polymorphic variables are specified\nin usage. When in doubt, label methods with specific types, such as\n`show :: Int -> String`, or give the whole record an appropriate type.\n","title":"onMatch","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rl",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r3"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[104,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[112,6]}},{"children":[],"comments":"Combinator for exhaustive pattern matching.\n```purescript\ncaseFn :: Variant (foo :: Int, bar :: String, baz :: Boolean) -> String\ncaseFn = case_\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> bar)\n # on (SProxy :: SProxy \"baz\") (\\baz -> \"Baz: \" <> show baz)\n```\n","title":"case_","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"REmpty"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[133,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[133,28]}},{"children":[],"comments":"Combinator for exhaustive pattern matching using an `onMatch` case record.\n```purescript\nmatchFn :: Variant (foo :: Int, bar :: String, baz :: Boolean) -> String\nmatchFn = match\n  { foo: \\foo -> \"Foo: \" <> show foo\n  , bar: \\bar -> \"Bar: \" <> bar\n  , baz: \\baz -> \"Baz: \" <> show baz\n  }\n```\n","title":"match","info":{"declType":"value","type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rl",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"REmpty"},{"tag":"TypeVar","contents":"r2"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[146,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[153,6]}},{"children":[],"comments":"Combinator for partial matching with a default value in case of failure.\n```purescript\ncaseFn :: forall r. Variant (foo :: Int, bar :: String | r) -> String\ncaseFn = default \"No match\"\n # on (SProxy :: SProxy \"foo\") (\\foo -> \"Foo: \" <> show foo)\n # on (SProxy :: SProxy \"bar\") (\\bar -> \"Bar: \" <> bar)\n```\n","title":"default","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[163,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[163,35]}},{"children":[],"comments":"Every `Variant lt` can be cast to some `Variant gt` as long as `lt` is a\nsubset of `gt`.\n","title":"expand","info":{"declType":"value","type":{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[168,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[172,15]}},{"children":[],"comments":"A `Variant gt` can be cast to some `Variant lt`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `Variant`'s runtime tag is\nwithin the subset of `lt`.\n","title":"contract","info":{"declType":"value","type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["lt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[178,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[183,19]}},{"children":[{"comments":null,"title":"variantEqs","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]}]}},"sourceSpan":{"start":[198,3],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[198,73]}},{"comments":null,"title":"eqVariantNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantEqs"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[200,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[200,41]}},{"comments":null,"title":"eqVariantCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant"],"VariantEqs"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantEqs"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}}]}},"sourceSpan":{"start":[203,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[203,78]}}],"comments":null,"title":"VariantEqs","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[197,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[198,73]}},{"children":[{"comments":null,"title":"variantOrds","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}]}},"sourceSpan":{"start":[221,3],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[221,75]}},{"comments":null,"title":"ordVariantNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantOrds"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[223,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[223,43]}},{"comments":null,"title":"ordVariantCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant"],"VariantOrds"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantOrds"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}}]}},"sourceSpan":{"start":[226,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[226,82]}}],"comments":null,"title":"VariantOrds","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[220,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[221,75]}},{"children":[{"comments":null,"title":"variantShows","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}},"sourceSpan":{"start":[244,3],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[244,60]}},{"comments":null,"title":"showVariantNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantShows"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[246,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[246,45]}},{"comments":null,"title":"showVariantCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant"],"VariantShows"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"VariantShows"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}}]}},"sourceSpan":{"start":[249,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[249,86]}}],"comments":null,"title":"VariantShows","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[243,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant.purs","end":[244,60]}}]},{"reExports":[{"moduleName":{"package":"purescript-record","item":["Data","Record","Unsafe"]},"declarations":[{"children":[],"comments":null,"title":"unsafeHas","info":{"declType":"value","type":{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[28,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/bower_components/purescript-record/src/Data/Record/Unsafe.purs","end":[28,55]}},{"children":[],"comments":null,"title":"unsafeGet","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[19,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/bower_components/purescript-record/src/Data/Record/Unsafe.purs","end":[19,49]}}]},{"moduleName":{"package":"purescript-typelevel-prelude","item":["Type","Row"]},"declarations":[{"children":[{"comments":null,"title":"RProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"RProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["row",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]]},"sourceSpan":{"start":[13,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/bower_components/purescript-typelevel-prelude/src/Type/Row.purs","end":[13,37]}},{"children":[{"comments":null,"title":"RLProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"RLProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["rowList",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]]},"sourceSpan":{"start":[50,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/bower_components/purescript-typelevel-prelude/src/Type/Row.purs","end":[50,44]}}]}],"name":"Data.Variant.Internal","comments":null,"declarations":[{"children":[{"comments":null,"title":"FProxy","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Proxy for a `Functor`.\n","title":"FProxy","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]]},"sourceSpan":{"start":[29,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[29,39]}},{"children":[{"comments":null,"title":"VariantRep","info":{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["type",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"VariantRep","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[31,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[34,4]}},{"children":[{"comments":null,"title":"variantMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"vo"}],"constraintData":null},{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"TypeVar","contents":"k"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantMatchCases"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"rl"}]}}]},{"tag":"TypeVar","contents":"vo"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[38,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[43,45]}},{"comments":null,"title":"variantMatchNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantMatchCases"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[45,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[46,33]}}],"comments":null,"title":"VariantMatchCases","info":{"fundeps":[[["rl"],["vo","b"]]],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["vo",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["b",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[36,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[36,69]}},{"children":[{"comments":null,"title":"variantFMatchCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}],"constraintData":null},{"constraintClass":[["Prim"],"RowCons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"FProxy"]},{"tag":"TypeVar","contents":"f"}]}},{"tag":"TypeVar","contents":"vo'"},{"tag":"TypeVar","contents":"vo"}],"constraintData":null},{"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"tag":"TypeVar","contents":"k"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchCases"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"rl"}]}}]},{"tag":"TypeVar","contents":"vo"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[50,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[55,48]}},{"comments":null,"title":"variantFMatchNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantFMatchCases"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]},{"tag":"REmpty"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}},"sourceSpan":{"start":[57,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[58,36]}}],"comments":null,"title":"VariantFMatchCases","info":{"fundeps":[[["rl"],["vo","a","b"]]],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}],["vo",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["a",null],["b",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[48,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[48,74]}},{"children":[],"comments":null,"title":"VariantCase","info":{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[60,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[60,39]}},{"children":[],"comments":null,"title":"VariantFCase","info":{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[62,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[62,47]}},{"children":[{"comments":null,"title":"variantTags","info":{"declType":"typeClassMember","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[65,3],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[65,43]}},{"comments":null,"title":"variantTagsNil","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantTags"]},{"tag":"TypeConstructor","contents":[["Type","Row"],"Nil"]}]}},"sourceSpan":{"start":[67,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[67,44]}},{"comments":null,"title":"variantTagsCons","info":{"declType":"instance","dependencies":[{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"}],"constraintData":null},{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantTags"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"Cons"]},{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"rs"}]}}]}},"sourceSpan":{"start":[70,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[70,90]}}],"comments":null,"title":"VariantTags","info":{"fundeps":[],"arguments":[["rl",{"tag":"NamedKind","contents":[["Type","Row"],"RowList"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[64,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[65,43]}},{"children":[],"comments":"A specialized lookup function which bails early. Foldable's `elem`\nis always worst-case.\n","title":"lookupTag","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[75,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[75,45]}},{"children":[],"comments":null,"title":"lookupEq","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantRep"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantRep"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[84,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[89,12]}},{"children":[],"comments":null,"title":"lookupOrd","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantRep"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantRep"]},{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"VariantCase"]}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]}},"sourceSpan":{"start":[94,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[99,13]}},{"children":[],"comments":null,"title":"lookup","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[105,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[111,6]}},{"children":[{"comments":null,"title":"contractWith","info":{"declType":"typeClassMember","type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}],"constraintData":null},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Row"],"RProxy"]},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[122,3],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[122,81]}},{"comments":null,"title":"contractWithInstance","info":{"declType":"instance","dependencies":[{"constraintClass":[["Type","Row"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"ltl"}],"constraintData":null},{"constraintClass":[["Prim"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}],"constraintData":null},{"constraintClass":[["Data","Variant","Internal"],"VariantTags"],"constraintArgs":[{"tag":"TypeVar","contents":"ltl"}],"constraintData":null}],"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant","Internal"],"Contractable"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"lt"}]}},"sourceSpan":{"start":[124,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[129,23]}}],"comments":null,"title":"Contractable","info":{"fundeps":[],"arguments":[["gt",null],["lt",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[121,1],"name":"/Users/nathan/Sites/purescript/purescript-variant/src/Data/Variant/Internal.purs","end":[122,81]}}]}],"resolvedDependencies":{"purescript-proxy":"2.1.0","purescript-newtype":"2.0.0","purescript-maps":"3.4.0","purescript-control":"3.3.0","purescript-console":"3.0.0","purescript-either":"3.1.0","purescript-arrays":"4.1.2","purescript-maybe":"3.0.0","purescript-symbols":"3.0.0","purescript-type-equality":"2.1.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.1.0","purescript-foldable-traversable":"3.4.0","purescript-tailrec":"3.3.0","purescript-gen":"1.1.0","purescript-typelevel-prelude":"2.4.0","purescript-functors":"2.1.0","purescript-prelude":"3.1.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-assert":"3.0.0","purescript-unsafe-coerce":"3.0.0","purescript-integers":"3.1.0","purescript-eff":"3.1.0","purescript-const":"3.0.0","purescript-record":"0.2.3","purescript-globals":"3.0.0","purescript-math":"2.1.0","purescript-psci-support":"3.0.0","purescript-tuples":"4.1.0","purescript-partial":"1.2.1","purescript-identity":"3.1.0","purescript-lists":"4.9.0","purescript-functions":"3.0.0"},"version":"4.0.0","github":["natefaubion","purescript-variant"],"versionTag":"v4.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.StrMap":"purescript-maps","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.Record.Unsafe":"purescript-record","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.StrMap.ST.Unsafe":"purescript-maps","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-maps","Control.Biapplicative":"purescript-bifunctors","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.StrMap.Gen":"purescript-maps","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.Symbol":"purescript-symbols","Data.Map.Gen":"purescript-maps","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Record":"purescript-record","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Data.Array.ST.Partial":"purescript-arrays","Data.StrMap.Unsafe":"purescript-maps","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.StrMap.ST":"purescript-maps","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Record.Builder":"purescript-record","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Prelude":"purescript-prelude","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Functor.Product.Nested":"purescript-functors","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Type.Row.Effect.Equality":"purescript-type-equality","Partial":"purescript-partial","Global":"purescript-globals","Data.Decidable":"purescript-contravariant","Data.Monoid.Multiplicative":"purescript-monoid","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Data.List.Partial":"purescript-lists","Data.Either":"purescript-either","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}