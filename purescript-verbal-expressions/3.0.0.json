{"uploader":"sharkdp","packageMeta":{"moduleType":["node"],"repository":{"url":"git://github.com/VerbalExpressions/purescript-verbal-expressions.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-test-unit":"^11.0.0"},"dependencies":{"purescript-free":"^4.0.0","purescript-transformers":"^3.1.0","purescript-tuples":"^4.0.0","purescript-strings":"^3.0.0"},"name":"purescript-verbal-expressions","license":["MIT"]},"tagTime":"2017-04-22T07:40:29+0000","modules":[{"reExports":[],"name":"Data.String.VerEx","comments":"This module contains a free monad implementation of\n[Verbal Expressions](https://github.com/VerbalExpressions/JSVerbalExpressions).\nfor PureScript.\n","declarations":[{"children":[],"comments":null,"title":"CaptureGroup","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[60,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[60,40]}},{"children":[],"comments":"The grammar for Verbal Expressions, used internally.\n","title":"VerExF","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[63,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[69,38]}},{"children":[],"comments":"The free monad over the `VerExF` type constructor.\n","title":"VerExM","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExF"]}]}},"sourceSpan":{"start":[72,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[72,26]}},{"children":[],"comments":"A monadic action that constructs a Verbal Expression.\n","title":"VerEx","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[75,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[75,25]}},{"children":[],"comments":"A monadic action that constructs a Verbal Expression and returns a\nreplacement string.\n","title":"VerExReplace","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[79,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[79,34]}},{"children":[],"comments":"A monadic action that constructs a Verbal Expression and returns an\narray of capture group indices.\n","title":"VerExMatch","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]}}]}},"sourceSpan":{"start":[83,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[83,46]}},{"children":[],"comments":"Set whether or not the expression has to start at the beginning of the\nline. Default: `false`.\n","title":"startOfLine'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[87,39]}},{"children":[],"comments":"Mark the expression to start at the beginning of the line.\n","title":"startOfLine","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[91,27]}},{"children":[],"comments":"Set whether or not the expression has to end at the end of the line.\nDefault: `false`.\n","title":"endOfLine'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[96,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[96,37]}},{"children":[],"comments":"Mark the expression to end at the end of the line.\n","title":"endOfLine","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[100,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[100,25]}},{"children":[],"comments":"Add a string to the expression.\n","title":"find","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[125,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[125,30]}},{"children":[],"comments":"Add a sub-expression which might appear zero or one times.\n","title":"possibly","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[129,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[129,43]}},{"children":[],"comments":"Match any charcter, any number of times.\n","title":"anything","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[133,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[133,24]}},{"children":[],"comments":"Match anything but the specified characters.\n","title":"anythingBut","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[137,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[137,37]}},{"children":[],"comments":"Match any charcter, at least one time.\n","title":"something","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[141,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[141,25]}},{"children":[],"comments":"Any of the given characters.\n","title":"anyOf","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[145,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[145,31]}},{"children":[],"comments":"Repeat the inner expression one or more times.\n","title":"some","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[149,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[149,29]}},{"children":[],"comments":"Repeat the inner expression zero or more times.\n","title":"many","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[153,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[153,29]}},{"children":[],"comments":"Repeat the inner expression exactly the given number of times.\n","title":"exactly","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[157,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[157,39]}},{"children":[],"comments":"Add universal line break expression.\n","title":"lineBreak","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[161,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[161,25]}},{"children":[],"comments":"Add expression to match a tab character.\n","title":"tab","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[165,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[165,19]}},{"children":[],"comments":"Adds an expression to match a word.\n","title":"word","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[169,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[169,20]}},{"children":[],"comments":"Adds an expression to match a single digit.\n","title":"digit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[173,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[173,21]}},{"children":[],"comments":"Adds an expression to match a single uppercase character (ASCII range).\nNote that this will match uppercase and lowercase characters if\n`withAnyCase` is used.\n","title":"upper","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[179,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[179,21]}},{"children":[],"comments":"Adds an expression to match a single lowercase character (ASCII range).\nNote that this will match uppercase and lowercase characters if\n`withAnyCase` is used.\n","title":"lower","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[185,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[185,21]}},{"children":[],"comments":"Any whitespace character\n","title":"whitespace","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[189,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[189,26]}},{"children":[],"comments":"Enable case-insensitive matching\n","title":"withAnyCase","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[193,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[193,27]}},{"children":[],"comments":"Add a new capture group which matches the given VerEx. Returns the index\nof the capture group.\n","title":"capture","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]}]}},"sourceSpan":{"start":[198,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[198,40]}},{"children":[],"comments":"Match a previous capture group again (back reference).\n","title":"findAgain","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[202,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[202,41]}},{"children":[],"comments":"Replace the matched string with the given replacement.\n","title":"replaceWith","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExReplace"]}]}},"sourceSpan":{"start":[206,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[206,38]}},{"children":[],"comments":"Add the contents of a given capture group in the replacement string.\n","title":"insert","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[210,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[210,33]}},{"children":[],"comments":"Convert a Verbal Expression to a Regular Expression.\n","title":"toRegex","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},null]}},"sourceSpan":{"start":[271,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[271,41]}},{"children":[],"comments":"Check whether a given `String` matches the Verbal Expression.\n","title":"test","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[279,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[279,48]}},{"children":[],"comments":"Replace occurences of the `VerEx` with the `String` that is returned by\nthe monadic action.\n","title":"replace","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExReplace"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[284,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[284,44]}},{"children":[],"comments":"Match the `VerEx` against the string argument and (maybe) return an Array\nof possible results from the specified capture groups.\n","title":"match","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExMatch"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}]}]}]}},"sourceSpan":{"start":[290,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[290,62]}}]}],"resolvedDependencies":{"purescript-free":"4.0.0","purescript-proxy":"2.0.0","purescript-exceptions":"3.0.0","purescript-newtype":"2.0.0","purescript-control":"3.0.0","purescript-console":"3.0.0","purescript-either":"3.0.0","purescript-arrays":"4.0.1","purescript-maybe":"3.0.0","purescript-js-timers":"3.0.0","purescript-exists":"3.0.0","purescript-distributive":"3.0.0","purescript-unfoldable":"3.0.0","purescript-invariant":"3.0.0","purescript-lazy":"3.0.0","purescript-monoid":"3.0.0","purescript-aff":"3.0.0","purescript-foldable-traversable":"3.0.0","purescript-tailrec":"3.1.0","purescript-functors":"2.0.0","purescript-prelude":"3.0.0","purescript-st":"3.0.0","purescript-bifunctors":"3.0.0","purescript-nonempty":"4.0.0","purescript-contravariant":"3.0.0","purescript-generics":"4.0.0","purescript-unsafe-coerce":"3.0.0","purescript-refs":"3.0.0","purescript-integers":"3.0.0","purescript-eff":"3.1.0","purescript-test-unit":"11.0.0","purescript-const":"3.0.0","purescript-transformers":"3.2.0","purescript-globals":"3.0.0","purescript-math":"2.0.0","purescript-enums":"3.0.0","purescript-catenable-lists":"4.0.0","purescript-random":"3.0.0","purescript-parallel":"3.0.0","purescript-tuples":"4.0.0","purescript-partial":"1.2.0","purescript-quickcheck":"4.0.0","purescript-strings":"3.0.0","purescript-identity":"3.0.0","purescript-lists":"4.0.1","purescript-datetime":"3.0.0","purescript-functions":"3.0.0"},"version":"3.0.0","github":["VerbalExpressions","purescript-verbal-expressions"],"versionTag":"v3.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Control.Monad.Eff.Ref":"purescript-refs","Control.Monad.Aff.Class":"purescript-aff","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Date":"purescript-datetime","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Test.Unit.Assert":"purescript-test-unit","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Control.Parallel.Class":"purescript-parallel","Type.Proxy":"purescript-proxy","Test.Unit.Output.Fancy":"purescript-test-unit","Data.Coyoneda":"purescript-free","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Monad.Aff.AVar":"purescript-aff","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Test.QuickCheck.LCG":"purescript-quickcheck","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.Eff.Uncurried":"purescript-eff","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Test.Unit.QuickCheck":"purescript-test-unit","Data.Const":"purescript-const","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Yoneda":"purescript-free","Control.Monad.Aff.Internal":"purescript-aff","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Control.Monad.Eff.Random":"purescript-random","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Data.DateTime.Locale":"purescript-datetime","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Data.AlphaNumString":"purescript-quickcheck","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Test.Unit.Output.TAP":"purescript-test-unit","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Control.Monad.Aff":"purescript-aff","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Test.Unit.Console":"purescript-test-unit","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.Unit.Output.Simple":"purescript-test-unit","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Control.Monad.Eff.Timer":"purescript-js-timers","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Divisible":"purescript-contravariant","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Control.Monad.Eff.Ref.Unsafe":"purescript-refs","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Test.QuickCheck":"purescript-quickcheck","Test.Unit.Main":"purescript-test-unit","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Control.Monad.Aff.Unsafe":"purescript-aff","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Test.Unit":"purescript-test-unit","Control.Monad.Aff.Console":"purescript-aff","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Data.Op":"purescript-contravariant","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.11.4"}