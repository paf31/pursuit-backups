{"uploader":"sharkdp","packageMeta":{"moduleType":["node"],"repository":{"url":"git://github.com/VerbalExpressions/purescript-verbal-expressions.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-test-unit":"^14.0.0"},"dependencies":{"purescript-free":"^5.1.0","purescript-transformers":"^4.1.0","purescript-tuples":"^5.1.0","purescript-strings":"^4.0.0"},"name":"purescript-verbal-expressions","license":["MIT"]},"tagTime":"2018-11-09T18:48:02+0000","modules":[{"reExports":[],"name":"Data.String.VerEx","comments":"This module contains a free monad implementation of\n[Verbal Expressions](https://github.com/VerbalExpressions/JSVerbalExpressions).\nfor PureScript.\n","declarations":[{"children":[],"comments":"The grammar for Verbal Expressions, used internally.\n","title":"VerExF","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[63,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[69,38]}},{"children":[],"comments":"The free monad over the `VerExF` type constructor.\n","title":"VerExM","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExF"]}]}},"sourceSpan":{"start":[72,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[72,26]}},{"children":[],"comments":"A monadic action that constructs a Verbal Expression.\n","title":"VerEx","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[75,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[75,25]}},{"children":[],"comments":"A monadic action that constructs a Verbal Expression and returns a\nreplacement string.\n","title":"VerExReplace","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[79,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[79,34]}},{"children":[],"comments":"A monadic action that constructs a Verbal Expression and returns an\narray of capture group indices.\n","title":"VerExMatch","info":{"arguments":[],"declType":"typeSynonym","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]}}]}},"sourceSpan":{"start":[83,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[83,46]}},{"children":[],"comments":null,"title":"CaptureGroup","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[60,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[60,40]}},{"children":[],"comments":"Set whether or not the expression has to start at the beginning of the\nline. Default: `false`.\n","title":"startOfLine'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[87,39]}},{"children":[],"comments":"Mark the expression to start at the beginning of the line.\n","title":"startOfLine","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[91,27]}},{"children":[],"comments":"Set whether or not the expression has to end at the end of the line.\nDefault: `false`.\n","title":"endOfLine'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[96,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[96,37]}},{"children":[],"comments":"Mark the expression to end at the end of the line.\n","title":"endOfLine","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[100,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[100,25]}},{"children":[],"comments":"Add a string to the expression.\n","title":"find","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[125,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[125,30]}},{"children":[],"comments":"Add a sub-expression which might appear zero or one times.\n","title":"possibly","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[129,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[129,43]}},{"children":[],"comments":"Match any charcter, any number of times.\n","title":"anything","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[133,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[133,24]}},{"children":[],"comments":"Match anything but the specified characters.\n","title":"anythingBut","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[137,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[137,37]}},{"children":[],"comments":"Match any charcter, at least one time.\n","title":"something","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[141,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[141,25]}},{"children":[],"comments":"Any of the given characters.\n","title":"anyOf","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[145,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[145,31]}},{"children":[],"comments":"Repeat the inner expression one or more times.\n","title":"some","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[149,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[149,29]}},{"children":[],"comments":"Repeat the inner expression zero or more times.\n","title":"many","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[153,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[153,29]}},{"children":[],"comments":"Repeat the inner expression exactly the given number of times.\n","title":"exactly","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[157,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[157,39]}},{"children":[],"comments":"Add universal line break expression.\n","title":"lineBreak","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[161,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[161,25]}},{"children":[],"comments":"Add expression to match a tab character.\n","title":"tab","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[165,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[165,19]}},{"children":[],"comments":"Adds an expression to match a word.\n","title":"word","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[169,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[169,20]}},{"children":[],"comments":"Adds an expression to match a single digit.\n","title":"digit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[173,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[173,21]}},{"children":[],"comments":"Adds an expression to match a single uppercase character (ASCII range).\nNote that this will match uppercase and lowercase characters if\n`withAnyCase` is used.\n","title":"upper","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[179,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[179,21]}},{"children":[],"comments":"Adds an expression to match a single lowercase character (ASCII range).\nNote that this will match uppercase and lowercase characters if\n`withAnyCase` is used.\n","title":"lower","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[185,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[185,21]}},{"children":[],"comments":"Any whitespace character\n","title":"whitespace","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[189,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[189,26]}},{"children":[],"comments":"Enable case-insensitive matching\n","title":"withAnyCase","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[193,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[193,27]}},{"children":[],"comments":"Add a new capture group which matches the given VerEx. Returns the index\nof the capture group.\n","title":"capture","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerEx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]}]}},"sourceSpan":{"start":[198,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[198,40]}},{"children":[],"comments":"Match a previous capture group again (back reference).\n","title":"findAgain","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[202,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[202,41]}},{"children":[],"comments":"Replace the matched string with the given replacement.\n","title":"replaceWith","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExReplace"]}]}},"sourceSpan":{"start":[206,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[206,38]}},{"children":[],"comments":"Add the contents of a given capture group in the replacement string.\n","title":"insert","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"CaptureGroup"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[210,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[210,33]}},{"children":[],"comments":"Convert a Verbal Expression to a Regular Expression.\n","title":"toRegex","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},null]}},"sourceSpan":{"start":[271,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[271,41]}},{"children":[],"comments":"Check whether a given `String` matches the Verbal Expression.\n","title":"test","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExM"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[279,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[279,48]}},{"children":[],"comments":"Replace occurences of the `VerEx` with the `String` that is returned by\nthe monadic action.\n","title":"replace","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExReplace"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[284,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[284,44]}},{"children":[],"comments":"Match the `VerEx` against the string argument and (maybe) return an Array\nof possible results from the specified capture groups.\n","title":"match","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","VerEx"],"VerExMatch"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}]}]}]}},"sourceSpan":{"start":[290,1],"name":"/home/shark/Dropbox/Informatik/purescript/purescript-verbal-expressions/src/Data/String/VerEx.purs","end":[290,62]}}]}],"resolvedDependencies":{"purescript-free":"5.1.0","purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.0","purescript-ordered-collections":"1.4.0","purescript-control":"4.1.0","purescript-console":"4.1.0","purescript-either":"4.1.0","purescript-arrays":"5.1.0","purescript-maybe":"4.0.0","purescript-type-equality":"3.0.0","purescript-js-timers":"4.0.1","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.0.0","purescript-invariant":"4.1.0","purescript-lcg":"2.0.0","purescript-lazy":"4.0.0","purescript-aff":"5.0.2","purescript-foldable-traversable":"4.1.0","purescript-tailrec":"4.0.0","purescript-avar":"3.0.0","purescript-gen":"2.1.0","purescript-typelevel-prelude":"3.0.0","purescript-functors":"3.1.0","purescript-prelude":"4.1.0","purescript-st":"4.0.0","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-test-unit":"14.0.0","purescript-orders":"4.0.0","purescript-const":"4.1.0","purescript-record":"1.0.0","purescript-transformers":"4.1.0","purescript-globals":"4.0.0","purescript-generics-rep":"6.1.0","purescript-math":"2.1.1","purescript-enums":"4.0.0","purescript-catenable-lists":"5.0.0","purescript-random":"4.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.0","purescript-quickcheck":"5.0.0","purescript-strings":"4.0.0","purescript-identity":"4.1.0","purescript-lists":"5.3.0","purescript-datetime":"4.1.0","purescript-functions":"4.0.0"},"version":"4.0.0","github":["VerbalExpressions","purescript-verbal-expressions"],"versionTag":"v4.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Compose":"purescript-functors","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Test.Unit.Assert":"purescript-test-unit","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Test.Unit.Output.Fancy":"purescript-test-unit","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Test.Unit.QuickCheck":"purescript-test-unit","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Effect.Timer":"purescript-js-timers","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Test.Unit.Output.TAP":"purescript-test-unit","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Test.Unit.Console":"purescript-test-unit","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.Unit.Output.Simple":"purescript-test-unit","Control.Comonad.Env.Class":"purescript-transformers","Effect.Aff.AVar":"purescript-avar","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.Generic.Rep.Semiring":"purescript-generics-rep","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Test.Unit.Main":"purescript-test-unit","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Test.Unit":"purescript-test-unit","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.12.0"}