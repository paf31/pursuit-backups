{"uploader":"hdgarrood","packageMeta":{"repository":{"url":"git://github.com/hdgarrood/purescript-versions","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-exceptions":"^2.0.0"},"dependencies":{"purescript-control":"^2.0.0","purescript-console":"^2.0.0","purescript-either":"^2.0.0","purescript-maybe":"^2.0.0","purescript-parsing":"^3.0.0","purescript-foldable-traversable":"^2.0.0","purescript-integers":"^2.0.0","purescript-orders":"^2.0.0","purescript-partial":"^1.1.2","purescript-strings":"^2.0.2","purescript-lists":"^3.0.0","purescript-functions":"^2.0.0"},"name":"purescript-versions","license":["MIT"]},"tagTime":"2017-03-05T16:10:36+0000","modules":[{"reExports":[],"name":"Data.Version","comments":"This module defines a `Version` data type, for representing software\nversions, according to the [Semantic Versioning](http://semver.org)\nspecification. To summarize, a `Version` consists of:\n\n* a MAJOR, MINOR, and a PATCH component, all of which are nonnegative\n  integers.\n* optionally, a list of pre-release identifiers, consisting of ASCII\n  letters, numbers, and hyphens, and which is separated from the three\n  main components with a hyphen.\n* optionally, build metadata, consisting of ASCII letters, numbers, and\n  hyphens, and which is separated from the rest of the version with a plus\n  symbol.\n\nNote that, according to the semver spec, version precedence must ignore\nany build metadata. Therefore, the `Ord` instance ignores the build\nmetadata. In order to have the `Eq` instance agree with the `Ord`\ninstance, the `Eq` instance ignores build metadata too.\n","declarations":[{"children":[{"comments":null,"title":"eqVersion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}},"sourceSpan":{"start":[186,1],"name":"src/Data/Version.purs","end":[187,33]}},{"comments":null,"title":"ordVersion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}},"sourceSpan":{"start":[189,1],"name":"src/Data/Version.purs","end":[194,47]}},{"comments":null,"title":"_showVersion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}},"sourceSpan":{"start":[196,1],"name":"src/Data/Version.purs","end":[199,1]}}],"comments":"A semver version.\n","title":"Version","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[54,1],"name":"src/Data/Version.purs","end":[55,60]}},{"children":[],"comments":"Smart constructor for versions. Negative integer components will be\nreplaced with zeroes.\n","title":"version","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}]}]}]}]}},"sourceSpan":{"start":[59,1],"name":"src/Data/Version.purs","end":[59,78]}},{"children":[],"comments":"Unpack a version. Useful for pattern matching.\n\nThe reason we have this function instead of exporting the `Version`\nconstructor is that in this way we can guarantee that `Version` values are\nalways valid.\n","title":"runVersion","info":{"declType":"value","type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeVar","contents":"r"}]}]},null]}},"sourceSpan":{"start":[68,1],"name":"src/Data/Version.purs","end":[68,103]}},{"children":[],"comments":null,"title":"major","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[71,1],"name":"src/Data/Version.purs","end":[71,24]}},{"children":[],"comments":null,"title":"minor","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[74,1],"name":"src/Data/Version.purs","end":[74,24]}},{"children":[],"comments":null,"title":"preRelease","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}]}},"sourceSpan":{"start":[80,1],"name":"src/Data/Version.purs","end":[80,41]}},{"children":[],"comments":null,"title":"buildMetadata","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}]}},"sourceSpan":{"start":[83,1],"name":"src/Data/Version.purs","end":[83,44]}},{"children":[],"comments":"Bump the major version, and discard any prerelease identifiers and build\nmetadata.\n","title":"bumpMajor","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}},"sourceSpan":{"start":[88,1],"name":"src/Data/Version.purs","end":[88,32]}},{"children":[],"comments":"Bump the minor version, and discard any prerelease identifiers and build\nmetadata.\n","title":"bumpMinor","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}},"sourceSpan":{"start":[93,1],"name":"src/Data/Version.purs","end":[93,32]}},{"children":[],"comments":"Bump the patch version, and discard any prerelease identifiers and build\nmetadata.\n","title":"bumpPatch","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}},"sourceSpan":{"start":[98,1],"name":"src/Data/Version.purs","end":[98,32]}},{"children":[{"comments":null,"title":"eqIdentifier","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}},"sourceSpan":{"start":[199,1],"name":"src/Data/Version.purs","end":[200,33]}},{"comments":null,"title":"ordIdentifier","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}},"sourceSpan":{"start":[202,1],"name":"src/Data/Version.purs","end":[206,42]}},{"comments":null,"title":"_showIdentifier","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}},"sourceSpan":{"start":[208,1],"name":"src/Data/Version.purs","end":[210,54]}}],"comments":null,"title":"Identifier","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[101,1],"name":"src/Data/Version.purs","end":[103,16]}},{"children":[],"comments":"Construct a numeric identifier.\n","title":"numeric","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}},"sourceSpan":{"start":[106,1],"name":"src/Data/Version.purs","end":[106,29]}},{"children":[],"comments":"Construct a textual identifier.\n","title":"textual","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Identifier"]}]}]}},"sourceSpan":{"start":[110,1],"name":"src/Data/Version.purs","end":[110,38]}},{"children":[],"comments":null,"title":"versionParser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}},"sourceSpan":{"start":[129,1],"name":"src/Data/Version.purs","end":[129,44]}},{"children":[],"comments":null,"title":"parseVersion","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]}]}},"sourceSpan":{"start":[155,1],"name":"src/Data/Version.purs","end":[155,52]}},{"children":[],"comments":null,"title":"showVersion","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[158,1],"name":"src/Data/Version.purs","end":[158,33]}},{"children":[],"comments":"Tells you whether a version is a pre-release version; that is, if it has\nany pre-release identifiers.\n","title":"isPreRelease","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[172,1],"name":"src/Data/Version.purs","end":[172,35]}}]},{"reExports":[],"name":"Data.Version.Haskell","comments":"A Version data type corresponding to the type in Haskell's `Data.Version`\nmodule, from the `base` library (that is, the Haskell standard library).\n\nSee also [the Haskell documentation](http://hackage.haskell.org/package/base-4.8.1.0/docs/Data-Version.html).\n\nYou might need this module in order to deal with PureScript compiler\nversions, as they do not always have 3 components, and therefore will not\nwork with the `Data.Version` module in this package. In most other cases,\nthough, you should probably be using `Data.Version`.\n","declarations":[{"children":[{"comments":null,"title":"Version","info":{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqVersion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"tag":"TypeConstructor","contents":[["Data","Version","Haskell"],"Version"]}]}},"sourceSpan":{"start":[48,1],"name":"src/Data/Version/Haskell.purs","end":[49,60]}},{"comments":null,"title":"ordVersion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"tag":"TypeConstructor","contents":[["Data","Version","Haskell"],"Version"]}]}},"sourceSpan":{"start":[51,1],"name":"src/Data/Version/Haskell.purs","end":[53,35]}},{"comments":null,"title":"_showVersion","info":{"declType":"instance","dependencies":[],"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"tag":"TypeConstructor","contents":[["Data","Version","Haskell"],"Version"]}]}},"sourceSpan":{"start":[55,1],"name":"src/Data/Version/Haskell.purs","end":[56,70]}}],"comments":"A version consists of any number of integer components, and any number of\nstring components.\n","title":"Version","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[23,1],"name":"src/Data/Version/Haskell.purs","end":[23,48]}},{"children":[],"comments":null,"title":"showVersion","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Version","Haskell"],"Version"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[25,1],"name":"src/Data/Version/Haskell.purs","end":[25,33]}},{"children":[],"comments":null,"title":"versionParser","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Version","Haskell"],"Version"]}]}},"sourceSpan":{"start":[33,1],"name":"src/Data/Version/Haskell.purs","end":[33,44]}},{"children":[],"comments":null,"title":"parseVersion","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Data","Version","Haskell"],"Version"]}]}]}},"sourceSpan":{"start":[45,1],"name":"src/Data/Version/Haskell.purs","end":[45,52]}}]},{"reExports":[],"name":"Data.Version.Internal","comments":null,"declarations":[{"children":[],"comments":null,"title":"isDigit","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[15,1],"name":"src/Data/Version/Internal.purs","end":[15,27]}},{"children":[],"comments":null,"title":"isAsciiAlpha","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[18,1],"name":"src/Data/Version/Internal.purs","end":[18,32]}},{"children":[],"comments":null,"title":"nonNegativeInt","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[21,1],"name":"src/Data/Version/Internal.purs","end":[21,41]}},{"children":[],"comments":null,"title":"lieAboutPos","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]},null]}},"sourceSpan":{"start":[26,1],"name":"src/Data/Version/Internal.purs","end":[26,39]}},{"children":[],"comments":null,"title":"match'","info":{"declType":"value","type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[29,1],"name":"src/Data/Version/Internal.purs","end":[29,42]}},{"children":[],"comments":null,"title":"when'","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[32,1],"name":"src/Data/Version/Internal.purs","end":[32,55]}},{"children":[],"comments":null,"title":"eof","info":{"declType":"value","type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[35,1],"name":"src/Data/Version/Internal.purs","end":[35,38]}}]}],"resolvedDependencies":{"purescript-proxy":"1.0.0","purescript-exceptions":"2.0.0","purescript-newtype":"1.3.0","purescript-unicode":"2.0.2","purescript-control":"2.0.0","purescript-console":"2.0.0","purescript-either":"2.2.1","purescript-arrays":"3.2.1","purescript-maybe":"2.1.1","purescript-distributive":"2.0.0","purescript-unfoldable":"2.0.0","purescript-invariant":"2.0.0","purescript-parsing":"3.2.1","purescript-lazy":"2.0.0","purescript-monoid":"2.2.0","purescript-foldable-traversable":"2.2.0","purescript-tailrec":"2.0.2","purescript-prelude":"2.5.0","purescript-st":"2.0.0","purescript-bifunctors":"2.0.0","purescript-nonempty":"3.0.0","purescript-generics":"3.3.0","purescript-unsafe-coerce":"2.0.0","purescript-integers":"2.1.1","purescript-eff":"2.0.0","purescript-orders":"2.0.1","purescript-transformers":"2.2.0","purescript-globals":"2.0.0","purescript-math":"2.0.0","purescript-tuples":"3.2.0","purescript-partial":"1.2.0","purescript-strings":"2.1.0","purescript-identity":"2.0.0","purescript-lists":"3.4.0","purescript-functions":"2.0.0"},"version":"3.0.1","github":["hdgarrood","purescript-versions"],"versionTag":"v3.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.NonEmpty":"purescript-nonempty","Data.Generic":"purescript-generics","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Monad.Eff.Unsafe":"purescript-eff","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Data.Monoid.Dual":"purescript-monoid","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Type.Proxy":"purescript-proxy","Text.Parsing.Parser":"purescript-parsing","Data.Array.ST.Iterator":"purescript-arrays","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-monoid","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Text.Parsing.Parser.Pos":"purescript-parsing","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-monoid","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Monad.Reader":"purescript-transformers","Control.Monad.Eff":"purescript-eff","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Tuple":"purescript-tuples","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Char.Unicode.Internal":"purescript-unicode","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-monoid","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Text.Parsing.Indent":"purescript-parsing","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Data.Char.Unicode":"purescript-unicode","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Text.Parsing.Parser.Token":"purescript-parsing","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Control.Monad.Eff.Console":"purescript-console","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-monoid","Control.Monad.Eff.Exception":"purescript-exceptions","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.Bifunctor.Joker":"purescript-bifunctors","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Text.Parsing.Parser.Combinators":"purescript-parsing","Control.Plus":"purescript-control","Control.Monad.Eff.Class":"purescript-eff","Partial":"purescript-partial","Text.Parsing.Parser.Expr":"purescript-parsing","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Text.Parsing.Parser.Language":"purescript-parsing","Data.Monoid.Multiplicative":"purescript-monoid","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-monoid","Data.Char":"purescript-strings","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Eff.Exception.Unsafe":"purescript-exceptions","Data.Bifoldable":"purescript-foldable-traversable","Data.Monoid.Endo":"purescript-monoid","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Text.Parsing.Parser.String":"purescript-parsing","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.10.7"}